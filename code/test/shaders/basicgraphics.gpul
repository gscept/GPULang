//------------------------------------------------------------------------------
//  @file basicgraphics.gpul
//  @copyright (C) 2024 Individual contributors, see AUTHORS file
//------------------------------------------------------------------------------
uniform Albedo : *texture2D;
uniform Material: *sampled texture2D;
uniform Sampler : *sampler;
struct Camera
{
    viewProjection : f32x4x4;
    position : f32x4;
};

uniform camera : *Camera;

struct Object
{
    model : f32x4x4;
};

@Foobar("test")
uniform object : *Object;

entry_point
BasicVertex(
    in Position : f32x3
    , in UV : f32x2
    , out OutUV : f32x2
) void
{
    const worldPos = object.model * f32x4(Position, 1.0f);
    const clipPos = camera.viewProjection * worldPos;

    gplExportVertexCoordinates(clipPos);
    OutUV = UV;
}

enum Framebuffer : i32
{
    Color = 0
};

entry_point
BasicPixel(
    in UV : f32x2
) void
{
    var color = textureSample(Albedo, Sampler, UV);
    if (gplIsPixelShader)
        gplExportColor(color, i32(Framebuffer.Color));
        
    gplPixelKill();
}

program TestProgram
{
    VertexShader = BasicVertex;
    PixelShader = BasicPixel;
};
