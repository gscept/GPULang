enum ShaderMode
{
    OutputLocalInvocationIndex,
    OutputSpecializedVector
};
const Mode : ShaderMode = ShaderMode.OutputLocalInvocationIndex;

struct Storage
{
    vec : f32x4;
    i : i32;
    vec2 : f32x4;
};
link_defined foo = 1.0f;

uniform Output : *mutable Storage;

entry_point
ComputeWithStore() void
{
    if (Mode == ShaderMode.OutputLocalInvocationIndex)
        Output.i = i32(gplGetLocalInvocationIndex().x);
    else if (Mode == ShaderMode.OutputSpecializedVector)
        Output.vec2 = f32x4(1.0f, 2.0f, foo, 4.0f);
}

program TestProgram
{
    ComputeShader = ComputeWithStore;
    Mode = ShaderMode.OutputLocalInvocationIndex;
};