#pragma once
//-------------------------------------------------
// *** Generated by type_gen.py. ***
//       DO NOT MODIFY!!!
//-------------------------------------------------
#include "ast/types/type.h"
#include "ast/enumeration.h"
#include "ast/expressions/intexpression.h"
#include "ast/expressions/enumexpression.h"
namespace GPULang
{
enum TypeConversionTable
{
    Float32ToUInt32,
    Float32ToInt32,
    Float32ToBool8,
    Float32ToFloat16,
    Float32ToUInt16,
    Float32ToInt16,
    UInt32ToFloat32,
    UInt32ToInt32,
    UInt32ToBool8,
    UInt32ToFloat16,
    UInt32ToUInt16,
    UInt32ToInt16,
    Int32ToFloat32,
    Int32ToUInt32,
    Int32ToBool8,
    Int32ToFloat16,
    Int32ToUInt16,
    Int32ToInt16,
    Bool8ToFloat32,
    Bool8ToUInt32,
    Bool8ToInt32,
    Bool8ToFloat16,
    Bool8ToUInt16,
    Bool8ToInt16,
    Float16ToFloat32,
    Float16ToUInt32,
    Float16ToInt32,
    Float16ToBool8,
    Float16ToUInt16,
    Float16ToInt16,
    UInt16ToFloat32,
    UInt16ToUInt32,
    UInt16ToInt32,
    UInt16ToBool8,
    UInt16ToFloat16,
    UInt16ToInt16,
    Int16ToFloat32,
    Int16ToUInt32,
    Int16ToInt32,
    Int16ToBool8,
    Int16ToFloat16,
    Int16ToUInt16
};

struct Float32 : public Type
{
    Float32();
};
extern Float32 Float32Type;

/// f32 with UInt32
extern Variable Float32_convert_UInt32_arg0;
extern Function Float32_convert_UInt32;

/// f32 with Int32
extern Variable Float32_convert_Int32_arg0;
extern Function Float32_convert_Int32;

/// f32 with Float16
extern Variable Float32_convert_Float16_arg0;
extern Function Float32_convert_Float16;

/// f32 with UInt16
extern Variable Float32_convert_UInt16_arg0;
extern Function Float32_convert_UInt16;

/// f32 with Int16
extern Variable Float32_convert_Int16_arg0;
extern Function Float32_convert_Int16;

/// f32 with Float32
extern Variable Float32_ctor0_arg0_Float32;
extern Function Float32_ctor0;

/// operator[] with Int32
extern Variable Float32_operator_index_Int32_arg0;
extern Function Float32_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float32_operator_index_UInt32_arg0;
extern Function Float32_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float32_operator_index_Int16_arg0;
extern Function Float32_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float32_operator_index_UInt16_arg0;
extern Function Float32_operator_index_UInt16;

/// operator+ with Float32
extern Variable Float32_operator_add_Float32_arg0;
extern Function Float32_operator_add_Float32;

/// operator- with Float32
extern Variable Float32_operator_sub_Float32_arg0;
extern Function Float32_operator_sub_Float32;

/// operator* with Float32
extern Variable Float32_operator_mul_Float32_arg0;
extern Function Float32_operator_mul_Float32;

/// operator/ with Float32
extern Variable Float32_operator_div_Float32_arg0;
extern Function Float32_operator_div_Float32;

/// operator% with Float32
extern Variable Float32_operator_mod_Float32_arg0;
extern Function Float32_operator_mod_Float32;

/// operator+= with Float32
extern Variable Float32_operator_addasg_Float32_arg0;
extern Function Float32_operator_addasg_Float32;

/// operator-= with Float32
extern Variable Float32_operator_subasg_Float32_arg0;
extern Function Float32_operator_subasg_Float32;

/// operator*= with Float32
extern Variable Float32_operator_mulasg_Float32_arg0;
extern Function Float32_operator_mulasg_Float32;

/// operator/= with Float32
extern Variable Float32_operator_divasg_Float32_arg0;
extern Function Float32_operator_divasg_Float32;

/// operator< with Float32
extern Variable Float32_operator_lt_Float32_arg0;
extern Function Float32_operator_lt_Float32;

/// operator<= with Float32
extern Variable Float32_operator_lte_Float32_arg0;
extern Function Float32_operator_lte_Float32;

/// operator> with Float32
extern Variable Float32_operator_gt_Float32_arg0;
extern Function Float32_operator_gt_Float32;

/// operator>= with Float32
extern Variable Float32_operator_gte_Float32_arg0;
extern Function Float32_operator_gte_Float32;

/// operator== with Float32
extern Variable Float32_operator_eq_Float32_arg0;
extern Function Float32_operator_eq_Float32;

/// operator!= with Float32
extern Variable Float32_operator_neq_Float32_arg0;
extern Function Float32_operator_neq_Float32;

struct UInt32 : public Type
{
    UInt32();
};
extern UInt32 UInt32Type;

/// u32 with Float32
extern Variable UInt32_convert_Float32_arg0;
extern Function UInt32_convert_Float32;

/// u32 with Int32
extern Variable UInt32_convert_Int32_arg0;
extern Function UInt32_convert_Int32;

/// u32 with Float16
extern Variable UInt32_convert_Float16_arg0;
extern Function UInt32_convert_Float16;

/// u32 with UInt16
extern Variable UInt32_convert_UInt16_arg0;
extern Function UInt32_convert_UInt16;

/// u32 with Int16
extern Variable UInt32_convert_Int16_arg0;
extern Function UInt32_convert_Int16;

/// u32 with UInt32
extern Variable UInt32_ctor0_arg0_UInt32;
extern Function UInt32_ctor0;

/// operator[] with Int32
extern Variable UInt32_operator_index_Int32_arg0;
extern Function UInt32_operator_index_Int32;

/// operator[] with UInt32
extern Variable UInt32_operator_index_UInt32_arg0;
extern Function UInt32_operator_index_UInt32;

/// operator[] with Int16
extern Variable UInt32_operator_index_Int16_arg0;
extern Function UInt32_operator_index_Int16;

/// operator[] with UInt16
extern Variable UInt32_operator_index_UInt16_arg0;
extern Function UInt32_operator_index_UInt16;

/// operator+ with UInt32
extern Variable UInt32_operator_add_UInt32_arg0;
extern Function UInt32_operator_add_UInt32;

/// operator- with UInt32
extern Variable UInt32_operator_sub_UInt32_arg0;
extern Function UInt32_operator_sub_UInt32;

/// operator* with UInt32
extern Variable UInt32_operator_mul_UInt32_arg0;
extern Function UInt32_operator_mul_UInt32;

/// operator/ with UInt32
extern Variable UInt32_operator_div_UInt32_arg0;
extern Function UInt32_operator_div_UInt32;

/// operator% with UInt32
extern Variable UInt32_operator_mod_UInt32_arg0;
extern Function UInt32_operator_mod_UInt32;

/// operator+= with UInt32
extern Variable UInt32_operator_addasg_UInt32_arg0;
extern Function UInt32_operator_addasg_UInt32;

/// operator-= with UInt32
extern Variable UInt32_operator_subasg_UInt32_arg0;
extern Function UInt32_operator_subasg_UInt32;

/// operator*= with UInt32
extern Variable UInt32_operator_mulasg_UInt32_arg0;
extern Function UInt32_operator_mulasg_UInt32;

/// operator/= with UInt32
extern Variable UInt32_operator_divasg_UInt32_arg0;
extern Function UInt32_operator_divasg_UInt32;

/// operator< with UInt32
extern Variable UInt32_operator_lt_UInt32_arg0;
extern Function UInt32_operator_lt_UInt32;

/// operator<= with UInt32
extern Variable UInt32_operator_lte_UInt32_arg0;
extern Function UInt32_operator_lte_UInt32;

/// operator> with UInt32
extern Variable UInt32_operator_gt_UInt32_arg0;
extern Function UInt32_operator_gt_UInt32;

/// operator>= with UInt32
extern Variable UInt32_operator_gte_UInt32_arg0;
extern Function UInt32_operator_gte_UInt32;

/// operator== with UInt32
extern Variable UInt32_operator_eq_UInt32_arg0;
extern Function UInt32_operator_eq_UInt32;

/// operator!= with UInt32
extern Variable UInt32_operator_neq_UInt32_arg0;
extern Function UInt32_operator_neq_UInt32;

/// operator| with UInt32
extern Variable UInt32_operator_or_UInt32_arg0;
extern Function UInt32_operator_or_UInt32;

/// operator& with UInt32
extern Variable UInt32_operator_and_UInt32_arg0;
extern Function UInt32_operator_and_UInt32;

/// operator^ with UInt32
extern Variable UInt32_operator_xor_UInt32_arg0;
extern Function UInt32_operator_xor_UInt32;

/// operator<< with UInt32
extern Variable UInt32_operator_lsh_UInt32_arg0;
extern Function UInt32_operator_lsh_UInt32;

/// operator>> with UInt32
extern Variable UInt32_operator_rsh_UInt32_arg0;
extern Function UInt32_operator_rsh_UInt32;

/// operator|= with UInt32
extern Variable UInt32_operator_orasg_UInt32_arg0;
extern Function UInt32_operator_orasg_UInt32;

/// operator&= with UInt32
extern Variable UInt32_operator_andasg_UInt32_arg0;
extern Function UInt32_operator_andasg_UInt32;

/// operator^= with UInt32
extern Variable UInt32_operator_xorasg_UInt32_arg0;
extern Function UInt32_operator_xorasg_UInt32;

/// operator<<= with UInt32
extern Variable UInt32_operator_lshasg_UInt32_arg0;
extern Function UInt32_operator_lshasg_UInt32;

/// operator>>= with UInt32
extern Variable UInt32_operator_rhsasg_UInt32_arg0;
extern Function UInt32_operator_rhsasg_UInt32;

struct Int32 : public Type
{
    Int32();
};
extern Int32 Int32Type;

/// i32 with Float32
extern Variable Int32_convert_Float32_arg0;
extern Function Int32_convert_Float32;

/// i32 with UInt32
extern Variable Int32_convert_UInt32_arg0;
extern Function Int32_convert_UInt32;

/// i32 with Float16
extern Variable Int32_convert_Float16_arg0;
extern Function Int32_convert_Float16;

/// i32 with UInt16
extern Variable Int32_convert_UInt16_arg0;
extern Function Int32_convert_UInt16;

/// i32 with Int16
extern Variable Int32_convert_Int16_arg0;
extern Function Int32_convert_Int16;

/// i32 with Int32
extern Variable Int32_ctor0_arg0_Int32;
extern Function Int32_ctor0;

/// operator[] with Int32
extern Variable Int32_operator_index_Int32_arg0;
extern Function Int32_operator_index_Int32;

/// operator[] with UInt32
extern Variable Int32_operator_index_UInt32_arg0;
extern Function Int32_operator_index_UInt32;

/// operator[] with Int16
extern Variable Int32_operator_index_Int16_arg0;
extern Function Int32_operator_index_Int16;

/// operator[] with UInt16
extern Variable Int32_operator_index_UInt16_arg0;
extern Function Int32_operator_index_UInt16;

/// operator+ with Int32
extern Variable Int32_operator_add_Int32_arg0;
extern Function Int32_operator_add_Int32;

/// operator- with Int32
extern Variable Int32_operator_sub_Int32_arg0;
extern Function Int32_operator_sub_Int32;

/// operator* with Int32
extern Variable Int32_operator_mul_Int32_arg0;
extern Function Int32_operator_mul_Int32;

/// operator/ with Int32
extern Variable Int32_operator_div_Int32_arg0;
extern Function Int32_operator_div_Int32;

/// operator% with Int32
extern Variable Int32_operator_mod_Int32_arg0;
extern Function Int32_operator_mod_Int32;

/// operator+= with Int32
extern Variable Int32_operator_addasg_Int32_arg0;
extern Function Int32_operator_addasg_Int32;

/// operator-= with Int32
extern Variable Int32_operator_subasg_Int32_arg0;
extern Function Int32_operator_subasg_Int32;

/// operator*= with Int32
extern Variable Int32_operator_mulasg_Int32_arg0;
extern Function Int32_operator_mulasg_Int32;

/// operator/= with Int32
extern Variable Int32_operator_divasg_Int32_arg0;
extern Function Int32_operator_divasg_Int32;

/// operator< with Int32
extern Variable Int32_operator_lt_Int32_arg0;
extern Function Int32_operator_lt_Int32;

/// operator<= with Int32
extern Variable Int32_operator_lte_Int32_arg0;
extern Function Int32_operator_lte_Int32;

/// operator> with Int32
extern Variable Int32_operator_gt_Int32_arg0;
extern Function Int32_operator_gt_Int32;

/// operator>= with Int32
extern Variable Int32_operator_gte_Int32_arg0;
extern Function Int32_operator_gte_Int32;

/// operator== with Int32
extern Variable Int32_operator_eq_Int32_arg0;
extern Function Int32_operator_eq_Int32;

/// operator!= with Int32
extern Variable Int32_operator_neq_Int32_arg0;
extern Function Int32_operator_neq_Int32;

/// operator| with Int32
extern Variable Int32_operator_or_Int32_arg0;
extern Function Int32_operator_or_Int32;

/// operator& with Int32
extern Variable Int32_operator_and_Int32_arg0;
extern Function Int32_operator_and_Int32;

/// operator^ with Int32
extern Variable Int32_operator_xor_Int32_arg0;
extern Function Int32_operator_xor_Int32;

/// operator<< with Int32
extern Variable Int32_operator_lsh_Int32_arg0;
extern Function Int32_operator_lsh_Int32;

/// operator>> with Int32
extern Variable Int32_operator_rsh_Int32_arg0;
extern Function Int32_operator_rsh_Int32;

/// operator|= with Int32
extern Variable Int32_operator_orasg_Int32_arg0;
extern Function Int32_operator_orasg_Int32;

/// operator&= with Int32
extern Variable Int32_operator_andasg_Int32_arg0;
extern Function Int32_operator_andasg_Int32;

/// operator^= with Int32
extern Variable Int32_operator_xorasg_Int32_arg0;
extern Function Int32_operator_xorasg_Int32;

/// operator<<= with Int32
extern Variable Int32_operator_lshasg_Int32_arg0;
extern Function Int32_operator_lshasg_Int32;

/// operator>>= with Int32
extern Variable Int32_operator_rhsasg_Int32_arg0;
extern Function Int32_operator_rhsasg_Int32;

struct Bool8 : public Type
{
    Bool8();
};
extern Bool8 Bool8Type;

/// b8 with UInt32
extern Variable Bool8_convert_UInt32_arg0;
extern Function Bool8_convert_UInt32;

/// b8 with Int32
extern Variable Bool8_convert_Int32_arg0;
extern Function Bool8_convert_Int32;

/// b8 with UInt16
extern Variable Bool8_convert_UInt16_arg0;
extern Function Bool8_convert_UInt16;

/// b8 with Int16
extern Variable Bool8_convert_Int16_arg0;
extern Function Bool8_convert_Int16;

/// b8 with Bool8
extern Variable Bool8_ctor0_arg0_Bool8;
extern Function Bool8_ctor0;

/// operator[] with Int32
extern Variable Bool8_operator_index_Int32_arg0;
extern Function Bool8_operator_index_Int32;

/// operator[] with UInt32
extern Variable Bool8_operator_index_UInt32_arg0;
extern Function Bool8_operator_index_UInt32;

/// operator[] with Int16
extern Variable Bool8_operator_index_Int16_arg0;
extern Function Bool8_operator_index_Int16;

/// operator[] with UInt16
extern Variable Bool8_operator_index_UInt16_arg0;
extern Function Bool8_operator_index_UInt16;

/// operator|| with Bool8
extern Variable Bool8_operator_oror_Bool8_arg0;
extern Function Bool8_operator_oror_Bool8;

/// operator&& with Bool8
extern Variable Bool8_operator_andand_Bool8_arg0;
extern Function Bool8_operator_andand_Bool8;

/// operator== with Bool8
extern Variable Bool8_operator_eq_Bool8_arg0;
extern Function Bool8_operator_eq_Bool8;

/// operator!= with Bool8
extern Variable Bool8_operator_neq_Bool8_arg0;
extern Function Bool8_operator_neq_Bool8;

struct Float16 : public Type
{
    Float16();
};
extern Float16 Float16Type;

/// f16 with Float32
extern Variable Float16_convert_Float32_arg0;
extern Function Float16_convert_Float32;

/// f16 with UInt32
extern Variable Float16_convert_UInt32_arg0;
extern Function Float16_convert_UInt32;

/// f16 with Int32
extern Variable Float16_convert_Int32_arg0;
extern Function Float16_convert_Int32;

/// f16 with UInt16
extern Variable Float16_convert_UInt16_arg0;
extern Function Float16_convert_UInt16;

/// f16 with Int16
extern Variable Float16_convert_Int16_arg0;
extern Function Float16_convert_Int16;

/// f16 with Float16
extern Variable Float16_ctor0_arg0_Float16;
extern Function Float16_ctor0;

/// operator[] with Int32
extern Variable Float16_operator_index_Int32_arg0;
extern Function Float16_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float16_operator_index_UInt32_arg0;
extern Function Float16_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float16_operator_index_Int16_arg0;
extern Function Float16_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float16_operator_index_UInt16_arg0;
extern Function Float16_operator_index_UInt16;

/// operator+ with Float16
extern Variable Float16_operator_add_Float16_arg0;
extern Function Float16_operator_add_Float16;

/// operator- with Float16
extern Variable Float16_operator_sub_Float16_arg0;
extern Function Float16_operator_sub_Float16;

/// operator* with Float16
extern Variable Float16_operator_mul_Float16_arg0;
extern Function Float16_operator_mul_Float16;

/// operator/ with Float16
extern Variable Float16_operator_div_Float16_arg0;
extern Function Float16_operator_div_Float16;

/// operator% with Float16
extern Variable Float16_operator_mod_Float16_arg0;
extern Function Float16_operator_mod_Float16;

/// operator+= with Float16
extern Variable Float16_operator_addasg_Float16_arg0;
extern Function Float16_operator_addasg_Float16;

/// operator-= with Float16
extern Variable Float16_operator_subasg_Float16_arg0;
extern Function Float16_operator_subasg_Float16;

/// operator*= with Float16
extern Variable Float16_operator_mulasg_Float16_arg0;
extern Function Float16_operator_mulasg_Float16;

/// operator/= with Float16
extern Variable Float16_operator_divasg_Float16_arg0;
extern Function Float16_operator_divasg_Float16;

/// operator< with Float16
extern Variable Float16_operator_lt_Float16_arg0;
extern Function Float16_operator_lt_Float16;

/// operator<= with Float16
extern Variable Float16_operator_lte_Float16_arg0;
extern Function Float16_operator_lte_Float16;

/// operator> with Float16
extern Variable Float16_operator_gt_Float16_arg0;
extern Function Float16_operator_gt_Float16;

/// operator>= with Float16
extern Variable Float16_operator_gte_Float16_arg0;
extern Function Float16_operator_gte_Float16;

/// operator== with Float16
extern Variable Float16_operator_eq_Float16_arg0;
extern Function Float16_operator_eq_Float16;

/// operator!= with Float16
extern Variable Float16_operator_neq_Float16_arg0;
extern Function Float16_operator_neq_Float16;

struct UInt16 : public Type
{
    UInt16();
};
extern UInt16 UInt16Type;

/// u16 with Float32
extern Variable UInt16_convert_Float32_arg0;
extern Function UInt16_convert_Float32;

/// u16 with UInt32
extern Variable UInt16_convert_UInt32_arg0;
extern Function UInt16_convert_UInt32;

/// u16 with Int32
extern Variable UInt16_convert_Int32_arg0;
extern Function UInt16_convert_Int32;

/// u16 with Float16
extern Variable UInt16_convert_Float16_arg0;
extern Function UInt16_convert_Float16;

/// u16 with Int16
extern Variable UInt16_convert_Int16_arg0;
extern Function UInt16_convert_Int16;

/// u16 with UInt16
extern Variable UInt16_ctor0_arg0_UInt16;
extern Function UInt16_ctor0;

/// operator[] with Int32
extern Variable UInt16_operator_index_Int32_arg0;
extern Function UInt16_operator_index_Int32;

/// operator[] with UInt32
extern Variable UInt16_operator_index_UInt32_arg0;
extern Function UInt16_operator_index_UInt32;

/// operator[] with Int16
extern Variable UInt16_operator_index_Int16_arg0;
extern Function UInt16_operator_index_Int16;

/// operator[] with UInt16
extern Variable UInt16_operator_index_UInt16_arg0;
extern Function UInt16_operator_index_UInt16;

/// operator+ with UInt16
extern Variable UInt16_operator_add_UInt16_arg0;
extern Function UInt16_operator_add_UInt16;

/// operator- with UInt16
extern Variable UInt16_operator_sub_UInt16_arg0;
extern Function UInt16_operator_sub_UInt16;

/// operator* with UInt16
extern Variable UInt16_operator_mul_UInt16_arg0;
extern Function UInt16_operator_mul_UInt16;

/// operator/ with UInt16
extern Variable UInt16_operator_div_UInt16_arg0;
extern Function UInt16_operator_div_UInt16;

/// operator% with UInt16
extern Variable UInt16_operator_mod_UInt16_arg0;
extern Function UInt16_operator_mod_UInt16;

/// operator+= with UInt16
extern Variable UInt16_operator_addasg_UInt16_arg0;
extern Function UInt16_operator_addasg_UInt16;

/// operator-= with UInt16
extern Variable UInt16_operator_subasg_UInt16_arg0;
extern Function UInt16_operator_subasg_UInt16;

/// operator*= with UInt16
extern Variable UInt16_operator_mulasg_UInt16_arg0;
extern Function UInt16_operator_mulasg_UInt16;

/// operator/= with UInt16
extern Variable UInt16_operator_divasg_UInt16_arg0;
extern Function UInt16_operator_divasg_UInt16;

/// operator< with UInt16
extern Variable UInt16_operator_lt_UInt16_arg0;
extern Function UInt16_operator_lt_UInt16;

/// operator<= with UInt16
extern Variable UInt16_operator_lte_UInt16_arg0;
extern Function UInt16_operator_lte_UInt16;

/// operator> with UInt16
extern Variable UInt16_operator_gt_UInt16_arg0;
extern Function UInt16_operator_gt_UInt16;

/// operator>= with UInt16
extern Variable UInt16_operator_gte_UInt16_arg0;
extern Function UInt16_operator_gte_UInt16;

/// operator== with UInt16
extern Variable UInt16_operator_eq_UInt16_arg0;
extern Function UInt16_operator_eq_UInt16;

/// operator!= with UInt16
extern Variable UInt16_operator_neq_UInt16_arg0;
extern Function UInt16_operator_neq_UInt16;

/// operator| with UInt16
extern Variable UInt16_operator_or_UInt16_arg0;
extern Function UInt16_operator_or_UInt16;

/// operator& with UInt16
extern Variable UInt16_operator_and_UInt16_arg0;
extern Function UInt16_operator_and_UInt16;

/// operator^ with UInt16
extern Variable UInt16_operator_xor_UInt16_arg0;
extern Function UInt16_operator_xor_UInt16;

/// operator<< with UInt16
extern Variable UInt16_operator_lsh_UInt16_arg0;
extern Function UInt16_operator_lsh_UInt16;

/// operator>> with UInt16
extern Variable UInt16_operator_rsh_UInt16_arg0;
extern Function UInt16_operator_rsh_UInt16;

/// operator|= with UInt16
extern Variable UInt16_operator_orasg_UInt16_arg0;
extern Function UInt16_operator_orasg_UInt16;

/// operator&= with UInt16
extern Variable UInt16_operator_andasg_UInt16_arg0;
extern Function UInt16_operator_andasg_UInt16;

/// operator^= with UInt16
extern Variable UInt16_operator_xorasg_UInt16_arg0;
extern Function UInt16_operator_xorasg_UInt16;

/// operator<<= with UInt16
extern Variable UInt16_operator_lshasg_UInt16_arg0;
extern Function UInt16_operator_lshasg_UInt16;

/// operator>>= with UInt16
extern Variable UInt16_operator_rhsasg_UInt16_arg0;
extern Function UInt16_operator_rhsasg_UInt16;

struct Int16 : public Type
{
    Int16();
};
extern Int16 Int16Type;

/// i16 with Float32
extern Variable Int16_convert_Float32_arg0;
extern Function Int16_convert_Float32;

/// i16 with UInt32
extern Variable Int16_convert_UInt32_arg0;
extern Function Int16_convert_UInt32;

/// i16 with Int32
extern Variable Int16_convert_Int32_arg0;
extern Function Int16_convert_Int32;

/// i16 with Float16
extern Variable Int16_convert_Float16_arg0;
extern Function Int16_convert_Float16;

/// i16 with UInt16
extern Variable Int16_convert_UInt16_arg0;
extern Function Int16_convert_UInt16;

/// i16 with Int16
extern Variable Int16_ctor0_arg0_Int16;
extern Function Int16_ctor0;

/// operator[] with Int32
extern Variable Int16_operator_index_Int32_arg0;
extern Function Int16_operator_index_Int32;

/// operator[] with UInt32
extern Variable Int16_operator_index_UInt32_arg0;
extern Function Int16_operator_index_UInt32;

/// operator[] with Int16
extern Variable Int16_operator_index_Int16_arg0;
extern Function Int16_operator_index_Int16;

/// operator[] with UInt16
extern Variable Int16_operator_index_UInt16_arg0;
extern Function Int16_operator_index_UInt16;

/// operator+ with Int16
extern Variable Int16_operator_add_Int16_arg0;
extern Function Int16_operator_add_Int16;

/// operator- with Int16
extern Variable Int16_operator_sub_Int16_arg0;
extern Function Int16_operator_sub_Int16;

/// operator* with Int16
extern Variable Int16_operator_mul_Int16_arg0;
extern Function Int16_operator_mul_Int16;

/// operator/ with Int16
extern Variable Int16_operator_div_Int16_arg0;
extern Function Int16_operator_div_Int16;

/// operator% with Int16
extern Variable Int16_operator_mod_Int16_arg0;
extern Function Int16_operator_mod_Int16;

/// operator+= with Int16
extern Variable Int16_operator_addasg_Int16_arg0;
extern Function Int16_operator_addasg_Int16;

/// operator-= with Int16
extern Variable Int16_operator_subasg_Int16_arg0;
extern Function Int16_operator_subasg_Int16;

/// operator*= with Int16
extern Variable Int16_operator_mulasg_Int16_arg0;
extern Function Int16_operator_mulasg_Int16;

/// operator/= with Int16
extern Variable Int16_operator_divasg_Int16_arg0;
extern Function Int16_operator_divasg_Int16;

/// operator< with Int16
extern Variable Int16_operator_lt_Int16_arg0;
extern Function Int16_operator_lt_Int16;

/// operator<= with Int16
extern Variable Int16_operator_lte_Int16_arg0;
extern Function Int16_operator_lte_Int16;

/// operator> with Int16
extern Variable Int16_operator_gt_Int16_arg0;
extern Function Int16_operator_gt_Int16;

/// operator>= with Int16
extern Variable Int16_operator_gte_Int16_arg0;
extern Function Int16_operator_gte_Int16;

/// operator== with Int16
extern Variable Int16_operator_eq_Int16_arg0;
extern Function Int16_operator_eq_Int16;

/// operator!= with Int16
extern Variable Int16_operator_neq_Int16_arg0;
extern Function Int16_operator_neq_Int16;

/// operator| with Int16
extern Variable Int16_operator_or_Int16_arg0;
extern Function Int16_operator_or_Int16;

/// operator& with Int16
extern Variable Int16_operator_and_Int16_arg0;
extern Function Int16_operator_and_Int16;

/// operator^ with Int16
extern Variable Int16_operator_xor_Int16_arg0;
extern Function Int16_operator_xor_Int16;

/// operator<< with Int16
extern Variable Int16_operator_lsh_Int16_arg0;
extern Function Int16_operator_lsh_Int16;

/// operator>> with Int16
extern Variable Int16_operator_rsh_Int16_arg0;
extern Function Int16_operator_rsh_Int16;

/// operator|= with Int16
extern Variable Int16_operator_orasg_Int16_arg0;
extern Function Int16_operator_orasg_Int16;

/// operator&= with Int16
extern Variable Int16_operator_andasg_Int16_arg0;
extern Function Int16_operator_andasg_Int16;

/// operator^= with Int16
extern Variable Int16_operator_xorasg_Int16_arg0;
extern Function Int16_operator_xorasg_Int16;

/// operator<<= with Int16
extern Variable Int16_operator_lshasg_Int16_arg0;
extern Function Int16_operator_lshasg_Int16;

/// operator>>= with Int16
extern Variable Int16_operator_rhsasg_Int16_arg0;
extern Function Int16_operator_rhsasg_Int16;

struct Float32x2 : public Type
{
    Float32x2();
};
extern Float32x2 Float32x2Type;

/// f32x2 with Float32x2
extern Variable Float32x2_convert_Float32x2_arg0;
extern Function Float32x2_convert_Float32x2;

/// f32x2 with Float32
extern Variable Float32x2_splat_Float32_arg0;
extern Function Float32x2_splat_Float32;

/// f32x2 with UInt32x2
extern Variable Float32x2_convert_UInt32x2_arg0;
extern Function Float32x2_convert_UInt32x2;

/// f32x2 with UInt32
extern Variable Float32x2_splat_UInt32_arg0;
extern Function Float32x2_splat_UInt32;

/// f32x2 with Int32x2
extern Variable Float32x2_convert_Int32x2_arg0;
extern Function Float32x2_convert_Int32x2;

/// f32x2 with Int32
extern Variable Float32x2_splat_Int32_arg0;
extern Function Float32x2_splat_Int32;

/// f32x2 with Float16x2
extern Variable Float32x2_convert_Float16x2_arg0;
extern Function Float32x2_convert_Float16x2;

/// f32x2 with Float16
extern Variable Float32x2_splat_Float16_arg0;
extern Function Float32x2_splat_Float16;

/// f32x2 with UInt16x2
extern Variable Float32x2_convert_UInt16x2_arg0;
extern Function Float32x2_convert_UInt16x2;

/// f32x2 with UInt16
extern Variable Float32x2_splat_UInt16_arg0;
extern Function Float32x2_splat_UInt16;

/// f32x2 with Int16x2
extern Variable Float32x2_convert_Int16x2_arg0;
extern Function Float32x2_convert_Int16x2;

/// f32x2 with Int16
extern Variable Float32x2_splat_Int16_arg0;
extern Function Float32x2_splat_Int16;

/// f32x2 with Float32, Float32
extern Variable Float32x2_ctor0_arg0_Float32;
extern Variable Float32x2_ctor0_arg1_Float32;
extern Function Float32x2_ctor0;

/// operator[] with Int32
extern Variable Float32x2_operator_index_Int32_arg0;
extern Function Float32x2_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float32x2_operator_index_UInt32_arg0;
extern Function Float32x2_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float32x2_operator_index_Int16_arg0;
extern Function Float32x2_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float32x2_operator_index_UInt16_arg0;
extern Function Float32x2_operator_index_UInt16;

/// operator+ with Float32x2
extern Variable Float32x2_operator_add_Float32x2_arg0;
extern Function Float32x2_operator_add_Float32x2;

/// operator- with Float32x2
extern Variable Float32x2_operator_sub_Float32x2_arg0;
extern Function Float32x2_operator_sub_Float32x2;

/// operator* with Float32x2
extern Variable Float32x2_operator_mul_Float32x2_arg0;
extern Function Float32x2_operator_mul_Float32x2;

/// operator/ with Float32x2
extern Variable Float32x2_operator_div_Float32x2_arg0;
extern Function Float32x2_operator_div_Float32x2;

/// operator% with Float32x2
extern Variable Float32x2_operator_mod_Float32x2_arg0;
extern Function Float32x2_operator_mod_Float32x2;

/// operator+= with Float32x2
extern Variable Float32x2_operator_addasg_Float32x2_arg0;
extern Function Float32x2_operator_addasg_Float32x2;

/// operator-= with Float32x2
extern Variable Float32x2_operator_subasg_Float32x2_arg0;
extern Function Float32x2_operator_subasg_Float32x2;

/// operator*= with Float32x2
extern Variable Float32x2_operator_mulasg_Float32x2_arg0;
extern Function Float32x2_operator_mulasg_Float32x2;

/// operator/= with Float32x2
extern Variable Float32x2_operator_divasg_Float32x2_arg0;
extern Function Float32x2_operator_divasg_Float32x2;

/// operator< with Float32x2
extern Variable Float32x2_operator_lt_Float32x2_arg0;
extern Function Float32x2_operator_lt_Float32x2;

/// operator<= with Float32x2
extern Variable Float32x2_operator_lte_Float32x2_arg0;
extern Function Float32x2_operator_lte_Float32x2;

/// operator> with Float32x2
extern Variable Float32x2_operator_gt_Float32x2_arg0;
extern Function Float32x2_operator_gt_Float32x2;

/// operator>= with Float32x2
extern Variable Float32x2_operator_gte_Float32x2_arg0;
extern Function Float32x2_operator_gte_Float32x2;

/// operator== with Float32x2
extern Variable Float32x2_operator_eq_Float32x2_arg0;
extern Function Float32x2_operator_eq_Float32x2;

/// operator!= with Float32x2
extern Variable Float32x2_operator_neq_Float32x2_arg0;
extern Function Float32x2_operator_neq_Float32x2;

/// operator* with Float32
extern Variable Float32x2_operator_scale_Float32_arg0;
extern Function Float32x2_operator_scale_Float32;

/// operator* with Float16
extern Variable Float32x2_operator_scale_Float16_arg0;
extern Function Float32x2_operator_scale_Float16;

/// operator* with UInt32
extern Variable Float32x2_operator_scale_UInt32_arg0;
extern Function Float32x2_operator_scale_UInt32;

/// operator* with UInt16
extern Variable Float32x2_operator_scale_UInt16_arg0;
extern Function Float32x2_operator_scale_UInt16;

/// operator* with Int32
extern Variable Float32x2_operator_scale_Int32_arg0;
extern Function Float32x2_operator_scale_Int32;

/// operator* with Int16
extern Variable Float32x2_operator_scale_Int16_arg0;
extern Function Float32x2_operator_scale_Int16;

/// operator* with Float32x2x2
extern Variable Float32x2_operator_mul_Float32x2x2_arg0;
extern Function Float32x2_operator_mul_Float32x2x2;

/// operator* with Float32x2x3
extern Variable Float32x2_operator_mul_Float32x2x3_arg0;
extern Function Float32x2_operator_mul_Float32x2x3;

/// operator* with Float32x2x4
extern Variable Float32x2_operator_mul_Float32x2x4_arg0;
extern Function Float32x2_operator_mul_Float32x2x4;

struct UInt32x2 : public Type
{
    UInt32x2();
};
extern UInt32x2 UInt32x2Type;

/// u32x2 with Float32x2
extern Variable UInt32x2_convert_Float32x2_arg0;
extern Function UInt32x2_convert_Float32x2;

/// u32x2 with Float32
extern Variable UInt32x2_splat_Float32_arg0;
extern Function UInt32x2_splat_Float32;

/// u32x2 with UInt32x2
extern Variable UInt32x2_convert_UInt32x2_arg0;
extern Function UInt32x2_convert_UInt32x2;

/// u32x2 with UInt32
extern Variable UInt32x2_splat_UInt32_arg0;
extern Function UInt32x2_splat_UInt32;

/// u32x2 with Int32x2
extern Variable UInt32x2_convert_Int32x2_arg0;
extern Function UInt32x2_convert_Int32x2;

/// u32x2 with Int32
extern Variable UInt32x2_splat_Int32_arg0;
extern Function UInt32x2_splat_Int32;

/// u32x2 with Float16x2
extern Variable UInt32x2_convert_Float16x2_arg0;
extern Function UInt32x2_convert_Float16x2;

/// u32x2 with Float16
extern Variable UInt32x2_splat_Float16_arg0;
extern Function UInt32x2_splat_Float16;

/// u32x2 with UInt16x2
extern Variable UInt32x2_convert_UInt16x2_arg0;
extern Function UInt32x2_convert_UInt16x2;

/// u32x2 with UInt16
extern Variable UInt32x2_splat_UInt16_arg0;
extern Function UInt32x2_splat_UInt16;

/// u32x2 with Int16x2
extern Variable UInt32x2_convert_Int16x2_arg0;
extern Function UInt32x2_convert_Int16x2;

/// u32x2 with Int16
extern Variable UInt32x2_splat_Int16_arg0;
extern Function UInt32x2_splat_Int16;

/// u32x2 with UInt32, UInt32
extern Variable UInt32x2_ctor0_arg0_UInt32;
extern Variable UInt32x2_ctor0_arg1_UInt32;
extern Function UInt32x2_ctor0;

/// operator[] with Int32
extern Variable UInt32x2_operator_index_Int32_arg0;
extern Function UInt32x2_operator_index_Int32;

/// operator[] with UInt32
extern Variable UInt32x2_operator_index_UInt32_arg0;
extern Function UInt32x2_operator_index_UInt32;

/// operator[] with Int16
extern Variable UInt32x2_operator_index_Int16_arg0;
extern Function UInt32x2_operator_index_Int16;

/// operator[] with UInt16
extern Variable UInt32x2_operator_index_UInt16_arg0;
extern Function UInt32x2_operator_index_UInt16;

/// operator+ with UInt32x2
extern Variable UInt32x2_operator_add_UInt32x2_arg0;
extern Function UInt32x2_operator_add_UInt32x2;

/// operator- with UInt32x2
extern Variable UInt32x2_operator_sub_UInt32x2_arg0;
extern Function UInt32x2_operator_sub_UInt32x2;

/// operator* with UInt32x2
extern Variable UInt32x2_operator_mul_UInt32x2_arg0;
extern Function UInt32x2_operator_mul_UInt32x2;

/// operator/ with UInt32x2
extern Variable UInt32x2_operator_div_UInt32x2_arg0;
extern Function UInt32x2_operator_div_UInt32x2;

/// operator% with UInt32x2
extern Variable UInt32x2_operator_mod_UInt32x2_arg0;
extern Function UInt32x2_operator_mod_UInt32x2;

/// operator+= with UInt32x2
extern Variable UInt32x2_operator_addasg_UInt32x2_arg0;
extern Function UInt32x2_operator_addasg_UInt32x2;

/// operator-= with UInt32x2
extern Variable UInt32x2_operator_subasg_UInt32x2_arg0;
extern Function UInt32x2_operator_subasg_UInt32x2;

/// operator*= with UInt32x2
extern Variable UInt32x2_operator_mulasg_UInt32x2_arg0;
extern Function UInt32x2_operator_mulasg_UInt32x2;

/// operator/= with UInt32x2
extern Variable UInt32x2_operator_divasg_UInt32x2_arg0;
extern Function UInt32x2_operator_divasg_UInt32x2;

/// operator< with UInt32x2
extern Variable UInt32x2_operator_lt_UInt32x2_arg0;
extern Function UInt32x2_operator_lt_UInt32x2;

/// operator<= with UInt32x2
extern Variable UInt32x2_operator_lte_UInt32x2_arg0;
extern Function UInt32x2_operator_lte_UInt32x2;

/// operator> with UInt32x2
extern Variable UInt32x2_operator_gt_UInt32x2_arg0;
extern Function UInt32x2_operator_gt_UInt32x2;

/// operator>= with UInt32x2
extern Variable UInt32x2_operator_gte_UInt32x2_arg0;
extern Function UInt32x2_operator_gte_UInt32x2;

/// operator== with UInt32x2
extern Variable UInt32x2_operator_eq_UInt32x2_arg0;
extern Function UInt32x2_operator_eq_UInt32x2;

/// operator!= with UInt32x2
extern Variable UInt32x2_operator_neq_UInt32x2_arg0;
extern Function UInt32x2_operator_neq_UInt32x2;

/// operator* with Float32
extern Variable UInt32x2_operator_scale_Float32_arg0;
extern Function UInt32x2_operator_scale_Float32;

/// operator* with Float16
extern Variable UInt32x2_operator_scale_Float16_arg0;
extern Function UInt32x2_operator_scale_Float16;

/// operator* with UInt32
extern Variable UInt32x2_operator_scale_UInt32_arg0;
extern Function UInt32x2_operator_scale_UInt32;

/// operator* with UInt16
extern Variable UInt32x2_operator_scale_UInt16_arg0;
extern Function UInt32x2_operator_scale_UInt16;

/// operator* with Int32
extern Variable UInt32x2_operator_scale_Int32_arg0;
extern Function UInt32x2_operator_scale_Int32;

/// operator* with Int16
extern Variable UInt32x2_operator_scale_Int16_arg0;
extern Function UInt32x2_operator_scale_Int16;

/// operator| with UInt32x2
extern Variable UInt32x2_operator_or_UInt32x2_arg0;
extern Function UInt32x2_operator_or_UInt32x2;

/// operator& with UInt32x2
extern Variable UInt32x2_operator_and_UInt32x2_arg0;
extern Function UInt32x2_operator_and_UInt32x2;

/// operator^ with UInt32x2
extern Variable UInt32x2_operator_xor_UInt32x2_arg0;
extern Function UInt32x2_operator_xor_UInt32x2;

/// operator<< with UInt32x2
extern Variable UInt32x2_operator_lsh_UInt32x2_arg0;
extern Function UInt32x2_operator_lsh_UInt32x2;

/// operator>> with UInt32x2
extern Variable UInt32x2_operator_rsh_UInt32x2_arg0;
extern Function UInt32x2_operator_rsh_UInt32x2;

/// operator|= with UInt32x2
extern Variable UInt32x2_operator_orasg_UInt32x2_arg0;
extern Function UInt32x2_operator_orasg_UInt32x2;

/// operator&= with UInt32x2
extern Variable UInt32x2_operator_andasg_UInt32x2_arg0;
extern Function UInt32x2_operator_andasg_UInt32x2;

/// operator^= with UInt32x2
extern Variable UInt32x2_operator_xorasg_UInt32x2_arg0;
extern Function UInt32x2_operator_xorasg_UInt32x2;

/// operator<<= with UInt32x2
extern Variable UInt32x2_operator_lshasg_UInt32x2_arg0;
extern Function UInt32x2_operator_lshasg_UInt32x2;

/// operator>>= with UInt32x2
extern Variable UInt32x2_operator_rhsasg_UInt32x2_arg0;
extern Function UInt32x2_operator_rhsasg_UInt32x2;

struct Int32x2 : public Type
{
    Int32x2();
};
extern Int32x2 Int32x2Type;

/// i32x2 with Float32x2
extern Variable Int32x2_convert_Float32x2_arg0;
extern Function Int32x2_convert_Float32x2;

/// i32x2 with Float32
extern Variable Int32x2_splat_Float32_arg0;
extern Function Int32x2_splat_Float32;

/// i32x2 with UInt32x2
extern Variable Int32x2_convert_UInt32x2_arg0;
extern Function Int32x2_convert_UInt32x2;

/// i32x2 with UInt32
extern Variable Int32x2_splat_UInt32_arg0;
extern Function Int32x2_splat_UInt32;

/// i32x2 with Int32x2
extern Variable Int32x2_convert_Int32x2_arg0;
extern Function Int32x2_convert_Int32x2;

/// i32x2 with Int32
extern Variable Int32x2_splat_Int32_arg0;
extern Function Int32x2_splat_Int32;

/// i32x2 with Float16x2
extern Variable Int32x2_convert_Float16x2_arg0;
extern Function Int32x2_convert_Float16x2;

/// i32x2 with Float16
extern Variable Int32x2_splat_Float16_arg0;
extern Function Int32x2_splat_Float16;

/// i32x2 with UInt16x2
extern Variable Int32x2_convert_UInt16x2_arg0;
extern Function Int32x2_convert_UInt16x2;

/// i32x2 with UInt16
extern Variable Int32x2_splat_UInt16_arg0;
extern Function Int32x2_splat_UInt16;

/// i32x2 with Int16x2
extern Variable Int32x2_convert_Int16x2_arg0;
extern Function Int32x2_convert_Int16x2;

/// i32x2 with Int16
extern Variable Int32x2_splat_Int16_arg0;
extern Function Int32x2_splat_Int16;

/// i32x2 with Int32, Int32
extern Variable Int32x2_ctor0_arg0_Int32;
extern Variable Int32x2_ctor0_arg1_Int32;
extern Function Int32x2_ctor0;

/// operator[] with Int32
extern Variable Int32x2_operator_index_Int32_arg0;
extern Function Int32x2_operator_index_Int32;

/// operator[] with UInt32
extern Variable Int32x2_operator_index_UInt32_arg0;
extern Function Int32x2_operator_index_UInt32;

/// operator[] with Int16
extern Variable Int32x2_operator_index_Int16_arg0;
extern Function Int32x2_operator_index_Int16;

/// operator[] with UInt16
extern Variable Int32x2_operator_index_UInt16_arg0;
extern Function Int32x2_operator_index_UInt16;

/// operator+ with Int32x2
extern Variable Int32x2_operator_add_Int32x2_arg0;
extern Function Int32x2_operator_add_Int32x2;

/// operator- with Int32x2
extern Variable Int32x2_operator_sub_Int32x2_arg0;
extern Function Int32x2_operator_sub_Int32x2;

/// operator* with Int32x2
extern Variable Int32x2_operator_mul_Int32x2_arg0;
extern Function Int32x2_operator_mul_Int32x2;

/// operator/ with Int32x2
extern Variable Int32x2_operator_div_Int32x2_arg0;
extern Function Int32x2_operator_div_Int32x2;

/// operator% with Int32x2
extern Variable Int32x2_operator_mod_Int32x2_arg0;
extern Function Int32x2_operator_mod_Int32x2;

/// operator+= with Int32x2
extern Variable Int32x2_operator_addasg_Int32x2_arg0;
extern Function Int32x2_operator_addasg_Int32x2;

/// operator-= with Int32x2
extern Variable Int32x2_operator_subasg_Int32x2_arg0;
extern Function Int32x2_operator_subasg_Int32x2;

/// operator*= with Int32x2
extern Variable Int32x2_operator_mulasg_Int32x2_arg0;
extern Function Int32x2_operator_mulasg_Int32x2;

/// operator/= with Int32x2
extern Variable Int32x2_operator_divasg_Int32x2_arg0;
extern Function Int32x2_operator_divasg_Int32x2;

/// operator< with Int32x2
extern Variable Int32x2_operator_lt_Int32x2_arg0;
extern Function Int32x2_operator_lt_Int32x2;

/// operator<= with Int32x2
extern Variable Int32x2_operator_lte_Int32x2_arg0;
extern Function Int32x2_operator_lte_Int32x2;

/// operator> with Int32x2
extern Variable Int32x2_operator_gt_Int32x2_arg0;
extern Function Int32x2_operator_gt_Int32x2;

/// operator>= with Int32x2
extern Variable Int32x2_operator_gte_Int32x2_arg0;
extern Function Int32x2_operator_gte_Int32x2;

/// operator== with Int32x2
extern Variable Int32x2_operator_eq_Int32x2_arg0;
extern Function Int32x2_operator_eq_Int32x2;

/// operator!= with Int32x2
extern Variable Int32x2_operator_neq_Int32x2_arg0;
extern Function Int32x2_operator_neq_Int32x2;

/// operator* with Float32
extern Variable Int32x2_operator_scale_Float32_arg0;
extern Function Int32x2_operator_scale_Float32;

/// operator* with Float16
extern Variable Int32x2_operator_scale_Float16_arg0;
extern Function Int32x2_operator_scale_Float16;

/// operator* with UInt32
extern Variable Int32x2_operator_scale_UInt32_arg0;
extern Function Int32x2_operator_scale_UInt32;

/// operator* with UInt16
extern Variable Int32x2_operator_scale_UInt16_arg0;
extern Function Int32x2_operator_scale_UInt16;

/// operator* with Int32
extern Variable Int32x2_operator_scale_Int32_arg0;
extern Function Int32x2_operator_scale_Int32;

/// operator* with Int16
extern Variable Int32x2_operator_scale_Int16_arg0;
extern Function Int32x2_operator_scale_Int16;

/// operator| with Int32x2
extern Variable Int32x2_operator_or_Int32x2_arg0;
extern Function Int32x2_operator_or_Int32x2;

/// operator& with Int32x2
extern Variable Int32x2_operator_and_Int32x2_arg0;
extern Function Int32x2_operator_and_Int32x2;

/// operator^ with Int32x2
extern Variable Int32x2_operator_xor_Int32x2_arg0;
extern Function Int32x2_operator_xor_Int32x2;

/// operator<< with Int32x2
extern Variable Int32x2_operator_lsh_Int32x2_arg0;
extern Function Int32x2_operator_lsh_Int32x2;

/// operator>> with Int32x2
extern Variable Int32x2_operator_rsh_Int32x2_arg0;
extern Function Int32x2_operator_rsh_Int32x2;

/// operator|= with Int32x2
extern Variable Int32x2_operator_orasg_Int32x2_arg0;
extern Function Int32x2_operator_orasg_Int32x2;

/// operator&= with Int32x2
extern Variable Int32x2_operator_andasg_Int32x2_arg0;
extern Function Int32x2_operator_andasg_Int32x2;

/// operator^= with Int32x2
extern Variable Int32x2_operator_xorasg_Int32x2_arg0;
extern Function Int32x2_operator_xorasg_Int32x2;

/// operator<<= with Int32x2
extern Variable Int32x2_operator_lshasg_Int32x2_arg0;
extern Function Int32x2_operator_lshasg_Int32x2;

/// operator>>= with Int32x2
extern Variable Int32x2_operator_rhsasg_Int32x2_arg0;
extern Function Int32x2_operator_rhsasg_Int32x2;

struct Bool8x2 : public Type
{
    Bool8x2();
};
extern Bool8x2 Bool8x2Type;

/// b8x2 with UInt32x2
extern Variable Bool8x2_convert_UInt32x2_arg0;
extern Function Bool8x2_convert_UInt32x2;

/// b8x2 with UInt32
extern Variable Bool8x2_splat_UInt32_arg0;
extern Function Bool8x2_splat_UInt32;

/// b8x2 with Int32x2
extern Variable Bool8x2_convert_Int32x2_arg0;
extern Function Bool8x2_convert_Int32x2;

/// b8x2 with Int32
extern Variable Bool8x2_splat_Int32_arg0;
extern Function Bool8x2_splat_Int32;

/// b8x2 with UInt16x2
extern Variable Bool8x2_convert_UInt16x2_arg0;
extern Function Bool8x2_convert_UInt16x2;

/// b8x2 with UInt16
extern Variable Bool8x2_splat_UInt16_arg0;
extern Function Bool8x2_splat_UInt16;

/// b8x2 with Int16x2
extern Variable Bool8x2_convert_Int16x2_arg0;
extern Function Bool8x2_convert_Int16x2;

/// b8x2 with Int16
extern Variable Bool8x2_splat_Int16_arg0;
extern Function Bool8x2_splat_Int16;

/// b8x2 with Bool8, Bool8
extern Variable Bool8x2_ctor0_arg0_Bool8;
extern Variable Bool8x2_ctor0_arg1_Bool8;
extern Function Bool8x2_ctor0;

/// operator[] with Int32
extern Variable Bool8x2_operator_index_Int32_arg0;
extern Function Bool8x2_operator_index_Int32;

/// operator[] with UInt32
extern Variable Bool8x2_operator_index_UInt32_arg0;
extern Function Bool8x2_operator_index_UInt32;

/// operator[] with Int16
extern Variable Bool8x2_operator_index_Int16_arg0;
extern Function Bool8x2_operator_index_Int16;

/// operator[] with UInt16
extern Variable Bool8x2_operator_index_UInt16_arg0;
extern Function Bool8x2_operator_index_UInt16;

/// operator|| with Bool8x2
extern Variable Bool8x2_operator_oror_Bool8x2_arg0;
extern Function Bool8x2_operator_oror_Bool8x2;

/// operator&& with Bool8x2
extern Variable Bool8x2_operator_andand_Bool8x2_arg0;
extern Function Bool8x2_operator_andand_Bool8x2;

/// operator== with Bool8x2
extern Variable Bool8x2_operator_eq_Bool8x2_arg0;
extern Function Bool8x2_operator_eq_Bool8x2;

/// operator!= with Bool8x2
extern Variable Bool8x2_operator_neq_Bool8x2_arg0;
extern Function Bool8x2_operator_neq_Bool8x2;

struct Float16x2 : public Type
{
    Float16x2();
};
extern Float16x2 Float16x2Type;

/// f16x2 with Float32x2
extern Variable Float16x2_convert_Float32x2_arg0;
extern Function Float16x2_convert_Float32x2;

/// f16x2 with Float32
extern Variable Float16x2_splat_Float32_arg0;
extern Function Float16x2_splat_Float32;

/// f16x2 with UInt32x2
extern Variable Float16x2_convert_UInt32x2_arg0;
extern Function Float16x2_convert_UInt32x2;

/// f16x2 with UInt32
extern Variable Float16x2_splat_UInt32_arg0;
extern Function Float16x2_splat_UInt32;

/// f16x2 with Int32x2
extern Variable Float16x2_convert_Int32x2_arg0;
extern Function Float16x2_convert_Int32x2;

/// f16x2 with Int32
extern Variable Float16x2_splat_Int32_arg0;
extern Function Float16x2_splat_Int32;

/// f16x2 with Float16x2
extern Variable Float16x2_convert_Float16x2_arg0;
extern Function Float16x2_convert_Float16x2;

/// f16x2 with Float16
extern Variable Float16x2_splat_Float16_arg0;
extern Function Float16x2_splat_Float16;

/// f16x2 with UInt16x2
extern Variable Float16x2_convert_UInt16x2_arg0;
extern Function Float16x2_convert_UInt16x2;

/// f16x2 with UInt16
extern Variable Float16x2_splat_UInt16_arg0;
extern Function Float16x2_splat_UInt16;

/// f16x2 with Int16x2
extern Variable Float16x2_convert_Int16x2_arg0;
extern Function Float16x2_convert_Int16x2;

/// f16x2 with Int16
extern Variable Float16x2_splat_Int16_arg0;
extern Function Float16x2_splat_Int16;

/// f16x2 with Float16, Float16
extern Variable Float16x2_ctor0_arg0_Float16;
extern Variable Float16x2_ctor0_arg1_Float16;
extern Function Float16x2_ctor0;

/// operator[] with Int32
extern Variable Float16x2_operator_index_Int32_arg0;
extern Function Float16x2_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float16x2_operator_index_UInt32_arg0;
extern Function Float16x2_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float16x2_operator_index_Int16_arg0;
extern Function Float16x2_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float16x2_operator_index_UInt16_arg0;
extern Function Float16x2_operator_index_UInt16;

/// operator+ with Float16x2
extern Variable Float16x2_operator_add_Float16x2_arg0;
extern Function Float16x2_operator_add_Float16x2;

/// operator- with Float16x2
extern Variable Float16x2_operator_sub_Float16x2_arg0;
extern Function Float16x2_operator_sub_Float16x2;

/// operator* with Float16x2
extern Variable Float16x2_operator_mul_Float16x2_arg0;
extern Function Float16x2_operator_mul_Float16x2;

/// operator/ with Float16x2
extern Variable Float16x2_operator_div_Float16x2_arg0;
extern Function Float16x2_operator_div_Float16x2;

/// operator% with Float16x2
extern Variable Float16x2_operator_mod_Float16x2_arg0;
extern Function Float16x2_operator_mod_Float16x2;

/// operator+= with Float16x2
extern Variable Float16x2_operator_addasg_Float16x2_arg0;
extern Function Float16x2_operator_addasg_Float16x2;

/// operator-= with Float16x2
extern Variable Float16x2_operator_subasg_Float16x2_arg0;
extern Function Float16x2_operator_subasg_Float16x2;

/// operator*= with Float16x2
extern Variable Float16x2_operator_mulasg_Float16x2_arg0;
extern Function Float16x2_operator_mulasg_Float16x2;

/// operator/= with Float16x2
extern Variable Float16x2_operator_divasg_Float16x2_arg0;
extern Function Float16x2_operator_divasg_Float16x2;

/// operator< with Float16x2
extern Variable Float16x2_operator_lt_Float16x2_arg0;
extern Function Float16x2_operator_lt_Float16x2;

/// operator<= with Float16x2
extern Variable Float16x2_operator_lte_Float16x2_arg0;
extern Function Float16x2_operator_lte_Float16x2;

/// operator> with Float16x2
extern Variable Float16x2_operator_gt_Float16x2_arg0;
extern Function Float16x2_operator_gt_Float16x2;

/// operator>= with Float16x2
extern Variable Float16x2_operator_gte_Float16x2_arg0;
extern Function Float16x2_operator_gte_Float16x2;

/// operator== with Float16x2
extern Variable Float16x2_operator_eq_Float16x2_arg0;
extern Function Float16x2_operator_eq_Float16x2;

/// operator!= with Float16x2
extern Variable Float16x2_operator_neq_Float16x2_arg0;
extern Function Float16x2_operator_neq_Float16x2;

/// operator* with Float32
extern Variable Float16x2_operator_scale_Float32_arg0;
extern Function Float16x2_operator_scale_Float32;

/// operator* with Float16
extern Variable Float16x2_operator_scale_Float16_arg0;
extern Function Float16x2_operator_scale_Float16;

/// operator* with UInt32
extern Variable Float16x2_operator_scale_UInt32_arg0;
extern Function Float16x2_operator_scale_UInt32;

/// operator* with UInt16
extern Variable Float16x2_operator_scale_UInt16_arg0;
extern Function Float16x2_operator_scale_UInt16;

/// operator* with Int32
extern Variable Float16x2_operator_scale_Int32_arg0;
extern Function Float16x2_operator_scale_Int32;

/// operator* with Int16
extern Variable Float16x2_operator_scale_Int16_arg0;
extern Function Float16x2_operator_scale_Int16;

/// operator* with Float32x2x2
extern Variable Float16x2_operator_mul_Float32x2x2_arg0;
extern Function Float16x2_operator_mul_Float32x2x2;

/// operator* with Float32x2x3
extern Variable Float16x2_operator_mul_Float32x2x3_arg0;
extern Function Float16x2_operator_mul_Float32x2x3;

/// operator* with Float32x2x4
extern Variable Float16x2_operator_mul_Float32x2x4_arg0;
extern Function Float16x2_operator_mul_Float32x2x4;

struct UInt16x2 : public Type
{
    UInt16x2();
};
extern UInt16x2 UInt16x2Type;

/// u16x2 with Float32x2
extern Variable UInt16x2_convert_Float32x2_arg0;
extern Function UInt16x2_convert_Float32x2;

/// u16x2 with Float32
extern Variable UInt16x2_splat_Float32_arg0;
extern Function UInt16x2_splat_Float32;

/// u16x2 with UInt32x2
extern Variable UInt16x2_convert_UInt32x2_arg0;
extern Function UInt16x2_convert_UInt32x2;

/// u16x2 with UInt32
extern Variable UInt16x2_splat_UInt32_arg0;
extern Function UInt16x2_splat_UInt32;

/// u16x2 with Int32x2
extern Variable UInt16x2_convert_Int32x2_arg0;
extern Function UInt16x2_convert_Int32x2;

/// u16x2 with Int32
extern Variable UInt16x2_splat_Int32_arg0;
extern Function UInt16x2_splat_Int32;

/// u16x2 with Float16x2
extern Variable UInt16x2_convert_Float16x2_arg0;
extern Function UInt16x2_convert_Float16x2;

/// u16x2 with Float16
extern Variable UInt16x2_splat_Float16_arg0;
extern Function UInt16x2_splat_Float16;

/// u16x2 with UInt16x2
extern Variable UInt16x2_convert_UInt16x2_arg0;
extern Function UInt16x2_convert_UInt16x2;

/// u16x2 with UInt16
extern Variable UInt16x2_splat_UInt16_arg0;
extern Function UInt16x2_splat_UInt16;

/// u16x2 with Int16x2
extern Variable UInt16x2_convert_Int16x2_arg0;
extern Function UInt16x2_convert_Int16x2;

/// u16x2 with Int16
extern Variable UInt16x2_splat_Int16_arg0;
extern Function UInt16x2_splat_Int16;

/// u16x2 with UInt16, UInt16
extern Variable UInt16x2_ctor0_arg0_UInt16;
extern Variable UInt16x2_ctor0_arg1_UInt16;
extern Function UInt16x2_ctor0;

/// operator[] with Int32
extern Variable UInt16x2_operator_index_Int32_arg0;
extern Function UInt16x2_operator_index_Int32;

/// operator[] with UInt32
extern Variable UInt16x2_operator_index_UInt32_arg0;
extern Function UInt16x2_operator_index_UInt32;

/// operator[] with Int16
extern Variable UInt16x2_operator_index_Int16_arg0;
extern Function UInt16x2_operator_index_Int16;

/// operator[] with UInt16
extern Variable UInt16x2_operator_index_UInt16_arg0;
extern Function UInt16x2_operator_index_UInt16;

/// operator+ with UInt16x2
extern Variable UInt16x2_operator_add_UInt16x2_arg0;
extern Function UInt16x2_operator_add_UInt16x2;

/// operator- with UInt16x2
extern Variable UInt16x2_operator_sub_UInt16x2_arg0;
extern Function UInt16x2_operator_sub_UInt16x2;

/// operator* with UInt16x2
extern Variable UInt16x2_operator_mul_UInt16x2_arg0;
extern Function UInt16x2_operator_mul_UInt16x2;

/// operator/ with UInt16x2
extern Variable UInt16x2_operator_div_UInt16x2_arg0;
extern Function UInt16x2_operator_div_UInt16x2;

/// operator% with UInt16x2
extern Variable UInt16x2_operator_mod_UInt16x2_arg0;
extern Function UInt16x2_operator_mod_UInt16x2;

/// operator+= with UInt16x2
extern Variable UInt16x2_operator_addasg_UInt16x2_arg0;
extern Function UInt16x2_operator_addasg_UInt16x2;

/// operator-= with UInt16x2
extern Variable UInt16x2_operator_subasg_UInt16x2_arg0;
extern Function UInt16x2_operator_subasg_UInt16x2;

/// operator*= with UInt16x2
extern Variable UInt16x2_operator_mulasg_UInt16x2_arg0;
extern Function UInt16x2_operator_mulasg_UInt16x2;

/// operator/= with UInt16x2
extern Variable UInt16x2_operator_divasg_UInt16x2_arg0;
extern Function UInt16x2_operator_divasg_UInt16x2;

/// operator< with UInt16x2
extern Variable UInt16x2_operator_lt_UInt16x2_arg0;
extern Function UInt16x2_operator_lt_UInt16x2;

/// operator<= with UInt16x2
extern Variable UInt16x2_operator_lte_UInt16x2_arg0;
extern Function UInt16x2_operator_lte_UInt16x2;

/// operator> with UInt16x2
extern Variable UInt16x2_operator_gt_UInt16x2_arg0;
extern Function UInt16x2_operator_gt_UInt16x2;

/// operator>= with UInt16x2
extern Variable UInt16x2_operator_gte_UInt16x2_arg0;
extern Function UInt16x2_operator_gte_UInt16x2;

/// operator== with UInt16x2
extern Variable UInt16x2_operator_eq_UInt16x2_arg0;
extern Function UInt16x2_operator_eq_UInt16x2;

/// operator!= with UInt16x2
extern Variable UInt16x2_operator_neq_UInt16x2_arg0;
extern Function UInt16x2_operator_neq_UInt16x2;

/// operator* with Float32
extern Variable UInt16x2_operator_scale_Float32_arg0;
extern Function UInt16x2_operator_scale_Float32;

/// operator* with Float16
extern Variable UInt16x2_operator_scale_Float16_arg0;
extern Function UInt16x2_operator_scale_Float16;

/// operator* with UInt32
extern Variable UInt16x2_operator_scale_UInt32_arg0;
extern Function UInt16x2_operator_scale_UInt32;

/// operator* with UInt16
extern Variable UInt16x2_operator_scale_UInt16_arg0;
extern Function UInt16x2_operator_scale_UInt16;

/// operator* with Int32
extern Variable UInt16x2_operator_scale_Int32_arg0;
extern Function UInt16x2_operator_scale_Int32;

/// operator* with Int16
extern Variable UInt16x2_operator_scale_Int16_arg0;
extern Function UInt16x2_operator_scale_Int16;

/// operator| with UInt16x2
extern Variable UInt16x2_operator_or_UInt16x2_arg0;
extern Function UInt16x2_operator_or_UInt16x2;

/// operator& with UInt16x2
extern Variable UInt16x2_operator_and_UInt16x2_arg0;
extern Function UInt16x2_operator_and_UInt16x2;

/// operator^ with UInt16x2
extern Variable UInt16x2_operator_xor_UInt16x2_arg0;
extern Function UInt16x2_operator_xor_UInt16x2;

/// operator<< with UInt16x2
extern Variable UInt16x2_operator_lsh_UInt16x2_arg0;
extern Function UInt16x2_operator_lsh_UInt16x2;

/// operator>> with UInt16x2
extern Variable UInt16x2_operator_rsh_UInt16x2_arg0;
extern Function UInt16x2_operator_rsh_UInt16x2;

/// operator|= with UInt16x2
extern Variable UInt16x2_operator_orasg_UInt16x2_arg0;
extern Function UInt16x2_operator_orasg_UInt16x2;

/// operator&= with UInt16x2
extern Variable UInt16x2_operator_andasg_UInt16x2_arg0;
extern Function UInt16x2_operator_andasg_UInt16x2;

/// operator^= with UInt16x2
extern Variable UInt16x2_operator_xorasg_UInt16x2_arg0;
extern Function UInt16x2_operator_xorasg_UInt16x2;

/// operator<<= with UInt16x2
extern Variable UInt16x2_operator_lshasg_UInt16x2_arg0;
extern Function UInt16x2_operator_lshasg_UInt16x2;

/// operator>>= with UInt16x2
extern Variable UInt16x2_operator_rhsasg_UInt16x2_arg0;
extern Function UInt16x2_operator_rhsasg_UInt16x2;

struct Int16x2 : public Type
{
    Int16x2();
};
extern Int16x2 Int16x2Type;

/// i16x2 with Float32x2
extern Variable Int16x2_convert_Float32x2_arg0;
extern Function Int16x2_convert_Float32x2;

/// i16x2 with Float32
extern Variable Int16x2_splat_Float32_arg0;
extern Function Int16x2_splat_Float32;

/// i16x2 with UInt32x2
extern Variable Int16x2_convert_UInt32x2_arg0;
extern Function Int16x2_convert_UInt32x2;

/// i16x2 with UInt32
extern Variable Int16x2_splat_UInt32_arg0;
extern Function Int16x2_splat_UInt32;

/// i16x2 with Int32x2
extern Variable Int16x2_convert_Int32x2_arg0;
extern Function Int16x2_convert_Int32x2;

/// i16x2 with Int32
extern Variable Int16x2_splat_Int32_arg0;
extern Function Int16x2_splat_Int32;

/// i16x2 with Float16x2
extern Variable Int16x2_convert_Float16x2_arg0;
extern Function Int16x2_convert_Float16x2;

/// i16x2 with Float16
extern Variable Int16x2_splat_Float16_arg0;
extern Function Int16x2_splat_Float16;

/// i16x2 with UInt16x2
extern Variable Int16x2_convert_UInt16x2_arg0;
extern Function Int16x2_convert_UInt16x2;

/// i16x2 with UInt16
extern Variable Int16x2_splat_UInt16_arg0;
extern Function Int16x2_splat_UInt16;

/// i16x2 with Int16x2
extern Variable Int16x2_convert_Int16x2_arg0;
extern Function Int16x2_convert_Int16x2;

/// i16x2 with Int16
extern Variable Int16x2_splat_Int16_arg0;
extern Function Int16x2_splat_Int16;

/// i16x2 with Int16, Int16
extern Variable Int16x2_ctor0_arg0_Int16;
extern Variable Int16x2_ctor0_arg1_Int16;
extern Function Int16x2_ctor0;

/// operator[] with Int32
extern Variable Int16x2_operator_index_Int32_arg0;
extern Function Int16x2_operator_index_Int32;

/// operator[] with UInt32
extern Variable Int16x2_operator_index_UInt32_arg0;
extern Function Int16x2_operator_index_UInt32;

/// operator[] with Int16
extern Variable Int16x2_operator_index_Int16_arg0;
extern Function Int16x2_operator_index_Int16;

/// operator[] with UInt16
extern Variable Int16x2_operator_index_UInt16_arg0;
extern Function Int16x2_operator_index_UInt16;

/// operator+ with Int16x2
extern Variable Int16x2_operator_add_Int16x2_arg0;
extern Function Int16x2_operator_add_Int16x2;

/// operator- with Int16x2
extern Variable Int16x2_operator_sub_Int16x2_arg0;
extern Function Int16x2_operator_sub_Int16x2;

/// operator* with Int16x2
extern Variable Int16x2_operator_mul_Int16x2_arg0;
extern Function Int16x2_operator_mul_Int16x2;

/// operator/ with Int16x2
extern Variable Int16x2_operator_div_Int16x2_arg0;
extern Function Int16x2_operator_div_Int16x2;

/// operator% with Int16x2
extern Variable Int16x2_operator_mod_Int16x2_arg0;
extern Function Int16x2_operator_mod_Int16x2;

/// operator+= with Int16x2
extern Variable Int16x2_operator_addasg_Int16x2_arg0;
extern Function Int16x2_operator_addasg_Int16x2;

/// operator-= with Int16x2
extern Variable Int16x2_operator_subasg_Int16x2_arg0;
extern Function Int16x2_operator_subasg_Int16x2;

/// operator*= with Int16x2
extern Variable Int16x2_operator_mulasg_Int16x2_arg0;
extern Function Int16x2_operator_mulasg_Int16x2;

/// operator/= with Int16x2
extern Variable Int16x2_operator_divasg_Int16x2_arg0;
extern Function Int16x2_operator_divasg_Int16x2;

/// operator< with Int16x2
extern Variable Int16x2_operator_lt_Int16x2_arg0;
extern Function Int16x2_operator_lt_Int16x2;

/// operator<= with Int16x2
extern Variable Int16x2_operator_lte_Int16x2_arg0;
extern Function Int16x2_operator_lte_Int16x2;

/// operator> with Int16x2
extern Variable Int16x2_operator_gt_Int16x2_arg0;
extern Function Int16x2_operator_gt_Int16x2;

/// operator>= with Int16x2
extern Variable Int16x2_operator_gte_Int16x2_arg0;
extern Function Int16x2_operator_gte_Int16x2;

/// operator== with Int16x2
extern Variable Int16x2_operator_eq_Int16x2_arg0;
extern Function Int16x2_operator_eq_Int16x2;

/// operator!= with Int16x2
extern Variable Int16x2_operator_neq_Int16x2_arg0;
extern Function Int16x2_operator_neq_Int16x2;

/// operator* with Float32
extern Variable Int16x2_operator_scale_Float32_arg0;
extern Function Int16x2_operator_scale_Float32;

/// operator* with Float16
extern Variable Int16x2_operator_scale_Float16_arg0;
extern Function Int16x2_operator_scale_Float16;

/// operator* with UInt32
extern Variable Int16x2_operator_scale_UInt32_arg0;
extern Function Int16x2_operator_scale_UInt32;

/// operator* with UInt16
extern Variable Int16x2_operator_scale_UInt16_arg0;
extern Function Int16x2_operator_scale_UInt16;

/// operator* with Int32
extern Variable Int16x2_operator_scale_Int32_arg0;
extern Function Int16x2_operator_scale_Int32;

/// operator* with Int16
extern Variable Int16x2_operator_scale_Int16_arg0;
extern Function Int16x2_operator_scale_Int16;

/// operator| with Int16x2
extern Variable Int16x2_operator_or_Int16x2_arg0;
extern Function Int16x2_operator_or_Int16x2;

/// operator& with Int16x2
extern Variable Int16x2_operator_and_Int16x2_arg0;
extern Function Int16x2_operator_and_Int16x2;

/// operator^ with Int16x2
extern Variable Int16x2_operator_xor_Int16x2_arg0;
extern Function Int16x2_operator_xor_Int16x2;

/// operator<< with Int16x2
extern Variable Int16x2_operator_lsh_Int16x2_arg0;
extern Function Int16x2_operator_lsh_Int16x2;

/// operator>> with Int16x2
extern Variable Int16x2_operator_rsh_Int16x2_arg0;
extern Function Int16x2_operator_rsh_Int16x2;

/// operator|= with Int16x2
extern Variable Int16x2_operator_orasg_Int16x2_arg0;
extern Function Int16x2_operator_orasg_Int16x2;

/// operator&= with Int16x2
extern Variable Int16x2_operator_andasg_Int16x2_arg0;
extern Function Int16x2_operator_andasg_Int16x2;

/// operator^= with Int16x2
extern Variable Int16x2_operator_xorasg_Int16x2_arg0;
extern Function Int16x2_operator_xorasg_Int16x2;

/// operator<<= with Int16x2
extern Variable Int16x2_operator_lshasg_Int16x2_arg0;
extern Function Int16x2_operator_lshasg_Int16x2;

/// operator>>= with Int16x2
extern Variable Int16x2_operator_rhsasg_Int16x2_arg0;
extern Function Int16x2_operator_rhsasg_Int16x2;

struct Float32x3 : public Type
{
    Float32x3();
};
extern Float32x3 Float32x3Type;

/// f32x3 with Float32x3
extern Variable Float32x3_convert_Float32x3_arg0;
extern Function Float32x3_convert_Float32x3;

/// f32x3 with Float32
extern Variable Float32x3_splat_Float32_arg0;
extern Function Float32x3_splat_Float32;

/// f32x3 with UInt32x3
extern Variable Float32x3_convert_UInt32x3_arg0;
extern Function Float32x3_convert_UInt32x3;

/// f32x3 with UInt32
extern Variable Float32x3_splat_UInt32_arg0;
extern Function Float32x3_splat_UInt32;

/// f32x3 with Int32x3
extern Variable Float32x3_convert_Int32x3_arg0;
extern Function Float32x3_convert_Int32x3;

/// f32x3 with Int32
extern Variable Float32x3_splat_Int32_arg0;
extern Function Float32x3_splat_Int32;

/// f32x3 with Float16x3
extern Variable Float32x3_convert_Float16x3_arg0;
extern Function Float32x3_convert_Float16x3;

/// f32x3 with Float16
extern Variable Float32x3_splat_Float16_arg0;
extern Function Float32x3_splat_Float16;

/// f32x3 with UInt16x3
extern Variable Float32x3_convert_UInt16x3_arg0;
extern Function Float32x3_convert_UInt16x3;

/// f32x3 with UInt16
extern Variable Float32x3_splat_UInt16_arg0;
extern Function Float32x3_splat_UInt16;

/// f32x3 with Int16x3
extern Variable Float32x3_convert_Int16x3_arg0;
extern Function Float32x3_convert_Int16x3;

/// f32x3 with Int16
extern Variable Float32x3_splat_Int16_arg0;
extern Function Float32x3_splat_Int16;

/// f32x3 with Float32, Float32, Float32
extern Variable Float32x3_ctor0_arg0_Float32;
extern Variable Float32x3_ctor0_arg1_Float32;
extern Variable Float32x3_ctor0_arg2_Float32;
extern Function Float32x3_ctor0;

/// f32x3 with Float32x2, Float32
extern Variable Float32x3_ctor1_arg0_Float32x2;
extern Variable Float32x3_ctor1_arg1_Float32;
extern Function Float32x3_ctor1;

/// f32x3 with Float32, Float32x2
extern Variable Float32x3_ctor2_arg0_Float32;
extern Variable Float32x3_ctor2_arg1_Float32x2;
extern Function Float32x3_ctor2;

/// operator[] with Int32
extern Variable Float32x3_operator_index_Int32_arg0;
extern Function Float32x3_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float32x3_operator_index_UInt32_arg0;
extern Function Float32x3_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float32x3_operator_index_Int16_arg0;
extern Function Float32x3_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float32x3_operator_index_UInt16_arg0;
extern Function Float32x3_operator_index_UInt16;

/// operator+ with Float32x3
extern Variable Float32x3_operator_add_Float32x3_arg0;
extern Function Float32x3_operator_add_Float32x3;

/// operator- with Float32x3
extern Variable Float32x3_operator_sub_Float32x3_arg0;
extern Function Float32x3_operator_sub_Float32x3;

/// operator* with Float32x3
extern Variable Float32x3_operator_mul_Float32x3_arg0;
extern Function Float32x3_operator_mul_Float32x3;

/// operator/ with Float32x3
extern Variable Float32x3_operator_div_Float32x3_arg0;
extern Function Float32x3_operator_div_Float32x3;

/// operator% with Float32x3
extern Variable Float32x3_operator_mod_Float32x3_arg0;
extern Function Float32x3_operator_mod_Float32x3;

/// operator+= with Float32x3
extern Variable Float32x3_operator_addasg_Float32x3_arg0;
extern Function Float32x3_operator_addasg_Float32x3;

/// operator-= with Float32x3
extern Variable Float32x3_operator_subasg_Float32x3_arg0;
extern Function Float32x3_operator_subasg_Float32x3;

/// operator*= with Float32x3
extern Variable Float32x3_operator_mulasg_Float32x3_arg0;
extern Function Float32x3_operator_mulasg_Float32x3;

/// operator/= with Float32x3
extern Variable Float32x3_operator_divasg_Float32x3_arg0;
extern Function Float32x3_operator_divasg_Float32x3;

/// operator< with Float32x3
extern Variable Float32x3_operator_lt_Float32x3_arg0;
extern Function Float32x3_operator_lt_Float32x3;

/// operator<= with Float32x3
extern Variable Float32x3_operator_lte_Float32x3_arg0;
extern Function Float32x3_operator_lte_Float32x3;

/// operator> with Float32x3
extern Variable Float32x3_operator_gt_Float32x3_arg0;
extern Function Float32x3_operator_gt_Float32x3;

/// operator>= with Float32x3
extern Variable Float32x3_operator_gte_Float32x3_arg0;
extern Function Float32x3_operator_gte_Float32x3;

/// operator== with Float32x3
extern Variable Float32x3_operator_eq_Float32x3_arg0;
extern Function Float32x3_operator_eq_Float32x3;

/// operator!= with Float32x3
extern Variable Float32x3_operator_neq_Float32x3_arg0;
extern Function Float32x3_operator_neq_Float32x3;

/// operator* with Float32
extern Variable Float32x3_operator_scale_Float32_arg0;
extern Function Float32x3_operator_scale_Float32;

/// operator* with Float16
extern Variable Float32x3_operator_scale_Float16_arg0;
extern Function Float32x3_operator_scale_Float16;

/// operator* with UInt32
extern Variable Float32x3_operator_scale_UInt32_arg0;
extern Function Float32x3_operator_scale_UInt32;

/// operator* with UInt16
extern Variable Float32x3_operator_scale_UInt16_arg0;
extern Function Float32x3_operator_scale_UInt16;

/// operator* with Int32
extern Variable Float32x3_operator_scale_Int32_arg0;
extern Function Float32x3_operator_scale_Int32;

/// operator* with Int16
extern Variable Float32x3_operator_scale_Int16_arg0;
extern Function Float32x3_operator_scale_Int16;

/// operator* with Float32x3x2
extern Variable Float32x3_operator_mul_Float32x3x2_arg0;
extern Function Float32x3_operator_mul_Float32x3x2;

/// operator* with Float32x3x3
extern Variable Float32x3_operator_mul_Float32x3x3_arg0;
extern Function Float32x3_operator_mul_Float32x3x3;

/// operator* with Float32x3x4
extern Variable Float32x3_operator_mul_Float32x3x4_arg0;
extern Function Float32x3_operator_mul_Float32x3x4;

struct UInt32x3 : public Type
{
    UInt32x3();
};
extern UInt32x3 UInt32x3Type;

/// u32x3 with Float32x3
extern Variable UInt32x3_convert_Float32x3_arg0;
extern Function UInt32x3_convert_Float32x3;

/// u32x3 with Float32
extern Variable UInt32x3_splat_Float32_arg0;
extern Function UInt32x3_splat_Float32;

/// u32x3 with UInt32x3
extern Variable UInt32x3_convert_UInt32x3_arg0;
extern Function UInt32x3_convert_UInt32x3;

/// u32x3 with UInt32
extern Variable UInt32x3_splat_UInt32_arg0;
extern Function UInt32x3_splat_UInt32;

/// u32x3 with Int32x3
extern Variable UInt32x3_convert_Int32x3_arg0;
extern Function UInt32x3_convert_Int32x3;

/// u32x3 with Int32
extern Variable UInt32x3_splat_Int32_arg0;
extern Function UInt32x3_splat_Int32;

/// u32x3 with Float16x3
extern Variable UInt32x3_convert_Float16x3_arg0;
extern Function UInt32x3_convert_Float16x3;

/// u32x3 with Float16
extern Variable UInt32x3_splat_Float16_arg0;
extern Function UInt32x3_splat_Float16;

/// u32x3 with UInt16x3
extern Variable UInt32x3_convert_UInt16x3_arg0;
extern Function UInt32x3_convert_UInt16x3;

/// u32x3 with UInt16
extern Variable UInt32x3_splat_UInt16_arg0;
extern Function UInt32x3_splat_UInt16;

/// u32x3 with Int16x3
extern Variable UInt32x3_convert_Int16x3_arg0;
extern Function UInt32x3_convert_Int16x3;

/// u32x3 with Int16
extern Variable UInt32x3_splat_Int16_arg0;
extern Function UInt32x3_splat_Int16;

/// u32x3 with UInt32, UInt32, UInt32
extern Variable UInt32x3_ctor0_arg0_UInt32;
extern Variable UInt32x3_ctor0_arg1_UInt32;
extern Variable UInt32x3_ctor0_arg2_UInt32;
extern Function UInt32x3_ctor0;

/// u32x3 with UInt32x2, UInt32
extern Variable UInt32x3_ctor1_arg0_UInt32x2;
extern Variable UInt32x3_ctor1_arg1_UInt32;
extern Function UInt32x3_ctor1;

/// u32x3 with UInt32, UInt32x2
extern Variable UInt32x3_ctor2_arg0_UInt32;
extern Variable UInt32x3_ctor2_arg1_UInt32x2;
extern Function UInt32x3_ctor2;

/// operator[] with Int32
extern Variable UInt32x3_operator_index_Int32_arg0;
extern Function UInt32x3_operator_index_Int32;

/// operator[] with UInt32
extern Variable UInt32x3_operator_index_UInt32_arg0;
extern Function UInt32x3_operator_index_UInt32;

/// operator[] with Int16
extern Variable UInt32x3_operator_index_Int16_arg0;
extern Function UInt32x3_operator_index_Int16;

/// operator[] with UInt16
extern Variable UInt32x3_operator_index_UInt16_arg0;
extern Function UInt32x3_operator_index_UInt16;

/// operator+ with UInt32x3
extern Variable UInt32x3_operator_add_UInt32x3_arg0;
extern Function UInt32x3_operator_add_UInt32x3;

/// operator- with UInt32x3
extern Variable UInt32x3_operator_sub_UInt32x3_arg0;
extern Function UInt32x3_operator_sub_UInt32x3;

/// operator* with UInt32x3
extern Variable UInt32x3_operator_mul_UInt32x3_arg0;
extern Function UInt32x3_operator_mul_UInt32x3;

/// operator/ with UInt32x3
extern Variable UInt32x3_operator_div_UInt32x3_arg0;
extern Function UInt32x3_operator_div_UInt32x3;

/// operator% with UInt32x3
extern Variable UInt32x3_operator_mod_UInt32x3_arg0;
extern Function UInt32x3_operator_mod_UInt32x3;

/// operator+= with UInt32x3
extern Variable UInt32x3_operator_addasg_UInt32x3_arg0;
extern Function UInt32x3_operator_addasg_UInt32x3;

/// operator-= with UInt32x3
extern Variable UInt32x3_operator_subasg_UInt32x3_arg0;
extern Function UInt32x3_operator_subasg_UInt32x3;

/// operator*= with UInt32x3
extern Variable UInt32x3_operator_mulasg_UInt32x3_arg0;
extern Function UInt32x3_operator_mulasg_UInt32x3;

/// operator/= with UInt32x3
extern Variable UInt32x3_operator_divasg_UInt32x3_arg0;
extern Function UInt32x3_operator_divasg_UInt32x3;

/// operator< with UInt32x3
extern Variable UInt32x3_operator_lt_UInt32x3_arg0;
extern Function UInt32x3_operator_lt_UInt32x3;

/// operator<= with UInt32x3
extern Variable UInt32x3_operator_lte_UInt32x3_arg0;
extern Function UInt32x3_operator_lte_UInt32x3;

/// operator> with UInt32x3
extern Variable UInt32x3_operator_gt_UInt32x3_arg0;
extern Function UInt32x3_operator_gt_UInt32x3;

/// operator>= with UInt32x3
extern Variable UInt32x3_operator_gte_UInt32x3_arg0;
extern Function UInt32x3_operator_gte_UInt32x3;

/// operator== with UInt32x3
extern Variable UInt32x3_operator_eq_UInt32x3_arg0;
extern Function UInt32x3_operator_eq_UInt32x3;

/// operator!= with UInt32x3
extern Variable UInt32x3_operator_neq_UInt32x3_arg0;
extern Function UInt32x3_operator_neq_UInt32x3;

/// operator* with Float32
extern Variable UInt32x3_operator_scale_Float32_arg0;
extern Function UInt32x3_operator_scale_Float32;

/// operator* with Float16
extern Variable UInt32x3_operator_scale_Float16_arg0;
extern Function UInt32x3_operator_scale_Float16;

/// operator* with UInt32
extern Variable UInt32x3_operator_scale_UInt32_arg0;
extern Function UInt32x3_operator_scale_UInt32;

/// operator* with UInt16
extern Variable UInt32x3_operator_scale_UInt16_arg0;
extern Function UInt32x3_operator_scale_UInt16;

/// operator* with Int32
extern Variable UInt32x3_operator_scale_Int32_arg0;
extern Function UInt32x3_operator_scale_Int32;

/// operator* with Int16
extern Variable UInt32x3_operator_scale_Int16_arg0;
extern Function UInt32x3_operator_scale_Int16;

/// operator| with UInt32x3
extern Variable UInt32x3_operator_or_UInt32x3_arg0;
extern Function UInt32x3_operator_or_UInt32x3;

/// operator& with UInt32x3
extern Variable UInt32x3_operator_and_UInt32x3_arg0;
extern Function UInt32x3_operator_and_UInt32x3;

/// operator^ with UInt32x3
extern Variable UInt32x3_operator_xor_UInt32x3_arg0;
extern Function UInt32x3_operator_xor_UInt32x3;

/// operator<< with UInt32x3
extern Variable UInt32x3_operator_lsh_UInt32x3_arg0;
extern Function UInt32x3_operator_lsh_UInt32x3;

/// operator>> with UInt32x3
extern Variable UInt32x3_operator_rsh_UInt32x3_arg0;
extern Function UInt32x3_operator_rsh_UInt32x3;

/// operator|= with UInt32x3
extern Variable UInt32x3_operator_orasg_UInt32x3_arg0;
extern Function UInt32x3_operator_orasg_UInt32x3;

/// operator&= with UInt32x3
extern Variable UInt32x3_operator_andasg_UInt32x3_arg0;
extern Function UInt32x3_operator_andasg_UInt32x3;

/// operator^= with UInt32x3
extern Variable UInt32x3_operator_xorasg_UInt32x3_arg0;
extern Function UInt32x3_operator_xorasg_UInt32x3;

/// operator<<= with UInt32x3
extern Variable UInt32x3_operator_lshasg_UInt32x3_arg0;
extern Function UInt32x3_operator_lshasg_UInt32x3;

/// operator>>= with UInt32x3
extern Variable UInt32x3_operator_rhsasg_UInt32x3_arg0;
extern Function UInt32x3_operator_rhsasg_UInt32x3;

struct Int32x3 : public Type
{
    Int32x3();
};
extern Int32x3 Int32x3Type;

/// i32x3 with Float32x3
extern Variable Int32x3_convert_Float32x3_arg0;
extern Function Int32x3_convert_Float32x3;

/// i32x3 with Float32
extern Variable Int32x3_splat_Float32_arg0;
extern Function Int32x3_splat_Float32;

/// i32x3 with UInt32x3
extern Variable Int32x3_convert_UInt32x3_arg0;
extern Function Int32x3_convert_UInt32x3;

/// i32x3 with UInt32
extern Variable Int32x3_splat_UInt32_arg0;
extern Function Int32x3_splat_UInt32;

/// i32x3 with Int32x3
extern Variable Int32x3_convert_Int32x3_arg0;
extern Function Int32x3_convert_Int32x3;

/// i32x3 with Int32
extern Variable Int32x3_splat_Int32_arg0;
extern Function Int32x3_splat_Int32;

/// i32x3 with Float16x3
extern Variable Int32x3_convert_Float16x3_arg0;
extern Function Int32x3_convert_Float16x3;

/// i32x3 with Float16
extern Variable Int32x3_splat_Float16_arg0;
extern Function Int32x3_splat_Float16;

/// i32x3 with UInt16x3
extern Variable Int32x3_convert_UInt16x3_arg0;
extern Function Int32x3_convert_UInt16x3;

/// i32x3 with UInt16
extern Variable Int32x3_splat_UInt16_arg0;
extern Function Int32x3_splat_UInt16;

/// i32x3 with Int16x3
extern Variable Int32x3_convert_Int16x3_arg0;
extern Function Int32x3_convert_Int16x3;

/// i32x3 with Int16
extern Variable Int32x3_splat_Int16_arg0;
extern Function Int32x3_splat_Int16;

/// i32x3 with Int32, Int32, Int32
extern Variable Int32x3_ctor0_arg0_Int32;
extern Variable Int32x3_ctor0_arg1_Int32;
extern Variable Int32x3_ctor0_arg2_Int32;
extern Function Int32x3_ctor0;

/// i32x3 with Int32x2, Int32
extern Variable Int32x3_ctor1_arg0_Int32x2;
extern Variable Int32x3_ctor1_arg1_Int32;
extern Function Int32x3_ctor1;

/// i32x3 with Int32, Int32x2
extern Variable Int32x3_ctor2_arg0_Int32;
extern Variable Int32x3_ctor2_arg1_Int32x2;
extern Function Int32x3_ctor2;

/// operator[] with Int32
extern Variable Int32x3_operator_index_Int32_arg0;
extern Function Int32x3_operator_index_Int32;

/// operator[] with UInt32
extern Variable Int32x3_operator_index_UInt32_arg0;
extern Function Int32x3_operator_index_UInt32;

/// operator[] with Int16
extern Variable Int32x3_operator_index_Int16_arg0;
extern Function Int32x3_operator_index_Int16;

/// operator[] with UInt16
extern Variable Int32x3_operator_index_UInt16_arg0;
extern Function Int32x3_operator_index_UInt16;

/// operator+ with Int32x3
extern Variable Int32x3_operator_add_Int32x3_arg0;
extern Function Int32x3_operator_add_Int32x3;

/// operator- with Int32x3
extern Variable Int32x3_operator_sub_Int32x3_arg0;
extern Function Int32x3_operator_sub_Int32x3;

/// operator* with Int32x3
extern Variable Int32x3_operator_mul_Int32x3_arg0;
extern Function Int32x3_operator_mul_Int32x3;

/// operator/ with Int32x3
extern Variable Int32x3_operator_div_Int32x3_arg0;
extern Function Int32x3_operator_div_Int32x3;

/// operator% with Int32x3
extern Variable Int32x3_operator_mod_Int32x3_arg0;
extern Function Int32x3_operator_mod_Int32x3;

/// operator+= with Int32x3
extern Variable Int32x3_operator_addasg_Int32x3_arg0;
extern Function Int32x3_operator_addasg_Int32x3;

/// operator-= with Int32x3
extern Variable Int32x3_operator_subasg_Int32x3_arg0;
extern Function Int32x3_operator_subasg_Int32x3;

/// operator*= with Int32x3
extern Variable Int32x3_operator_mulasg_Int32x3_arg0;
extern Function Int32x3_operator_mulasg_Int32x3;

/// operator/= with Int32x3
extern Variable Int32x3_operator_divasg_Int32x3_arg0;
extern Function Int32x3_operator_divasg_Int32x3;

/// operator< with Int32x3
extern Variable Int32x3_operator_lt_Int32x3_arg0;
extern Function Int32x3_operator_lt_Int32x3;

/// operator<= with Int32x3
extern Variable Int32x3_operator_lte_Int32x3_arg0;
extern Function Int32x3_operator_lte_Int32x3;

/// operator> with Int32x3
extern Variable Int32x3_operator_gt_Int32x3_arg0;
extern Function Int32x3_operator_gt_Int32x3;

/// operator>= with Int32x3
extern Variable Int32x3_operator_gte_Int32x3_arg0;
extern Function Int32x3_operator_gte_Int32x3;

/// operator== with Int32x3
extern Variable Int32x3_operator_eq_Int32x3_arg0;
extern Function Int32x3_operator_eq_Int32x3;

/// operator!= with Int32x3
extern Variable Int32x3_operator_neq_Int32x3_arg0;
extern Function Int32x3_operator_neq_Int32x3;

/// operator* with Float32
extern Variable Int32x3_operator_scale_Float32_arg0;
extern Function Int32x3_operator_scale_Float32;

/// operator* with Float16
extern Variable Int32x3_operator_scale_Float16_arg0;
extern Function Int32x3_operator_scale_Float16;

/// operator* with UInt32
extern Variable Int32x3_operator_scale_UInt32_arg0;
extern Function Int32x3_operator_scale_UInt32;

/// operator* with UInt16
extern Variable Int32x3_operator_scale_UInt16_arg0;
extern Function Int32x3_operator_scale_UInt16;

/// operator* with Int32
extern Variable Int32x3_operator_scale_Int32_arg0;
extern Function Int32x3_operator_scale_Int32;

/// operator* with Int16
extern Variable Int32x3_operator_scale_Int16_arg0;
extern Function Int32x3_operator_scale_Int16;

/// operator| with Int32x3
extern Variable Int32x3_operator_or_Int32x3_arg0;
extern Function Int32x3_operator_or_Int32x3;

/// operator& with Int32x3
extern Variable Int32x3_operator_and_Int32x3_arg0;
extern Function Int32x3_operator_and_Int32x3;

/// operator^ with Int32x3
extern Variable Int32x3_operator_xor_Int32x3_arg0;
extern Function Int32x3_operator_xor_Int32x3;

/// operator<< with Int32x3
extern Variable Int32x3_operator_lsh_Int32x3_arg0;
extern Function Int32x3_operator_lsh_Int32x3;

/// operator>> with Int32x3
extern Variable Int32x3_operator_rsh_Int32x3_arg0;
extern Function Int32x3_operator_rsh_Int32x3;

/// operator|= with Int32x3
extern Variable Int32x3_operator_orasg_Int32x3_arg0;
extern Function Int32x3_operator_orasg_Int32x3;

/// operator&= with Int32x3
extern Variable Int32x3_operator_andasg_Int32x3_arg0;
extern Function Int32x3_operator_andasg_Int32x3;

/// operator^= with Int32x3
extern Variable Int32x3_operator_xorasg_Int32x3_arg0;
extern Function Int32x3_operator_xorasg_Int32x3;

/// operator<<= with Int32x3
extern Variable Int32x3_operator_lshasg_Int32x3_arg0;
extern Function Int32x3_operator_lshasg_Int32x3;

/// operator>>= with Int32x3
extern Variable Int32x3_operator_rhsasg_Int32x3_arg0;
extern Function Int32x3_operator_rhsasg_Int32x3;

struct Bool8x3 : public Type
{
    Bool8x3();
};
extern Bool8x3 Bool8x3Type;

/// b8x3 with UInt32x3
extern Variable Bool8x3_convert_UInt32x3_arg0;
extern Function Bool8x3_convert_UInt32x3;

/// b8x3 with UInt32
extern Variable Bool8x3_splat_UInt32_arg0;
extern Function Bool8x3_splat_UInt32;

/// b8x3 with Int32x3
extern Variable Bool8x3_convert_Int32x3_arg0;
extern Function Bool8x3_convert_Int32x3;

/// b8x3 with Int32
extern Variable Bool8x3_splat_Int32_arg0;
extern Function Bool8x3_splat_Int32;

/// b8x3 with UInt16x3
extern Variable Bool8x3_convert_UInt16x3_arg0;
extern Function Bool8x3_convert_UInt16x3;

/// b8x3 with UInt16
extern Variable Bool8x3_splat_UInt16_arg0;
extern Function Bool8x3_splat_UInt16;

/// b8x3 with Int16x3
extern Variable Bool8x3_convert_Int16x3_arg0;
extern Function Bool8x3_convert_Int16x3;

/// b8x3 with Int16
extern Variable Bool8x3_splat_Int16_arg0;
extern Function Bool8x3_splat_Int16;

/// b8x3 with Bool8, Bool8, Bool8
extern Variable Bool8x3_ctor0_arg0_Bool8;
extern Variable Bool8x3_ctor0_arg1_Bool8;
extern Variable Bool8x3_ctor0_arg2_Bool8;
extern Function Bool8x3_ctor0;

/// b8x3 with Bool8x2, Bool8
extern Variable Bool8x3_ctor1_arg0_Bool8x2;
extern Variable Bool8x3_ctor1_arg1_Bool8;
extern Function Bool8x3_ctor1;

/// b8x3 with Bool8, Bool8x2
extern Variable Bool8x3_ctor2_arg0_Bool8;
extern Variable Bool8x3_ctor2_arg1_Bool8x2;
extern Function Bool8x3_ctor2;

/// operator[] with Int32
extern Variable Bool8x3_operator_index_Int32_arg0;
extern Function Bool8x3_operator_index_Int32;

/// operator[] with UInt32
extern Variable Bool8x3_operator_index_UInt32_arg0;
extern Function Bool8x3_operator_index_UInt32;

/// operator[] with Int16
extern Variable Bool8x3_operator_index_Int16_arg0;
extern Function Bool8x3_operator_index_Int16;

/// operator[] with UInt16
extern Variable Bool8x3_operator_index_UInt16_arg0;
extern Function Bool8x3_operator_index_UInt16;

/// operator|| with Bool8x3
extern Variable Bool8x3_operator_oror_Bool8x3_arg0;
extern Function Bool8x3_operator_oror_Bool8x3;

/// operator&& with Bool8x3
extern Variable Bool8x3_operator_andand_Bool8x3_arg0;
extern Function Bool8x3_operator_andand_Bool8x3;

/// operator== with Bool8x3
extern Variable Bool8x3_operator_eq_Bool8x3_arg0;
extern Function Bool8x3_operator_eq_Bool8x3;

/// operator!= with Bool8x3
extern Variable Bool8x3_operator_neq_Bool8x3_arg0;
extern Function Bool8x3_operator_neq_Bool8x3;

struct Float16x3 : public Type
{
    Float16x3();
};
extern Float16x3 Float16x3Type;

/// f16x3 with Float32x3
extern Variable Float16x3_convert_Float32x3_arg0;
extern Function Float16x3_convert_Float32x3;

/// f16x3 with Float32
extern Variable Float16x3_splat_Float32_arg0;
extern Function Float16x3_splat_Float32;

/// f16x3 with UInt32x3
extern Variable Float16x3_convert_UInt32x3_arg0;
extern Function Float16x3_convert_UInt32x3;

/// f16x3 with UInt32
extern Variable Float16x3_splat_UInt32_arg0;
extern Function Float16x3_splat_UInt32;

/// f16x3 with Int32x3
extern Variable Float16x3_convert_Int32x3_arg0;
extern Function Float16x3_convert_Int32x3;

/// f16x3 with Int32
extern Variable Float16x3_splat_Int32_arg0;
extern Function Float16x3_splat_Int32;

/// f16x3 with Float16x3
extern Variable Float16x3_convert_Float16x3_arg0;
extern Function Float16x3_convert_Float16x3;

/// f16x3 with Float16
extern Variable Float16x3_splat_Float16_arg0;
extern Function Float16x3_splat_Float16;

/// f16x3 with UInt16x3
extern Variable Float16x3_convert_UInt16x3_arg0;
extern Function Float16x3_convert_UInt16x3;

/// f16x3 with UInt16
extern Variable Float16x3_splat_UInt16_arg0;
extern Function Float16x3_splat_UInt16;

/// f16x3 with Int16x3
extern Variable Float16x3_convert_Int16x3_arg0;
extern Function Float16x3_convert_Int16x3;

/// f16x3 with Int16
extern Variable Float16x3_splat_Int16_arg0;
extern Function Float16x3_splat_Int16;

/// f16x3 with Float16, Float16, Float16
extern Variable Float16x3_ctor0_arg0_Float16;
extern Variable Float16x3_ctor0_arg1_Float16;
extern Variable Float16x3_ctor0_arg2_Float16;
extern Function Float16x3_ctor0;

/// f16x3 with Float16x2, Float16
extern Variable Float16x3_ctor1_arg0_Float16x2;
extern Variable Float16x3_ctor1_arg1_Float16;
extern Function Float16x3_ctor1;

/// f16x3 with Float16, Float16x2
extern Variable Float16x3_ctor2_arg0_Float16;
extern Variable Float16x3_ctor2_arg1_Float16x2;
extern Function Float16x3_ctor2;

/// operator[] with Int32
extern Variable Float16x3_operator_index_Int32_arg0;
extern Function Float16x3_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float16x3_operator_index_UInt32_arg0;
extern Function Float16x3_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float16x3_operator_index_Int16_arg0;
extern Function Float16x3_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float16x3_operator_index_UInt16_arg0;
extern Function Float16x3_operator_index_UInt16;

/// operator+ with Float16x3
extern Variable Float16x3_operator_add_Float16x3_arg0;
extern Function Float16x3_operator_add_Float16x3;

/// operator- with Float16x3
extern Variable Float16x3_operator_sub_Float16x3_arg0;
extern Function Float16x3_operator_sub_Float16x3;

/// operator* with Float16x3
extern Variable Float16x3_operator_mul_Float16x3_arg0;
extern Function Float16x3_operator_mul_Float16x3;

/// operator/ with Float16x3
extern Variable Float16x3_operator_div_Float16x3_arg0;
extern Function Float16x3_operator_div_Float16x3;

/// operator% with Float16x3
extern Variable Float16x3_operator_mod_Float16x3_arg0;
extern Function Float16x3_operator_mod_Float16x3;

/// operator+= with Float16x3
extern Variable Float16x3_operator_addasg_Float16x3_arg0;
extern Function Float16x3_operator_addasg_Float16x3;

/// operator-= with Float16x3
extern Variable Float16x3_operator_subasg_Float16x3_arg0;
extern Function Float16x3_operator_subasg_Float16x3;

/// operator*= with Float16x3
extern Variable Float16x3_operator_mulasg_Float16x3_arg0;
extern Function Float16x3_operator_mulasg_Float16x3;

/// operator/= with Float16x3
extern Variable Float16x3_operator_divasg_Float16x3_arg0;
extern Function Float16x3_operator_divasg_Float16x3;

/// operator< with Float16x3
extern Variable Float16x3_operator_lt_Float16x3_arg0;
extern Function Float16x3_operator_lt_Float16x3;

/// operator<= with Float16x3
extern Variable Float16x3_operator_lte_Float16x3_arg0;
extern Function Float16x3_operator_lte_Float16x3;

/// operator> with Float16x3
extern Variable Float16x3_operator_gt_Float16x3_arg0;
extern Function Float16x3_operator_gt_Float16x3;

/// operator>= with Float16x3
extern Variable Float16x3_operator_gte_Float16x3_arg0;
extern Function Float16x3_operator_gte_Float16x3;

/// operator== with Float16x3
extern Variable Float16x3_operator_eq_Float16x3_arg0;
extern Function Float16x3_operator_eq_Float16x3;

/// operator!= with Float16x3
extern Variable Float16x3_operator_neq_Float16x3_arg0;
extern Function Float16x3_operator_neq_Float16x3;

/// operator* with Float32
extern Variable Float16x3_operator_scale_Float32_arg0;
extern Function Float16x3_operator_scale_Float32;

/// operator* with Float16
extern Variable Float16x3_operator_scale_Float16_arg0;
extern Function Float16x3_operator_scale_Float16;

/// operator* with UInt32
extern Variable Float16x3_operator_scale_UInt32_arg0;
extern Function Float16x3_operator_scale_UInt32;

/// operator* with UInt16
extern Variable Float16x3_operator_scale_UInt16_arg0;
extern Function Float16x3_operator_scale_UInt16;

/// operator* with Int32
extern Variable Float16x3_operator_scale_Int32_arg0;
extern Function Float16x3_operator_scale_Int32;

/// operator* with Int16
extern Variable Float16x3_operator_scale_Int16_arg0;
extern Function Float16x3_operator_scale_Int16;

/// operator* with Float32x3x2
extern Variable Float16x3_operator_mul_Float32x3x2_arg0;
extern Function Float16x3_operator_mul_Float32x3x2;

/// operator* with Float32x3x3
extern Variable Float16x3_operator_mul_Float32x3x3_arg0;
extern Function Float16x3_operator_mul_Float32x3x3;

/// operator* with Float32x3x4
extern Variable Float16x3_operator_mul_Float32x3x4_arg0;
extern Function Float16x3_operator_mul_Float32x3x4;

struct UInt16x3 : public Type
{
    UInt16x3();
};
extern UInt16x3 UInt16x3Type;

/// u16x3 with Float32x3
extern Variable UInt16x3_convert_Float32x3_arg0;
extern Function UInt16x3_convert_Float32x3;

/// u16x3 with Float32
extern Variable UInt16x3_splat_Float32_arg0;
extern Function UInt16x3_splat_Float32;

/// u16x3 with UInt32x3
extern Variable UInt16x3_convert_UInt32x3_arg0;
extern Function UInt16x3_convert_UInt32x3;

/// u16x3 with UInt32
extern Variable UInt16x3_splat_UInt32_arg0;
extern Function UInt16x3_splat_UInt32;

/// u16x3 with Int32x3
extern Variable UInt16x3_convert_Int32x3_arg0;
extern Function UInt16x3_convert_Int32x3;

/// u16x3 with Int32
extern Variable UInt16x3_splat_Int32_arg0;
extern Function UInt16x3_splat_Int32;

/// u16x3 with Float16x3
extern Variable UInt16x3_convert_Float16x3_arg0;
extern Function UInt16x3_convert_Float16x3;

/// u16x3 with Float16
extern Variable UInt16x3_splat_Float16_arg0;
extern Function UInt16x3_splat_Float16;

/// u16x3 with UInt16x3
extern Variable UInt16x3_convert_UInt16x3_arg0;
extern Function UInt16x3_convert_UInt16x3;

/// u16x3 with UInt16
extern Variable UInt16x3_splat_UInt16_arg0;
extern Function UInt16x3_splat_UInt16;

/// u16x3 with Int16x3
extern Variable UInt16x3_convert_Int16x3_arg0;
extern Function UInt16x3_convert_Int16x3;

/// u16x3 with Int16
extern Variable UInt16x3_splat_Int16_arg0;
extern Function UInt16x3_splat_Int16;

/// u16x3 with UInt16, UInt16, UInt16
extern Variable UInt16x3_ctor0_arg0_UInt16;
extern Variable UInt16x3_ctor0_arg1_UInt16;
extern Variable UInt16x3_ctor0_arg2_UInt16;
extern Function UInt16x3_ctor0;

/// u16x3 with UInt16x2, UInt16
extern Variable UInt16x3_ctor1_arg0_UInt16x2;
extern Variable UInt16x3_ctor1_arg1_UInt16;
extern Function UInt16x3_ctor1;

/// u16x3 with UInt16, UInt16x2
extern Variable UInt16x3_ctor2_arg0_UInt16;
extern Variable UInt16x3_ctor2_arg1_UInt16x2;
extern Function UInt16x3_ctor2;

/// operator[] with Int32
extern Variable UInt16x3_operator_index_Int32_arg0;
extern Function UInt16x3_operator_index_Int32;

/// operator[] with UInt32
extern Variable UInt16x3_operator_index_UInt32_arg0;
extern Function UInt16x3_operator_index_UInt32;

/// operator[] with Int16
extern Variable UInt16x3_operator_index_Int16_arg0;
extern Function UInt16x3_operator_index_Int16;

/// operator[] with UInt16
extern Variable UInt16x3_operator_index_UInt16_arg0;
extern Function UInt16x3_operator_index_UInt16;

/// operator+ with UInt16x3
extern Variable UInt16x3_operator_add_UInt16x3_arg0;
extern Function UInt16x3_operator_add_UInt16x3;

/// operator- with UInt16x3
extern Variable UInt16x3_operator_sub_UInt16x3_arg0;
extern Function UInt16x3_operator_sub_UInt16x3;

/// operator* with UInt16x3
extern Variable UInt16x3_operator_mul_UInt16x3_arg0;
extern Function UInt16x3_operator_mul_UInt16x3;

/// operator/ with UInt16x3
extern Variable UInt16x3_operator_div_UInt16x3_arg0;
extern Function UInt16x3_operator_div_UInt16x3;

/// operator% with UInt16x3
extern Variable UInt16x3_operator_mod_UInt16x3_arg0;
extern Function UInt16x3_operator_mod_UInt16x3;

/// operator+= with UInt16x3
extern Variable UInt16x3_operator_addasg_UInt16x3_arg0;
extern Function UInt16x3_operator_addasg_UInt16x3;

/// operator-= with UInt16x3
extern Variable UInt16x3_operator_subasg_UInt16x3_arg0;
extern Function UInt16x3_operator_subasg_UInt16x3;

/// operator*= with UInt16x3
extern Variable UInt16x3_operator_mulasg_UInt16x3_arg0;
extern Function UInt16x3_operator_mulasg_UInt16x3;

/// operator/= with UInt16x3
extern Variable UInt16x3_operator_divasg_UInt16x3_arg0;
extern Function UInt16x3_operator_divasg_UInt16x3;

/// operator< with UInt16x3
extern Variable UInt16x3_operator_lt_UInt16x3_arg0;
extern Function UInt16x3_operator_lt_UInt16x3;

/// operator<= with UInt16x3
extern Variable UInt16x3_operator_lte_UInt16x3_arg0;
extern Function UInt16x3_operator_lte_UInt16x3;

/// operator> with UInt16x3
extern Variable UInt16x3_operator_gt_UInt16x3_arg0;
extern Function UInt16x3_operator_gt_UInt16x3;

/// operator>= with UInt16x3
extern Variable UInt16x3_operator_gte_UInt16x3_arg0;
extern Function UInt16x3_operator_gte_UInt16x3;

/// operator== with UInt16x3
extern Variable UInt16x3_operator_eq_UInt16x3_arg0;
extern Function UInt16x3_operator_eq_UInt16x3;

/// operator!= with UInt16x3
extern Variable UInt16x3_operator_neq_UInt16x3_arg0;
extern Function UInt16x3_operator_neq_UInt16x3;

/// operator* with Float32
extern Variable UInt16x3_operator_scale_Float32_arg0;
extern Function UInt16x3_operator_scale_Float32;

/// operator* with Float16
extern Variable UInt16x3_operator_scale_Float16_arg0;
extern Function UInt16x3_operator_scale_Float16;

/// operator* with UInt32
extern Variable UInt16x3_operator_scale_UInt32_arg0;
extern Function UInt16x3_operator_scale_UInt32;

/// operator* with UInt16
extern Variable UInt16x3_operator_scale_UInt16_arg0;
extern Function UInt16x3_operator_scale_UInt16;

/// operator* with Int32
extern Variable UInt16x3_operator_scale_Int32_arg0;
extern Function UInt16x3_operator_scale_Int32;

/// operator* with Int16
extern Variable UInt16x3_operator_scale_Int16_arg0;
extern Function UInt16x3_operator_scale_Int16;

/// operator| with UInt16x3
extern Variable UInt16x3_operator_or_UInt16x3_arg0;
extern Function UInt16x3_operator_or_UInt16x3;

/// operator& with UInt16x3
extern Variable UInt16x3_operator_and_UInt16x3_arg0;
extern Function UInt16x3_operator_and_UInt16x3;

/// operator^ with UInt16x3
extern Variable UInt16x3_operator_xor_UInt16x3_arg0;
extern Function UInt16x3_operator_xor_UInt16x3;

/// operator<< with UInt16x3
extern Variable UInt16x3_operator_lsh_UInt16x3_arg0;
extern Function UInt16x3_operator_lsh_UInt16x3;

/// operator>> with UInt16x3
extern Variable UInt16x3_operator_rsh_UInt16x3_arg0;
extern Function UInt16x3_operator_rsh_UInt16x3;

/// operator|= with UInt16x3
extern Variable UInt16x3_operator_orasg_UInt16x3_arg0;
extern Function UInt16x3_operator_orasg_UInt16x3;

/// operator&= with UInt16x3
extern Variable UInt16x3_operator_andasg_UInt16x3_arg0;
extern Function UInt16x3_operator_andasg_UInt16x3;

/// operator^= with UInt16x3
extern Variable UInt16x3_operator_xorasg_UInt16x3_arg0;
extern Function UInt16x3_operator_xorasg_UInt16x3;

/// operator<<= with UInt16x3
extern Variable UInt16x3_operator_lshasg_UInt16x3_arg0;
extern Function UInt16x3_operator_lshasg_UInt16x3;

/// operator>>= with UInt16x3
extern Variable UInt16x3_operator_rhsasg_UInt16x3_arg0;
extern Function UInt16x3_operator_rhsasg_UInt16x3;

struct Int16x3 : public Type
{
    Int16x3();
};
extern Int16x3 Int16x3Type;

/// i16x3 with Float32x3
extern Variable Int16x3_convert_Float32x3_arg0;
extern Function Int16x3_convert_Float32x3;

/// i16x3 with Float32
extern Variable Int16x3_splat_Float32_arg0;
extern Function Int16x3_splat_Float32;

/// i16x3 with UInt32x3
extern Variable Int16x3_convert_UInt32x3_arg0;
extern Function Int16x3_convert_UInt32x3;

/// i16x3 with UInt32
extern Variable Int16x3_splat_UInt32_arg0;
extern Function Int16x3_splat_UInt32;

/// i16x3 with Int32x3
extern Variable Int16x3_convert_Int32x3_arg0;
extern Function Int16x3_convert_Int32x3;

/// i16x3 with Int32
extern Variable Int16x3_splat_Int32_arg0;
extern Function Int16x3_splat_Int32;

/// i16x3 with Float16x3
extern Variable Int16x3_convert_Float16x3_arg0;
extern Function Int16x3_convert_Float16x3;

/// i16x3 with Float16
extern Variable Int16x3_splat_Float16_arg0;
extern Function Int16x3_splat_Float16;

/// i16x3 with UInt16x3
extern Variable Int16x3_convert_UInt16x3_arg0;
extern Function Int16x3_convert_UInt16x3;

/// i16x3 with UInt16
extern Variable Int16x3_splat_UInt16_arg0;
extern Function Int16x3_splat_UInt16;

/// i16x3 with Int16x3
extern Variable Int16x3_convert_Int16x3_arg0;
extern Function Int16x3_convert_Int16x3;

/// i16x3 with Int16
extern Variable Int16x3_splat_Int16_arg0;
extern Function Int16x3_splat_Int16;

/// i16x3 with Int16, Int16, Int16
extern Variable Int16x3_ctor0_arg0_Int16;
extern Variable Int16x3_ctor0_arg1_Int16;
extern Variable Int16x3_ctor0_arg2_Int16;
extern Function Int16x3_ctor0;

/// i16x3 with Int16x2, Int16
extern Variable Int16x3_ctor1_arg0_Int16x2;
extern Variable Int16x3_ctor1_arg1_Int16;
extern Function Int16x3_ctor1;

/// i16x3 with Int16, Int16x2
extern Variable Int16x3_ctor2_arg0_Int16;
extern Variable Int16x3_ctor2_arg1_Int16x2;
extern Function Int16x3_ctor2;

/// operator[] with Int32
extern Variable Int16x3_operator_index_Int32_arg0;
extern Function Int16x3_operator_index_Int32;

/// operator[] with UInt32
extern Variable Int16x3_operator_index_UInt32_arg0;
extern Function Int16x3_operator_index_UInt32;

/// operator[] with Int16
extern Variable Int16x3_operator_index_Int16_arg0;
extern Function Int16x3_operator_index_Int16;

/// operator[] with UInt16
extern Variable Int16x3_operator_index_UInt16_arg0;
extern Function Int16x3_operator_index_UInt16;

/// operator+ with Int16x3
extern Variable Int16x3_operator_add_Int16x3_arg0;
extern Function Int16x3_operator_add_Int16x3;

/// operator- with Int16x3
extern Variable Int16x3_operator_sub_Int16x3_arg0;
extern Function Int16x3_operator_sub_Int16x3;

/// operator* with Int16x3
extern Variable Int16x3_operator_mul_Int16x3_arg0;
extern Function Int16x3_operator_mul_Int16x3;

/// operator/ with Int16x3
extern Variable Int16x3_operator_div_Int16x3_arg0;
extern Function Int16x3_operator_div_Int16x3;

/// operator% with Int16x3
extern Variable Int16x3_operator_mod_Int16x3_arg0;
extern Function Int16x3_operator_mod_Int16x3;

/// operator+= with Int16x3
extern Variable Int16x3_operator_addasg_Int16x3_arg0;
extern Function Int16x3_operator_addasg_Int16x3;

/// operator-= with Int16x3
extern Variable Int16x3_operator_subasg_Int16x3_arg0;
extern Function Int16x3_operator_subasg_Int16x3;

/// operator*= with Int16x3
extern Variable Int16x3_operator_mulasg_Int16x3_arg0;
extern Function Int16x3_operator_mulasg_Int16x3;

/// operator/= with Int16x3
extern Variable Int16x3_operator_divasg_Int16x3_arg0;
extern Function Int16x3_operator_divasg_Int16x3;

/// operator< with Int16x3
extern Variable Int16x3_operator_lt_Int16x3_arg0;
extern Function Int16x3_operator_lt_Int16x3;

/// operator<= with Int16x3
extern Variable Int16x3_operator_lte_Int16x3_arg0;
extern Function Int16x3_operator_lte_Int16x3;

/// operator> with Int16x3
extern Variable Int16x3_operator_gt_Int16x3_arg0;
extern Function Int16x3_operator_gt_Int16x3;

/// operator>= with Int16x3
extern Variable Int16x3_operator_gte_Int16x3_arg0;
extern Function Int16x3_operator_gte_Int16x3;

/// operator== with Int16x3
extern Variable Int16x3_operator_eq_Int16x3_arg0;
extern Function Int16x3_operator_eq_Int16x3;

/// operator!= with Int16x3
extern Variable Int16x3_operator_neq_Int16x3_arg0;
extern Function Int16x3_operator_neq_Int16x3;

/// operator* with Float32
extern Variable Int16x3_operator_scale_Float32_arg0;
extern Function Int16x3_operator_scale_Float32;

/// operator* with Float16
extern Variable Int16x3_operator_scale_Float16_arg0;
extern Function Int16x3_operator_scale_Float16;

/// operator* with UInt32
extern Variable Int16x3_operator_scale_UInt32_arg0;
extern Function Int16x3_operator_scale_UInt32;

/// operator* with UInt16
extern Variable Int16x3_operator_scale_UInt16_arg0;
extern Function Int16x3_operator_scale_UInt16;

/// operator* with Int32
extern Variable Int16x3_operator_scale_Int32_arg0;
extern Function Int16x3_operator_scale_Int32;

/// operator* with Int16
extern Variable Int16x3_operator_scale_Int16_arg0;
extern Function Int16x3_operator_scale_Int16;

/// operator| with Int16x3
extern Variable Int16x3_operator_or_Int16x3_arg0;
extern Function Int16x3_operator_or_Int16x3;

/// operator& with Int16x3
extern Variable Int16x3_operator_and_Int16x3_arg0;
extern Function Int16x3_operator_and_Int16x3;

/// operator^ with Int16x3
extern Variable Int16x3_operator_xor_Int16x3_arg0;
extern Function Int16x3_operator_xor_Int16x3;

/// operator<< with Int16x3
extern Variable Int16x3_operator_lsh_Int16x3_arg0;
extern Function Int16x3_operator_lsh_Int16x3;

/// operator>> with Int16x3
extern Variable Int16x3_operator_rsh_Int16x3_arg0;
extern Function Int16x3_operator_rsh_Int16x3;

/// operator|= with Int16x3
extern Variable Int16x3_operator_orasg_Int16x3_arg0;
extern Function Int16x3_operator_orasg_Int16x3;

/// operator&= with Int16x3
extern Variable Int16x3_operator_andasg_Int16x3_arg0;
extern Function Int16x3_operator_andasg_Int16x3;

/// operator^= with Int16x3
extern Variable Int16x3_operator_xorasg_Int16x3_arg0;
extern Function Int16x3_operator_xorasg_Int16x3;

/// operator<<= with Int16x3
extern Variable Int16x3_operator_lshasg_Int16x3_arg0;
extern Function Int16x3_operator_lshasg_Int16x3;

/// operator>>= with Int16x3
extern Variable Int16x3_operator_rhsasg_Int16x3_arg0;
extern Function Int16x3_operator_rhsasg_Int16x3;

struct Float32x4 : public Type
{
    Float32x4();
};
extern Float32x4 Float32x4Type;

/// f32x4 with Float32x4
extern Variable Float32x4_convert_Float32x4_arg0;
extern Function Float32x4_convert_Float32x4;

/// f32x4 with Float32
extern Variable Float32x4_splat_Float32_arg0;
extern Function Float32x4_splat_Float32;

/// f32x4 with UInt32x4
extern Variable Float32x4_convert_UInt32x4_arg0;
extern Function Float32x4_convert_UInt32x4;

/// f32x4 with UInt32
extern Variable Float32x4_splat_UInt32_arg0;
extern Function Float32x4_splat_UInt32;

/// f32x4 with Int32x4
extern Variable Float32x4_convert_Int32x4_arg0;
extern Function Float32x4_convert_Int32x4;

/// f32x4 with Int32
extern Variable Float32x4_splat_Int32_arg0;
extern Function Float32x4_splat_Int32;

/// f32x4 with Float16x4
extern Variable Float32x4_convert_Float16x4_arg0;
extern Function Float32x4_convert_Float16x4;

/// f32x4 with Float16
extern Variable Float32x4_splat_Float16_arg0;
extern Function Float32x4_splat_Float16;

/// f32x4 with UInt16x4
extern Variable Float32x4_convert_UInt16x4_arg0;
extern Function Float32x4_convert_UInt16x4;

/// f32x4 with UInt16
extern Variable Float32x4_splat_UInt16_arg0;
extern Function Float32x4_splat_UInt16;

/// f32x4 with Int16x4
extern Variable Float32x4_convert_Int16x4_arg0;
extern Function Float32x4_convert_Int16x4;

/// f32x4 with Int16
extern Variable Float32x4_splat_Int16_arg0;
extern Function Float32x4_splat_Int16;

/// f32x4 with Float32, Float32, Float32, Float32
extern Variable Float32x4_ctor0_arg0_Float32;
extern Variable Float32x4_ctor0_arg1_Float32;
extern Variable Float32x4_ctor0_arg2_Float32;
extern Variable Float32x4_ctor0_arg3_Float32;
extern Function Float32x4_ctor0;

/// f32x4 with Float32x2, Float32, Float32
extern Variable Float32x4_ctor1_arg0_Float32x2;
extern Variable Float32x4_ctor1_arg1_Float32;
extern Variable Float32x4_ctor1_arg2_Float32;
extern Function Float32x4_ctor1;

/// f32x4 with Float32, Float32x2, Float32
extern Variable Float32x4_ctor2_arg0_Float32;
extern Variable Float32x4_ctor2_arg1_Float32x2;
extern Variable Float32x4_ctor2_arg2_Float32;
extern Function Float32x4_ctor2;

/// f32x4 with Float32, Float32, Float32x2
extern Variable Float32x4_ctor3_arg0_Float32;
extern Variable Float32x4_ctor3_arg1_Float32;
extern Variable Float32x4_ctor3_arg2_Float32x2;
extern Function Float32x4_ctor3;

/// f32x4 with Float32x3, Float32
extern Variable Float32x4_ctor4_arg0_Float32x3;
extern Variable Float32x4_ctor4_arg1_Float32;
extern Function Float32x4_ctor4;

/// f32x4 with Float32, Float32x3
extern Variable Float32x4_ctor5_arg0_Float32;
extern Variable Float32x4_ctor5_arg1_Float32x3;
extern Function Float32x4_ctor5;

/// operator[] with Int32
extern Variable Float32x4_operator_index_Int32_arg0;
extern Function Float32x4_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float32x4_operator_index_UInt32_arg0;
extern Function Float32x4_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float32x4_operator_index_Int16_arg0;
extern Function Float32x4_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float32x4_operator_index_UInt16_arg0;
extern Function Float32x4_operator_index_UInt16;

/// operator+ with Float32x4
extern Variable Float32x4_operator_add_Float32x4_arg0;
extern Function Float32x4_operator_add_Float32x4;

/// operator- with Float32x4
extern Variable Float32x4_operator_sub_Float32x4_arg0;
extern Function Float32x4_operator_sub_Float32x4;

/// operator* with Float32x4
extern Variable Float32x4_operator_mul_Float32x4_arg0;
extern Function Float32x4_operator_mul_Float32x4;

/// operator/ with Float32x4
extern Variable Float32x4_operator_div_Float32x4_arg0;
extern Function Float32x4_operator_div_Float32x4;

/// operator% with Float32x4
extern Variable Float32x4_operator_mod_Float32x4_arg0;
extern Function Float32x4_operator_mod_Float32x4;

/// operator+= with Float32x4
extern Variable Float32x4_operator_addasg_Float32x4_arg0;
extern Function Float32x4_operator_addasg_Float32x4;

/// operator-= with Float32x4
extern Variable Float32x4_operator_subasg_Float32x4_arg0;
extern Function Float32x4_operator_subasg_Float32x4;

/// operator*= with Float32x4
extern Variable Float32x4_operator_mulasg_Float32x4_arg0;
extern Function Float32x4_operator_mulasg_Float32x4;

/// operator/= with Float32x4
extern Variable Float32x4_operator_divasg_Float32x4_arg0;
extern Function Float32x4_operator_divasg_Float32x4;

/// operator< with Float32x4
extern Variable Float32x4_operator_lt_Float32x4_arg0;
extern Function Float32x4_operator_lt_Float32x4;

/// operator<= with Float32x4
extern Variable Float32x4_operator_lte_Float32x4_arg0;
extern Function Float32x4_operator_lte_Float32x4;

/// operator> with Float32x4
extern Variable Float32x4_operator_gt_Float32x4_arg0;
extern Function Float32x4_operator_gt_Float32x4;

/// operator>= with Float32x4
extern Variable Float32x4_operator_gte_Float32x4_arg0;
extern Function Float32x4_operator_gte_Float32x4;

/// operator== with Float32x4
extern Variable Float32x4_operator_eq_Float32x4_arg0;
extern Function Float32x4_operator_eq_Float32x4;

/// operator!= with Float32x4
extern Variable Float32x4_operator_neq_Float32x4_arg0;
extern Function Float32x4_operator_neq_Float32x4;

/// operator* with Float32
extern Variable Float32x4_operator_scale_Float32_arg0;
extern Function Float32x4_operator_scale_Float32;

/// operator* with Float16
extern Variable Float32x4_operator_scale_Float16_arg0;
extern Function Float32x4_operator_scale_Float16;

/// operator* with UInt32
extern Variable Float32x4_operator_scale_UInt32_arg0;
extern Function Float32x4_operator_scale_UInt32;

/// operator* with UInt16
extern Variable Float32x4_operator_scale_UInt16_arg0;
extern Function Float32x4_operator_scale_UInt16;

/// operator* with Int32
extern Variable Float32x4_operator_scale_Int32_arg0;
extern Function Float32x4_operator_scale_Int32;

/// operator* with Int16
extern Variable Float32x4_operator_scale_Int16_arg0;
extern Function Float32x4_operator_scale_Int16;

/// operator* with Float32x4x2
extern Variable Float32x4_operator_mul_Float32x4x2_arg0;
extern Function Float32x4_operator_mul_Float32x4x2;

/// operator* with Float32x4x3
extern Variable Float32x4_operator_mul_Float32x4x3_arg0;
extern Function Float32x4_operator_mul_Float32x4x3;

/// operator* with Float32x4x4
extern Variable Float32x4_operator_mul_Float32x4x4_arg0;
extern Function Float32x4_operator_mul_Float32x4x4;

struct UInt32x4 : public Type
{
    UInt32x4();
};
extern UInt32x4 UInt32x4Type;

/// u32x4 with Float32x4
extern Variable UInt32x4_convert_Float32x4_arg0;
extern Function UInt32x4_convert_Float32x4;

/// u32x4 with Float32
extern Variable UInt32x4_splat_Float32_arg0;
extern Function UInt32x4_splat_Float32;

/// u32x4 with UInt32x4
extern Variable UInt32x4_convert_UInt32x4_arg0;
extern Function UInt32x4_convert_UInt32x4;

/// u32x4 with UInt32
extern Variable UInt32x4_splat_UInt32_arg0;
extern Function UInt32x4_splat_UInt32;

/// u32x4 with Int32x4
extern Variable UInt32x4_convert_Int32x4_arg0;
extern Function UInt32x4_convert_Int32x4;

/// u32x4 with Int32
extern Variable UInt32x4_splat_Int32_arg0;
extern Function UInt32x4_splat_Int32;

/// u32x4 with Float16x4
extern Variable UInt32x4_convert_Float16x4_arg0;
extern Function UInt32x4_convert_Float16x4;

/// u32x4 with Float16
extern Variable UInt32x4_splat_Float16_arg0;
extern Function UInt32x4_splat_Float16;

/// u32x4 with UInt16x4
extern Variable UInt32x4_convert_UInt16x4_arg0;
extern Function UInt32x4_convert_UInt16x4;

/// u32x4 with UInt16
extern Variable UInt32x4_splat_UInt16_arg0;
extern Function UInt32x4_splat_UInt16;

/// u32x4 with Int16x4
extern Variable UInt32x4_convert_Int16x4_arg0;
extern Function UInt32x4_convert_Int16x4;

/// u32x4 with Int16
extern Variable UInt32x4_splat_Int16_arg0;
extern Function UInt32x4_splat_Int16;

/// u32x4 with UInt32, UInt32, UInt32, UInt32
extern Variable UInt32x4_ctor0_arg0_UInt32;
extern Variable UInt32x4_ctor0_arg1_UInt32;
extern Variable UInt32x4_ctor0_arg2_UInt32;
extern Variable UInt32x4_ctor0_arg3_UInt32;
extern Function UInt32x4_ctor0;

/// u32x4 with UInt32x2, UInt32, UInt32
extern Variable UInt32x4_ctor1_arg0_UInt32x2;
extern Variable UInt32x4_ctor1_arg1_UInt32;
extern Variable UInt32x4_ctor1_arg2_UInt32;
extern Function UInt32x4_ctor1;

/// u32x4 with UInt32, UInt32x2, UInt32
extern Variable UInt32x4_ctor2_arg0_UInt32;
extern Variable UInt32x4_ctor2_arg1_UInt32x2;
extern Variable UInt32x4_ctor2_arg2_UInt32;
extern Function UInt32x4_ctor2;

/// u32x4 with UInt32, UInt32, UInt32x2
extern Variable UInt32x4_ctor3_arg0_UInt32;
extern Variable UInt32x4_ctor3_arg1_UInt32;
extern Variable UInt32x4_ctor3_arg2_UInt32x2;
extern Function UInt32x4_ctor3;

/// u32x4 with UInt32x3, UInt32
extern Variable UInt32x4_ctor4_arg0_UInt32x3;
extern Variable UInt32x4_ctor4_arg1_UInt32;
extern Function UInt32x4_ctor4;

/// u32x4 with UInt32, UInt32x3
extern Variable UInt32x4_ctor5_arg0_UInt32;
extern Variable UInt32x4_ctor5_arg1_UInt32x3;
extern Function UInt32x4_ctor5;

/// operator[] with Int32
extern Variable UInt32x4_operator_index_Int32_arg0;
extern Function UInt32x4_operator_index_Int32;

/// operator[] with UInt32
extern Variable UInt32x4_operator_index_UInt32_arg0;
extern Function UInt32x4_operator_index_UInt32;

/// operator[] with Int16
extern Variable UInt32x4_operator_index_Int16_arg0;
extern Function UInt32x4_operator_index_Int16;

/// operator[] with UInt16
extern Variable UInt32x4_operator_index_UInt16_arg0;
extern Function UInt32x4_operator_index_UInt16;

/// operator+ with UInt32x4
extern Variable UInt32x4_operator_add_UInt32x4_arg0;
extern Function UInt32x4_operator_add_UInt32x4;

/// operator- with UInt32x4
extern Variable UInt32x4_operator_sub_UInt32x4_arg0;
extern Function UInt32x4_operator_sub_UInt32x4;

/// operator* with UInt32x4
extern Variable UInt32x4_operator_mul_UInt32x4_arg0;
extern Function UInt32x4_operator_mul_UInt32x4;

/// operator/ with UInt32x4
extern Variable UInt32x4_operator_div_UInt32x4_arg0;
extern Function UInt32x4_operator_div_UInt32x4;

/// operator% with UInt32x4
extern Variable UInt32x4_operator_mod_UInt32x4_arg0;
extern Function UInt32x4_operator_mod_UInt32x4;

/// operator+= with UInt32x4
extern Variable UInt32x4_operator_addasg_UInt32x4_arg0;
extern Function UInt32x4_operator_addasg_UInt32x4;

/// operator-= with UInt32x4
extern Variable UInt32x4_operator_subasg_UInt32x4_arg0;
extern Function UInt32x4_operator_subasg_UInt32x4;

/// operator*= with UInt32x4
extern Variable UInt32x4_operator_mulasg_UInt32x4_arg0;
extern Function UInt32x4_operator_mulasg_UInt32x4;

/// operator/= with UInt32x4
extern Variable UInt32x4_operator_divasg_UInt32x4_arg0;
extern Function UInt32x4_operator_divasg_UInt32x4;

/// operator< with UInt32x4
extern Variable UInt32x4_operator_lt_UInt32x4_arg0;
extern Function UInt32x4_operator_lt_UInt32x4;

/// operator<= with UInt32x4
extern Variable UInt32x4_operator_lte_UInt32x4_arg0;
extern Function UInt32x4_operator_lte_UInt32x4;

/// operator> with UInt32x4
extern Variable UInt32x4_operator_gt_UInt32x4_arg0;
extern Function UInt32x4_operator_gt_UInt32x4;

/// operator>= with UInt32x4
extern Variable UInt32x4_operator_gte_UInt32x4_arg0;
extern Function UInt32x4_operator_gte_UInt32x4;

/// operator== with UInt32x4
extern Variable UInt32x4_operator_eq_UInt32x4_arg0;
extern Function UInt32x4_operator_eq_UInt32x4;

/// operator!= with UInt32x4
extern Variable UInt32x4_operator_neq_UInt32x4_arg0;
extern Function UInt32x4_operator_neq_UInt32x4;

/// operator* with Float32
extern Variable UInt32x4_operator_scale_Float32_arg0;
extern Function UInt32x4_operator_scale_Float32;

/// operator* with Float16
extern Variable UInt32x4_operator_scale_Float16_arg0;
extern Function UInt32x4_operator_scale_Float16;

/// operator* with UInt32
extern Variable UInt32x4_operator_scale_UInt32_arg0;
extern Function UInt32x4_operator_scale_UInt32;

/// operator* with UInt16
extern Variable UInt32x4_operator_scale_UInt16_arg0;
extern Function UInt32x4_operator_scale_UInt16;

/// operator* with Int32
extern Variable UInt32x4_operator_scale_Int32_arg0;
extern Function UInt32x4_operator_scale_Int32;

/// operator* with Int16
extern Variable UInt32x4_operator_scale_Int16_arg0;
extern Function UInt32x4_operator_scale_Int16;

/// operator| with UInt32x4
extern Variable UInt32x4_operator_or_UInt32x4_arg0;
extern Function UInt32x4_operator_or_UInt32x4;

/// operator& with UInt32x4
extern Variable UInt32x4_operator_and_UInt32x4_arg0;
extern Function UInt32x4_operator_and_UInt32x4;

/// operator^ with UInt32x4
extern Variable UInt32x4_operator_xor_UInt32x4_arg0;
extern Function UInt32x4_operator_xor_UInt32x4;

/// operator<< with UInt32x4
extern Variable UInt32x4_operator_lsh_UInt32x4_arg0;
extern Function UInt32x4_operator_lsh_UInt32x4;

/// operator>> with UInt32x4
extern Variable UInt32x4_operator_rsh_UInt32x4_arg0;
extern Function UInt32x4_operator_rsh_UInt32x4;

/// operator|= with UInt32x4
extern Variable UInt32x4_operator_orasg_UInt32x4_arg0;
extern Function UInt32x4_operator_orasg_UInt32x4;

/// operator&= with UInt32x4
extern Variable UInt32x4_operator_andasg_UInt32x4_arg0;
extern Function UInt32x4_operator_andasg_UInt32x4;

/// operator^= with UInt32x4
extern Variable UInt32x4_operator_xorasg_UInt32x4_arg0;
extern Function UInt32x4_operator_xorasg_UInt32x4;

/// operator<<= with UInt32x4
extern Variable UInt32x4_operator_lshasg_UInt32x4_arg0;
extern Function UInt32x4_operator_lshasg_UInt32x4;

/// operator>>= with UInt32x4
extern Variable UInt32x4_operator_rhsasg_UInt32x4_arg0;
extern Function UInt32x4_operator_rhsasg_UInt32x4;

struct Int32x4 : public Type
{
    Int32x4();
};
extern Int32x4 Int32x4Type;

/// i32x4 with Float32x4
extern Variable Int32x4_convert_Float32x4_arg0;
extern Function Int32x4_convert_Float32x4;

/// i32x4 with Float32
extern Variable Int32x4_splat_Float32_arg0;
extern Function Int32x4_splat_Float32;

/// i32x4 with UInt32x4
extern Variable Int32x4_convert_UInt32x4_arg0;
extern Function Int32x4_convert_UInt32x4;

/// i32x4 with UInt32
extern Variable Int32x4_splat_UInt32_arg0;
extern Function Int32x4_splat_UInt32;

/// i32x4 with Int32x4
extern Variable Int32x4_convert_Int32x4_arg0;
extern Function Int32x4_convert_Int32x4;

/// i32x4 with Int32
extern Variable Int32x4_splat_Int32_arg0;
extern Function Int32x4_splat_Int32;

/// i32x4 with Float16x4
extern Variable Int32x4_convert_Float16x4_arg0;
extern Function Int32x4_convert_Float16x4;

/// i32x4 with Float16
extern Variable Int32x4_splat_Float16_arg0;
extern Function Int32x4_splat_Float16;

/// i32x4 with UInt16x4
extern Variable Int32x4_convert_UInt16x4_arg0;
extern Function Int32x4_convert_UInt16x4;

/// i32x4 with UInt16
extern Variable Int32x4_splat_UInt16_arg0;
extern Function Int32x4_splat_UInt16;

/// i32x4 with Int16x4
extern Variable Int32x4_convert_Int16x4_arg0;
extern Function Int32x4_convert_Int16x4;

/// i32x4 with Int16
extern Variable Int32x4_splat_Int16_arg0;
extern Function Int32x4_splat_Int16;

/// i32x4 with Int32, Int32, Int32, Int32
extern Variable Int32x4_ctor0_arg0_Int32;
extern Variable Int32x4_ctor0_arg1_Int32;
extern Variable Int32x4_ctor0_arg2_Int32;
extern Variable Int32x4_ctor0_arg3_Int32;
extern Function Int32x4_ctor0;

/// i32x4 with Int32x2, Int32, Int32
extern Variable Int32x4_ctor1_arg0_Int32x2;
extern Variable Int32x4_ctor1_arg1_Int32;
extern Variable Int32x4_ctor1_arg2_Int32;
extern Function Int32x4_ctor1;

/// i32x4 with Int32, Int32x2, Int32
extern Variable Int32x4_ctor2_arg0_Int32;
extern Variable Int32x4_ctor2_arg1_Int32x2;
extern Variable Int32x4_ctor2_arg2_Int32;
extern Function Int32x4_ctor2;

/// i32x4 with Int32, Int32, Int32x2
extern Variable Int32x4_ctor3_arg0_Int32;
extern Variable Int32x4_ctor3_arg1_Int32;
extern Variable Int32x4_ctor3_arg2_Int32x2;
extern Function Int32x4_ctor3;

/// i32x4 with Int32x3, Int32
extern Variable Int32x4_ctor4_arg0_Int32x3;
extern Variable Int32x4_ctor4_arg1_Int32;
extern Function Int32x4_ctor4;

/// i32x4 with Int32, Int32x3
extern Variable Int32x4_ctor5_arg0_Int32;
extern Variable Int32x4_ctor5_arg1_Int32x3;
extern Function Int32x4_ctor5;

/// operator[] with Int32
extern Variable Int32x4_operator_index_Int32_arg0;
extern Function Int32x4_operator_index_Int32;

/// operator[] with UInt32
extern Variable Int32x4_operator_index_UInt32_arg0;
extern Function Int32x4_operator_index_UInt32;

/// operator[] with Int16
extern Variable Int32x4_operator_index_Int16_arg0;
extern Function Int32x4_operator_index_Int16;

/// operator[] with UInt16
extern Variable Int32x4_operator_index_UInt16_arg0;
extern Function Int32x4_operator_index_UInt16;

/// operator+ with Int32x4
extern Variable Int32x4_operator_add_Int32x4_arg0;
extern Function Int32x4_operator_add_Int32x4;

/// operator- with Int32x4
extern Variable Int32x4_operator_sub_Int32x4_arg0;
extern Function Int32x4_operator_sub_Int32x4;

/// operator* with Int32x4
extern Variable Int32x4_operator_mul_Int32x4_arg0;
extern Function Int32x4_operator_mul_Int32x4;

/// operator/ with Int32x4
extern Variable Int32x4_operator_div_Int32x4_arg0;
extern Function Int32x4_operator_div_Int32x4;

/// operator% with Int32x4
extern Variable Int32x4_operator_mod_Int32x4_arg0;
extern Function Int32x4_operator_mod_Int32x4;

/// operator+= with Int32x4
extern Variable Int32x4_operator_addasg_Int32x4_arg0;
extern Function Int32x4_operator_addasg_Int32x4;

/// operator-= with Int32x4
extern Variable Int32x4_operator_subasg_Int32x4_arg0;
extern Function Int32x4_operator_subasg_Int32x4;

/// operator*= with Int32x4
extern Variable Int32x4_operator_mulasg_Int32x4_arg0;
extern Function Int32x4_operator_mulasg_Int32x4;

/// operator/= with Int32x4
extern Variable Int32x4_operator_divasg_Int32x4_arg0;
extern Function Int32x4_operator_divasg_Int32x4;

/// operator< with Int32x4
extern Variable Int32x4_operator_lt_Int32x4_arg0;
extern Function Int32x4_operator_lt_Int32x4;

/// operator<= with Int32x4
extern Variable Int32x4_operator_lte_Int32x4_arg0;
extern Function Int32x4_operator_lte_Int32x4;

/// operator> with Int32x4
extern Variable Int32x4_operator_gt_Int32x4_arg0;
extern Function Int32x4_operator_gt_Int32x4;

/// operator>= with Int32x4
extern Variable Int32x4_operator_gte_Int32x4_arg0;
extern Function Int32x4_operator_gte_Int32x4;

/// operator== with Int32x4
extern Variable Int32x4_operator_eq_Int32x4_arg0;
extern Function Int32x4_operator_eq_Int32x4;

/// operator!= with Int32x4
extern Variable Int32x4_operator_neq_Int32x4_arg0;
extern Function Int32x4_operator_neq_Int32x4;

/// operator* with Float32
extern Variable Int32x4_operator_scale_Float32_arg0;
extern Function Int32x4_operator_scale_Float32;

/// operator* with Float16
extern Variable Int32x4_operator_scale_Float16_arg0;
extern Function Int32x4_operator_scale_Float16;

/// operator* with UInt32
extern Variable Int32x4_operator_scale_UInt32_arg0;
extern Function Int32x4_operator_scale_UInt32;

/// operator* with UInt16
extern Variable Int32x4_operator_scale_UInt16_arg0;
extern Function Int32x4_operator_scale_UInt16;

/// operator* with Int32
extern Variable Int32x4_operator_scale_Int32_arg0;
extern Function Int32x4_operator_scale_Int32;

/// operator* with Int16
extern Variable Int32x4_operator_scale_Int16_arg0;
extern Function Int32x4_operator_scale_Int16;

/// operator| with Int32x4
extern Variable Int32x4_operator_or_Int32x4_arg0;
extern Function Int32x4_operator_or_Int32x4;

/// operator& with Int32x4
extern Variable Int32x4_operator_and_Int32x4_arg0;
extern Function Int32x4_operator_and_Int32x4;

/// operator^ with Int32x4
extern Variable Int32x4_operator_xor_Int32x4_arg0;
extern Function Int32x4_operator_xor_Int32x4;

/// operator<< with Int32x4
extern Variable Int32x4_operator_lsh_Int32x4_arg0;
extern Function Int32x4_operator_lsh_Int32x4;

/// operator>> with Int32x4
extern Variable Int32x4_operator_rsh_Int32x4_arg0;
extern Function Int32x4_operator_rsh_Int32x4;

/// operator|= with Int32x4
extern Variable Int32x4_operator_orasg_Int32x4_arg0;
extern Function Int32x4_operator_orasg_Int32x4;

/// operator&= with Int32x4
extern Variable Int32x4_operator_andasg_Int32x4_arg0;
extern Function Int32x4_operator_andasg_Int32x4;

/// operator^= with Int32x4
extern Variable Int32x4_operator_xorasg_Int32x4_arg0;
extern Function Int32x4_operator_xorasg_Int32x4;

/// operator<<= with Int32x4
extern Variable Int32x4_operator_lshasg_Int32x4_arg0;
extern Function Int32x4_operator_lshasg_Int32x4;

/// operator>>= with Int32x4
extern Variable Int32x4_operator_rhsasg_Int32x4_arg0;
extern Function Int32x4_operator_rhsasg_Int32x4;

struct Bool8x4 : public Type
{
    Bool8x4();
};
extern Bool8x4 Bool8x4Type;

/// b8x4 with UInt32x4
extern Variable Bool8x4_convert_UInt32x4_arg0;
extern Function Bool8x4_convert_UInt32x4;

/// b8x4 with UInt32
extern Variable Bool8x4_splat_UInt32_arg0;
extern Function Bool8x4_splat_UInt32;

/// b8x4 with Int32x4
extern Variable Bool8x4_convert_Int32x4_arg0;
extern Function Bool8x4_convert_Int32x4;

/// b8x4 with Int32
extern Variable Bool8x4_splat_Int32_arg0;
extern Function Bool8x4_splat_Int32;

/// b8x4 with UInt16x4
extern Variable Bool8x4_convert_UInt16x4_arg0;
extern Function Bool8x4_convert_UInt16x4;

/// b8x4 with UInt16
extern Variable Bool8x4_splat_UInt16_arg0;
extern Function Bool8x4_splat_UInt16;

/// b8x4 with Int16x4
extern Variable Bool8x4_convert_Int16x4_arg0;
extern Function Bool8x4_convert_Int16x4;

/// b8x4 with Int16
extern Variable Bool8x4_splat_Int16_arg0;
extern Function Bool8x4_splat_Int16;

/// b8x4 with Bool8, Bool8, Bool8, Bool8
extern Variable Bool8x4_ctor0_arg0_Bool8;
extern Variable Bool8x4_ctor0_arg1_Bool8;
extern Variable Bool8x4_ctor0_arg2_Bool8;
extern Variable Bool8x4_ctor0_arg3_Bool8;
extern Function Bool8x4_ctor0;

/// b8x4 with Bool8x2, Bool8, Bool8
extern Variable Bool8x4_ctor1_arg0_Bool8x2;
extern Variable Bool8x4_ctor1_arg1_Bool8;
extern Variable Bool8x4_ctor1_arg2_Bool8;
extern Function Bool8x4_ctor1;

/// b8x4 with Bool8, Bool8x2, Bool8
extern Variable Bool8x4_ctor2_arg0_Bool8;
extern Variable Bool8x4_ctor2_arg1_Bool8x2;
extern Variable Bool8x4_ctor2_arg2_Bool8;
extern Function Bool8x4_ctor2;

/// b8x4 with Bool8, Bool8, Bool8x2
extern Variable Bool8x4_ctor3_arg0_Bool8;
extern Variable Bool8x4_ctor3_arg1_Bool8;
extern Variable Bool8x4_ctor3_arg2_Bool8x2;
extern Function Bool8x4_ctor3;

/// b8x4 with Bool8x3, Bool8
extern Variable Bool8x4_ctor4_arg0_Bool8x3;
extern Variable Bool8x4_ctor4_arg1_Bool8;
extern Function Bool8x4_ctor4;

/// b8x4 with Bool8, Bool8x3
extern Variable Bool8x4_ctor5_arg0_Bool8;
extern Variable Bool8x4_ctor5_arg1_Bool8x3;
extern Function Bool8x4_ctor5;

/// operator[] with Int32
extern Variable Bool8x4_operator_index_Int32_arg0;
extern Function Bool8x4_operator_index_Int32;

/// operator[] with UInt32
extern Variable Bool8x4_operator_index_UInt32_arg0;
extern Function Bool8x4_operator_index_UInt32;

/// operator[] with Int16
extern Variable Bool8x4_operator_index_Int16_arg0;
extern Function Bool8x4_operator_index_Int16;

/// operator[] with UInt16
extern Variable Bool8x4_operator_index_UInt16_arg0;
extern Function Bool8x4_operator_index_UInt16;

/// operator|| with Bool8x4
extern Variable Bool8x4_operator_oror_Bool8x4_arg0;
extern Function Bool8x4_operator_oror_Bool8x4;

/// operator&& with Bool8x4
extern Variable Bool8x4_operator_andand_Bool8x4_arg0;
extern Function Bool8x4_operator_andand_Bool8x4;

/// operator== with Bool8x4
extern Variable Bool8x4_operator_eq_Bool8x4_arg0;
extern Function Bool8x4_operator_eq_Bool8x4;

/// operator!= with Bool8x4
extern Variable Bool8x4_operator_neq_Bool8x4_arg0;
extern Function Bool8x4_operator_neq_Bool8x4;

struct Float16x4 : public Type
{
    Float16x4();
};
extern Float16x4 Float16x4Type;

/// f16x4 with Float32x4
extern Variable Float16x4_convert_Float32x4_arg0;
extern Function Float16x4_convert_Float32x4;

/// f16x4 with Float32
extern Variable Float16x4_splat_Float32_arg0;
extern Function Float16x4_splat_Float32;

/// f16x4 with UInt32x4
extern Variable Float16x4_convert_UInt32x4_arg0;
extern Function Float16x4_convert_UInt32x4;

/// f16x4 with UInt32
extern Variable Float16x4_splat_UInt32_arg0;
extern Function Float16x4_splat_UInt32;

/// f16x4 with Int32x4
extern Variable Float16x4_convert_Int32x4_arg0;
extern Function Float16x4_convert_Int32x4;

/// f16x4 with Int32
extern Variable Float16x4_splat_Int32_arg0;
extern Function Float16x4_splat_Int32;

/// f16x4 with Float16x4
extern Variable Float16x4_convert_Float16x4_arg0;
extern Function Float16x4_convert_Float16x4;

/// f16x4 with Float16
extern Variable Float16x4_splat_Float16_arg0;
extern Function Float16x4_splat_Float16;

/// f16x4 with UInt16x4
extern Variable Float16x4_convert_UInt16x4_arg0;
extern Function Float16x4_convert_UInt16x4;

/// f16x4 with UInt16
extern Variable Float16x4_splat_UInt16_arg0;
extern Function Float16x4_splat_UInt16;

/// f16x4 with Int16x4
extern Variable Float16x4_convert_Int16x4_arg0;
extern Function Float16x4_convert_Int16x4;

/// f16x4 with Int16
extern Variable Float16x4_splat_Int16_arg0;
extern Function Float16x4_splat_Int16;

/// f16x4 with Float16, Float16, Float16, Float16
extern Variable Float16x4_ctor0_arg0_Float16;
extern Variable Float16x4_ctor0_arg1_Float16;
extern Variable Float16x4_ctor0_arg2_Float16;
extern Variable Float16x4_ctor0_arg3_Float16;
extern Function Float16x4_ctor0;

/// f16x4 with Float16x2, Float16, Float16
extern Variable Float16x4_ctor1_arg0_Float16x2;
extern Variable Float16x4_ctor1_arg1_Float16;
extern Variable Float16x4_ctor1_arg2_Float16;
extern Function Float16x4_ctor1;

/// f16x4 with Float16, Float16x2, Float16
extern Variable Float16x4_ctor2_arg0_Float16;
extern Variable Float16x4_ctor2_arg1_Float16x2;
extern Variable Float16x4_ctor2_arg2_Float16;
extern Function Float16x4_ctor2;

/// f16x4 with Float16, Float16, Float16x2
extern Variable Float16x4_ctor3_arg0_Float16;
extern Variable Float16x4_ctor3_arg1_Float16;
extern Variable Float16x4_ctor3_arg2_Float16x2;
extern Function Float16x4_ctor3;

/// f16x4 with Float16x3, Float16
extern Variable Float16x4_ctor4_arg0_Float16x3;
extern Variable Float16x4_ctor4_arg1_Float16;
extern Function Float16x4_ctor4;

/// f16x4 with Float16, Float16x3
extern Variable Float16x4_ctor5_arg0_Float16;
extern Variable Float16x4_ctor5_arg1_Float16x3;
extern Function Float16x4_ctor5;

/// operator[] with Int32
extern Variable Float16x4_operator_index_Int32_arg0;
extern Function Float16x4_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float16x4_operator_index_UInt32_arg0;
extern Function Float16x4_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float16x4_operator_index_Int16_arg0;
extern Function Float16x4_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float16x4_operator_index_UInt16_arg0;
extern Function Float16x4_operator_index_UInt16;

/// operator+ with Float16x4
extern Variable Float16x4_operator_add_Float16x4_arg0;
extern Function Float16x4_operator_add_Float16x4;

/// operator- with Float16x4
extern Variable Float16x4_operator_sub_Float16x4_arg0;
extern Function Float16x4_operator_sub_Float16x4;

/// operator* with Float16x4
extern Variable Float16x4_operator_mul_Float16x4_arg0;
extern Function Float16x4_operator_mul_Float16x4;

/// operator/ with Float16x4
extern Variable Float16x4_operator_div_Float16x4_arg0;
extern Function Float16x4_operator_div_Float16x4;

/// operator% with Float16x4
extern Variable Float16x4_operator_mod_Float16x4_arg0;
extern Function Float16x4_operator_mod_Float16x4;

/// operator+= with Float16x4
extern Variable Float16x4_operator_addasg_Float16x4_arg0;
extern Function Float16x4_operator_addasg_Float16x4;

/// operator-= with Float16x4
extern Variable Float16x4_operator_subasg_Float16x4_arg0;
extern Function Float16x4_operator_subasg_Float16x4;

/// operator*= with Float16x4
extern Variable Float16x4_operator_mulasg_Float16x4_arg0;
extern Function Float16x4_operator_mulasg_Float16x4;

/// operator/= with Float16x4
extern Variable Float16x4_operator_divasg_Float16x4_arg0;
extern Function Float16x4_operator_divasg_Float16x4;

/// operator< with Float16x4
extern Variable Float16x4_operator_lt_Float16x4_arg0;
extern Function Float16x4_operator_lt_Float16x4;

/// operator<= with Float16x4
extern Variable Float16x4_operator_lte_Float16x4_arg0;
extern Function Float16x4_operator_lte_Float16x4;

/// operator> with Float16x4
extern Variable Float16x4_operator_gt_Float16x4_arg0;
extern Function Float16x4_operator_gt_Float16x4;

/// operator>= with Float16x4
extern Variable Float16x4_operator_gte_Float16x4_arg0;
extern Function Float16x4_operator_gte_Float16x4;

/// operator== with Float16x4
extern Variable Float16x4_operator_eq_Float16x4_arg0;
extern Function Float16x4_operator_eq_Float16x4;

/// operator!= with Float16x4
extern Variable Float16x4_operator_neq_Float16x4_arg0;
extern Function Float16x4_operator_neq_Float16x4;

/// operator* with Float32
extern Variable Float16x4_operator_scale_Float32_arg0;
extern Function Float16x4_operator_scale_Float32;

/// operator* with Float16
extern Variable Float16x4_operator_scale_Float16_arg0;
extern Function Float16x4_operator_scale_Float16;

/// operator* with UInt32
extern Variable Float16x4_operator_scale_UInt32_arg0;
extern Function Float16x4_operator_scale_UInt32;

/// operator* with UInt16
extern Variable Float16x4_operator_scale_UInt16_arg0;
extern Function Float16x4_operator_scale_UInt16;

/// operator* with Int32
extern Variable Float16x4_operator_scale_Int32_arg0;
extern Function Float16x4_operator_scale_Int32;

/// operator* with Int16
extern Variable Float16x4_operator_scale_Int16_arg0;
extern Function Float16x4_operator_scale_Int16;

/// operator* with Float32x4x2
extern Variable Float16x4_operator_mul_Float32x4x2_arg0;
extern Function Float16x4_operator_mul_Float32x4x2;

/// operator* with Float32x4x3
extern Variable Float16x4_operator_mul_Float32x4x3_arg0;
extern Function Float16x4_operator_mul_Float32x4x3;

/// operator* with Float32x4x4
extern Variable Float16x4_operator_mul_Float32x4x4_arg0;
extern Function Float16x4_operator_mul_Float32x4x4;

struct UInt16x4 : public Type
{
    UInt16x4();
};
extern UInt16x4 UInt16x4Type;

/// u16x4 with Float32x4
extern Variable UInt16x4_convert_Float32x4_arg0;
extern Function UInt16x4_convert_Float32x4;

/// u16x4 with Float32
extern Variable UInt16x4_splat_Float32_arg0;
extern Function UInt16x4_splat_Float32;

/// u16x4 with UInt32x4
extern Variable UInt16x4_convert_UInt32x4_arg0;
extern Function UInt16x4_convert_UInt32x4;

/// u16x4 with UInt32
extern Variable UInt16x4_splat_UInt32_arg0;
extern Function UInt16x4_splat_UInt32;

/// u16x4 with Int32x4
extern Variable UInt16x4_convert_Int32x4_arg0;
extern Function UInt16x4_convert_Int32x4;

/// u16x4 with Int32
extern Variable UInt16x4_splat_Int32_arg0;
extern Function UInt16x4_splat_Int32;

/// u16x4 with Float16x4
extern Variable UInt16x4_convert_Float16x4_arg0;
extern Function UInt16x4_convert_Float16x4;

/// u16x4 with Float16
extern Variable UInt16x4_splat_Float16_arg0;
extern Function UInt16x4_splat_Float16;

/// u16x4 with UInt16x4
extern Variable UInt16x4_convert_UInt16x4_arg0;
extern Function UInt16x4_convert_UInt16x4;

/// u16x4 with UInt16
extern Variable UInt16x4_splat_UInt16_arg0;
extern Function UInt16x4_splat_UInt16;

/// u16x4 with Int16x4
extern Variable UInt16x4_convert_Int16x4_arg0;
extern Function UInt16x4_convert_Int16x4;

/// u16x4 with Int16
extern Variable UInt16x4_splat_Int16_arg0;
extern Function UInt16x4_splat_Int16;

/// u16x4 with UInt16, UInt16, UInt16, UInt16
extern Variable UInt16x4_ctor0_arg0_UInt16;
extern Variable UInt16x4_ctor0_arg1_UInt16;
extern Variable UInt16x4_ctor0_arg2_UInt16;
extern Variable UInt16x4_ctor0_arg3_UInt16;
extern Function UInt16x4_ctor0;

/// u16x4 with UInt16x2, UInt16, UInt16
extern Variable UInt16x4_ctor1_arg0_UInt16x2;
extern Variable UInt16x4_ctor1_arg1_UInt16;
extern Variable UInt16x4_ctor1_arg2_UInt16;
extern Function UInt16x4_ctor1;

/// u16x4 with UInt16, UInt16x2, UInt16
extern Variable UInt16x4_ctor2_arg0_UInt16;
extern Variable UInt16x4_ctor2_arg1_UInt16x2;
extern Variable UInt16x4_ctor2_arg2_UInt16;
extern Function UInt16x4_ctor2;

/// u16x4 with UInt16, UInt16, UInt16x2
extern Variable UInt16x4_ctor3_arg0_UInt16;
extern Variable UInt16x4_ctor3_arg1_UInt16;
extern Variable UInt16x4_ctor3_arg2_UInt16x2;
extern Function UInt16x4_ctor3;

/// u16x4 with UInt16x3, UInt16
extern Variable UInt16x4_ctor4_arg0_UInt16x3;
extern Variable UInt16x4_ctor4_arg1_UInt16;
extern Function UInt16x4_ctor4;

/// u16x4 with UInt16, UInt16x3
extern Variable UInt16x4_ctor5_arg0_UInt16;
extern Variable UInt16x4_ctor5_arg1_UInt16x3;
extern Function UInt16x4_ctor5;

/// operator[] with Int32
extern Variable UInt16x4_operator_index_Int32_arg0;
extern Function UInt16x4_operator_index_Int32;

/// operator[] with UInt32
extern Variable UInt16x4_operator_index_UInt32_arg0;
extern Function UInt16x4_operator_index_UInt32;

/// operator[] with Int16
extern Variable UInt16x4_operator_index_Int16_arg0;
extern Function UInt16x4_operator_index_Int16;

/// operator[] with UInt16
extern Variable UInt16x4_operator_index_UInt16_arg0;
extern Function UInt16x4_operator_index_UInt16;

/// operator+ with UInt16x4
extern Variable UInt16x4_operator_add_UInt16x4_arg0;
extern Function UInt16x4_operator_add_UInt16x4;

/// operator- with UInt16x4
extern Variable UInt16x4_operator_sub_UInt16x4_arg0;
extern Function UInt16x4_operator_sub_UInt16x4;

/// operator* with UInt16x4
extern Variable UInt16x4_operator_mul_UInt16x4_arg0;
extern Function UInt16x4_operator_mul_UInt16x4;

/// operator/ with UInt16x4
extern Variable UInt16x4_operator_div_UInt16x4_arg0;
extern Function UInt16x4_operator_div_UInt16x4;

/// operator% with UInt16x4
extern Variable UInt16x4_operator_mod_UInt16x4_arg0;
extern Function UInt16x4_operator_mod_UInt16x4;

/// operator+= with UInt16x4
extern Variable UInt16x4_operator_addasg_UInt16x4_arg0;
extern Function UInt16x4_operator_addasg_UInt16x4;

/// operator-= with UInt16x4
extern Variable UInt16x4_operator_subasg_UInt16x4_arg0;
extern Function UInt16x4_operator_subasg_UInt16x4;

/// operator*= with UInt16x4
extern Variable UInt16x4_operator_mulasg_UInt16x4_arg0;
extern Function UInt16x4_operator_mulasg_UInt16x4;

/// operator/= with UInt16x4
extern Variable UInt16x4_operator_divasg_UInt16x4_arg0;
extern Function UInt16x4_operator_divasg_UInt16x4;

/// operator< with UInt16x4
extern Variable UInt16x4_operator_lt_UInt16x4_arg0;
extern Function UInt16x4_operator_lt_UInt16x4;

/// operator<= with UInt16x4
extern Variable UInt16x4_operator_lte_UInt16x4_arg0;
extern Function UInt16x4_operator_lte_UInt16x4;

/// operator> with UInt16x4
extern Variable UInt16x4_operator_gt_UInt16x4_arg0;
extern Function UInt16x4_operator_gt_UInt16x4;

/// operator>= with UInt16x4
extern Variable UInt16x4_operator_gte_UInt16x4_arg0;
extern Function UInt16x4_operator_gte_UInt16x4;

/// operator== with UInt16x4
extern Variable UInt16x4_operator_eq_UInt16x4_arg0;
extern Function UInt16x4_operator_eq_UInt16x4;

/// operator!= with UInt16x4
extern Variable UInt16x4_operator_neq_UInt16x4_arg0;
extern Function UInt16x4_operator_neq_UInt16x4;

/// operator* with Float32
extern Variable UInt16x4_operator_scale_Float32_arg0;
extern Function UInt16x4_operator_scale_Float32;

/// operator* with Float16
extern Variable UInt16x4_operator_scale_Float16_arg0;
extern Function UInt16x4_operator_scale_Float16;

/// operator* with UInt32
extern Variable UInt16x4_operator_scale_UInt32_arg0;
extern Function UInt16x4_operator_scale_UInt32;

/// operator* with UInt16
extern Variable UInt16x4_operator_scale_UInt16_arg0;
extern Function UInt16x4_operator_scale_UInt16;

/// operator* with Int32
extern Variable UInt16x4_operator_scale_Int32_arg0;
extern Function UInt16x4_operator_scale_Int32;

/// operator* with Int16
extern Variable UInt16x4_operator_scale_Int16_arg0;
extern Function UInt16x4_operator_scale_Int16;

/// operator| with UInt16x4
extern Variable UInt16x4_operator_or_UInt16x4_arg0;
extern Function UInt16x4_operator_or_UInt16x4;

/// operator& with UInt16x4
extern Variable UInt16x4_operator_and_UInt16x4_arg0;
extern Function UInt16x4_operator_and_UInt16x4;

/// operator^ with UInt16x4
extern Variable UInt16x4_operator_xor_UInt16x4_arg0;
extern Function UInt16x4_operator_xor_UInt16x4;

/// operator<< with UInt16x4
extern Variable UInt16x4_operator_lsh_UInt16x4_arg0;
extern Function UInt16x4_operator_lsh_UInt16x4;

/// operator>> with UInt16x4
extern Variable UInt16x4_operator_rsh_UInt16x4_arg0;
extern Function UInt16x4_operator_rsh_UInt16x4;

/// operator|= with UInt16x4
extern Variable UInt16x4_operator_orasg_UInt16x4_arg0;
extern Function UInt16x4_operator_orasg_UInt16x4;

/// operator&= with UInt16x4
extern Variable UInt16x4_operator_andasg_UInt16x4_arg0;
extern Function UInt16x4_operator_andasg_UInt16x4;

/// operator^= with UInt16x4
extern Variable UInt16x4_operator_xorasg_UInt16x4_arg0;
extern Function UInt16x4_operator_xorasg_UInt16x4;

/// operator<<= with UInt16x4
extern Variable UInt16x4_operator_lshasg_UInt16x4_arg0;
extern Function UInt16x4_operator_lshasg_UInt16x4;

/// operator>>= with UInt16x4
extern Variable UInt16x4_operator_rhsasg_UInt16x4_arg0;
extern Function UInt16x4_operator_rhsasg_UInt16x4;

struct Int16x4 : public Type
{
    Int16x4();
};
extern Int16x4 Int16x4Type;

/// i16x4 with Float32x4
extern Variable Int16x4_convert_Float32x4_arg0;
extern Function Int16x4_convert_Float32x4;

/// i16x4 with Float32
extern Variable Int16x4_splat_Float32_arg0;
extern Function Int16x4_splat_Float32;

/// i16x4 with UInt32x4
extern Variable Int16x4_convert_UInt32x4_arg0;
extern Function Int16x4_convert_UInt32x4;

/// i16x4 with UInt32
extern Variable Int16x4_splat_UInt32_arg0;
extern Function Int16x4_splat_UInt32;

/// i16x4 with Int32x4
extern Variable Int16x4_convert_Int32x4_arg0;
extern Function Int16x4_convert_Int32x4;

/// i16x4 with Int32
extern Variable Int16x4_splat_Int32_arg0;
extern Function Int16x4_splat_Int32;

/// i16x4 with Float16x4
extern Variable Int16x4_convert_Float16x4_arg0;
extern Function Int16x4_convert_Float16x4;

/// i16x4 with Float16
extern Variable Int16x4_splat_Float16_arg0;
extern Function Int16x4_splat_Float16;

/// i16x4 with UInt16x4
extern Variable Int16x4_convert_UInt16x4_arg0;
extern Function Int16x4_convert_UInt16x4;

/// i16x4 with UInt16
extern Variable Int16x4_splat_UInt16_arg0;
extern Function Int16x4_splat_UInt16;

/// i16x4 with Int16x4
extern Variable Int16x4_convert_Int16x4_arg0;
extern Function Int16x4_convert_Int16x4;

/// i16x4 with Int16
extern Variable Int16x4_splat_Int16_arg0;
extern Function Int16x4_splat_Int16;

/// i16x4 with Int16, Int16, Int16, Int16
extern Variable Int16x4_ctor0_arg0_Int16;
extern Variable Int16x4_ctor0_arg1_Int16;
extern Variable Int16x4_ctor0_arg2_Int16;
extern Variable Int16x4_ctor0_arg3_Int16;
extern Function Int16x4_ctor0;

/// i16x4 with Int16x2, Int16, Int16
extern Variable Int16x4_ctor1_arg0_Int16x2;
extern Variable Int16x4_ctor1_arg1_Int16;
extern Variable Int16x4_ctor1_arg2_Int16;
extern Function Int16x4_ctor1;

/// i16x4 with Int16, Int16x2, Int16
extern Variable Int16x4_ctor2_arg0_Int16;
extern Variable Int16x4_ctor2_arg1_Int16x2;
extern Variable Int16x4_ctor2_arg2_Int16;
extern Function Int16x4_ctor2;

/// i16x4 with Int16, Int16, Int16x2
extern Variable Int16x4_ctor3_arg0_Int16;
extern Variable Int16x4_ctor3_arg1_Int16;
extern Variable Int16x4_ctor3_arg2_Int16x2;
extern Function Int16x4_ctor3;

/// i16x4 with Int16x3, Int16
extern Variable Int16x4_ctor4_arg0_Int16x3;
extern Variable Int16x4_ctor4_arg1_Int16;
extern Function Int16x4_ctor4;

/// i16x4 with Int16, Int16x3
extern Variable Int16x4_ctor5_arg0_Int16;
extern Variable Int16x4_ctor5_arg1_Int16x3;
extern Function Int16x4_ctor5;

/// operator[] with Int32
extern Variable Int16x4_operator_index_Int32_arg0;
extern Function Int16x4_operator_index_Int32;

/// operator[] with UInt32
extern Variable Int16x4_operator_index_UInt32_arg0;
extern Function Int16x4_operator_index_UInt32;

/// operator[] with Int16
extern Variable Int16x4_operator_index_Int16_arg0;
extern Function Int16x4_operator_index_Int16;

/// operator[] with UInt16
extern Variable Int16x4_operator_index_UInt16_arg0;
extern Function Int16x4_operator_index_UInt16;

/// operator+ with Int16x4
extern Variable Int16x4_operator_add_Int16x4_arg0;
extern Function Int16x4_operator_add_Int16x4;

/// operator- with Int16x4
extern Variable Int16x4_operator_sub_Int16x4_arg0;
extern Function Int16x4_operator_sub_Int16x4;

/// operator* with Int16x4
extern Variable Int16x4_operator_mul_Int16x4_arg0;
extern Function Int16x4_operator_mul_Int16x4;

/// operator/ with Int16x4
extern Variable Int16x4_operator_div_Int16x4_arg0;
extern Function Int16x4_operator_div_Int16x4;

/// operator% with Int16x4
extern Variable Int16x4_operator_mod_Int16x4_arg0;
extern Function Int16x4_operator_mod_Int16x4;

/// operator+= with Int16x4
extern Variable Int16x4_operator_addasg_Int16x4_arg0;
extern Function Int16x4_operator_addasg_Int16x4;

/// operator-= with Int16x4
extern Variable Int16x4_operator_subasg_Int16x4_arg0;
extern Function Int16x4_operator_subasg_Int16x4;

/// operator*= with Int16x4
extern Variable Int16x4_operator_mulasg_Int16x4_arg0;
extern Function Int16x4_operator_mulasg_Int16x4;

/// operator/= with Int16x4
extern Variable Int16x4_operator_divasg_Int16x4_arg0;
extern Function Int16x4_operator_divasg_Int16x4;

/// operator< with Int16x4
extern Variable Int16x4_operator_lt_Int16x4_arg0;
extern Function Int16x4_operator_lt_Int16x4;

/// operator<= with Int16x4
extern Variable Int16x4_operator_lte_Int16x4_arg0;
extern Function Int16x4_operator_lte_Int16x4;

/// operator> with Int16x4
extern Variable Int16x4_operator_gt_Int16x4_arg0;
extern Function Int16x4_operator_gt_Int16x4;

/// operator>= with Int16x4
extern Variable Int16x4_operator_gte_Int16x4_arg0;
extern Function Int16x4_operator_gte_Int16x4;

/// operator== with Int16x4
extern Variable Int16x4_operator_eq_Int16x4_arg0;
extern Function Int16x4_operator_eq_Int16x4;

/// operator!= with Int16x4
extern Variable Int16x4_operator_neq_Int16x4_arg0;
extern Function Int16x4_operator_neq_Int16x4;

/// operator* with Float32
extern Variable Int16x4_operator_scale_Float32_arg0;
extern Function Int16x4_operator_scale_Float32;

/// operator* with Float16
extern Variable Int16x4_operator_scale_Float16_arg0;
extern Function Int16x4_operator_scale_Float16;

/// operator* with UInt32
extern Variable Int16x4_operator_scale_UInt32_arg0;
extern Function Int16x4_operator_scale_UInt32;

/// operator* with UInt16
extern Variable Int16x4_operator_scale_UInt16_arg0;
extern Function Int16x4_operator_scale_UInt16;

/// operator* with Int32
extern Variable Int16x4_operator_scale_Int32_arg0;
extern Function Int16x4_operator_scale_Int32;

/// operator* with Int16
extern Variable Int16x4_operator_scale_Int16_arg0;
extern Function Int16x4_operator_scale_Int16;

/// operator| with Int16x4
extern Variable Int16x4_operator_or_Int16x4_arg0;
extern Function Int16x4_operator_or_Int16x4;

/// operator& with Int16x4
extern Variable Int16x4_operator_and_Int16x4_arg0;
extern Function Int16x4_operator_and_Int16x4;

/// operator^ with Int16x4
extern Variable Int16x4_operator_xor_Int16x4_arg0;
extern Function Int16x4_operator_xor_Int16x4;

/// operator<< with Int16x4
extern Variable Int16x4_operator_lsh_Int16x4_arg0;
extern Function Int16x4_operator_lsh_Int16x4;

/// operator>> with Int16x4
extern Variable Int16x4_operator_rsh_Int16x4_arg0;
extern Function Int16x4_operator_rsh_Int16x4;

/// operator|= with Int16x4
extern Variable Int16x4_operator_orasg_Int16x4_arg0;
extern Function Int16x4_operator_orasg_Int16x4;

/// operator&= with Int16x4
extern Variable Int16x4_operator_andasg_Int16x4_arg0;
extern Function Int16x4_operator_andasg_Int16x4;

/// operator^= with Int16x4
extern Variable Int16x4_operator_xorasg_Int16x4_arg0;
extern Function Int16x4_operator_xorasg_Int16x4;

/// operator<<= with Int16x4
extern Variable Int16x4_operator_lshasg_Int16x4_arg0;
extern Function Int16x4_operator_lshasg_Int16x4;

/// operator>>= with Int16x4
extern Variable Int16x4_operator_rhsasg_Int16x4_arg0;
extern Function Int16x4_operator_rhsasg_Int16x4;

struct Float32x2x2 : public Type
{
    Float32x2x2();
};
extern Float32x2x2 Float32x2x2Type;

/// f32x2x2 with Float32x2, Float32x2
extern Variable Float32x2x2_Float32_2_ctor_arg0;
extern Variable Float32x2x2_Float32_2_ctor_arg1;
extern Function Float32x2x2_Float32_2_ctor;

/// f32x2x2
extern Function Float32x2x2_identity;

/// f32x2x2 with Float32, Float32, Float32, Float32
extern Variable Float32x2x2_raw_list_arg0;
extern Variable Float32x2x2_raw_list_arg1;
extern Variable Float32x2x2_raw_list_arg2;
extern Variable Float32x2x2_raw_list_arg3;
extern Function Float32x2x2_raw_list;

/// operator[] with Int32
extern Variable Float32x2x2_operator_index_Int32_arg0;
extern Function Float32x2x2_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float32x2x2_operator_index_UInt32_arg0;
extern Function Float32x2x2_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float32x2x2_operator_index_Int16_arg0;
extern Function Float32x2x2_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float32x2x2_operator_index_UInt16_arg0;
extern Function Float32x2x2_operator_index_UInt16;

/// operator+ with Float32x2x2
extern Variable Float32x2x2_operator_add_Float32x2x2_arg0;
extern Function Float32x2x2_operator_add_Float32x2x2;

/// operator- with Float32x2x2
extern Variable Float32x2x2_operator_sub_Float32x2x2_arg0;
extern Function Float32x2x2_operator_sub_Float32x2x2;

/// operator* with Float32x2x2
extern Variable Float32x2x2_operator_mul_Float32x2x2_arg0;
extern Function Float32x2x2_operator_mul_Float32x2x2;

/// operator+= with Float32x2x2
extern Variable Float32x2x2_operator_addasg_Float32x2x2_arg0;
extern Function Float32x2x2_operator_addasg_Float32x2x2;

/// operator-= with Float32x2x2
extern Variable Float32x2x2_operator_subasg_Float32x2x2_arg0;
extern Function Float32x2x2_operator_subasg_Float32x2x2;

/// operator*= with Float32x2x2
extern Variable Float32x2x2_operator_mulasg_Float32x2x2_arg0;
extern Function Float32x2x2_operator_mulasg_Float32x2x2;

/// operator* with Float32
extern Variable Float32x2x2_operator_scale_Float32_arg0;
extern Function Float32x2x2_operator_scale_Float32;

struct Float32x2x3 : public Type
{
    Float32x2x3();
};
extern Float32x2x3 Float32x2x3Type;

/// f32x2x3 with Float32x3, Float32x3
extern Variable Float32x2x3_Float32_3_ctor_arg0;
extern Variable Float32x2x3_Float32_3_ctor_arg1;
extern Function Float32x2x3_Float32_3_ctor;

/// f32x2x3
extern Function Float32x2x3_identity;

/// f32x2x3 with Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x2x3_raw_list_arg0;
extern Variable Float32x2x3_raw_list_arg1;
extern Variable Float32x2x3_raw_list_arg2;
extern Variable Float32x2x3_raw_list_arg3;
extern Variable Float32x2x3_raw_list_arg4;
extern Variable Float32x2x3_raw_list_arg5;
extern Function Float32x2x3_raw_list;

/// operator[] with Int32
extern Variable Float32x2x3_operator_index_Int32_arg0;
extern Function Float32x2x3_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float32x2x3_operator_index_UInt32_arg0;
extern Function Float32x2x3_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float32x2x3_operator_index_Int16_arg0;
extern Function Float32x2x3_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float32x2x3_operator_index_UInt16_arg0;
extern Function Float32x2x3_operator_index_UInt16;

/// operator+ with Float32x2x3
extern Variable Float32x2x3_operator_add_Float32x2x3_arg0;
extern Function Float32x2x3_operator_add_Float32x2x3;

/// operator- with Float32x2x3
extern Variable Float32x2x3_operator_sub_Float32x2x3_arg0;
extern Function Float32x2x3_operator_sub_Float32x2x3;

/// operator* with Float32x2x3
extern Variable Float32x2x3_operator_mul_Float32x2x3_arg0;
extern Function Float32x2x3_operator_mul_Float32x2x3;

/// operator+= with Float32x2x3
extern Variable Float32x2x3_operator_addasg_Float32x2x3_arg0;
extern Function Float32x2x3_operator_addasg_Float32x2x3;

/// operator-= with Float32x2x3
extern Variable Float32x2x3_operator_subasg_Float32x2x3_arg0;
extern Function Float32x2x3_operator_subasg_Float32x2x3;

/// operator*= with Float32x2x3
extern Variable Float32x2x3_operator_mulasg_Float32x2x3_arg0;
extern Function Float32x2x3_operator_mulasg_Float32x2x3;

/// operator* with Float32
extern Variable Float32x2x3_operator_scale_Float32_arg0;
extern Function Float32x2x3_operator_scale_Float32;

struct Float32x2x4 : public Type
{
    Float32x2x4();
};
extern Float32x2x4 Float32x2x4Type;

/// f32x2x4 with Float32x4, Float32x4
extern Variable Float32x2x4_Float32_4_ctor_arg0;
extern Variable Float32x2x4_Float32_4_ctor_arg1;
extern Function Float32x2x4_Float32_4_ctor;

/// f32x2x4
extern Function Float32x2x4_identity;

/// f32x2x4 with Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x2x4_raw_list_arg0;
extern Variable Float32x2x4_raw_list_arg1;
extern Variable Float32x2x4_raw_list_arg2;
extern Variable Float32x2x4_raw_list_arg3;
extern Variable Float32x2x4_raw_list_arg4;
extern Variable Float32x2x4_raw_list_arg5;
extern Variable Float32x2x4_raw_list_arg6;
extern Variable Float32x2x4_raw_list_arg7;
extern Function Float32x2x4_raw_list;

/// operator[] with Int32
extern Variable Float32x2x4_operator_index_Int32_arg0;
extern Function Float32x2x4_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float32x2x4_operator_index_UInt32_arg0;
extern Function Float32x2x4_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float32x2x4_operator_index_Int16_arg0;
extern Function Float32x2x4_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float32x2x4_operator_index_UInt16_arg0;
extern Function Float32x2x4_operator_index_UInt16;

/// operator+ with Float32x2x4
extern Variable Float32x2x4_operator_add_Float32x2x4_arg0;
extern Function Float32x2x4_operator_add_Float32x2x4;

/// operator- with Float32x2x4
extern Variable Float32x2x4_operator_sub_Float32x2x4_arg0;
extern Function Float32x2x4_operator_sub_Float32x2x4;

/// operator* with Float32x2x4
extern Variable Float32x2x4_operator_mul_Float32x2x4_arg0;
extern Function Float32x2x4_operator_mul_Float32x2x4;

/// operator+= with Float32x2x4
extern Variable Float32x2x4_operator_addasg_Float32x2x4_arg0;
extern Function Float32x2x4_operator_addasg_Float32x2x4;

/// operator-= with Float32x2x4
extern Variable Float32x2x4_operator_subasg_Float32x2x4_arg0;
extern Function Float32x2x4_operator_subasg_Float32x2x4;

/// operator*= with Float32x2x4
extern Variable Float32x2x4_operator_mulasg_Float32x2x4_arg0;
extern Function Float32x2x4_operator_mulasg_Float32x2x4;

/// operator* with Float32
extern Variable Float32x2x4_operator_scale_Float32_arg0;
extern Function Float32x2x4_operator_scale_Float32;

struct Float32x3x2 : public Type
{
    Float32x3x2();
};
extern Float32x3x2 Float32x3x2Type;

/// f32x3x2 with Float32x2, Float32x2, Float32x2
extern Variable Float32x3x2_Float32_2_ctor_arg0;
extern Variable Float32x3x2_Float32_2_ctor_arg1;
extern Variable Float32x3x2_Float32_2_ctor_arg2;
extern Function Float32x3x2_Float32_2_ctor;

/// f32x3x2
extern Function Float32x3x2_identity;

/// f32x3x2 with Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x3x2_raw_list_arg0;
extern Variable Float32x3x2_raw_list_arg1;
extern Variable Float32x3x2_raw_list_arg2;
extern Variable Float32x3x2_raw_list_arg3;
extern Variable Float32x3x2_raw_list_arg4;
extern Variable Float32x3x2_raw_list_arg5;
extern Function Float32x3x2_raw_list;

/// operator[] with Int32
extern Variable Float32x3x2_operator_index_Int32_arg0;
extern Function Float32x3x2_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float32x3x2_operator_index_UInt32_arg0;
extern Function Float32x3x2_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float32x3x2_operator_index_Int16_arg0;
extern Function Float32x3x2_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float32x3x2_operator_index_UInt16_arg0;
extern Function Float32x3x2_operator_index_UInt16;

/// operator+ with Float32x3x2
extern Variable Float32x3x2_operator_add_Float32x3x2_arg0;
extern Function Float32x3x2_operator_add_Float32x3x2;

/// operator- with Float32x3x2
extern Variable Float32x3x2_operator_sub_Float32x3x2_arg0;
extern Function Float32x3x2_operator_sub_Float32x3x2;

/// operator* with Float32x3x2
extern Variable Float32x3x2_operator_mul_Float32x3x2_arg0;
extern Function Float32x3x2_operator_mul_Float32x3x2;

/// operator+= with Float32x3x2
extern Variable Float32x3x2_operator_addasg_Float32x3x2_arg0;
extern Function Float32x3x2_operator_addasg_Float32x3x2;

/// operator-= with Float32x3x2
extern Variable Float32x3x2_operator_subasg_Float32x3x2_arg0;
extern Function Float32x3x2_operator_subasg_Float32x3x2;

/// operator*= with Float32x3x2
extern Variable Float32x3x2_operator_mulasg_Float32x3x2_arg0;
extern Function Float32x3x2_operator_mulasg_Float32x3x2;

/// operator* with Float32
extern Variable Float32x3x2_operator_scale_Float32_arg0;
extern Function Float32x3x2_operator_scale_Float32;

struct Float32x3x3 : public Type
{
    Float32x3x3();
};
extern Float32x3x3 Float32x3x3Type;

/// f32x3x3 with Float32x3, Float32x3, Float32x3
extern Variable Float32x3x3_Float32_3_ctor_arg0;
extern Variable Float32x3x3_Float32_3_ctor_arg1;
extern Variable Float32x3x3_Float32_3_ctor_arg2;
extern Function Float32x3x3_Float32_3_ctor;

/// f32x3x3
extern Function Float32x3x3_identity;

/// f32x3x3 with Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x3x3_raw_list_arg0;
extern Variable Float32x3x3_raw_list_arg1;
extern Variable Float32x3x3_raw_list_arg2;
extern Variable Float32x3x3_raw_list_arg3;
extern Variable Float32x3x3_raw_list_arg4;
extern Variable Float32x3x3_raw_list_arg5;
extern Variable Float32x3x3_raw_list_arg6;
extern Variable Float32x3x3_raw_list_arg7;
extern Variable Float32x3x3_raw_list_arg8;
extern Function Float32x3x3_raw_list;

/// operator[] with Int32
extern Variable Float32x3x3_operator_index_Int32_arg0;
extern Function Float32x3x3_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float32x3x3_operator_index_UInt32_arg0;
extern Function Float32x3x3_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float32x3x3_operator_index_Int16_arg0;
extern Function Float32x3x3_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float32x3x3_operator_index_UInt16_arg0;
extern Function Float32x3x3_operator_index_UInt16;

/// operator+ with Float32x3x3
extern Variable Float32x3x3_operator_add_Float32x3x3_arg0;
extern Function Float32x3x3_operator_add_Float32x3x3;

/// operator- with Float32x3x3
extern Variable Float32x3x3_operator_sub_Float32x3x3_arg0;
extern Function Float32x3x3_operator_sub_Float32x3x3;

/// operator* with Float32x3x3
extern Variable Float32x3x3_operator_mul_Float32x3x3_arg0;
extern Function Float32x3x3_operator_mul_Float32x3x3;

/// operator+= with Float32x3x3
extern Variable Float32x3x3_operator_addasg_Float32x3x3_arg0;
extern Function Float32x3x3_operator_addasg_Float32x3x3;

/// operator-= with Float32x3x3
extern Variable Float32x3x3_operator_subasg_Float32x3x3_arg0;
extern Function Float32x3x3_operator_subasg_Float32x3x3;

/// operator*= with Float32x3x3
extern Variable Float32x3x3_operator_mulasg_Float32x3x3_arg0;
extern Function Float32x3x3_operator_mulasg_Float32x3x3;

/// operator* with Float32
extern Variable Float32x3x3_operator_scale_Float32_arg0;
extern Function Float32x3x3_operator_scale_Float32;

struct Float32x3x4 : public Type
{
    Float32x3x4();
};
extern Float32x3x4 Float32x3x4Type;

/// f32x3x4 with Float32x4, Float32x4, Float32x4
extern Variable Float32x3x4_Float32_4_ctor_arg0;
extern Variable Float32x3x4_Float32_4_ctor_arg1;
extern Variable Float32x3x4_Float32_4_ctor_arg2;
extern Function Float32x3x4_Float32_4_ctor;

/// f32x3x4
extern Function Float32x3x4_identity;

/// f32x3x4 with Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x3x4_raw_list_arg0;
extern Variable Float32x3x4_raw_list_arg1;
extern Variable Float32x3x4_raw_list_arg2;
extern Variable Float32x3x4_raw_list_arg3;
extern Variable Float32x3x4_raw_list_arg4;
extern Variable Float32x3x4_raw_list_arg5;
extern Variable Float32x3x4_raw_list_arg6;
extern Variable Float32x3x4_raw_list_arg7;
extern Variable Float32x3x4_raw_list_arg8;
extern Variable Float32x3x4_raw_list_arg9;
extern Variable Float32x3x4_raw_list_arg10;
extern Variable Float32x3x4_raw_list_arg11;
extern Function Float32x3x4_raw_list;

/// operator[] with Int32
extern Variable Float32x3x4_operator_index_Int32_arg0;
extern Function Float32x3x4_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float32x3x4_operator_index_UInt32_arg0;
extern Function Float32x3x4_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float32x3x4_operator_index_Int16_arg0;
extern Function Float32x3x4_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float32x3x4_operator_index_UInt16_arg0;
extern Function Float32x3x4_operator_index_UInt16;

/// operator+ with Float32x3x4
extern Variable Float32x3x4_operator_add_Float32x3x4_arg0;
extern Function Float32x3x4_operator_add_Float32x3x4;

/// operator- with Float32x3x4
extern Variable Float32x3x4_operator_sub_Float32x3x4_arg0;
extern Function Float32x3x4_operator_sub_Float32x3x4;

/// operator* with Float32x3x4
extern Variable Float32x3x4_operator_mul_Float32x3x4_arg0;
extern Function Float32x3x4_operator_mul_Float32x3x4;

/// operator+= with Float32x3x4
extern Variable Float32x3x4_operator_addasg_Float32x3x4_arg0;
extern Function Float32x3x4_operator_addasg_Float32x3x4;

/// operator-= with Float32x3x4
extern Variable Float32x3x4_operator_subasg_Float32x3x4_arg0;
extern Function Float32x3x4_operator_subasg_Float32x3x4;

/// operator*= with Float32x3x4
extern Variable Float32x3x4_operator_mulasg_Float32x3x4_arg0;
extern Function Float32x3x4_operator_mulasg_Float32x3x4;

/// operator* with Float32
extern Variable Float32x3x4_operator_scale_Float32_arg0;
extern Function Float32x3x4_operator_scale_Float32;

struct Float32x4x2 : public Type
{
    Float32x4x2();
};
extern Float32x4x2 Float32x4x2Type;

/// f32x4x2 with Float32x2, Float32x2, Float32x2, Float32x2
extern Variable Float32x4x2_Float32_2_ctor_arg0;
extern Variable Float32x4x2_Float32_2_ctor_arg1;
extern Variable Float32x4x2_Float32_2_ctor_arg2;
extern Variable Float32x4x2_Float32_2_ctor_arg3;
extern Function Float32x4x2_Float32_2_ctor;

/// f32x4x2
extern Function Float32x4x2_identity;

/// f32x4x2 with Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x4x2_raw_list_arg0;
extern Variable Float32x4x2_raw_list_arg1;
extern Variable Float32x4x2_raw_list_arg2;
extern Variable Float32x4x2_raw_list_arg3;
extern Variable Float32x4x2_raw_list_arg4;
extern Variable Float32x4x2_raw_list_arg5;
extern Variable Float32x4x2_raw_list_arg6;
extern Variable Float32x4x2_raw_list_arg7;
extern Function Float32x4x2_raw_list;

/// operator[] with Int32
extern Variable Float32x4x2_operator_index_Int32_arg0;
extern Function Float32x4x2_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float32x4x2_operator_index_UInt32_arg0;
extern Function Float32x4x2_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float32x4x2_operator_index_Int16_arg0;
extern Function Float32x4x2_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float32x4x2_operator_index_UInt16_arg0;
extern Function Float32x4x2_operator_index_UInt16;

/// operator+ with Float32x4x2
extern Variable Float32x4x2_operator_add_Float32x4x2_arg0;
extern Function Float32x4x2_operator_add_Float32x4x2;

/// operator- with Float32x4x2
extern Variable Float32x4x2_operator_sub_Float32x4x2_arg0;
extern Function Float32x4x2_operator_sub_Float32x4x2;

/// operator* with Float32x4x2
extern Variable Float32x4x2_operator_mul_Float32x4x2_arg0;
extern Function Float32x4x2_operator_mul_Float32x4x2;

/// operator+= with Float32x4x2
extern Variable Float32x4x2_operator_addasg_Float32x4x2_arg0;
extern Function Float32x4x2_operator_addasg_Float32x4x2;

/// operator-= with Float32x4x2
extern Variable Float32x4x2_operator_subasg_Float32x4x2_arg0;
extern Function Float32x4x2_operator_subasg_Float32x4x2;

/// operator*= with Float32x4x2
extern Variable Float32x4x2_operator_mulasg_Float32x4x2_arg0;
extern Function Float32x4x2_operator_mulasg_Float32x4x2;

/// operator* with Float32
extern Variable Float32x4x2_operator_scale_Float32_arg0;
extern Function Float32x4x2_operator_scale_Float32;

struct Float32x4x3 : public Type
{
    Float32x4x3();
};
extern Float32x4x3 Float32x4x3Type;

/// f32x4x3 with Float32x3, Float32x3, Float32x3, Float32x3
extern Variable Float32x4x3_Float32_3_ctor_arg0;
extern Variable Float32x4x3_Float32_3_ctor_arg1;
extern Variable Float32x4x3_Float32_3_ctor_arg2;
extern Variable Float32x4x3_Float32_3_ctor_arg3;
extern Function Float32x4x3_Float32_3_ctor;

/// f32x4x3
extern Function Float32x4x3_identity;

/// f32x4x3 with Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x4x3_raw_list_arg0;
extern Variable Float32x4x3_raw_list_arg1;
extern Variable Float32x4x3_raw_list_arg2;
extern Variable Float32x4x3_raw_list_arg3;
extern Variable Float32x4x3_raw_list_arg4;
extern Variable Float32x4x3_raw_list_arg5;
extern Variable Float32x4x3_raw_list_arg6;
extern Variable Float32x4x3_raw_list_arg7;
extern Variable Float32x4x3_raw_list_arg8;
extern Variable Float32x4x3_raw_list_arg9;
extern Variable Float32x4x3_raw_list_arg10;
extern Variable Float32x4x3_raw_list_arg11;
extern Function Float32x4x3_raw_list;

/// operator[] with Int32
extern Variable Float32x4x3_operator_index_Int32_arg0;
extern Function Float32x4x3_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float32x4x3_operator_index_UInt32_arg0;
extern Function Float32x4x3_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float32x4x3_operator_index_Int16_arg0;
extern Function Float32x4x3_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float32x4x3_operator_index_UInt16_arg0;
extern Function Float32x4x3_operator_index_UInt16;

/// operator+ with Float32x4x3
extern Variable Float32x4x3_operator_add_Float32x4x3_arg0;
extern Function Float32x4x3_operator_add_Float32x4x3;

/// operator- with Float32x4x3
extern Variable Float32x4x3_operator_sub_Float32x4x3_arg0;
extern Function Float32x4x3_operator_sub_Float32x4x3;

/// operator* with Float32x4x3
extern Variable Float32x4x3_operator_mul_Float32x4x3_arg0;
extern Function Float32x4x3_operator_mul_Float32x4x3;

/// operator+= with Float32x4x3
extern Variable Float32x4x3_operator_addasg_Float32x4x3_arg0;
extern Function Float32x4x3_operator_addasg_Float32x4x3;

/// operator-= with Float32x4x3
extern Variable Float32x4x3_operator_subasg_Float32x4x3_arg0;
extern Function Float32x4x3_operator_subasg_Float32x4x3;

/// operator*= with Float32x4x3
extern Variable Float32x4x3_operator_mulasg_Float32x4x3_arg0;
extern Function Float32x4x3_operator_mulasg_Float32x4x3;

/// operator* with Float32
extern Variable Float32x4x3_operator_scale_Float32_arg0;
extern Function Float32x4x3_operator_scale_Float32;

struct Float32x4x4 : public Type
{
    Float32x4x4();
};
extern Float32x4x4 Float32x4x4Type;

/// f32x4x4 with Float32x4, Float32x4, Float32x4, Float32x4
extern Variable Float32x4x4_Float32_4_ctor_arg0;
extern Variable Float32x4x4_Float32_4_ctor_arg1;
extern Variable Float32x4x4_Float32_4_ctor_arg2;
extern Variable Float32x4x4_Float32_4_ctor_arg3;
extern Function Float32x4x4_Float32_4_ctor;

/// f32x4x4
extern Function Float32x4x4_identity;

/// f32x4x4 with Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x4x4_raw_list_arg0;
extern Variable Float32x4x4_raw_list_arg1;
extern Variable Float32x4x4_raw_list_arg2;
extern Variable Float32x4x4_raw_list_arg3;
extern Variable Float32x4x4_raw_list_arg4;
extern Variable Float32x4x4_raw_list_arg5;
extern Variable Float32x4x4_raw_list_arg6;
extern Variable Float32x4x4_raw_list_arg7;
extern Variable Float32x4x4_raw_list_arg8;
extern Variable Float32x4x4_raw_list_arg9;
extern Variable Float32x4x4_raw_list_arg10;
extern Variable Float32x4x4_raw_list_arg11;
extern Variable Float32x4x4_raw_list_arg12;
extern Variable Float32x4x4_raw_list_arg13;
extern Variable Float32x4x4_raw_list_arg14;
extern Variable Float32x4x4_raw_list_arg15;
extern Function Float32x4x4_raw_list;

/// operator[] with Int32
extern Variable Float32x4x4_operator_index_Int32_arg0;
extern Function Float32x4x4_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float32x4x4_operator_index_UInt32_arg0;
extern Function Float32x4x4_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float32x4x4_operator_index_Int16_arg0;
extern Function Float32x4x4_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float32x4x4_operator_index_UInt16_arg0;
extern Function Float32x4x4_operator_index_UInt16;

/// operator+ with Float32x4x4
extern Variable Float32x4x4_operator_add_Float32x4x4_arg0;
extern Function Float32x4x4_operator_add_Float32x4x4;

/// operator- with Float32x4x4
extern Variable Float32x4x4_operator_sub_Float32x4x4_arg0;
extern Function Float32x4x4_operator_sub_Float32x4x4;

/// operator* with Float32x4x4
extern Variable Float32x4x4_operator_mul_Float32x4x4_arg0;
extern Function Float32x4x4_operator_mul_Float32x4x4;

/// operator+= with Float32x4x4
extern Variable Float32x4x4_operator_addasg_Float32x4x4_arg0;
extern Function Float32x4x4_operator_addasg_Float32x4x4;

/// operator-= with Float32x4x4
extern Variable Float32x4x4_operator_subasg_Float32x4x4_arg0;
extern Function Float32x4x4_operator_subasg_Float32x4x4;

/// operator*= with Float32x4x4
extern Variable Float32x4x4_operator_mulasg_Float32x4x4_arg0;
extern Function Float32x4x4_operator_mulasg_Float32x4x4;

/// operator* with Float32
extern Variable Float32x4x4_operator_scale_Float32_arg0;
extern Function Float32x4x4_operator_scale_Float32;

struct Float16x2x2 : public Type
{
    Float16x2x2();
};
extern Float16x2x2 Float16x2x2Type;

/// f16x2x2 with Float16x2, Float16x2
extern Variable Float16x2x2_Float16_2_ctor_arg0;
extern Variable Float16x2x2_Float16_2_ctor_arg1;
extern Function Float16x2x2_Float16_2_ctor;

/// f16x2x2
extern Function Float16x2x2_identity;

/// f16x2x2 with Float16, Float16, Float16, Float16
extern Variable Float16x2x2_raw_list_arg0;
extern Variable Float16x2x2_raw_list_arg1;
extern Variable Float16x2x2_raw_list_arg2;
extern Variable Float16x2x2_raw_list_arg3;
extern Function Float16x2x2_raw_list;

/// operator[] with Int32
extern Variable Float16x2x2_operator_index_Int32_arg0;
extern Function Float16x2x2_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float16x2x2_operator_index_UInt32_arg0;
extern Function Float16x2x2_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float16x2x2_operator_index_Int16_arg0;
extern Function Float16x2x2_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float16x2x2_operator_index_UInt16_arg0;
extern Function Float16x2x2_operator_index_UInt16;

/// operator+ with Float16x2x2
extern Variable Float16x2x2_operator_add_Float16x2x2_arg0;
extern Function Float16x2x2_operator_add_Float16x2x2;

/// operator- with Float16x2x2
extern Variable Float16x2x2_operator_sub_Float16x2x2_arg0;
extern Function Float16x2x2_operator_sub_Float16x2x2;

/// operator* with Float16x2x2
extern Variable Float16x2x2_operator_mul_Float16x2x2_arg0;
extern Function Float16x2x2_operator_mul_Float16x2x2;

/// operator+= with Float16x2x2
extern Variable Float16x2x2_operator_addasg_Float16x2x2_arg0;
extern Function Float16x2x2_operator_addasg_Float16x2x2;

/// operator-= with Float16x2x2
extern Variable Float16x2x2_operator_subasg_Float16x2x2_arg0;
extern Function Float16x2x2_operator_subasg_Float16x2x2;

/// operator*= with Float16x2x2
extern Variable Float16x2x2_operator_mulasg_Float16x2x2_arg0;
extern Function Float16x2x2_operator_mulasg_Float16x2x2;

/// operator* with Float16
extern Variable Float16x2x2_operator_scale_Float16_arg0;
extern Function Float16x2x2_operator_scale_Float16;

struct Float16x2x3 : public Type
{
    Float16x2x3();
};
extern Float16x2x3 Float16x2x3Type;

/// f16x2x3 with Float16x3, Float16x3
extern Variable Float16x2x3_Float16_3_ctor_arg0;
extern Variable Float16x2x3_Float16_3_ctor_arg1;
extern Function Float16x2x3_Float16_3_ctor;

/// f16x2x3
extern Function Float16x2x3_identity;

/// f16x2x3 with Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x2x3_raw_list_arg0;
extern Variable Float16x2x3_raw_list_arg1;
extern Variable Float16x2x3_raw_list_arg2;
extern Variable Float16x2x3_raw_list_arg3;
extern Variable Float16x2x3_raw_list_arg4;
extern Variable Float16x2x3_raw_list_arg5;
extern Function Float16x2x3_raw_list;

/// operator[] with Int32
extern Variable Float16x2x3_operator_index_Int32_arg0;
extern Function Float16x2x3_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float16x2x3_operator_index_UInt32_arg0;
extern Function Float16x2x3_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float16x2x3_operator_index_Int16_arg0;
extern Function Float16x2x3_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float16x2x3_operator_index_UInt16_arg0;
extern Function Float16x2x3_operator_index_UInt16;

/// operator+ with Float16x2x3
extern Variable Float16x2x3_operator_add_Float16x2x3_arg0;
extern Function Float16x2x3_operator_add_Float16x2x3;

/// operator- with Float16x2x3
extern Variable Float16x2x3_operator_sub_Float16x2x3_arg0;
extern Function Float16x2x3_operator_sub_Float16x2x3;

/// operator* with Float16x2x3
extern Variable Float16x2x3_operator_mul_Float16x2x3_arg0;
extern Function Float16x2x3_operator_mul_Float16x2x3;

/// operator+= with Float16x2x3
extern Variable Float16x2x3_operator_addasg_Float16x2x3_arg0;
extern Function Float16x2x3_operator_addasg_Float16x2x3;

/// operator-= with Float16x2x3
extern Variable Float16x2x3_operator_subasg_Float16x2x3_arg0;
extern Function Float16x2x3_operator_subasg_Float16x2x3;

/// operator*= with Float16x2x3
extern Variable Float16x2x3_operator_mulasg_Float16x2x3_arg0;
extern Function Float16x2x3_operator_mulasg_Float16x2x3;

/// operator* with Float16
extern Variable Float16x2x3_operator_scale_Float16_arg0;
extern Function Float16x2x3_operator_scale_Float16;

struct Float16x2x4 : public Type
{
    Float16x2x4();
};
extern Float16x2x4 Float16x2x4Type;

/// f16x2x4 with Float16x4, Float16x4
extern Variable Float16x2x4_Float16_4_ctor_arg0;
extern Variable Float16x2x4_Float16_4_ctor_arg1;
extern Function Float16x2x4_Float16_4_ctor;

/// f16x2x4
extern Function Float16x2x4_identity;

/// f16x2x4 with Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x2x4_raw_list_arg0;
extern Variable Float16x2x4_raw_list_arg1;
extern Variable Float16x2x4_raw_list_arg2;
extern Variable Float16x2x4_raw_list_arg3;
extern Variable Float16x2x4_raw_list_arg4;
extern Variable Float16x2x4_raw_list_arg5;
extern Variable Float16x2x4_raw_list_arg6;
extern Variable Float16x2x4_raw_list_arg7;
extern Function Float16x2x4_raw_list;

/// operator[] with Int32
extern Variable Float16x2x4_operator_index_Int32_arg0;
extern Function Float16x2x4_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float16x2x4_operator_index_UInt32_arg0;
extern Function Float16x2x4_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float16x2x4_operator_index_Int16_arg0;
extern Function Float16x2x4_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float16x2x4_operator_index_UInt16_arg0;
extern Function Float16x2x4_operator_index_UInt16;

/// operator+ with Float16x2x4
extern Variable Float16x2x4_operator_add_Float16x2x4_arg0;
extern Function Float16x2x4_operator_add_Float16x2x4;

/// operator- with Float16x2x4
extern Variable Float16x2x4_operator_sub_Float16x2x4_arg0;
extern Function Float16x2x4_operator_sub_Float16x2x4;

/// operator* with Float16x2x4
extern Variable Float16x2x4_operator_mul_Float16x2x4_arg0;
extern Function Float16x2x4_operator_mul_Float16x2x4;

/// operator+= with Float16x2x4
extern Variable Float16x2x4_operator_addasg_Float16x2x4_arg0;
extern Function Float16x2x4_operator_addasg_Float16x2x4;

/// operator-= with Float16x2x4
extern Variable Float16x2x4_operator_subasg_Float16x2x4_arg0;
extern Function Float16x2x4_operator_subasg_Float16x2x4;

/// operator*= with Float16x2x4
extern Variable Float16x2x4_operator_mulasg_Float16x2x4_arg0;
extern Function Float16x2x4_operator_mulasg_Float16x2x4;

/// operator* with Float16
extern Variable Float16x2x4_operator_scale_Float16_arg0;
extern Function Float16x2x4_operator_scale_Float16;

struct Float16x3x2 : public Type
{
    Float16x3x2();
};
extern Float16x3x2 Float16x3x2Type;

/// f16x3x2 with Float16x2, Float16x2, Float16x2
extern Variable Float16x3x2_Float16_2_ctor_arg0;
extern Variable Float16x3x2_Float16_2_ctor_arg1;
extern Variable Float16x3x2_Float16_2_ctor_arg2;
extern Function Float16x3x2_Float16_2_ctor;

/// f16x3x2
extern Function Float16x3x2_identity;

/// f16x3x2 with Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x3x2_raw_list_arg0;
extern Variable Float16x3x2_raw_list_arg1;
extern Variable Float16x3x2_raw_list_arg2;
extern Variable Float16x3x2_raw_list_arg3;
extern Variable Float16x3x2_raw_list_arg4;
extern Variable Float16x3x2_raw_list_arg5;
extern Function Float16x3x2_raw_list;

/// operator[] with Int32
extern Variable Float16x3x2_operator_index_Int32_arg0;
extern Function Float16x3x2_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float16x3x2_operator_index_UInt32_arg0;
extern Function Float16x3x2_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float16x3x2_operator_index_Int16_arg0;
extern Function Float16x3x2_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float16x3x2_operator_index_UInt16_arg0;
extern Function Float16x3x2_operator_index_UInt16;

/// operator+ with Float16x3x2
extern Variable Float16x3x2_operator_add_Float16x3x2_arg0;
extern Function Float16x3x2_operator_add_Float16x3x2;

/// operator- with Float16x3x2
extern Variable Float16x3x2_operator_sub_Float16x3x2_arg0;
extern Function Float16x3x2_operator_sub_Float16x3x2;

/// operator* with Float16x3x2
extern Variable Float16x3x2_operator_mul_Float16x3x2_arg0;
extern Function Float16x3x2_operator_mul_Float16x3x2;

/// operator+= with Float16x3x2
extern Variable Float16x3x2_operator_addasg_Float16x3x2_arg0;
extern Function Float16x3x2_operator_addasg_Float16x3x2;

/// operator-= with Float16x3x2
extern Variable Float16x3x2_operator_subasg_Float16x3x2_arg0;
extern Function Float16x3x2_operator_subasg_Float16x3x2;

/// operator*= with Float16x3x2
extern Variable Float16x3x2_operator_mulasg_Float16x3x2_arg0;
extern Function Float16x3x2_operator_mulasg_Float16x3x2;

/// operator* with Float16
extern Variable Float16x3x2_operator_scale_Float16_arg0;
extern Function Float16x3x2_operator_scale_Float16;

struct Float16x3x3 : public Type
{
    Float16x3x3();
};
extern Float16x3x3 Float16x3x3Type;

/// f16x3x3 with Float16x3, Float16x3, Float16x3
extern Variable Float16x3x3_Float16_3_ctor_arg0;
extern Variable Float16x3x3_Float16_3_ctor_arg1;
extern Variable Float16x3x3_Float16_3_ctor_arg2;
extern Function Float16x3x3_Float16_3_ctor;

/// f16x3x3
extern Function Float16x3x3_identity;

/// f16x3x3 with Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x3x3_raw_list_arg0;
extern Variable Float16x3x3_raw_list_arg1;
extern Variable Float16x3x3_raw_list_arg2;
extern Variable Float16x3x3_raw_list_arg3;
extern Variable Float16x3x3_raw_list_arg4;
extern Variable Float16x3x3_raw_list_arg5;
extern Variable Float16x3x3_raw_list_arg6;
extern Variable Float16x3x3_raw_list_arg7;
extern Variable Float16x3x3_raw_list_arg8;
extern Function Float16x3x3_raw_list;

/// operator[] with Int32
extern Variable Float16x3x3_operator_index_Int32_arg0;
extern Function Float16x3x3_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float16x3x3_operator_index_UInt32_arg0;
extern Function Float16x3x3_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float16x3x3_operator_index_Int16_arg0;
extern Function Float16x3x3_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float16x3x3_operator_index_UInt16_arg0;
extern Function Float16x3x3_operator_index_UInt16;

/// operator+ with Float16x3x3
extern Variable Float16x3x3_operator_add_Float16x3x3_arg0;
extern Function Float16x3x3_operator_add_Float16x3x3;

/// operator- with Float16x3x3
extern Variable Float16x3x3_operator_sub_Float16x3x3_arg0;
extern Function Float16x3x3_operator_sub_Float16x3x3;

/// operator* with Float16x3x3
extern Variable Float16x3x3_operator_mul_Float16x3x3_arg0;
extern Function Float16x3x3_operator_mul_Float16x3x3;

/// operator+= with Float16x3x3
extern Variable Float16x3x3_operator_addasg_Float16x3x3_arg0;
extern Function Float16x3x3_operator_addasg_Float16x3x3;

/// operator-= with Float16x3x3
extern Variable Float16x3x3_operator_subasg_Float16x3x3_arg0;
extern Function Float16x3x3_operator_subasg_Float16x3x3;

/// operator*= with Float16x3x3
extern Variable Float16x3x3_operator_mulasg_Float16x3x3_arg0;
extern Function Float16x3x3_operator_mulasg_Float16x3x3;

/// operator* with Float16
extern Variable Float16x3x3_operator_scale_Float16_arg0;
extern Function Float16x3x3_operator_scale_Float16;

struct Float16x3x4 : public Type
{
    Float16x3x4();
};
extern Float16x3x4 Float16x3x4Type;

/// f16x3x4 with Float16x4, Float16x4, Float16x4
extern Variable Float16x3x4_Float16_4_ctor_arg0;
extern Variable Float16x3x4_Float16_4_ctor_arg1;
extern Variable Float16x3x4_Float16_4_ctor_arg2;
extern Function Float16x3x4_Float16_4_ctor;

/// f16x3x4
extern Function Float16x3x4_identity;

/// f16x3x4 with Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x3x4_raw_list_arg0;
extern Variable Float16x3x4_raw_list_arg1;
extern Variable Float16x3x4_raw_list_arg2;
extern Variable Float16x3x4_raw_list_arg3;
extern Variable Float16x3x4_raw_list_arg4;
extern Variable Float16x3x4_raw_list_arg5;
extern Variable Float16x3x4_raw_list_arg6;
extern Variable Float16x3x4_raw_list_arg7;
extern Variable Float16x3x4_raw_list_arg8;
extern Variable Float16x3x4_raw_list_arg9;
extern Variable Float16x3x4_raw_list_arg10;
extern Variable Float16x3x4_raw_list_arg11;
extern Function Float16x3x4_raw_list;

/// operator[] with Int32
extern Variable Float16x3x4_operator_index_Int32_arg0;
extern Function Float16x3x4_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float16x3x4_operator_index_UInt32_arg0;
extern Function Float16x3x4_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float16x3x4_operator_index_Int16_arg0;
extern Function Float16x3x4_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float16x3x4_operator_index_UInt16_arg0;
extern Function Float16x3x4_operator_index_UInt16;

/// operator+ with Float16x3x4
extern Variable Float16x3x4_operator_add_Float16x3x4_arg0;
extern Function Float16x3x4_operator_add_Float16x3x4;

/// operator- with Float16x3x4
extern Variable Float16x3x4_operator_sub_Float16x3x4_arg0;
extern Function Float16x3x4_operator_sub_Float16x3x4;

/// operator* with Float16x3x4
extern Variable Float16x3x4_operator_mul_Float16x3x4_arg0;
extern Function Float16x3x4_operator_mul_Float16x3x4;

/// operator+= with Float16x3x4
extern Variable Float16x3x4_operator_addasg_Float16x3x4_arg0;
extern Function Float16x3x4_operator_addasg_Float16x3x4;

/// operator-= with Float16x3x4
extern Variable Float16x3x4_operator_subasg_Float16x3x4_arg0;
extern Function Float16x3x4_operator_subasg_Float16x3x4;

/// operator*= with Float16x3x4
extern Variable Float16x3x4_operator_mulasg_Float16x3x4_arg0;
extern Function Float16x3x4_operator_mulasg_Float16x3x4;

/// operator* with Float16
extern Variable Float16x3x4_operator_scale_Float16_arg0;
extern Function Float16x3x4_operator_scale_Float16;

struct Float16x4x2 : public Type
{
    Float16x4x2();
};
extern Float16x4x2 Float16x4x2Type;

/// f16x4x2 with Float16x2, Float16x2, Float16x2, Float16x2
extern Variable Float16x4x2_Float16_2_ctor_arg0;
extern Variable Float16x4x2_Float16_2_ctor_arg1;
extern Variable Float16x4x2_Float16_2_ctor_arg2;
extern Variable Float16x4x2_Float16_2_ctor_arg3;
extern Function Float16x4x2_Float16_2_ctor;

/// f16x4x2
extern Function Float16x4x2_identity;

/// f16x4x2 with Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x4x2_raw_list_arg0;
extern Variable Float16x4x2_raw_list_arg1;
extern Variable Float16x4x2_raw_list_arg2;
extern Variable Float16x4x2_raw_list_arg3;
extern Variable Float16x4x2_raw_list_arg4;
extern Variable Float16x4x2_raw_list_arg5;
extern Variable Float16x4x2_raw_list_arg6;
extern Variable Float16x4x2_raw_list_arg7;
extern Function Float16x4x2_raw_list;

/// operator[] with Int32
extern Variable Float16x4x2_operator_index_Int32_arg0;
extern Function Float16x4x2_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float16x4x2_operator_index_UInt32_arg0;
extern Function Float16x4x2_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float16x4x2_operator_index_Int16_arg0;
extern Function Float16x4x2_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float16x4x2_operator_index_UInt16_arg0;
extern Function Float16x4x2_operator_index_UInt16;

/// operator+ with Float16x4x2
extern Variable Float16x4x2_operator_add_Float16x4x2_arg0;
extern Function Float16x4x2_operator_add_Float16x4x2;

/// operator- with Float16x4x2
extern Variable Float16x4x2_operator_sub_Float16x4x2_arg0;
extern Function Float16x4x2_operator_sub_Float16x4x2;

/// operator* with Float16x4x2
extern Variable Float16x4x2_operator_mul_Float16x4x2_arg0;
extern Function Float16x4x2_operator_mul_Float16x4x2;

/// operator+= with Float16x4x2
extern Variable Float16x4x2_operator_addasg_Float16x4x2_arg0;
extern Function Float16x4x2_operator_addasg_Float16x4x2;

/// operator-= with Float16x4x2
extern Variable Float16x4x2_operator_subasg_Float16x4x2_arg0;
extern Function Float16x4x2_operator_subasg_Float16x4x2;

/// operator*= with Float16x4x2
extern Variable Float16x4x2_operator_mulasg_Float16x4x2_arg0;
extern Function Float16x4x2_operator_mulasg_Float16x4x2;

/// operator* with Float16
extern Variable Float16x4x2_operator_scale_Float16_arg0;
extern Function Float16x4x2_operator_scale_Float16;

struct Float16x4x3 : public Type
{
    Float16x4x3();
};
extern Float16x4x3 Float16x4x3Type;

/// f16x4x3 with Float16x3, Float16x3, Float16x3, Float16x3
extern Variable Float16x4x3_Float16_3_ctor_arg0;
extern Variable Float16x4x3_Float16_3_ctor_arg1;
extern Variable Float16x4x3_Float16_3_ctor_arg2;
extern Variable Float16x4x3_Float16_3_ctor_arg3;
extern Function Float16x4x3_Float16_3_ctor;

/// f16x4x3
extern Function Float16x4x3_identity;

/// f16x4x3 with Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x4x3_raw_list_arg0;
extern Variable Float16x4x3_raw_list_arg1;
extern Variable Float16x4x3_raw_list_arg2;
extern Variable Float16x4x3_raw_list_arg3;
extern Variable Float16x4x3_raw_list_arg4;
extern Variable Float16x4x3_raw_list_arg5;
extern Variable Float16x4x3_raw_list_arg6;
extern Variable Float16x4x3_raw_list_arg7;
extern Variable Float16x4x3_raw_list_arg8;
extern Variable Float16x4x3_raw_list_arg9;
extern Variable Float16x4x3_raw_list_arg10;
extern Variable Float16x4x3_raw_list_arg11;
extern Function Float16x4x3_raw_list;

/// operator[] with Int32
extern Variable Float16x4x3_operator_index_Int32_arg0;
extern Function Float16x4x3_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float16x4x3_operator_index_UInt32_arg0;
extern Function Float16x4x3_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float16x4x3_operator_index_Int16_arg0;
extern Function Float16x4x3_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float16x4x3_operator_index_UInt16_arg0;
extern Function Float16x4x3_operator_index_UInt16;

/// operator+ with Float16x4x3
extern Variable Float16x4x3_operator_add_Float16x4x3_arg0;
extern Function Float16x4x3_operator_add_Float16x4x3;

/// operator- with Float16x4x3
extern Variable Float16x4x3_operator_sub_Float16x4x3_arg0;
extern Function Float16x4x3_operator_sub_Float16x4x3;

/// operator* with Float16x4x3
extern Variable Float16x4x3_operator_mul_Float16x4x3_arg0;
extern Function Float16x4x3_operator_mul_Float16x4x3;

/// operator+= with Float16x4x3
extern Variable Float16x4x3_operator_addasg_Float16x4x3_arg0;
extern Function Float16x4x3_operator_addasg_Float16x4x3;

/// operator-= with Float16x4x3
extern Variable Float16x4x3_operator_subasg_Float16x4x3_arg0;
extern Function Float16x4x3_operator_subasg_Float16x4x3;

/// operator*= with Float16x4x3
extern Variable Float16x4x3_operator_mulasg_Float16x4x3_arg0;
extern Function Float16x4x3_operator_mulasg_Float16x4x3;

/// operator* with Float16
extern Variable Float16x4x3_operator_scale_Float16_arg0;
extern Function Float16x4x3_operator_scale_Float16;

struct Float16x4x4 : public Type
{
    Float16x4x4();
};
extern Float16x4x4 Float16x4x4Type;

/// f16x4x4 with Float16x4, Float16x4, Float16x4, Float16x4
extern Variable Float16x4x4_Float16_4_ctor_arg0;
extern Variable Float16x4x4_Float16_4_ctor_arg1;
extern Variable Float16x4x4_Float16_4_ctor_arg2;
extern Variable Float16x4x4_Float16_4_ctor_arg3;
extern Function Float16x4x4_Float16_4_ctor;

/// f16x4x4
extern Function Float16x4x4_identity;

/// f16x4x4 with Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x4x4_raw_list_arg0;
extern Variable Float16x4x4_raw_list_arg1;
extern Variable Float16x4x4_raw_list_arg2;
extern Variable Float16x4x4_raw_list_arg3;
extern Variable Float16x4x4_raw_list_arg4;
extern Variable Float16x4x4_raw_list_arg5;
extern Variable Float16x4x4_raw_list_arg6;
extern Variable Float16x4x4_raw_list_arg7;
extern Variable Float16x4x4_raw_list_arg8;
extern Variable Float16x4x4_raw_list_arg9;
extern Variable Float16x4x4_raw_list_arg10;
extern Variable Float16x4x4_raw_list_arg11;
extern Variable Float16x4x4_raw_list_arg12;
extern Variable Float16x4x4_raw_list_arg13;
extern Variable Float16x4x4_raw_list_arg14;
extern Variable Float16x4x4_raw_list_arg15;
extern Function Float16x4x4_raw_list;

/// operator[] with Int32
extern Variable Float16x4x4_operator_index_Int32_arg0;
extern Function Float16x4x4_operator_index_Int32;

/// operator[] with UInt32
extern Variable Float16x4x4_operator_index_UInt32_arg0;
extern Function Float16x4x4_operator_index_UInt32;

/// operator[] with Int16
extern Variable Float16x4x4_operator_index_Int16_arg0;
extern Function Float16x4x4_operator_index_Int16;

/// operator[] with UInt16
extern Variable Float16x4x4_operator_index_UInt16_arg0;
extern Function Float16x4x4_operator_index_UInt16;

/// operator+ with Float16x4x4
extern Variable Float16x4x4_operator_add_Float16x4x4_arg0;
extern Function Float16x4x4_operator_add_Float16x4x4;

/// operator- with Float16x4x4
extern Variable Float16x4x4_operator_sub_Float16x4x4_arg0;
extern Function Float16x4x4_operator_sub_Float16x4x4;

/// operator* with Float16x4x4
extern Variable Float16x4x4_operator_mul_Float16x4x4_arg0;
extern Function Float16x4x4_operator_mul_Float16x4x4;

/// operator+= with Float16x4x4
extern Variable Float16x4x4_operator_addasg_Float16x4x4_arg0;
extern Function Float16x4x4_operator_addasg_Float16x4x4;

/// operator-= with Float16x4x4
extern Variable Float16x4x4_operator_subasg_Float16x4x4_arg0;
extern Function Float16x4x4_operator_subasg_Float16x4x4;

/// operator*= with Float16x4x4
extern Variable Float16x4x4_operator_mulasg_Float16x4x4_arg0;
extern Function Float16x4x4_operator_mulasg_Float16x4x4;

/// operator* with Float16
extern Variable Float16x4x4_operator_scale_Float16_arg0;
extern Function Float16x4x4_operator_scale_Float16;

struct Texture1D : public Type
{
    Texture1D();
};
extern Texture1D Texture1DType;

struct Texture1DArray : public Type
{
    Texture1DArray();
};
extern Texture1DArray Texture1DArrayType;

struct Texture2D : public Type
{
    Texture2D();
};
extern Texture2D Texture2DType;

struct Texture2DMS : public Type
{
    Texture2DMS();
};
extern Texture2DMS Texture2DMSType;

struct Texture2DMSArray : public Type
{
    Texture2DMSArray();
};
extern Texture2DMSArray Texture2DMSArrayType;

struct Texture2DArray : public Type
{
    Texture2DArray();
};
extern Texture2DArray Texture2DArrayType;

struct Texture3D : public Type
{
    Texture3D();
};
extern Texture3D Texture3DType;

struct TextureCube : public Type
{
    TextureCube();
};
extern TextureCube TextureCubeType;

struct TextureCubeArray : public Type
{
    TextureCubeArray();
};
extern TextureCubeArray TextureCubeArrayType;

struct PixelCache : public Type
{
    PixelCache();
};
extern PixelCache PixelCacheType;

struct PixelCacheMS : public Type
{
    PixelCacheMS();
};
extern PixelCacheMS PixelCacheMSType;

struct Sampler : public Type
{
    Sampler();
};
extern Sampler SamplerType;

struct FunctionPtr : public Type
{
    FunctionPtr();
};
extern FunctionPtr FunctionPtrType;

struct AccelerationStructure : public Type
{
    AccelerationStructure();
};
extern AccelerationStructure AccelerationStructureType;

struct Void : public Type
{
    Void();
};
extern Void VoidType;

struct CompareMode : public Enumeration
{
    CompareMode();
};
extern CompareMode CompareModeType;

extern EnumExpression CompareModeLess;
extern EnumExpression CompareModeLessEqual;
extern EnumExpression CompareModeGreater;
extern EnumExpression CompareModeGreaterEqual;
extern EnumExpression CompareModeEqual;
extern EnumExpression CompareModeNotEqual;
extern EnumExpression CompareModeAlways;
extern EnumExpression CompareModeNever;
struct StencilOp : public Enumeration
{
    StencilOp();
};
extern StencilOp StencilOpType;

extern EnumExpression StencilOpKeep;
extern EnumExpression StencilOpZero;
extern EnumExpression StencilOpReplace;
extern EnumExpression StencilOpIncrement;
extern EnumExpression StencilOpDecrement;
extern EnumExpression StencilOpInvert;
extern EnumExpression StencilOpIncrementWrap;
extern EnumExpression StencilOpDecrementWrap;
struct ExecutionScope : public Enumeration
{
    ExecutionScope();
};
extern ExecutionScope ExecutionScopeType;

extern EnumExpression ExecutionScopeGlobal;
extern EnumExpression ExecutionScopeDevice;
extern EnumExpression ExecutionScopeWorkgroup;
extern EnumExpression ExecutionScopeSubgroup;
extern EnumExpression ExecutionScopeInvocation;
extern EnumExpression ExecutionScopeQueue;
struct MemorySemantics : public Enumeration
{
    MemorySemantics();
};
extern MemorySemantics MemorySemanticsType;

extern EnumExpression MemorySemanticsAcquire;
extern EnumExpression MemorySemanticsRelease;
extern EnumExpression MemorySemanticsAcquireRelease;
extern EnumExpression MemorySemanticsSequentiallyConsistent;
extern EnumExpression MemorySemanticsRelaxed;
struct PolygonMode : public Enumeration
{
    PolygonMode();
};
extern PolygonMode PolygonModeType;

extern EnumExpression PolygonModeFill;
extern EnumExpression PolygonModeLine;
extern EnumExpression PolygonModePoint;
struct CullMode : public Enumeration
{
    CullMode();
};
extern CullMode CullModeType;

extern EnumExpression CullModeNone;
extern EnumExpression CullModeFront;
extern EnumExpression CullModeBack;
extern EnumExpression CullModeFrontAndBack;
struct WindingOrder : public Enumeration
{
    WindingOrder();
};
extern WindingOrder WindingOrderType;

extern EnumExpression WindingOrderClockwise;
extern EnumExpression WindingOrderCounterClockwise;
struct LogicOp : public Enumeration
{
    LogicOp();
};
extern LogicOp LogicOpType;

extern EnumExpression LogicOpAnd;
extern EnumExpression LogicOpAndInverted;
extern EnumExpression LogicOpAndReverse;
extern EnumExpression LogicOpClear;
extern EnumExpression LogicOpCopy;
extern EnumExpression LogicOpCopyInverted;
extern EnumExpression LogicOpEquivalence;
extern EnumExpression LogicOpInvert;
extern EnumExpression LogicOpNand;
extern EnumExpression LogicOpNo;
extern EnumExpression LogicOpNor;
extern EnumExpression LogicOpOr;
extern EnumExpression LogicOpOrInverted;
extern EnumExpression LogicOpOrReverse;
extern EnumExpression LogicOpSet;
extern EnumExpression LogicOpXor;
struct BlendFactor : public Enumeration
{
    BlendFactor();
};
extern BlendFactor BlendFactorType;

extern EnumExpression BlendFactorZero;
extern EnumExpression BlendFactorOne;
extern EnumExpression BlendFactorSourceColor;
extern EnumExpression BlendFactorOneMinusSourceColor;
extern EnumExpression BlendFactorSourceAlpha;
extern EnumExpression BlendFactorOneMinusSourceAlpha;
extern EnumExpression BlendFactorDestinationColor;
extern EnumExpression BlendFactorOneMinusDestinationColor;
extern EnumExpression BlendFactorDestinationAlpha;
extern EnumExpression BlendFactorOneMinusDestinationAlpha;
extern EnumExpression BlendFactorConstantColor;
extern EnumExpression BlendFactorOneMinusConstantColor;
extern EnumExpression BlendFactorConstantAlpha;
extern EnumExpression BlendFactorOneMinusConstantAlpha;
struct BlendOperation : public Enumeration
{
    BlendOperation();
};
extern BlendOperation BlendOperationType;

extern EnumExpression BlendOperationAdd;
extern EnumExpression BlendOperationSubtract;
extern EnumExpression BlendOperationReverseSubtract;
extern EnumExpression BlendOperationMin;
extern EnumExpression BlendOperationMax;
struct BlendColorMask : public Enumeration
{
    BlendColorMask();
};
extern BlendColorMask BlendColorMaskType;

extern EnumExpression BlendColorMaskNone;
extern EnumExpression BlendColorMaskR;
extern EnumExpression BlendColorMaskRG;
extern EnumExpression BlendColorMaskRGB;
extern EnumExpression BlendColorMaskRGBA;
struct FilterMode : public Enumeration
{
    FilterMode();
};
extern FilterMode FilterModeType;

extern EnumExpression FilterModePoint;
extern EnumExpression FilterModeLinear;
extern EnumExpression FilterModeMinMagMipmapLinear;
extern EnumExpression FilterModeMinMagLinearMipPoint;
extern EnumExpression FilterModeMinLinearMagMipPoint;
extern EnumExpression FilterModeMinMagMipPoint;
extern EnumExpression FilterModeMinMagPointMipLinear;
extern EnumExpression FilterModeMinPointMagMipLinear;
extern EnumExpression FilterModeMinLinearMagPointMipLinear;
extern EnumExpression FilterModeMinPointMagLinearMipPoint;
struct AddressMode : public Enumeration
{
    AddressMode();
};
extern AddressMode AddressModeType;

extern EnumExpression AddressModeRepeat;
extern EnumExpression AddressModeMirror;
extern EnumExpression AddressModeClamp;
extern EnumExpression AddressModeBorder;
struct BorderColor : public Enumeration
{
    BorderColor();
};
extern BorderColor BorderColorType;

extern EnumExpression BorderColorTransparent;
extern EnumExpression BorderColorBlack;
extern EnumExpression BorderColorWhite;
extern Variable StencilStateFail;
extern Variable StencilStatePass;
extern Variable StencilStateDepthFail;
extern Variable StencilStateCompareFunction;
extern Variable StencilStateCompareMask;
extern Variable StencilStateWriteMask;
extern Variable StencilStateReference;
struct StencilState : public Type
{
    StencilState();
};
extern StencilState StencilStateType;

extern Variable RenderStateDepthClampEnabled;
extern Variable RenderStateDepthTestEnabled;
extern Variable RenderStateDepthWriteEnabled;
extern Variable RenderStateDepthBiasEnabled;
extern Variable RenderStateDepthBiasConstantFactor;
extern Variable RenderStateDepthBiasClamp;
extern Variable RenderStateDepthBiasSlopeFactor;
extern Variable RenderStateDepthTestFunction;
extern Variable RenderStateDepthBoundsTestEnabled;
extern Variable RenderStateDepthBoundsMin;
extern Variable RenderStateDepthBoundsMax;
extern Variable RenderStateNoRasterization;
extern Variable RenderStatePolygonMode;
extern Variable RenderStateCullMode;
extern Variable RenderStateWindingOrder;
extern Variable RenderStateStencilEnabled;
extern Variable RenderStateStencilFront;
extern Variable RenderStateStencilBack;
extern Variable RenderStateLogicOpEnabled;
extern Variable RenderStateLogicOp;
extern Variable RenderStateBlendEnabled;
extern IntExpression RenderStateBlendEnabledArraySize;
extern Variable RenderStateSourceBlend;
extern IntExpression RenderStateSourceBlendArraySize;
extern Variable RenderStateDestinationBlend;
extern IntExpression RenderStateDestinationBlendArraySize;
extern Variable RenderStateSourceAlphaBlend;
extern IntExpression RenderStateSourceAlphaBlendArraySize;
extern Variable RenderStateDestinationAlphaBlend;
extern IntExpression RenderStateDestinationAlphaBlendArraySize;
extern Variable RenderStateColorBlendOp;
extern IntExpression RenderStateColorBlendOpArraySize;
extern Variable RenderStateAlphaBlendOp;
extern IntExpression RenderStateAlphaBlendOpArraySize;
extern Variable RenderStateMask;
extern IntExpression RenderStateMaskArraySize;
struct RenderState : public Type
{
    RenderState();
};
extern RenderState RenderStateType;

extern Variable SamplerStateAddress;
extern Variable SamplerStateAddressU;
extern Variable SamplerStateAddressV;
extern Variable SamplerStateAddressW;
extern Variable SamplerStateFilter;
extern Variable SamplerStateMinFilter;
extern Variable SamplerStateMagFilter;
extern Variable SamplerStateMipFilter;
extern Variable SamplerStateMipLodBias;
extern Variable SamplerStateAnisotropyEnabled;
extern Variable SamplerStateMaxAnisotropy;
extern Variable SamplerStateCompareEnabled;
extern Variable SamplerStateCompareFunction;
extern Variable SamplerStateMinLod;
extern Variable SamplerStateMaxLod;
extern Variable SamplerStateBorderColor;
extern Variable SamplerStateUnnormalizedSamplingEnabled;
struct SamplerState : public Type
{
    SamplerState();
};
extern SamplerState SamplerStateType;

extern Variable ProgramVertexShader;
extern Variable ProgramHullShader;
extern Variable ProgramDomainShader;
extern Variable ProgramGeometryShader;
extern Variable ProgramPixelShader;
extern Variable ProgramComputeShader;
extern Variable ProgramTaskShader;
extern Variable ProgramMeshShader;
extern Variable ProgramRayGenerationShader;
extern Variable ProgramRayAnyHitShader;
extern Variable ProgramRayClosestHitShader;
extern Variable ProgramRayMissShader;
extern Variable ProgramRayIntersectionShader;
extern Variable ProgramRayCallableShader;
extern Variable ProgramRenderState;
struct Program : public Type
{
    Program();
};
extern Program ProgramType;


} // namespace GPULang

