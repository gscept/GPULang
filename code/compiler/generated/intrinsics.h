//-------------------------------------------------
// *** Generated by type_gen.py. ***
//       DO NOT MODIFY!!!
//-------------------------------------------------
namespace GPULang
{
/// acos with Float32
extern Variable acos_Float32_arg;
extern Function acos_Float32;

/// acos with Float32x2
extern Variable acos_Float32x2_arg;
extern Function acos_Float32x2;

/// acos with Float32x3
extern Variable acos_Float32x3_arg;
extern Function acos_Float32x3;

/// acos with Float32x4
extern Variable acos_Float32x4_arg;
extern Function acos_Float32x4;

/// acos with Float16
extern Variable acos_Float16_arg;
extern Function acos_Float16;

/// acos with Float16x2
extern Variable acos_Float16x2_arg;
extern Function acos_Float16x2;

/// acos with Float16x3
extern Variable acos_Float16x3_arg;
extern Function acos_Float16x3;

/// acos with Float16x4
extern Variable acos_Float16x4_arg;
extern Function acos_Float16x4;

/// acosh with Float32
extern Variable acosh_Float32_arg;
extern Function acosh_Float32;

/// acosh with Float32x2
extern Variable acosh_Float32x2_arg;
extern Function acosh_Float32x2;

/// acosh with Float32x3
extern Variable acosh_Float32x3_arg;
extern Function acosh_Float32x3;

/// acosh with Float32x4
extern Variable acosh_Float32x4_arg;
extern Function acosh_Float32x4;

/// acosh with Float16
extern Variable acosh_Float16_arg;
extern Function acosh_Float16;

/// acosh with Float16x2
extern Variable acosh_Float16x2_arg;
extern Function acosh_Float16x2;

/// acosh with Float16x3
extern Variable acosh_Float16x3_arg;
extern Function acosh_Float16x3;

/// acosh with Float16x4
extern Variable acosh_Float16x4_arg;
extern Function acosh_Float16x4;

/// asin with Float32
extern Variable asin_Float32_arg;
extern Function asin_Float32;

/// asin with Float32x2
extern Variable asin_Float32x2_arg;
extern Function asin_Float32x2;

/// asin with Float32x3
extern Variable asin_Float32x3_arg;
extern Function asin_Float32x3;

/// asin with Float32x4
extern Variable asin_Float32x4_arg;
extern Function asin_Float32x4;

/// asin with Float16
extern Variable asin_Float16_arg;
extern Function asin_Float16;

/// asin with Float16x2
extern Variable asin_Float16x2_arg;
extern Function asin_Float16x2;

/// asin with Float16x3
extern Variable asin_Float16x3_arg;
extern Function asin_Float16x3;

/// asin with Float16x4
extern Variable asin_Float16x4_arg;
extern Function asin_Float16x4;

/// asinh with Float32
extern Variable asinh_Float32_arg;
extern Function asinh_Float32;

/// asinh with Float32x2
extern Variable asinh_Float32x2_arg;
extern Function asinh_Float32x2;

/// asinh with Float32x3
extern Variable asinh_Float32x3_arg;
extern Function asinh_Float32x3;

/// asinh with Float32x4
extern Variable asinh_Float32x4_arg;
extern Function asinh_Float32x4;

/// asinh with Float16
extern Variable asinh_Float16_arg;
extern Function asinh_Float16;

/// asinh with Float16x2
extern Variable asinh_Float16x2_arg;
extern Function asinh_Float16x2;

/// asinh with Float16x3
extern Variable asinh_Float16x3_arg;
extern Function asinh_Float16x3;

/// asinh with Float16x4
extern Variable asinh_Float16x4_arg;
extern Function asinh_Float16x4;

/// atan with Float32
extern Variable atan_Float32_arg;
extern Function atan_Float32;

/// atan with Float32x2
extern Variable atan_Float32x2_arg;
extern Function atan_Float32x2;

/// atan with Float32x3
extern Variable atan_Float32x3_arg;
extern Function atan_Float32x3;

/// atan with Float32x4
extern Variable atan_Float32x4_arg;
extern Function atan_Float32x4;

/// atan with Float16
extern Variable atan_Float16_arg;
extern Function atan_Float16;

/// atan with Float16x2
extern Variable atan_Float16x2_arg;
extern Function atan_Float16x2;

/// atan with Float16x3
extern Variable atan_Float16x3_arg;
extern Function atan_Float16x3;

/// atan with Float16x4
extern Variable atan_Float16x4_arg;
extern Function atan_Float16x4;

/// atanh with Float32
extern Variable atanh_Float32_arg;
extern Function atanh_Float32;

/// atanh with Float32x2
extern Variable atanh_Float32x2_arg;
extern Function atanh_Float32x2;

/// atanh with Float32x3
extern Variable atanh_Float32x3_arg;
extern Function atanh_Float32x3;

/// atanh with Float32x4
extern Variable atanh_Float32x4_arg;
extern Function atanh_Float32x4;

/// atanh with Float16
extern Variable atanh_Float16_arg;
extern Function atanh_Float16;

/// atanh with Float16x2
extern Variable atanh_Float16x2_arg;
extern Function atanh_Float16x2;

/// atanh with Float16x3
extern Variable atanh_Float16x3_arg;
extern Function atanh_Float16x3;

/// atanh with Float16x4
extern Variable atanh_Float16x4_arg;
extern Function atanh_Float16x4;

/// cos with Float32
extern Variable cos_Float32_arg;
extern Function cos_Float32;

/// cos with Float32x2
extern Variable cos_Float32x2_arg;
extern Function cos_Float32x2;

/// cos with Float32x3
extern Variable cos_Float32x3_arg;
extern Function cos_Float32x3;

/// cos with Float32x4
extern Variable cos_Float32x4_arg;
extern Function cos_Float32x4;

/// cos with Float16
extern Variable cos_Float16_arg;
extern Function cos_Float16;

/// cos with Float16x2
extern Variable cos_Float16x2_arg;
extern Function cos_Float16x2;

/// cos with Float16x3
extern Variable cos_Float16x3_arg;
extern Function cos_Float16x3;

/// cos with Float16x4
extern Variable cos_Float16x4_arg;
extern Function cos_Float16x4;

/// cosh with Float32
extern Variable cosh_Float32_arg;
extern Function cosh_Float32;

/// cosh with Float32x2
extern Variable cosh_Float32x2_arg;
extern Function cosh_Float32x2;

/// cosh with Float32x3
extern Variable cosh_Float32x3_arg;
extern Function cosh_Float32x3;

/// cosh with Float32x4
extern Variable cosh_Float32x4_arg;
extern Function cosh_Float32x4;

/// cosh with Float16
extern Variable cosh_Float16_arg;
extern Function cosh_Float16;

/// cosh with Float16x2
extern Variable cosh_Float16x2_arg;
extern Function cosh_Float16x2;

/// cosh with Float16x3
extern Variable cosh_Float16x3_arg;
extern Function cosh_Float16x3;

/// cosh with Float16x4
extern Variable cosh_Float16x4_arg;
extern Function cosh_Float16x4;

/// exp with Float32
extern Variable exp_Float32_arg;
extern Function exp_Float32;

/// exp with Float32x2
extern Variable exp_Float32x2_arg;
extern Function exp_Float32x2;

/// exp with Float32x3
extern Variable exp_Float32x3_arg;
extern Function exp_Float32x3;

/// exp with Float32x4
extern Variable exp_Float32x4_arg;
extern Function exp_Float32x4;

/// exp with Float16
extern Variable exp_Float16_arg;
extern Function exp_Float16;

/// exp with Float16x2
extern Variable exp_Float16x2_arg;
extern Function exp_Float16x2;

/// exp with Float16x3
extern Variable exp_Float16x3_arg;
extern Function exp_Float16x3;

/// exp with Float16x4
extern Variable exp_Float16x4_arg;
extern Function exp_Float16x4;

/// exp2 with Float32
extern Variable exp2_Float32_arg;
extern Function exp2_Float32;

/// exp2 with Float32x2
extern Variable exp2_Float32x2_arg;
extern Function exp2_Float32x2;

/// exp2 with Float32x3
extern Variable exp2_Float32x3_arg;
extern Function exp2_Float32x3;

/// exp2 with Float32x4
extern Variable exp2_Float32x4_arg;
extern Function exp2_Float32x4;

/// exp2 with Float16
extern Variable exp2_Float16_arg;
extern Function exp2_Float16;

/// exp2 with Float16x2
extern Variable exp2_Float16x2_arg;
extern Function exp2_Float16x2;

/// exp2 with Float16x3
extern Variable exp2_Float16x3_arg;
extern Function exp2_Float16x3;

/// exp2 with Float16x4
extern Variable exp2_Float16x4_arg;
extern Function exp2_Float16x4;

/// invSqrt with Float32
extern Variable invSqrt_Float32_arg;
extern Function invSqrt_Float32;

/// invSqrt with Float32x2
extern Variable invSqrt_Float32x2_arg;
extern Function invSqrt_Float32x2;

/// invSqrt with Float32x3
extern Variable invSqrt_Float32x3_arg;
extern Function invSqrt_Float32x3;

/// invSqrt with Float32x4
extern Variable invSqrt_Float32x4_arg;
extern Function invSqrt_Float32x4;

/// invSqrt with Float16
extern Variable invSqrt_Float16_arg;
extern Function invSqrt_Float16;

/// invSqrt with Float16x2
extern Variable invSqrt_Float16x2_arg;
extern Function invSqrt_Float16x2;

/// invSqrt with Float16x3
extern Variable invSqrt_Float16x3_arg;
extern Function invSqrt_Float16x3;

/// invSqrt with Float16x4
extern Variable invSqrt_Float16x4_arg;
extern Function invSqrt_Float16x4;

/// log with Float32
extern Variable log_Float32_arg;
extern Function log_Float32;

/// log with Float32x2
extern Variable log_Float32x2_arg;
extern Function log_Float32x2;

/// log with Float32x3
extern Variable log_Float32x3_arg;
extern Function log_Float32x3;

/// log with Float32x4
extern Variable log_Float32x4_arg;
extern Function log_Float32x4;

/// log with Float16
extern Variable log_Float16_arg;
extern Function log_Float16;

/// log with Float16x2
extern Variable log_Float16x2_arg;
extern Function log_Float16x2;

/// log with Float16x3
extern Variable log_Float16x3_arg;
extern Function log_Float16x3;

/// log with Float16x4
extern Variable log_Float16x4_arg;
extern Function log_Float16x4;

/// log2 with Float32
extern Variable log2_Float32_arg;
extern Function log2_Float32;

/// log2 with Float32x2
extern Variable log2_Float32x2_arg;
extern Function log2_Float32x2;

/// log2 with Float32x3
extern Variable log2_Float32x3_arg;
extern Function log2_Float32x3;

/// log2 with Float32x4
extern Variable log2_Float32x4_arg;
extern Function log2_Float32x4;

/// log2 with Float16
extern Variable log2_Float16_arg;
extern Function log2_Float16;

/// log2 with Float16x2
extern Variable log2_Float16x2_arg;
extern Function log2_Float16x2;

/// log2 with Float16x3
extern Variable log2_Float16x3_arg;
extern Function log2_Float16x3;

/// log2 with Float16x4
extern Variable log2_Float16x4_arg;
extern Function log2_Float16x4;

/// sin with Float32
extern Variable sin_Float32_arg;
extern Function sin_Float32;

/// sin with Float32x2
extern Variable sin_Float32x2_arg;
extern Function sin_Float32x2;

/// sin with Float32x3
extern Variable sin_Float32x3_arg;
extern Function sin_Float32x3;

/// sin with Float32x4
extern Variable sin_Float32x4_arg;
extern Function sin_Float32x4;

/// sin with Float16
extern Variable sin_Float16_arg;
extern Function sin_Float16;

/// sin with Float16x2
extern Variable sin_Float16x2_arg;
extern Function sin_Float16x2;

/// sin with Float16x3
extern Variable sin_Float16x3_arg;
extern Function sin_Float16x3;

/// sin with Float16x4
extern Variable sin_Float16x4_arg;
extern Function sin_Float16x4;

/// sinh with Float32
extern Variable sinh_Float32_arg;
extern Function sinh_Float32;

/// sinh with Float32x2
extern Variable sinh_Float32x2_arg;
extern Function sinh_Float32x2;

/// sinh with Float32x3
extern Variable sinh_Float32x3_arg;
extern Function sinh_Float32x3;

/// sinh with Float32x4
extern Variable sinh_Float32x4_arg;
extern Function sinh_Float32x4;

/// sinh with Float16
extern Variable sinh_Float16_arg;
extern Function sinh_Float16;

/// sinh with Float16x2
extern Variable sinh_Float16x2_arg;
extern Function sinh_Float16x2;

/// sinh with Float16x3
extern Variable sinh_Float16x3_arg;
extern Function sinh_Float16x3;

/// sinh with Float16x4
extern Variable sinh_Float16x4_arg;
extern Function sinh_Float16x4;

/// sqrt with Float32
extern Variable sqrt_Float32_arg;
extern Function sqrt_Float32;

/// sqrt with Float32x2
extern Variable sqrt_Float32x2_arg;
extern Function sqrt_Float32x2;

/// sqrt with Float32x3
extern Variable sqrt_Float32x3_arg;
extern Function sqrt_Float32x3;

/// sqrt with Float32x4
extern Variable sqrt_Float32x4_arg;
extern Function sqrt_Float32x4;

/// sqrt with Float16
extern Variable sqrt_Float16_arg;
extern Function sqrt_Float16;

/// sqrt with Float16x2
extern Variable sqrt_Float16x2_arg;
extern Function sqrt_Float16x2;

/// sqrt with Float16x3
extern Variable sqrt_Float16x3_arg;
extern Function sqrt_Float16x3;

/// sqrt with Float16x4
extern Variable sqrt_Float16x4_arg;
extern Function sqrt_Float16x4;

/// tan with Float32
extern Variable tan_Float32_arg;
extern Function tan_Float32;

/// tan with Float32x2
extern Variable tan_Float32x2_arg;
extern Function tan_Float32x2;

/// tan with Float32x3
extern Variable tan_Float32x3_arg;
extern Function tan_Float32x3;

/// tan with Float32x4
extern Variable tan_Float32x4_arg;
extern Function tan_Float32x4;

/// tan with Float16
extern Variable tan_Float16_arg;
extern Function tan_Float16;

/// tan with Float16x2
extern Variable tan_Float16x2_arg;
extern Function tan_Float16x2;

/// tan with Float16x3
extern Variable tan_Float16x3_arg;
extern Function tan_Float16x3;

/// tan with Float16x4
extern Variable tan_Float16x4_arg;
extern Function tan_Float16x4;

/// tanh with Float32
extern Variable tanh_Float32_arg;
extern Function tanh_Float32;

/// tanh with Float32x2
extern Variable tanh_Float32x2_arg;
extern Function tanh_Float32x2;

/// tanh with Float32x3
extern Variable tanh_Float32x3_arg;
extern Function tanh_Float32x3;

/// tanh with Float32x4
extern Variable tanh_Float32x4_arg;
extern Function tanh_Float32x4;

/// tanh with Float16
extern Variable tanh_Float16_arg;
extern Function tanh_Float16;

/// tanh with Float16x2
extern Variable tanh_Float16x2_arg;
extern Function tanh_Float16x2;

/// tanh with Float16x3
extern Variable tanh_Float16x3_arg;
extern Function tanh_Float16x3;

/// tanh with Float16x4
extern Variable tanh_Float16x4_arg;
extern Function tanh_Float16x4;

/// tanh with Float32, Float32
extern Variable atan2_Float32_y;
extern Variable atan2_Float32_x;
extern Function atan2_Float32;

/// tanh with Float32x2, Float32x2
extern Variable atan2_Float32x2_y;
extern Variable atan2_Float32x2_x;
extern Function atan2_Float32x2;

/// tanh with Float32x3, Float32x3
extern Variable atan2_Float32x3_y;
extern Variable atan2_Float32x3_x;
extern Function atan2_Float32x3;

/// tanh with Float32x4, Float32x4
extern Variable atan2_Float32x4_y;
extern Variable atan2_Float32x4_x;
extern Function atan2_Float32x4;

/// tanh with Float16, Float16
extern Variable atan2_Float16_y;
extern Variable atan2_Float16_x;
extern Function atan2_Float16;

/// tanh with Float16x2, Float16x2
extern Variable atan2_Float16x2_y;
extern Variable atan2_Float16x2_x;
extern Function atan2_Float16x2;

/// tanh with Float16x3, Float16x3
extern Variable atan2_Float16x3_y;
extern Variable atan2_Float16x3_x;
extern Function atan2_Float16x3;

/// tanh with Float16x4, Float16x4
extern Variable atan2_Float16x4_y;
extern Variable atan2_Float16x4_x;
extern Function atan2_Float16x4;

/// pow with Float32, Float32
extern Variable pow_Float32_arg;
extern Variable pow_Float32_exp;
extern Function pow_Float32;

/// pow with Float32x2, Float32x2
extern Variable pow_Float32x2_arg;
extern Variable pow_Float32x2_exp;
extern Function pow_Float32x2;

/// pow with Float32x3, Float32x3
extern Variable pow_Float32x3_arg;
extern Variable pow_Float32x3_exp;
extern Function pow_Float32x3;

/// pow with Float32x4, Float32x4
extern Variable pow_Float32x4_arg;
extern Variable pow_Float32x4_exp;
extern Function pow_Float32x4;

/// pow with Float16, Float16
extern Variable pow_Float16_arg;
extern Variable pow_Float16_exp;
extern Function pow_Float16;

/// pow with Float16x2, Float16x2
extern Variable pow_Float16x2_arg;
extern Variable pow_Float16x2_exp;
extern Function pow_Float16x2;

/// pow with Float16x3, Float16x3
extern Variable pow_Float16x3_arg;
extern Variable pow_Float16x3_exp;
extern Function pow_Float16x3;

/// pow with Float16x4, Float16x4
extern Variable pow_Float16x4_arg;
extern Variable pow_Float16x4_exp;
extern Function pow_Float16x4;

/// mad with Float32, Float32, Float32
extern Variable mad_Float32_arg;
extern Variable mad_Float32_mul;
extern Variable mad_Float32_add;
extern Function mad_Float32;

/// mad with Float32x2, Float32x2, Float32x2
extern Variable mad_Float32x2_arg;
extern Variable mad_Float32x2_mul;
extern Variable mad_Float32x2_add;
extern Function mad_Float32x2;

/// mad with Float32x3, Float32x3, Float32x3
extern Variable mad_Float32x3_arg;
extern Variable mad_Float32x3_mul;
extern Variable mad_Float32x3_add;
extern Function mad_Float32x3;

/// mad with Float32x4, Float32x4, Float32x4
extern Variable mad_Float32x4_arg;
extern Variable mad_Float32x4_mul;
extern Variable mad_Float32x4_add;
extern Function mad_Float32x4;

/// mad with Float16, Float16, Float16
extern Variable mad_Float16_arg;
extern Variable mad_Float16_mul;
extern Variable mad_Float16_add;
extern Function mad_Float16;

/// mad with Float16x2, Float16x2, Float16x2
extern Variable mad_Float16x2_arg;
extern Variable mad_Float16x2_mul;
extern Variable mad_Float16x2_add;
extern Function mad_Float16x2;

/// mad with Float16x3, Float16x3, Float16x3
extern Variable mad_Float16x3_arg;
extern Variable mad_Float16x3_mul;
extern Variable mad_Float16x3_add;
extern Function mad_Float16x3;

/// mad with Float16x4, Float16x4, Float16x4
extern Variable mad_Float16x4_arg;
extern Variable mad_Float16x4_mul;
extern Variable mad_Float16x4_add;
extern Function mad_Float16x4;

/// mad with Int32, Int32, Int32
extern Variable mad_Int32_arg;
extern Variable mad_Int32_mul;
extern Variable mad_Int32_add;
extern Function mad_Int32;

/// mad with Int32x2, Int32x2, Int32x2
extern Variable mad_Int32x2_arg;
extern Variable mad_Int32x2_mul;
extern Variable mad_Int32x2_add;
extern Function mad_Int32x2;

/// mad with Int32x3, Int32x3, Int32x3
extern Variable mad_Int32x3_arg;
extern Variable mad_Int32x3_mul;
extern Variable mad_Int32x3_add;
extern Function mad_Int32x3;

/// mad with Int32x4, Int32x4, Int32x4
extern Variable mad_Int32x4_arg;
extern Variable mad_Int32x4_mul;
extern Variable mad_Int32x4_add;
extern Function mad_Int32x4;

/// mad with Int16, Int16, Int16
extern Variable mad_Int16_arg;
extern Variable mad_Int16_mul;
extern Variable mad_Int16_add;
extern Function mad_Int16;

/// mad with Int16x2, Int16x2, Int16x2
extern Variable mad_Int16x2_arg;
extern Variable mad_Int16x2_mul;
extern Variable mad_Int16x2_add;
extern Function mad_Int16x2;

/// mad with Int16x3, Int16x3, Int16x3
extern Variable mad_Int16x3_arg;
extern Variable mad_Int16x3_mul;
extern Variable mad_Int16x3_add;
extern Function mad_Int16x3;

/// mad with Int16x4, Int16x4, Int16x4
extern Variable mad_Int16x4_arg;
extern Variable mad_Int16x4_mul;
extern Variable mad_Int16x4_add;
extern Function mad_Int16x4;

/// mad with UInt32, UInt32, UInt32
extern Variable mad_UInt32_arg;
extern Variable mad_UInt32_mul;
extern Variable mad_UInt32_add;
extern Function mad_UInt32;

/// mad with UInt32x2, UInt32x2, UInt32x2
extern Variable mad_UInt32x2_arg;
extern Variable mad_UInt32x2_mul;
extern Variable mad_UInt32x2_add;
extern Function mad_UInt32x2;

/// mad with UInt32x3, UInt32x3, UInt32x3
extern Variable mad_UInt32x3_arg;
extern Variable mad_UInt32x3_mul;
extern Variable mad_UInt32x3_add;
extern Function mad_UInt32x3;

/// mad with UInt32x4, UInt32x4, UInt32x4
extern Variable mad_UInt32x4_arg;
extern Variable mad_UInt32x4_mul;
extern Variable mad_UInt32x4_add;
extern Function mad_UInt32x4;

/// mad with UInt16, UInt16, UInt16
extern Variable mad_UInt16_arg;
extern Variable mad_UInt16_mul;
extern Variable mad_UInt16_add;
extern Function mad_UInt16;

/// mad with UInt16x2, UInt16x2, UInt16x2
extern Variable mad_UInt16x2_arg;
extern Variable mad_UInt16x2_mul;
extern Variable mad_UInt16x2_add;
extern Function mad_UInt16x2;

/// mad with UInt16x3, UInt16x3, UInt16x3
extern Variable mad_UInt16x3_arg;
extern Variable mad_UInt16x3_mul;
extern Variable mad_UInt16x3_add;
extern Function mad_UInt16x3;

/// mad with UInt16x4, UInt16x4, UInt16x4
extern Variable mad_UInt16x4_arg;
extern Variable mad_UInt16x4_mul;
extern Variable mad_UInt16x4_add;
extern Function mad_UInt16x4;

/// dot with Float32x2, Float32x2
extern Variable dot_Float32x2_x;
extern Variable dot_Float32x2_y;
extern Function dot_Float32x2;

/// dot with Float32x3, Float32x3
extern Variable dot_Float32x3_x;
extern Variable dot_Float32x3_y;
extern Function dot_Float32x3;

/// dot with Float32x4, Float32x4
extern Variable dot_Float32x4_x;
extern Variable dot_Float32x4_y;
extern Function dot_Float32x4;

/// dot with Float16x2, Float16x2
extern Variable dot_Float16x2_x;
extern Variable dot_Float16x2_y;
extern Function dot_Float16x2;

/// dot with Float16x3, Float16x3
extern Variable dot_Float16x3_x;
extern Variable dot_Float16x3_y;
extern Function dot_Float16x3;

/// dot with Float16x4, Float16x4
extern Variable dot_Float16x4_x;
extern Variable dot_Float16x4_y;
extern Function dot_Float16x4;

/// reflect with Float32x2, Float32x2
extern Variable reflect_Float32x2_incident;
extern Variable reflect_Float32x2_normal;
extern Function reflect_Float32x2;

/// reflect with Float32x3, Float32x3
extern Variable reflect_Float32x3_incident;
extern Variable reflect_Float32x3_normal;
extern Function reflect_Float32x3;

/// reflect with Float32x4, Float32x4
extern Variable reflect_Float32x4_incident;
extern Variable reflect_Float32x4_normal;
extern Function reflect_Float32x4;

/// reflect with Float16x2, Float16x2
extern Variable reflect_Float16x2_incident;
extern Variable reflect_Float16x2_normal;
extern Function reflect_Float16x2;

/// reflect with Float16x3, Float16x3
extern Variable reflect_Float16x3_incident;
extern Variable reflect_Float16x3_normal;
extern Function reflect_Float16x3;

/// reflect with Float16x4, Float16x4
extern Variable reflect_Float16x4_incident;
extern Variable reflect_Float16x4_normal;
extern Function reflect_Float16x4;

/// refract with Float32x2, Float32x2, Float32x2
extern Variable refract_Float32x2_incident;
extern Variable refract_Float32x2_normal;
extern Variable refract_Float32x2_ior;
extern Function refract_Float32x2;

/// refract with Float32x3, Float32x3, Float32x3
extern Variable refract_Float32x3_incident;
extern Variable refract_Float32x3_normal;
extern Variable refract_Float32x3_ior;
extern Function refract_Float32x3;

/// refract with Float32x4, Float32x4, Float32x4
extern Variable refract_Float32x4_incident;
extern Variable refract_Float32x4_normal;
extern Variable refract_Float32x4_ior;
extern Function refract_Float32x4;

/// refract with Float16x2, Float16x2, Float16x2
extern Variable refract_Float16x2_incident;
extern Variable refract_Float16x2_normal;
extern Variable refract_Float16x2_ior;
extern Function refract_Float16x2;

/// refract with Float16x3, Float16x3, Float16x3
extern Variable refract_Float16x3_incident;
extern Variable refract_Float16x3_normal;
extern Variable refract_Float16x3_ior;
extern Function refract_Float16x3;

/// refract with Float16x4, Float16x4, Float16x4
extern Variable refract_Float16x4_incident;
extern Variable refract_Float16x4_normal;
extern Variable refract_Float16x4_ior;
extern Function refract_Float16x4;

/// cross with Float32x3, Float32x3
extern Variable cross_Float32x3_v0;
extern Variable cross_Float32x3_v1;
extern Function cross_Float32x3;

/// cross with Float16x3, Float16x3
extern Variable cross_Float16x3_v0;
extern Variable cross_Float16x3_v1;
extern Function cross_Float16x3;

/// cross with Float32x2
extern Variable length_Float32x2_arg;
extern Function length_Float32x2;

/// cross with Float32x3
extern Variable length_Float32x3_arg;
extern Function length_Float32x3;

/// cross with Float32x4
extern Variable length_Float32x4_arg;
extern Function length_Float32x4;

/// cross with Float16x2
extern Variable length_Float16x2_arg;
extern Function length_Float16x2;

/// cross with Float16x3
extern Variable length_Float16x3_arg;
extern Function length_Float16x3;

/// cross with Float16x4
extern Variable length_Float16x4_arg;
extern Function length_Float16x4;

/// cross with Float32x2
extern Variable normalize_Float32x2_arg;
extern Function normalize_Float32x2;

/// cross with Float32x3
extern Variable normalize_Float32x3_arg;
extern Function normalize_Float32x3;

/// cross with Float32x4
extern Variable normalize_Float32x4_arg;
extern Function normalize_Float32x4;

/// cross with Float16x2
extern Variable normalize_Float16x2_arg;
extern Function normalize_Float16x2;

/// cross with Float16x3
extern Variable normalize_Float16x3_arg;
extern Function normalize_Float16x3;

/// cross with Float16x4
extern Variable normalize_Float16x4_arg;
extern Function normalize_Float16x4;

/// distance with Float32x2, Float32x2
extern Variable distance_Float32x2_p0;
extern Variable distance_Float32x2_p1;
extern Function distance_Float32x2;

/// distance with Float32x3, Float32x3
extern Variable distance_Float32x3_p0;
extern Variable distance_Float32x3_p1;
extern Function distance_Float32x3;

/// distance with Float32x4, Float32x4
extern Variable distance_Float32x4_p0;
extern Variable distance_Float32x4_p1;
extern Function distance_Float32x4;

/// distance with Float16x2, Float16x2
extern Variable distance_Float16x2_p0;
extern Variable distance_Float16x2_p1;
extern Function distance_Float16x2;

/// distance with Float16x3, Float16x3
extern Variable distance_Float16x3_p0;
extern Variable distance_Float16x3_p1;
extern Function distance_Float16x3;

/// distance with Float16x4, Float16x4
extern Variable distance_Float16x4_p0;
extern Variable distance_Float16x4_p1;
extern Function distance_Float16x4;

/// distance with Float32, Float32
extern Variable min_Float32_x;
extern Variable min_Float32_y;
extern Function min_Float32;

/// distance with Float32x2, Float32x2
extern Variable min_Float32x2_x;
extern Variable min_Float32x2_y;
extern Function min_Float32x2;

/// distance with Float32x3, Float32x3
extern Variable min_Float32x3_x;
extern Variable min_Float32x3_y;
extern Function min_Float32x3;

/// distance with Float32x4, Float32x4
extern Variable min_Float32x4_x;
extern Variable min_Float32x4_y;
extern Function min_Float32x4;

/// distance with Float16, Float16
extern Variable min_Float16_x;
extern Variable min_Float16_y;
extern Function min_Float16;

/// distance with Float16x2, Float16x2
extern Variable min_Float16x2_x;
extern Variable min_Float16x2_y;
extern Function min_Float16x2;

/// distance with Float16x3, Float16x3
extern Variable min_Float16x3_x;
extern Variable min_Float16x3_y;
extern Function min_Float16x3;

/// distance with Float16x4, Float16x4
extern Variable min_Float16x4_x;
extern Variable min_Float16x4_y;
extern Function min_Float16x4;

/// distance with Int32, Int32
extern Variable min_Int32_x;
extern Variable min_Int32_y;
extern Function min_Int32;

/// distance with Int32x2, Int32x2
extern Variable min_Int32x2_x;
extern Variable min_Int32x2_y;
extern Function min_Int32x2;

/// distance with Int32x3, Int32x3
extern Variable min_Int32x3_x;
extern Variable min_Int32x3_y;
extern Function min_Int32x3;

/// distance with Int32x4, Int32x4
extern Variable min_Int32x4_x;
extern Variable min_Int32x4_y;
extern Function min_Int32x4;

/// distance with Int16, Int16
extern Variable min_Int16_x;
extern Variable min_Int16_y;
extern Function min_Int16;

/// distance with Int16x2, Int16x2
extern Variable min_Int16x2_x;
extern Variable min_Int16x2_y;
extern Function min_Int16x2;

/// distance with Int16x3, Int16x3
extern Variable min_Int16x3_x;
extern Variable min_Int16x3_y;
extern Function min_Int16x3;

/// distance with Int16x4, Int16x4
extern Variable min_Int16x4_x;
extern Variable min_Int16x4_y;
extern Function min_Int16x4;

/// distance with UInt32, UInt32
extern Variable min_UInt32_x;
extern Variable min_UInt32_y;
extern Function min_UInt32;

/// distance with UInt32x2, UInt32x2
extern Variable min_UInt32x2_x;
extern Variable min_UInt32x2_y;
extern Function min_UInt32x2;

/// distance with UInt32x3, UInt32x3
extern Variable min_UInt32x3_x;
extern Variable min_UInt32x3_y;
extern Function min_UInt32x3;

/// distance with UInt32x4, UInt32x4
extern Variable min_UInt32x4_x;
extern Variable min_UInt32x4_y;
extern Function min_UInt32x4;

/// distance with UInt16, UInt16
extern Variable min_UInt16_x;
extern Variable min_UInt16_y;
extern Function min_UInt16;

/// distance with UInt16x2, UInt16x2
extern Variable min_UInt16x2_x;
extern Variable min_UInt16x2_y;
extern Function min_UInt16x2;

/// distance with UInt16x3, UInt16x3
extern Variable min_UInt16x3_x;
extern Variable min_UInt16x3_y;
extern Function min_UInt16x3;

/// distance with UInt16x4, UInt16x4
extern Variable min_UInt16x4_x;
extern Variable min_UInt16x4_y;
extern Function min_UInt16x4;

/// distance with Float32, Float32
extern Variable max_Float32_x;
extern Variable max_Float32_y;
extern Function max_Float32;

/// distance with Float32x2, Float32x2
extern Variable max_Float32x2_x;
extern Variable max_Float32x2_y;
extern Function max_Float32x2;

/// distance with Float32x3, Float32x3
extern Variable max_Float32x3_x;
extern Variable max_Float32x3_y;
extern Function max_Float32x3;

/// distance with Float32x4, Float32x4
extern Variable max_Float32x4_x;
extern Variable max_Float32x4_y;
extern Function max_Float32x4;

/// distance with Float16, Float16
extern Variable max_Float16_x;
extern Variable max_Float16_y;
extern Function max_Float16;

/// distance with Float16x2, Float16x2
extern Variable max_Float16x2_x;
extern Variable max_Float16x2_y;
extern Function max_Float16x2;

/// distance with Float16x3, Float16x3
extern Variable max_Float16x3_x;
extern Variable max_Float16x3_y;
extern Function max_Float16x3;

/// distance with Float16x4, Float16x4
extern Variable max_Float16x4_x;
extern Variable max_Float16x4_y;
extern Function max_Float16x4;

/// distance with Int32, Int32
extern Variable max_Int32_x;
extern Variable max_Int32_y;
extern Function max_Int32;

/// distance with Int32x2, Int32x2
extern Variable max_Int32x2_x;
extern Variable max_Int32x2_y;
extern Function max_Int32x2;

/// distance with Int32x3, Int32x3
extern Variable max_Int32x3_x;
extern Variable max_Int32x3_y;
extern Function max_Int32x3;

/// distance with Int32x4, Int32x4
extern Variable max_Int32x4_x;
extern Variable max_Int32x4_y;
extern Function max_Int32x4;

/// distance with Int16, Int16
extern Variable max_Int16_x;
extern Variable max_Int16_y;
extern Function max_Int16;

/// distance with Int16x2, Int16x2
extern Variable max_Int16x2_x;
extern Variable max_Int16x2_y;
extern Function max_Int16x2;

/// distance with Int16x3, Int16x3
extern Variable max_Int16x3_x;
extern Variable max_Int16x3_y;
extern Function max_Int16x3;

/// distance with Int16x4, Int16x4
extern Variable max_Int16x4_x;
extern Variable max_Int16x4_y;
extern Function max_Int16x4;

/// distance with UInt32, UInt32
extern Variable max_UInt32_x;
extern Variable max_UInt32_y;
extern Function max_UInt32;

/// distance with UInt32x2, UInt32x2
extern Variable max_UInt32x2_x;
extern Variable max_UInt32x2_y;
extern Function max_UInt32x2;

/// distance with UInt32x3, UInt32x3
extern Variable max_UInt32x3_x;
extern Variable max_UInt32x3_y;
extern Function max_UInt32x3;

/// distance with UInt32x4, UInt32x4
extern Variable max_UInt32x4_x;
extern Variable max_UInt32x4_y;
extern Function max_UInt32x4;

/// distance with UInt16, UInt16
extern Variable max_UInt16_x;
extern Variable max_UInt16_y;
extern Function max_UInt16;

/// distance with UInt16x2, UInt16x2
extern Variable max_UInt16x2_x;
extern Variable max_UInt16x2_y;
extern Function max_UInt16x2;

/// distance with UInt16x3, UInt16x3
extern Variable max_UInt16x3_x;
extern Variable max_UInt16x3_y;
extern Function max_UInt16x3;

/// distance with UInt16x4, UInt16x4
extern Variable max_UInt16x4_x;
extern Variable max_UInt16x4_y;
extern Function max_UInt16x4;

/// clamp with Float32, Float32, Float32
extern Variable clamp_Float32_val;
extern Variable clamp_Float32_min;
extern Variable clamp_Float32_max;
extern Function clamp_Float32;

/// clamp with Float32x2, Float32x2, Float32x2
extern Variable clamp_Float32x2_val;
extern Variable clamp_Float32x2_min;
extern Variable clamp_Float32x2_max;
extern Function clamp_Float32x2;

/// clamp with Float32x3, Float32x3, Float32x3
extern Variable clamp_Float32x3_val;
extern Variable clamp_Float32x3_min;
extern Variable clamp_Float32x3_max;
extern Function clamp_Float32x3;

/// clamp with Float32x4, Float32x4, Float32x4
extern Variable clamp_Float32x4_val;
extern Variable clamp_Float32x4_min;
extern Variable clamp_Float32x4_max;
extern Function clamp_Float32x4;

/// clamp with Float16, Float16, Float16
extern Variable clamp_Float16_val;
extern Variable clamp_Float16_min;
extern Variable clamp_Float16_max;
extern Function clamp_Float16;

/// clamp with Float16x2, Float16x2, Float16x2
extern Variable clamp_Float16x2_val;
extern Variable clamp_Float16x2_min;
extern Variable clamp_Float16x2_max;
extern Function clamp_Float16x2;

/// clamp with Float16x3, Float16x3, Float16x3
extern Variable clamp_Float16x3_val;
extern Variable clamp_Float16x3_min;
extern Variable clamp_Float16x3_max;
extern Function clamp_Float16x3;

/// clamp with Float16x4, Float16x4, Float16x4
extern Variable clamp_Float16x4_val;
extern Variable clamp_Float16x4_min;
extern Variable clamp_Float16x4_max;
extern Function clamp_Float16x4;

/// clamp with Int32, Int32, Int32
extern Variable clamp_Int32_val;
extern Variable clamp_Int32_min;
extern Variable clamp_Int32_max;
extern Function clamp_Int32;

/// clamp with Int32x2, Int32x2, Int32x2
extern Variable clamp_Int32x2_val;
extern Variable clamp_Int32x2_min;
extern Variable clamp_Int32x2_max;
extern Function clamp_Int32x2;

/// clamp with Int32x3, Int32x3, Int32x3
extern Variable clamp_Int32x3_val;
extern Variable clamp_Int32x3_min;
extern Variable clamp_Int32x3_max;
extern Function clamp_Int32x3;

/// clamp with Int32x4, Int32x4, Int32x4
extern Variable clamp_Int32x4_val;
extern Variable clamp_Int32x4_min;
extern Variable clamp_Int32x4_max;
extern Function clamp_Int32x4;

/// clamp with Int16, Int16, Int16
extern Variable clamp_Int16_val;
extern Variable clamp_Int16_min;
extern Variable clamp_Int16_max;
extern Function clamp_Int16;

/// clamp with Int16x2, Int16x2, Int16x2
extern Variable clamp_Int16x2_val;
extern Variable clamp_Int16x2_min;
extern Variable clamp_Int16x2_max;
extern Function clamp_Int16x2;

/// clamp with Int16x3, Int16x3, Int16x3
extern Variable clamp_Int16x3_val;
extern Variable clamp_Int16x3_min;
extern Variable clamp_Int16x3_max;
extern Function clamp_Int16x3;

/// clamp with Int16x4, Int16x4, Int16x4
extern Variable clamp_Int16x4_val;
extern Variable clamp_Int16x4_min;
extern Variable clamp_Int16x4_max;
extern Function clamp_Int16x4;

/// clamp with UInt32, UInt32, UInt32
extern Variable clamp_UInt32_val;
extern Variable clamp_UInt32_min;
extern Variable clamp_UInt32_max;
extern Function clamp_UInt32;

/// clamp with UInt32x2, UInt32x2, UInt32x2
extern Variable clamp_UInt32x2_val;
extern Variable clamp_UInt32x2_min;
extern Variable clamp_UInt32x2_max;
extern Function clamp_UInt32x2;

/// clamp with UInt32x3, UInt32x3, UInt32x3
extern Variable clamp_UInt32x3_val;
extern Variable clamp_UInt32x3_min;
extern Variable clamp_UInt32x3_max;
extern Function clamp_UInt32x3;

/// clamp with UInt32x4, UInt32x4, UInt32x4
extern Variable clamp_UInt32x4_val;
extern Variable clamp_UInt32x4_min;
extern Variable clamp_UInt32x4_max;
extern Function clamp_UInt32x4;

/// clamp with UInt16, UInt16, UInt16
extern Variable clamp_UInt16_val;
extern Variable clamp_UInt16_min;
extern Variable clamp_UInt16_max;
extern Function clamp_UInt16;

/// clamp with UInt16x2, UInt16x2, UInt16x2
extern Variable clamp_UInt16x2_val;
extern Variable clamp_UInt16x2_min;
extern Variable clamp_UInt16x2_max;
extern Function clamp_UInt16x2;

/// clamp with UInt16x3, UInt16x3, UInt16x3
extern Variable clamp_UInt16x3_val;
extern Variable clamp_UInt16x3_min;
extern Variable clamp_UInt16x3_max;
extern Function clamp_UInt16x3;

/// clamp with UInt16x4, UInt16x4, UInt16x4
extern Variable clamp_UInt16x4_val;
extern Variable clamp_UInt16x4_min;
extern Variable clamp_UInt16x4_max;
extern Function clamp_UInt16x4;

/// lerp with Float32x2, Float32x2, Float32x2
extern Variable lerp_Float32x2_a;
extern Variable lerp_Float32x2_b;
extern Variable lerp_Float32x2_t;
extern Function lerp_Float32x2;

/// lerp with Float32x3, Float32x3, Float32x3
extern Variable lerp_Float32x3_a;
extern Variable lerp_Float32x3_b;
extern Variable lerp_Float32x3_t;
extern Function lerp_Float32x3;

/// lerp with Float32x4, Float32x4, Float32x4
extern Variable lerp_Float32x4_a;
extern Variable lerp_Float32x4_b;
extern Variable lerp_Float32x4_t;
extern Function lerp_Float32x4;

/// lerp with Float16x2, Float16x2, Float16x2
extern Variable lerp_Float16x2_a;
extern Variable lerp_Float16x2_b;
extern Variable lerp_Float16x2_t;
extern Function lerp_Float16x2;

/// lerp with Float16x3, Float16x3, Float16x3
extern Variable lerp_Float16x3_a;
extern Variable lerp_Float16x3_b;
extern Variable lerp_Float16x3_t;
extern Function lerp_Float16x3;

/// lerp with Float16x4, Float16x4, Float16x4
extern Variable lerp_Float16x4_a;
extern Variable lerp_Float16x4_b;
extern Variable lerp_Float16x4_t;
extern Function lerp_Float16x4;

/// step with Float32, Float32
extern Variable step_Float32_edge;
extern Variable step_Float32_x;
extern Function step_Float32;

/// step with Float32x2, Float32x2
extern Variable step_Float32x2_edge;
extern Variable step_Float32x2_x;
extern Function step_Float32x2;

/// step with Float32x3, Float32x3
extern Variable step_Float32x3_edge;
extern Variable step_Float32x3_x;
extern Function step_Float32x3;

/// step with Float32x4, Float32x4
extern Variable step_Float32x4_edge;
extern Variable step_Float32x4_x;
extern Function step_Float32x4;

/// step with Float16, Float16
extern Variable step_Float16_edge;
extern Variable step_Float16_x;
extern Function step_Float16;

/// step with Float16x2, Float16x2
extern Variable step_Float16x2_edge;
extern Variable step_Float16x2_x;
extern Function step_Float16x2;

/// step with Float16x3, Float16x3
extern Variable step_Float16x3_edge;
extern Variable step_Float16x3_x;
extern Function step_Float16x3;

/// step with Float16x4, Float16x4
extern Variable step_Float16x4_edge;
extern Variable step_Float16x4_x;
extern Function step_Float16x4;

/// smoothstep with Float32, Float32, Float32
extern Variable smoothstep_Float32_edge0;
extern Variable smoothstep_Float32_edge1;
extern Variable smoothstep_Float32_x;
extern Function smoothstep_Float32;

/// smoothstep with Float32x2, Float32x2, Float32x2
extern Variable smoothstep_Float32x2_edge0;
extern Variable smoothstep_Float32x2_edge1;
extern Variable smoothstep_Float32x2_x;
extern Function smoothstep_Float32x2;

/// smoothstep with Float32x3, Float32x3, Float32x3
extern Variable smoothstep_Float32x3_edge0;
extern Variable smoothstep_Float32x3_edge1;
extern Variable smoothstep_Float32x3_x;
extern Function smoothstep_Float32x3;

/// smoothstep with Float32x4, Float32x4, Float32x4
extern Variable smoothstep_Float32x4_edge0;
extern Variable smoothstep_Float32x4_edge1;
extern Variable smoothstep_Float32x4_x;
extern Function smoothstep_Float32x4;

/// smoothstep with Float16, Float16, Float16
extern Variable smoothstep_Float16_edge0;
extern Variable smoothstep_Float16_edge1;
extern Variable smoothstep_Float16_x;
extern Function smoothstep_Float16;

/// smoothstep with Float16x2, Float16x2, Float16x2
extern Variable smoothstep_Float16x2_edge0;
extern Variable smoothstep_Float16x2_edge1;
extern Variable smoothstep_Float16x2_x;
extern Function smoothstep_Float16x2;

/// smoothstep with Float16x3, Float16x3, Float16x3
extern Variable smoothstep_Float16x3_edge0;
extern Variable smoothstep_Float16x3_edge1;
extern Variable smoothstep_Float16x3_x;
extern Function smoothstep_Float16x3;

/// smoothstep with Float16x4, Float16x4, Float16x4
extern Variable smoothstep_Float16x4_edge0;
extern Variable smoothstep_Float16x4_edge1;
extern Variable smoothstep_Float16x4_x;
extern Function smoothstep_Float16x4;

/// ceil with Float32
extern Variable ceil_Float32_arg;
extern Function ceil_Float32;

/// ceil with Float32x2
extern Variable ceil_Float32x2_arg;
extern Function ceil_Float32x2;

/// ceil with Float32x3
extern Variable ceil_Float32x3_arg;
extern Function ceil_Float32x3;

/// ceil with Float32x4
extern Variable ceil_Float32x4_arg;
extern Function ceil_Float32x4;

/// ceil with Float16
extern Variable ceil_Float16_arg;
extern Function ceil_Float16;

/// ceil with Float16x2
extern Variable ceil_Float16x2_arg;
extern Function ceil_Float16x2;

/// ceil with Float16x3
extern Variable ceil_Float16x3_arg;
extern Function ceil_Float16x3;

/// ceil with Float16x4
extern Variable ceil_Float16x4_arg;
extern Function ceil_Float16x4;

/// floor with Float32
extern Variable floor_Float32_arg;
extern Function floor_Float32;

/// floor with Float32x2
extern Variable floor_Float32x2_arg;
extern Function floor_Float32x2;

/// floor with Float32x3
extern Variable floor_Float32x3_arg;
extern Function floor_Float32x3;

/// floor with Float32x4
extern Variable floor_Float32x4_arg;
extern Function floor_Float32x4;

/// floor with Float16
extern Variable floor_Float16_arg;
extern Function floor_Float16;

/// floor with Float16x2
extern Variable floor_Float16x2_arg;
extern Function floor_Float16x2;

/// floor with Float16x3
extern Variable floor_Float16x3_arg;
extern Function floor_Float16x3;

/// floor with Float16x4
extern Variable floor_Float16x4_arg;
extern Function floor_Float16x4;

/// fract with Float32
extern Variable fract_Float32_arg;
extern Function fract_Float32;

/// fract with Float32x2
extern Variable fract_Float32x2_arg;
extern Function fract_Float32x2;

/// fract with Float32x3
extern Variable fract_Float32x3_arg;
extern Function fract_Float32x3;

/// fract with Float32x4
extern Variable fract_Float32x4_arg;
extern Function fract_Float32x4;

/// fract with Float16
extern Variable fract_Float16_arg;
extern Function fract_Float16;

/// fract with Float16x2
extern Variable fract_Float16x2_arg;
extern Function fract_Float16x2;

/// fract with Float16x3
extern Variable fract_Float16x3_arg;
extern Function fract_Float16x3;

/// fract with Float16x4
extern Variable fract_Float16x4_arg;
extern Function fract_Float16x4;

/// saturate with Float32
extern Variable saturate_Float32_arg;
extern Function saturate_Float32;

/// saturate with Float32x2
extern Variable saturate_Float32x2_arg;
extern Function saturate_Float32x2;

/// saturate with Float32x3
extern Variable saturate_Float32x3_arg;
extern Function saturate_Float32x3;

/// saturate with Float32x4
extern Variable saturate_Float32x4_arg;
extern Function saturate_Float32x4;

/// saturate with Float16
extern Variable saturate_Float16_arg;
extern Function saturate_Float16;

/// saturate with Float16x2
extern Variable saturate_Float16x2_arg;
extern Function saturate_Float16x2;

/// saturate with Float16x3
extern Variable saturate_Float16x3_arg;
extern Function saturate_Float16x3;

/// saturate with Float16x4
extern Variable saturate_Float16x4_arg;
extern Function saturate_Float16x4;

/// trunc with Float32
extern Variable trunc_Float32_arg;
extern Function trunc_Float32;

/// trunc with Float32x2
extern Variable trunc_Float32x2_arg;
extern Function trunc_Float32x2;

/// trunc with Float32x3
extern Variable trunc_Float32x3_arg;
extern Function trunc_Float32x3;

/// trunc with Float32x4
extern Variable trunc_Float32x4_arg;
extern Function trunc_Float32x4;

/// trunc with Float16
extern Variable trunc_Float16_arg;
extern Function trunc_Float16;

/// trunc with Float16x2
extern Variable trunc_Float16x2_arg;
extern Function trunc_Float16x2;

/// trunc with Float16x3
extern Variable trunc_Float16x3_arg;
extern Function trunc_Float16x3;

/// trunc with Float16x4
extern Variable trunc_Float16x4_arg;
extern Function trunc_Float16x4;

/// ddx with Float32
extern Variable ddx_Float32_arg;
extern Function ddx_Float32;

/// ddx with Float32x2
extern Variable ddx_Float32x2_arg;
extern Function ddx_Float32x2;

/// ddx with Float32x3
extern Variable ddx_Float32x3_arg;
extern Function ddx_Float32x3;

/// ddx with Float32x4
extern Variable ddx_Float32x4_arg;
extern Function ddx_Float32x4;

/// ddx with Float16
extern Variable ddx_Float16_arg;
extern Function ddx_Float16;

/// ddx with Float16x2
extern Variable ddx_Float16x2_arg;
extern Function ddx_Float16x2;

/// ddx with Float16x3
extern Variable ddx_Float16x3_arg;
extern Function ddx_Float16x3;

/// ddx with Float16x4
extern Variable ddx_Float16x4_arg;
extern Function ddx_Float16x4;

/// ddy with Float32
extern Variable ddy_Float32_arg;
extern Function ddy_Float32;

/// ddy with Float32x2
extern Variable ddy_Float32x2_arg;
extern Function ddy_Float32x2;

/// ddy with Float32x3
extern Variable ddy_Float32x3_arg;
extern Function ddy_Float32x3;

/// ddy with Float32x4
extern Variable ddy_Float32x4_arg;
extern Function ddy_Float32x4;

/// ddy with Float16
extern Variable ddy_Float16_arg;
extern Function ddy_Float16;

/// ddy with Float16x2
extern Variable ddy_Float16x2_arg;
extern Function ddy_Float16x2;

/// ddy with Float16x3
extern Variable ddy_Float16x3_arg;
extern Function ddy_Float16x3;

/// ddy with Float16x4
extern Variable ddy_Float16x4_arg;
extern Function ddy_Float16x4;

/// fwidth with Float32
extern Variable fwidth_Float32_arg;
extern Function fwidth_Float32;

/// fwidth with Float32x2
extern Variable fwidth_Float32x2_arg;
extern Function fwidth_Float32x2;

/// fwidth with Float32x3
extern Variable fwidth_Float32x3_arg;
extern Function fwidth_Float32x3;

/// fwidth with Float32x4
extern Variable fwidth_Float32x4_arg;
extern Function fwidth_Float32x4;

/// fwidth with Float16
extern Variable fwidth_Float16_arg;
extern Function fwidth_Float16;

/// fwidth with Float16x2
extern Variable fwidth_Float16x2_arg;
extern Function fwidth_Float16x2;

/// fwidth with Float16x3
extern Variable fwidth_Float16x3_arg;
extern Function fwidth_Float16x3;

/// fwidth with Float16x4
extern Variable fwidth_Float16x4_arg;
extern Function fwidth_Float16x4;

/// sign with Int32
extern Variable sign_Int32_arg;
extern Function sign_Int32;

/// sign with Int32x2
extern Variable sign_Int32x2_arg;
extern Function sign_Int32x2;

/// sign with Int32x3
extern Variable sign_Int32x3_arg;
extern Function sign_Int32x3;

/// sign with Int32x4
extern Variable sign_Int32x4_arg;
extern Function sign_Int32x4;

/// sign with Int16
extern Variable sign_Int16_arg;
extern Function sign_Int16;

/// sign with Int16x2
extern Variable sign_Int16x2_arg;
extern Function sign_Int16x2;

/// sign with Int16x3
extern Variable sign_Int16x3_arg;
extern Function sign_Int16x3;

/// sign with Int16x4
extern Variable sign_Int16x4_arg;
extern Function sign_Int16x4;

/// sign with Float32
extern Variable sign_Float32_arg;
extern Function sign_Float32;

/// sign with Float32x2
extern Variable sign_Float32x2_arg;
extern Function sign_Float32x2;

/// sign with Float32x3
extern Variable sign_Float32x3_arg;
extern Function sign_Float32x3;

/// sign with Float32x4
extern Variable sign_Float32x4_arg;
extern Function sign_Float32x4;

/// sign with Float16
extern Variable sign_Float16_arg;
extern Function sign_Float16;

/// sign with Float16x2
extern Variable sign_Float16x2_arg;
extern Function sign_Float16x2;

/// sign with Float16x3
extern Variable sign_Float16x3_arg;
extern Function sign_Float16x3;

/// sign with Float16x4
extern Variable sign_Float16x4_arg;
extern Function sign_Float16x4;

/// abs with Int32
extern Variable abs_Int32_arg;
extern Function abs_Int32;

/// abs with Int32x2
extern Variable abs_Int32x2_arg;
extern Function abs_Int32x2;

/// abs with Int32x3
extern Variable abs_Int32x3_arg;
extern Function abs_Int32x3;

/// abs with Int32x4
extern Variable abs_Int32x4_arg;
extern Function abs_Int32x4;

/// abs with Int16
extern Variable abs_Int16_arg;
extern Function abs_Int16;

/// abs with Int16x2
extern Variable abs_Int16x2_arg;
extern Function abs_Int16x2;

/// abs with Int16x3
extern Variable abs_Int16x3_arg;
extern Function abs_Int16x3;

/// abs with Int16x4
extern Variable abs_Int16x4_arg;
extern Function abs_Int16x4;

/// abs with Float32
extern Variable abs_Float32_arg;
extern Function abs_Float32;

/// abs with Float32x2
extern Variable abs_Float32x2_arg;
extern Function abs_Float32x2;

/// abs with Float32x3
extern Variable abs_Float32x3_arg;
extern Function abs_Float32x3;

/// abs with Float32x4
extern Variable abs_Float32x4_arg;
extern Function abs_Float32x4;

/// abs with Float16
extern Variable abs_Float16_arg;
extern Function abs_Float16;

/// abs with Float16x2
extern Variable abs_Float16x2_arg;
extern Function abs_Float16x2;

/// abs with Float16x3
extern Variable abs_Float16x3_arg;
extern Function abs_Float16x3;

/// abs with Float16x4
extern Variable abs_Float16x4_arg;
extern Function abs_Float16x4;

/// castToF16 with Float16x4
extern Variable castToF16_UInt16_arg;
extern Function castToF16_UInt16;

/// castToF16 with Float16x4
extern Variable castToF16_Int16_arg;
extern Function castToF16_Int16;

/// castToU16 with Float16x4
extern Variable castToU16_Float16_arg;
extern Function castToU16_Float16;

/// castToU16 with Float16x4
extern Variable castToU16_Int16_arg;
extern Function castToU16_Int16;

/// castToI16 with Float16x4
extern Variable castToI16_Float16_arg;
extern Function castToI16_Float16;

/// castToI16 with Float16x4
extern Variable castToI16_UInt16_arg;
extern Function castToI16_UInt16;

/// castToF32 with Float16x4
extern Variable castToF32_UInt32_arg;
extern Function castToF32_UInt32;

/// castToF32 with Float16x4
extern Variable castToF32_Int32_arg;
extern Function castToF32_Int32;

/// castToU32 with Float16x4
extern Variable castToU32_Float32_arg;
extern Function castToU32_Float32;

/// castToU32 with Float16x4
extern Variable castToU32_Int32_arg;
extern Function castToU32_Int32;

/// castToI32 with Float16x4
extern Variable castToI32_Float32_arg;
extern Function castToI32_Float32;

/// castToI32 with Float16x4
extern Variable castToI32_UInt32_arg;
extern Function castToI32_UInt32;

/// any with Bool8
extern Variable any_Bool8_arg;
extern Function any_Bool8;

/// any with Bool8x2
extern Variable any_Bool8x2_arg;
extern Function any_Bool8x2;

/// any with Bool8x3
extern Variable any_Bool8x3_arg;
extern Function any_Bool8x3;

/// any with Bool8x4
extern Variable any_Bool8x4_arg;
extern Function any_Bool8x4;

/// all with Bool8
extern Variable all_Bool8_arg;
extern Function all_Bool8;

/// all with Bool8x2
extern Variable all_Bool8x2_arg;
extern Function all_Bool8x2;

/// all with Bool8x3
extern Variable all_Bool8x3_arg;
extern Function all_Bool8x3;

/// all with Bool8x4
extern Variable all_Bool8x4_arg;
extern Function all_Bool8x4;

/// transpose with Float32x2x2
extern Variable transpose_Float32x2x2_arg;
extern Function transpose_Float32x2x2;

/// transpose with Float16x2x2
extern Variable transpose_Float16x2x2_arg;
extern Function transpose_Float16x2x2;

/// transpose with Float32x2x3
extern Variable transpose_Float32x2x3_arg;
extern Function transpose_Float32x2x3;

/// transpose with Float16x2x3
extern Variable transpose_Float16x2x3_arg;
extern Function transpose_Float16x2x3;

/// transpose with Float32x2x4
extern Variable transpose_Float32x2x4_arg;
extern Function transpose_Float32x2x4;

/// transpose with Float16x2x4
extern Variable transpose_Float16x2x4_arg;
extern Function transpose_Float16x2x4;

/// transpose with Float32x3x2
extern Variable transpose_Float32x3x2_arg;
extern Function transpose_Float32x3x2;

/// transpose with Float16x3x2
extern Variable transpose_Float16x3x2_arg;
extern Function transpose_Float16x3x2;

/// transpose with Float32x3x3
extern Variable transpose_Float32x3x3_arg;
extern Function transpose_Float32x3x3;

/// transpose with Float16x3x3
extern Variable transpose_Float16x3x3_arg;
extern Function transpose_Float16x3x3;

/// transpose with Float32x3x4
extern Variable transpose_Float32x3x4_arg;
extern Function transpose_Float32x3x4;

/// transpose with Float16x3x4
extern Variable transpose_Float16x3x4_arg;
extern Function transpose_Float16x3x4;

/// transpose with Float32x4x2
extern Variable transpose_Float32x4x2_arg;
extern Function transpose_Float32x4x2;

/// transpose with Float16x4x2
extern Variable transpose_Float16x4x2_arg;
extern Function transpose_Float16x4x2;

/// transpose with Float32x4x3
extern Variable transpose_Float32x4x3_arg;
extern Function transpose_Float32x4x3;

/// transpose with Float16x4x3
extern Variable transpose_Float16x4x3_arg;
extern Function transpose_Float16x4x3;

/// transpose with Float32x4x4
extern Variable transpose_Float32x4x4_arg;
extern Function transpose_Float32x4x4;

/// transpose with Float16x4x4
extern Variable transpose_Float16x4x4_arg;
extern Function transpose_Float16x4x4;

/// inverse with Float32x2x2
extern Variable inverse_Float32x2x2_arg;
extern Function inverse_Float32x2x2;

/// inverse with Float16x2x2
extern Variable inverse_Float16x2x2_arg;
extern Function inverse_Float16x2x2;

/// inverse with Float32x2x3
extern Variable inverse_Float32x2x3_arg;
extern Function inverse_Float32x2x3;

/// inverse with Float16x2x3
extern Variable inverse_Float16x2x3_arg;
extern Function inverse_Float16x2x3;

/// inverse with Float32x2x4
extern Variable inverse_Float32x2x4_arg;
extern Function inverse_Float32x2x4;

/// inverse with Float16x2x4
extern Variable inverse_Float16x2x4_arg;
extern Function inverse_Float16x2x4;

/// inverse with Float32x3x2
extern Variable inverse_Float32x3x2_arg;
extern Function inverse_Float32x3x2;

/// inverse with Float16x3x2
extern Variable inverse_Float16x3x2_arg;
extern Function inverse_Float16x3x2;

/// inverse with Float32x3x3
extern Variable inverse_Float32x3x3_arg;
extern Function inverse_Float32x3x3;

/// inverse with Float16x3x3
extern Variable inverse_Float16x3x3_arg;
extern Function inverse_Float16x3x3;

/// inverse with Float32x3x4
extern Variable inverse_Float32x3x4_arg;
extern Function inverse_Float32x3x4;

/// inverse with Float16x3x4
extern Variable inverse_Float16x3x4_arg;
extern Function inverse_Float16x3x4;

/// inverse with Float32x4x2
extern Variable inverse_Float32x4x2_arg;
extern Function inverse_Float32x4x2;

/// inverse with Float16x4x2
extern Variable inverse_Float16x4x2_arg;
extern Function inverse_Float16x4x2;

/// inverse with Float32x4x3
extern Variable inverse_Float32x4x3_arg;
extern Function inverse_Float32x4x3;

/// inverse with Float16x4x3
extern Variable inverse_Float16x4x3_arg;
extern Function inverse_Float16x4x3;

/// inverse with Float32x4x4
extern Variable inverse_Float32x4x4_arg;
extern Function inverse_Float32x4x4;

/// inverse with Float16x4x4
extern Variable inverse_Float16x4x4_arg;
extern Function inverse_Float16x4x4;

/// OutputLayer
extern Function VertexGetOutputLayer;

/// OutputViewport
extern Function VertexGetOutputViewport;

/// Index
extern Function VertexGetIndex;

/// InstanceIndex
extern Function VertexGetInstanceIndex;

/// BaseIndex
extern Function VertexGetBaseIndex;

/// BaseInstanceIndex
extern Function VertexGetBaseInstanceIndex;

/// DrawIndex
extern Function VertexGetDrawIndex;

/// OutputLayer with UInt16
extern Variable VertexSetOutputLayer_UInt16_arg;
extern Function VertexSetOutputLayer_UInt16;

/// OutputLayer with UInt32
extern Variable VertexSetOutputLayer_UInt32_arg;
extern Function VertexSetOutputLayer_UInt32;

/// OutputViewport with UInt16
extern Variable VertexSetOutputViewport_UInt16_arg;
extern Function VertexSetOutputViewport_UInt16;

/// OutputViewport with UInt32
extern Variable VertexSetOutputViewport_UInt32_arg;
extern Function VertexSetOutputViewport_UInt32;

/// vertexExportExportCoordinates with Float32x4
extern Variable VertexExportCoordinates_Float32x4_arg;
extern Function VertexExportCoordinates_Float32x4;

/// vertexExportExportCoordinates with Float16x4
extern Variable VertexExportCoordinates_Float16x4_arg;
extern Function VertexExportCoordinates_Float16x4;

/// geometryExportVertex
extern Function GeometryExportVertex;

/// geometryExportPrimitive
extern Function GeometryExportPrimitive;

/// pixelGetCoordinates
extern Function PixelGetCoordinates_Float32x4;

/// pixelGetCoordinates
extern Function PixelGetCoordinates_Float16x4;

/// pixelGetDepth
extern Function PixelGetDepth;

/// pixelSetDepth with Float32
extern Variable PixelSetDepth_val;
extern Function PixelSetDepth;

/// pixelExportColor with Float32, Int32
extern Variable PixelExportColor_Float32_Int32_color;
extern Variable PixelExportColor_Float32_Int32_index;
extern Function PixelExportColor_Float32_Int32;

/// pixelExportColor with Float32, UInt32
extern Variable PixelExportColor_Float32_UInt32_color;
extern Variable PixelExportColor_Float32_UInt32_index;
extern Function PixelExportColor_Float32_UInt32;

/// pixelExportColor with Float32, Int16
extern Variable PixelExportColor_Float32_Int16_color;
extern Variable PixelExportColor_Float32_Int16_index;
extern Function PixelExportColor_Float32_Int16;

/// pixelExportColor with Float32, UInt16
extern Variable PixelExportColor_Float32_UInt16_color;
extern Variable PixelExportColor_Float32_UInt16_index;
extern Function PixelExportColor_Float32_UInt16;

/// pixelExportColor with Float32x2, Int32
extern Variable PixelExportColor_Float32x2_Int32_color;
extern Variable PixelExportColor_Float32x2_Int32_index;
extern Function PixelExportColor_Float32x2_Int32;

/// pixelExportColor with Float32x2, UInt32
extern Variable PixelExportColor_Float32x2_UInt32_color;
extern Variable PixelExportColor_Float32x2_UInt32_index;
extern Function PixelExportColor_Float32x2_UInt32;

/// pixelExportColor with Float32x2, Int16
extern Variable PixelExportColor_Float32x2_Int16_color;
extern Variable PixelExportColor_Float32x2_Int16_index;
extern Function PixelExportColor_Float32x2_Int16;

/// pixelExportColor with Float32x2, UInt16
extern Variable PixelExportColor_Float32x2_UInt16_color;
extern Variable PixelExportColor_Float32x2_UInt16_index;
extern Function PixelExportColor_Float32x2_UInt16;

/// pixelExportColor with Float32x3, Int32
extern Variable PixelExportColor_Float32x3_Int32_color;
extern Variable PixelExportColor_Float32x3_Int32_index;
extern Function PixelExportColor_Float32x3_Int32;

/// pixelExportColor with Float32x3, UInt32
extern Variable PixelExportColor_Float32x3_UInt32_color;
extern Variable PixelExportColor_Float32x3_UInt32_index;
extern Function PixelExportColor_Float32x3_UInt32;

/// pixelExportColor with Float32x3, Int16
extern Variable PixelExportColor_Float32x3_Int16_color;
extern Variable PixelExportColor_Float32x3_Int16_index;
extern Function PixelExportColor_Float32x3_Int16;

/// pixelExportColor with Float32x3, UInt16
extern Variable PixelExportColor_Float32x3_UInt16_color;
extern Variable PixelExportColor_Float32x3_UInt16_index;
extern Function PixelExportColor_Float32x3_UInt16;

/// pixelExportColor with Float32x4, Int32
extern Variable PixelExportColor_Float32x4_Int32_color;
extern Variable PixelExportColor_Float32x4_Int32_index;
extern Function PixelExportColor_Float32x4_Int32;

/// pixelExportColor with Float32x4, UInt32
extern Variable PixelExportColor_Float32x4_UInt32_color;
extern Variable PixelExportColor_Float32x4_UInt32_index;
extern Function PixelExportColor_Float32x4_UInt32;

/// pixelExportColor with Float32x4, Int16
extern Variable PixelExportColor_Float32x4_Int16_color;
extern Variable PixelExportColor_Float32x4_Int16_index;
extern Function PixelExportColor_Float32x4_Int16;

/// pixelExportColor with Float32x4, UInt16
extern Variable PixelExportColor_Float32x4_UInt16_color;
extern Variable PixelExportColor_Float32x4_UInt16_index;
extern Function PixelExportColor_Float32x4_UInt16;

/// pixelExportColor with Float16, Int32
extern Variable PixelExportColor_Float16_Int32_color;
extern Variable PixelExportColor_Float16_Int32_index;
extern Function PixelExportColor_Float16_Int32;

/// pixelExportColor with Float16, UInt32
extern Variable PixelExportColor_Float16_UInt32_color;
extern Variable PixelExportColor_Float16_UInt32_index;
extern Function PixelExportColor_Float16_UInt32;

/// pixelExportColor with Float16, Int16
extern Variable PixelExportColor_Float16_Int16_color;
extern Variable PixelExportColor_Float16_Int16_index;
extern Function PixelExportColor_Float16_Int16;

/// pixelExportColor with Float16, UInt16
extern Variable PixelExportColor_Float16_UInt16_color;
extern Variable PixelExportColor_Float16_UInt16_index;
extern Function PixelExportColor_Float16_UInt16;

/// pixelExportColor with Float16x2, Int32
extern Variable PixelExportColor_Float16x2_Int32_color;
extern Variable PixelExportColor_Float16x2_Int32_index;
extern Function PixelExportColor_Float16x2_Int32;

/// pixelExportColor with Float16x2, UInt32
extern Variable PixelExportColor_Float16x2_UInt32_color;
extern Variable PixelExportColor_Float16x2_UInt32_index;
extern Function PixelExportColor_Float16x2_UInt32;

/// pixelExportColor with Float16x2, Int16
extern Variable PixelExportColor_Float16x2_Int16_color;
extern Variable PixelExportColor_Float16x2_Int16_index;
extern Function PixelExportColor_Float16x2_Int16;

/// pixelExportColor with Float16x2, UInt16
extern Variable PixelExportColor_Float16x2_UInt16_color;
extern Variable PixelExportColor_Float16x2_UInt16_index;
extern Function PixelExportColor_Float16x2_UInt16;

/// pixelExportColor with Float16x3, Int32
extern Variable PixelExportColor_Float16x3_Int32_color;
extern Variable PixelExportColor_Float16x3_Int32_index;
extern Function PixelExportColor_Float16x3_Int32;

/// pixelExportColor with Float16x3, UInt32
extern Variable PixelExportColor_Float16x3_UInt32_color;
extern Variable PixelExportColor_Float16x3_UInt32_index;
extern Function PixelExportColor_Float16x3_UInt32;

/// pixelExportColor with Float16x3, Int16
extern Variable PixelExportColor_Float16x3_Int16_color;
extern Variable PixelExportColor_Float16x3_Int16_index;
extern Function PixelExportColor_Float16x3_Int16;

/// pixelExportColor with Float16x3, UInt16
extern Variable PixelExportColor_Float16x3_UInt16_color;
extern Variable PixelExportColor_Float16x3_UInt16_index;
extern Function PixelExportColor_Float16x3_UInt16;

/// pixelExportColor with Float16x4, Int32
extern Variable PixelExportColor_Float16x4_Int32_color;
extern Variable PixelExportColor_Float16x4_Int32_index;
extern Function PixelExportColor_Float16x4_Int32;

/// pixelExportColor with Float16x4, UInt32
extern Variable PixelExportColor_Float16x4_UInt32_color;
extern Variable PixelExportColor_Float16x4_UInt32_index;
extern Function PixelExportColor_Float16x4_UInt32;

/// pixelExportColor with Float16x4, Int16
extern Variable PixelExportColor_Float16x4_Int16_color;
extern Variable PixelExportColor_Float16x4_Int16_index;
extern Function PixelExportColor_Float16x4_Int16;

/// pixelExportColor with Float16x4, UInt16
extern Variable PixelExportColor_Float16x4_UInt16_color;
extern Variable PixelExportColor_Float16x4_UInt16_index;
extern Function PixelExportColor_Float16x4_UInt16;

/// pixelExportColor with Int32, Int32
extern Variable PixelExportColor_Int32_Int32_color;
extern Variable PixelExportColor_Int32_Int32_index;
extern Function PixelExportColor_Int32_Int32;

/// pixelExportColor with Int32, UInt32
extern Variable PixelExportColor_Int32_UInt32_color;
extern Variable PixelExportColor_Int32_UInt32_index;
extern Function PixelExportColor_Int32_UInt32;

/// pixelExportColor with Int32, Int16
extern Variable PixelExportColor_Int32_Int16_color;
extern Variable PixelExportColor_Int32_Int16_index;
extern Function PixelExportColor_Int32_Int16;

/// pixelExportColor with Int32, UInt16
extern Variable PixelExportColor_Int32_UInt16_color;
extern Variable PixelExportColor_Int32_UInt16_index;
extern Function PixelExportColor_Int32_UInt16;

/// pixelExportColor with Int32x2, Int32
extern Variable PixelExportColor_Int32x2_Int32_color;
extern Variable PixelExportColor_Int32x2_Int32_index;
extern Function PixelExportColor_Int32x2_Int32;

/// pixelExportColor with Int32x2, UInt32
extern Variable PixelExportColor_Int32x2_UInt32_color;
extern Variable PixelExportColor_Int32x2_UInt32_index;
extern Function PixelExportColor_Int32x2_UInt32;

/// pixelExportColor with Int32x2, Int16
extern Variable PixelExportColor_Int32x2_Int16_color;
extern Variable PixelExportColor_Int32x2_Int16_index;
extern Function PixelExportColor_Int32x2_Int16;

/// pixelExportColor with Int32x2, UInt16
extern Variable PixelExportColor_Int32x2_UInt16_color;
extern Variable PixelExportColor_Int32x2_UInt16_index;
extern Function PixelExportColor_Int32x2_UInt16;

/// pixelExportColor with Int32x3, Int32
extern Variable PixelExportColor_Int32x3_Int32_color;
extern Variable PixelExportColor_Int32x3_Int32_index;
extern Function PixelExportColor_Int32x3_Int32;

/// pixelExportColor with Int32x3, UInt32
extern Variable PixelExportColor_Int32x3_UInt32_color;
extern Variable PixelExportColor_Int32x3_UInt32_index;
extern Function PixelExportColor_Int32x3_UInt32;

/// pixelExportColor with Int32x3, Int16
extern Variable PixelExportColor_Int32x3_Int16_color;
extern Variable PixelExportColor_Int32x3_Int16_index;
extern Function PixelExportColor_Int32x3_Int16;

/// pixelExportColor with Int32x3, UInt16
extern Variable PixelExportColor_Int32x3_UInt16_color;
extern Variable PixelExportColor_Int32x3_UInt16_index;
extern Function PixelExportColor_Int32x3_UInt16;

/// pixelExportColor with Int32x4, Int32
extern Variable PixelExportColor_Int32x4_Int32_color;
extern Variable PixelExportColor_Int32x4_Int32_index;
extern Function PixelExportColor_Int32x4_Int32;

/// pixelExportColor with Int32x4, UInt32
extern Variable PixelExportColor_Int32x4_UInt32_color;
extern Variable PixelExportColor_Int32x4_UInt32_index;
extern Function PixelExportColor_Int32x4_UInt32;

/// pixelExportColor with Int32x4, Int16
extern Variable PixelExportColor_Int32x4_Int16_color;
extern Variable PixelExportColor_Int32x4_Int16_index;
extern Function PixelExportColor_Int32x4_Int16;

/// pixelExportColor with Int32x4, UInt16
extern Variable PixelExportColor_Int32x4_UInt16_color;
extern Variable PixelExportColor_Int32x4_UInt16_index;
extern Function PixelExportColor_Int32x4_UInt16;

/// pixelExportColor with Int16, Int32
extern Variable PixelExportColor_Int16_Int32_color;
extern Variable PixelExportColor_Int16_Int32_index;
extern Function PixelExportColor_Int16_Int32;

/// pixelExportColor with Int16, UInt32
extern Variable PixelExportColor_Int16_UInt32_color;
extern Variable PixelExportColor_Int16_UInt32_index;
extern Function PixelExportColor_Int16_UInt32;

/// pixelExportColor with Int16, Int16
extern Variable PixelExportColor_Int16_Int16_color;
extern Variable PixelExportColor_Int16_Int16_index;
extern Function PixelExportColor_Int16_Int16;

/// pixelExportColor with Int16, UInt16
extern Variable PixelExportColor_Int16_UInt16_color;
extern Variable PixelExportColor_Int16_UInt16_index;
extern Function PixelExportColor_Int16_UInt16;

/// pixelExportColor with Int16x2, Int32
extern Variable PixelExportColor_Int16x2_Int32_color;
extern Variable PixelExportColor_Int16x2_Int32_index;
extern Function PixelExportColor_Int16x2_Int32;

/// pixelExportColor with Int16x2, UInt32
extern Variable PixelExportColor_Int16x2_UInt32_color;
extern Variable PixelExportColor_Int16x2_UInt32_index;
extern Function PixelExportColor_Int16x2_UInt32;

/// pixelExportColor with Int16x2, Int16
extern Variable PixelExportColor_Int16x2_Int16_color;
extern Variable PixelExportColor_Int16x2_Int16_index;
extern Function PixelExportColor_Int16x2_Int16;

/// pixelExportColor with Int16x2, UInt16
extern Variable PixelExportColor_Int16x2_UInt16_color;
extern Variable PixelExportColor_Int16x2_UInt16_index;
extern Function PixelExportColor_Int16x2_UInt16;

/// pixelExportColor with Int16x3, Int32
extern Variable PixelExportColor_Int16x3_Int32_color;
extern Variable PixelExportColor_Int16x3_Int32_index;
extern Function PixelExportColor_Int16x3_Int32;

/// pixelExportColor with Int16x3, UInt32
extern Variable PixelExportColor_Int16x3_UInt32_color;
extern Variable PixelExportColor_Int16x3_UInt32_index;
extern Function PixelExportColor_Int16x3_UInt32;

/// pixelExportColor with Int16x3, Int16
extern Variable PixelExportColor_Int16x3_Int16_color;
extern Variable PixelExportColor_Int16x3_Int16_index;
extern Function PixelExportColor_Int16x3_Int16;

/// pixelExportColor with Int16x3, UInt16
extern Variable PixelExportColor_Int16x3_UInt16_color;
extern Variable PixelExportColor_Int16x3_UInt16_index;
extern Function PixelExportColor_Int16x3_UInt16;

/// pixelExportColor with Int16x4, Int32
extern Variable PixelExportColor_Int16x4_Int32_color;
extern Variable PixelExportColor_Int16x4_Int32_index;
extern Function PixelExportColor_Int16x4_Int32;

/// pixelExportColor with Int16x4, UInt32
extern Variable PixelExportColor_Int16x4_UInt32_color;
extern Variable PixelExportColor_Int16x4_UInt32_index;
extern Function PixelExportColor_Int16x4_UInt32;

/// pixelExportColor with Int16x4, Int16
extern Variable PixelExportColor_Int16x4_Int16_color;
extern Variable PixelExportColor_Int16x4_Int16_index;
extern Function PixelExportColor_Int16x4_Int16;

/// pixelExportColor with Int16x4, UInt16
extern Variable PixelExportColor_Int16x4_UInt16_color;
extern Variable PixelExportColor_Int16x4_UInt16_index;
extern Function PixelExportColor_Int16x4_UInt16;

/// pixelExportColor with UInt32, Int32
extern Variable PixelExportColor_UInt32_Int32_color;
extern Variable PixelExportColor_UInt32_Int32_index;
extern Function PixelExportColor_UInt32_Int32;

/// pixelExportColor with UInt32, UInt32
extern Variable PixelExportColor_UInt32_UInt32_color;
extern Variable PixelExportColor_UInt32_UInt32_index;
extern Function PixelExportColor_UInt32_UInt32;

/// pixelExportColor with UInt32, Int16
extern Variable PixelExportColor_UInt32_Int16_color;
extern Variable PixelExportColor_UInt32_Int16_index;
extern Function PixelExportColor_UInt32_Int16;

/// pixelExportColor with UInt32, UInt16
extern Variable PixelExportColor_UInt32_UInt16_color;
extern Variable PixelExportColor_UInt32_UInt16_index;
extern Function PixelExportColor_UInt32_UInt16;

/// pixelExportColor with UInt32x2, Int32
extern Variable PixelExportColor_UInt32x2_Int32_color;
extern Variable PixelExportColor_UInt32x2_Int32_index;
extern Function PixelExportColor_UInt32x2_Int32;

/// pixelExportColor with UInt32x2, UInt32
extern Variable PixelExportColor_UInt32x2_UInt32_color;
extern Variable PixelExportColor_UInt32x2_UInt32_index;
extern Function PixelExportColor_UInt32x2_UInt32;

/// pixelExportColor with UInt32x2, Int16
extern Variable PixelExportColor_UInt32x2_Int16_color;
extern Variable PixelExportColor_UInt32x2_Int16_index;
extern Function PixelExportColor_UInt32x2_Int16;

/// pixelExportColor with UInt32x2, UInt16
extern Variable PixelExportColor_UInt32x2_UInt16_color;
extern Variable PixelExportColor_UInt32x2_UInt16_index;
extern Function PixelExportColor_UInt32x2_UInt16;

/// pixelExportColor with UInt32x3, Int32
extern Variable PixelExportColor_UInt32x3_Int32_color;
extern Variable PixelExportColor_UInt32x3_Int32_index;
extern Function PixelExportColor_UInt32x3_Int32;

/// pixelExportColor with UInt32x3, UInt32
extern Variable PixelExportColor_UInt32x3_UInt32_color;
extern Variable PixelExportColor_UInt32x3_UInt32_index;
extern Function PixelExportColor_UInt32x3_UInt32;

/// pixelExportColor with UInt32x3, Int16
extern Variable PixelExportColor_UInt32x3_Int16_color;
extern Variable PixelExportColor_UInt32x3_Int16_index;
extern Function PixelExportColor_UInt32x3_Int16;

/// pixelExportColor with UInt32x3, UInt16
extern Variable PixelExportColor_UInt32x3_UInt16_color;
extern Variable PixelExportColor_UInt32x3_UInt16_index;
extern Function PixelExportColor_UInt32x3_UInt16;

/// pixelExportColor with UInt32x4, Int32
extern Variable PixelExportColor_UInt32x4_Int32_color;
extern Variable PixelExportColor_UInt32x4_Int32_index;
extern Function PixelExportColor_UInt32x4_Int32;

/// pixelExportColor with UInt32x4, UInt32
extern Variable PixelExportColor_UInt32x4_UInt32_color;
extern Variable PixelExportColor_UInt32x4_UInt32_index;
extern Function PixelExportColor_UInt32x4_UInt32;

/// pixelExportColor with UInt32x4, Int16
extern Variable PixelExportColor_UInt32x4_Int16_color;
extern Variable PixelExportColor_UInt32x4_Int16_index;
extern Function PixelExportColor_UInt32x4_Int16;

/// pixelExportColor with UInt32x4, UInt16
extern Variable PixelExportColor_UInt32x4_UInt16_color;
extern Variable PixelExportColor_UInt32x4_UInt16_index;
extern Function PixelExportColor_UInt32x4_UInt16;

/// pixelExportColor with UInt16, Int32
extern Variable PixelExportColor_UInt16_Int32_color;
extern Variable PixelExportColor_UInt16_Int32_index;
extern Function PixelExportColor_UInt16_Int32;

/// pixelExportColor with UInt16, UInt32
extern Variable PixelExportColor_UInt16_UInt32_color;
extern Variable PixelExportColor_UInt16_UInt32_index;
extern Function PixelExportColor_UInt16_UInt32;

/// pixelExportColor with UInt16, Int16
extern Variable PixelExportColor_UInt16_Int16_color;
extern Variable PixelExportColor_UInt16_Int16_index;
extern Function PixelExportColor_UInt16_Int16;

/// pixelExportColor with UInt16, UInt16
extern Variable PixelExportColor_UInt16_UInt16_color;
extern Variable PixelExportColor_UInt16_UInt16_index;
extern Function PixelExportColor_UInt16_UInt16;

/// pixelExportColor with UInt16x2, Int32
extern Variable PixelExportColor_UInt16x2_Int32_color;
extern Variable PixelExportColor_UInt16x2_Int32_index;
extern Function PixelExportColor_UInt16x2_Int32;

/// pixelExportColor with UInt16x2, UInt32
extern Variable PixelExportColor_UInt16x2_UInt32_color;
extern Variable PixelExportColor_UInt16x2_UInt32_index;
extern Function PixelExportColor_UInt16x2_UInt32;

/// pixelExportColor with UInt16x2, Int16
extern Variable PixelExportColor_UInt16x2_Int16_color;
extern Variable PixelExportColor_UInt16x2_Int16_index;
extern Function PixelExportColor_UInt16x2_Int16;

/// pixelExportColor with UInt16x2, UInt16
extern Variable PixelExportColor_UInt16x2_UInt16_color;
extern Variable PixelExportColor_UInt16x2_UInt16_index;
extern Function PixelExportColor_UInt16x2_UInt16;

/// pixelExportColor with UInt16x3, Int32
extern Variable PixelExportColor_UInt16x3_Int32_color;
extern Variable PixelExportColor_UInt16x3_Int32_index;
extern Function PixelExportColor_UInt16x3_Int32;

/// pixelExportColor with UInt16x3, UInt32
extern Variable PixelExportColor_UInt16x3_UInt32_color;
extern Variable PixelExportColor_UInt16x3_UInt32_index;
extern Function PixelExportColor_UInt16x3_UInt32;

/// pixelExportColor with UInt16x3, Int16
extern Variable PixelExportColor_UInt16x3_Int16_color;
extern Variable PixelExportColor_UInt16x3_Int16_index;
extern Function PixelExportColor_UInt16x3_Int16;

/// pixelExportColor with UInt16x3, UInt16
extern Variable PixelExportColor_UInt16x3_UInt16_color;
extern Variable PixelExportColor_UInt16x3_UInt16_index;
extern Function PixelExportColor_UInt16x3_UInt16;

/// pixelExportColor with UInt16x4, Int32
extern Variable PixelExportColor_UInt16x4_Int32_color;
extern Variable PixelExportColor_UInt16x4_Int32_index;
extern Function PixelExportColor_UInt16x4_Int32;

/// pixelExportColor with UInt16x4, UInt32
extern Variable PixelExportColor_UInt16x4_UInt32_color;
extern Variable PixelExportColor_UInt16x4_UInt32_index;
extern Function PixelExportColor_UInt16x4_UInt32;

/// pixelExportColor with UInt16x4, Int16
extern Variable PixelExportColor_UInt16x4_Int16_color;
extern Variable PixelExportColor_UInt16x4_Int16_index;
extern Function PixelExportColor_UInt16x4_Int16;

/// pixelExportColor with UInt16x4, UInt16
extern Variable PixelExportColor_UInt16x4_UInt16_color;
extern Variable PixelExportColor_UInt16x4_UInt16_index;
extern Function PixelExportColor_UInt16x4_UInt16;

/// computeGetLocalThreadIndices
extern Function ComputeGetLocalThreadIndices;

/// computeGetGlobalThreadIndices
extern Function ComputeGetGlobalThreadIndices;

/// computeGetWorkgroupIndices
extern Function ComputeGetWorkgroupIndices;

/// computeGetWorkGroupDimensions
extern Function ComputeGetWorkGroupDimensions;

/// computeGetIndexInWorkgroup
extern Function ComputeGetIndexInWorkgroup;

/// subgroupGetId
extern Function SubgroupGetId;

/// subgroupGetSize
extern Function SubgroupGetSize;

/// subgroupGetNum
extern Function SubgroupGetNum;

/// subgroupGetThreadMask
extern Function SubgroupGetThreadMask;

/// subgroupGetThreadAndLowerMask
extern Function SubgroupGetThreadAndLowerMask;

/// subgroupGetLowerMask
extern Function SubgroupGetLowerMask;

/// subgroupGetThreadAndGreaterMask
extern Function SubgroupGetThreadAndGreaterMask;

/// subgroupGetGreaterMask
extern Function SubgroupGetGreaterMask;

/// subgroupGetFirstActiveThread
extern Function SubgroupGetFirstActiveThread;

/// subgroupBroadcastFirstActiveThread with Float32
extern Variable SubgroupBroadcastFirstActiveThread_Float32_value;
extern Function SubgroupBroadcastFirstActiveThread_Float32;

/// subgroupBroadcastFirstActiveThread with Float32x2
extern Variable SubgroupBroadcastFirstActiveThread_Float32x2_value;
extern Function SubgroupBroadcastFirstActiveThread_Float32x2;

/// subgroupBroadcastFirstActiveThread with Float32x3
extern Variable SubgroupBroadcastFirstActiveThread_Float32x3_value;
extern Function SubgroupBroadcastFirstActiveThread_Float32x3;

/// subgroupBroadcastFirstActiveThread with Float32x4
extern Variable SubgroupBroadcastFirstActiveThread_Float32x4_value;
extern Function SubgroupBroadcastFirstActiveThread_Float32x4;

/// subgroupBroadcastFirstActiveThread with Float16
extern Variable SubgroupBroadcastFirstActiveThread_Float16_value;
extern Function SubgroupBroadcastFirstActiveThread_Float16;

/// subgroupBroadcastFirstActiveThread with Float16x2
extern Variable SubgroupBroadcastFirstActiveThread_Float16x2_value;
extern Function SubgroupBroadcastFirstActiveThread_Float16x2;

/// subgroupBroadcastFirstActiveThread with Float16x3
extern Variable SubgroupBroadcastFirstActiveThread_Float16x3_value;
extern Function SubgroupBroadcastFirstActiveThread_Float16x3;

/// subgroupBroadcastFirstActiveThread with Float16x4
extern Variable SubgroupBroadcastFirstActiveThread_Float16x4_value;
extern Function SubgroupBroadcastFirstActiveThread_Float16x4;

/// subgroupBroadcastFirstActiveThread with Int32
extern Variable SubgroupBroadcastFirstActiveThread_Int32_value;
extern Function SubgroupBroadcastFirstActiveThread_Int32;

/// subgroupBroadcastFirstActiveThread with Int32x2
extern Variable SubgroupBroadcastFirstActiveThread_Int32x2_value;
extern Function SubgroupBroadcastFirstActiveThread_Int32x2;

/// subgroupBroadcastFirstActiveThread with Int32x3
extern Variable SubgroupBroadcastFirstActiveThread_Int32x3_value;
extern Function SubgroupBroadcastFirstActiveThread_Int32x3;

/// subgroupBroadcastFirstActiveThread with Int32x4
extern Variable SubgroupBroadcastFirstActiveThread_Int32x4_value;
extern Function SubgroupBroadcastFirstActiveThread_Int32x4;

/// subgroupBroadcastFirstActiveThread with Int16
extern Variable SubgroupBroadcastFirstActiveThread_Int16_value;
extern Function SubgroupBroadcastFirstActiveThread_Int16;

/// subgroupBroadcastFirstActiveThread with Int16x2
extern Variable SubgroupBroadcastFirstActiveThread_Int16x2_value;
extern Function SubgroupBroadcastFirstActiveThread_Int16x2;

/// subgroupBroadcastFirstActiveThread with Int16x3
extern Variable SubgroupBroadcastFirstActiveThread_Int16x3_value;
extern Function SubgroupBroadcastFirstActiveThread_Int16x3;

/// subgroupBroadcastFirstActiveThread with Int16x4
extern Variable SubgroupBroadcastFirstActiveThread_Int16x4_value;
extern Function SubgroupBroadcastFirstActiveThread_Int16x4;

/// subgroupBroadcastFirstActiveThread with UInt32
extern Variable SubgroupBroadcastFirstActiveThread_UInt32_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt32;

/// subgroupBroadcastFirstActiveThread with UInt32x2
extern Variable SubgroupBroadcastFirstActiveThread_UInt32x2_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt32x2;

/// subgroupBroadcastFirstActiveThread with UInt32x3
extern Variable SubgroupBroadcastFirstActiveThread_UInt32x3_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt32x3;

/// subgroupBroadcastFirstActiveThread with UInt32x4
extern Variable SubgroupBroadcastFirstActiveThread_UInt32x4_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt32x4;

/// subgroupBroadcastFirstActiveThread with UInt16
extern Variable SubgroupBroadcastFirstActiveThread_UInt16_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt16;

/// subgroupBroadcastFirstActiveThread with UInt16x2
extern Variable SubgroupBroadcastFirstActiveThread_UInt16x2_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt16x2;

/// subgroupBroadcastFirstActiveThread with UInt16x3
extern Variable SubgroupBroadcastFirstActiveThread_UInt16x3_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt16x3;

/// subgroupBroadcastFirstActiveThread with UInt16x4
extern Variable SubgroupBroadcastFirstActiveThread_UInt16x4_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt16x4;

/// subgroupBallot with Bool8
extern Variable SubgroupBallot_predicate;
extern Function SubgroupBallot;

/// subgroupInverseBallot with Bool8
extern Variable SubgroupInverseBallot_predicate;
extern Function SubgroupInverseBallot;

/// subgroupBallotBitCount with UInt32x4
extern Variable SubgroupBallotBitCount_mask;
extern Function SubgroupBallotBitCount;

/// subgroupBallotFirstOne with UInt32x4
extern Variable SubgroupBallotFirstOne_mask;
extern Function SubgroupBallotFirstOne;

/// subgroupBallotLastOne with UInt32x4
extern Variable SubgroupBallotLastOne_mask;
extern Function SubgroupBallotLastOne;

/// subgroupBallotBit with UInt32x4, UInt32
extern Variable SubgroupBallotBit_mask;
extern Variable SubgroupBallotBit_index;
extern Function SubgroupBallotBit;

/// subgroupSwapDiagonal with Float32
extern Variable SubgroupSwapDiagonal_Float32_value;
extern Function SubgroupSwapDiagonal_Float32;

/// subgroupSwapDiagonal with Float32x2
extern Variable SubgroupSwapDiagonal_Float32x2_value;
extern Function SubgroupSwapDiagonal_Float32x2;

/// subgroupSwapDiagonal with Float32x3
extern Variable SubgroupSwapDiagonal_Float32x3_value;
extern Function SubgroupSwapDiagonal_Float32x3;

/// subgroupSwapDiagonal with Float32x4
extern Variable SubgroupSwapDiagonal_Float32x4_value;
extern Function SubgroupSwapDiagonal_Float32x4;

/// subgroupSwapDiagonal with Float16
extern Variable SubgroupSwapDiagonal_Float16_value;
extern Function SubgroupSwapDiagonal_Float16;

/// subgroupSwapDiagonal with Float16x2
extern Variable SubgroupSwapDiagonal_Float16x2_value;
extern Function SubgroupSwapDiagonal_Float16x2;

/// subgroupSwapDiagonal with Float16x3
extern Variable SubgroupSwapDiagonal_Float16x3_value;
extern Function SubgroupSwapDiagonal_Float16x3;

/// subgroupSwapDiagonal with Float16x4
extern Variable SubgroupSwapDiagonal_Float16x4_value;
extern Function SubgroupSwapDiagonal_Float16x4;

/// subgroupSwapDiagonal with Int32
extern Variable SubgroupSwapDiagonal_Int32_value;
extern Function SubgroupSwapDiagonal_Int32;

/// subgroupSwapDiagonal with Int32x2
extern Variable SubgroupSwapDiagonal_Int32x2_value;
extern Function SubgroupSwapDiagonal_Int32x2;

/// subgroupSwapDiagonal with Int32x3
extern Variable SubgroupSwapDiagonal_Int32x3_value;
extern Function SubgroupSwapDiagonal_Int32x3;

/// subgroupSwapDiagonal with Int32x4
extern Variable SubgroupSwapDiagonal_Int32x4_value;
extern Function SubgroupSwapDiagonal_Int32x4;

/// subgroupSwapDiagonal with Int16
extern Variable SubgroupSwapDiagonal_Int16_value;
extern Function SubgroupSwapDiagonal_Int16;

/// subgroupSwapDiagonal with Int16x2
extern Variable SubgroupSwapDiagonal_Int16x2_value;
extern Function SubgroupSwapDiagonal_Int16x2;

/// subgroupSwapDiagonal with Int16x3
extern Variable SubgroupSwapDiagonal_Int16x3_value;
extern Function SubgroupSwapDiagonal_Int16x3;

/// subgroupSwapDiagonal with Int16x4
extern Variable SubgroupSwapDiagonal_Int16x4_value;
extern Function SubgroupSwapDiagonal_Int16x4;

/// subgroupSwapDiagonal with UInt32
extern Variable SubgroupSwapDiagonal_UInt32_value;
extern Function SubgroupSwapDiagonal_UInt32;

/// subgroupSwapDiagonal with UInt32x2
extern Variable SubgroupSwapDiagonal_UInt32x2_value;
extern Function SubgroupSwapDiagonal_UInt32x2;

/// subgroupSwapDiagonal with UInt32x3
extern Variable SubgroupSwapDiagonal_UInt32x3_value;
extern Function SubgroupSwapDiagonal_UInt32x3;

/// subgroupSwapDiagonal with UInt32x4
extern Variable SubgroupSwapDiagonal_UInt32x4_value;
extern Function SubgroupSwapDiagonal_UInt32x4;

/// subgroupSwapDiagonal with UInt16
extern Variable SubgroupSwapDiagonal_UInt16_value;
extern Function SubgroupSwapDiagonal_UInt16;

/// subgroupSwapDiagonal with UInt16x2
extern Variable SubgroupSwapDiagonal_UInt16x2_value;
extern Function SubgroupSwapDiagonal_UInt16x2;

/// subgroupSwapDiagonal with UInt16x3
extern Variable SubgroupSwapDiagonal_UInt16x3_value;
extern Function SubgroupSwapDiagonal_UInt16x3;

/// subgroupSwapDiagonal with UInt16x4
extern Variable SubgroupSwapDiagonal_UInt16x4_value;
extern Function SubgroupSwapDiagonal_UInt16x4;

/// subgroupSwapVertical with Float32
extern Variable SubgroupSwapVertical_Float32_value;
extern Function SubgroupSwapVertical_Float32;

/// subgroupSwapVertical with Float32x2
extern Variable SubgroupSwapVertical_Float32x2_value;
extern Function SubgroupSwapVertical_Float32x2;

/// subgroupSwapVertical with Float32x3
extern Variable SubgroupSwapVertical_Float32x3_value;
extern Function SubgroupSwapVertical_Float32x3;

/// subgroupSwapVertical with Float32x4
extern Variable SubgroupSwapVertical_Float32x4_value;
extern Function SubgroupSwapVertical_Float32x4;

/// subgroupSwapVertical with Float16
extern Variable SubgroupSwapVertical_Float16_value;
extern Function SubgroupSwapVertical_Float16;

/// subgroupSwapVertical with Float16x2
extern Variable SubgroupSwapVertical_Float16x2_value;
extern Function SubgroupSwapVertical_Float16x2;

/// subgroupSwapVertical with Float16x3
extern Variable SubgroupSwapVertical_Float16x3_value;
extern Function SubgroupSwapVertical_Float16x3;

/// subgroupSwapVertical with Float16x4
extern Variable SubgroupSwapVertical_Float16x4_value;
extern Function SubgroupSwapVertical_Float16x4;

/// subgroupSwapVertical with Int32
extern Variable SubgroupSwapVertical_Int32_value;
extern Function SubgroupSwapVertical_Int32;

/// subgroupSwapVertical with Int32x2
extern Variable SubgroupSwapVertical_Int32x2_value;
extern Function SubgroupSwapVertical_Int32x2;

/// subgroupSwapVertical with Int32x3
extern Variable SubgroupSwapVertical_Int32x3_value;
extern Function SubgroupSwapVertical_Int32x3;

/// subgroupSwapVertical with Int32x4
extern Variable SubgroupSwapVertical_Int32x4_value;
extern Function SubgroupSwapVertical_Int32x4;

/// subgroupSwapVertical with Int16
extern Variable SubgroupSwapVertical_Int16_value;
extern Function SubgroupSwapVertical_Int16;

/// subgroupSwapVertical with Int16x2
extern Variable SubgroupSwapVertical_Int16x2_value;
extern Function SubgroupSwapVertical_Int16x2;

/// subgroupSwapVertical with Int16x3
extern Variable SubgroupSwapVertical_Int16x3_value;
extern Function SubgroupSwapVertical_Int16x3;

/// subgroupSwapVertical with Int16x4
extern Variable SubgroupSwapVertical_Int16x4_value;
extern Function SubgroupSwapVertical_Int16x4;

/// subgroupSwapVertical with UInt32
extern Variable SubgroupSwapVertical_UInt32_value;
extern Function SubgroupSwapVertical_UInt32;

/// subgroupSwapVertical with UInt32x2
extern Variable SubgroupSwapVertical_UInt32x2_value;
extern Function SubgroupSwapVertical_UInt32x2;

/// subgroupSwapVertical with UInt32x3
extern Variable SubgroupSwapVertical_UInt32x3_value;
extern Function SubgroupSwapVertical_UInt32x3;

/// subgroupSwapVertical with UInt32x4
extern Variable SubgroupSwapVertical_UInt32x4_value;
extern Function SubgroupSwapVertical_UInt32x4;

/// subgroupSwapVertical with UInt16
extern Variable SubgroupSwapVertical_UInt16_value;
extern Function SubgroupSwapVertical_UInt16;

/// subgroupSwapVertical with UInt16x2
extern Variable SubgroupSwapVertical_UInt16x2_value;
extern Function SubgroupSwapVertical_UInt16x2;

/// subgroupSwapVertical with UInt16x3
extern Variable SubgroupSwapVertical_UInt16x3_value;
extern Function SubgroupSwapVertical_UInt16x3;

/// subgroupSwapVertical with UInt16x4
extern Variable SubgroupSwapVertical_UInt16x4_value;
extern Function SubgroupSwapVertical_UInt16x4;

/// subgroupSwapHorizontal with Float32
extern Variable SubgroupSwapHorizontal_Float32_value;
extern Function SubgroupSwapHorizontal_Float32;

/// subgroupSwapHorizontal with Float32x2
extern Variable SubgroupSwapHorizontal_Float32x2_value;
extern Function SubgroupSwapHorizontal_Float32x2;

/// subgroupSwapHorizontal with Float32x3
extern Variable SubgroupSwapHorizontal_Float32x3_value;
extern Function SubgroupSwapHorizontal_Float32x3;

/// subgroupSwapHorizontal with Float32x4
extern Variable SubgroupSwapHorizontal_Float32x4_value;
extern Function SubgroupSwapHorizontal_Float32x4;

/// subgroupSwapHorizontal with Float16
extern Variable SubgroupSwapHorizontal_Float16_value;
extern Function SubgroupSwapHorizontal_Float16;

/// subgroupSwapHorizontal with Float16x2
extern Variable SubgroupSwapHorizontal_Float16x2_value;
extern Function SubgroupSwapHorizontal_Float16x2;

/// subgroupSwapHorizontal with Float16x3
extern Variable SubgroupSwapHorizontal_Float16x3_value;
extern Function SubgroupSwapHorizontal_Float16x3;

/// subgroupSwapHorizontal with Float16x4
extern Variable SubgroupSwapHorizontal_Float16x4_value;
extern Function SubgroupSwapHorizontal_Float16x4;

/// subgroupSwapHorizontal with Int32
extern Variable SubgroupSwapHorizontal_Int32_value;
extern Function SubgroupSwapHorizontal_Int32;

/// subgroupSwapHorizontal with Int32x2
extern Variable SubgroupSwapHorizontal_Int32x2_value;
extern Function SubgroupSwapHorizontal_Int32x2;

/// subgroupSwapHorizontal with Int32x3
extern Variable SubgroupSwapHorizontal_Int32x3_value;
extern Function SubgroupSwapHorizontal_Int32x3;

/// subgroupSwapHorizontal with Int32x4
extern Variable SubgroupSwapHorizontal_Int32x4_value;
extern Function SubgroupSwapHorizontal_Int32x4;

/// subgroupSwapHorizontal with Int16
extern Variable SubgroupSwapHorizontal_Int16_value;
extern Function SubgroupSwapHorizontal_Int16;

/// subgroupSwapHorizontal with Int16x2
extern Variable SubgroupSwapHorizontal_Int16x2_value;
extern Function SubgroupSwapHorizontal_Int16x2;

/// subgroupSwapHorizontal with Int16x3
extern Variable SubgroupSwapHorizontal_Int16x3_value;
extern Function SubgroupSwapHorizontal_Int16x3;

/// subgroupSwapHorizontal with Int16x4
extern Variable SubgroupSwapHorizontal_Int16x4_value;
extern Function SubgroupSwapHorizontal_Int16x4;

/// subgroupSwapHorizontal with UInt32
extern Variable SubgroupSwapHorizontal_UInt32_value;
extern Function SubgroupSwapHorizontal_UInt32;

/// subgroupSwapHorizontal with UInt32x2
extern Variable SubgroupSwapHorizontal_UInt32x2_value;
extern Function SubgroupSwapHorizontal_UInt32x2;

/// subgroupSwapHorizontal with UInt32x3
extern Variable SubgroupSwapHorizontal_UInt32x3_value;
extern Function SubgroupSwapHorizontal_UInt32x3;

/// subgroupSwapHorizontal with UInt32x4
extern Variable SubgroupSwapHorizontal_UInt32x4_value;
extern Function SubgroupSwapHorizontal_UInt32x4;

/// subgroupSwapHorizontal with UInt16
extern Variable SubgroupSwapHorizontal_UInt16_value;
extern Function SubgroupSwapHorizontal_UInt16;

/// subgroupSwapHorizontal with UInt16x2
extern Variable SubgroupSwapHorizontal_UInt16x2_value;
extern Function SubgroupSwapHorizontal_UInt16x2;

/// subgroupSwapHorizontal with UInt16x3
extern Variable SubgroupSwapHorizontal_UInt16x3_value;
extern Function SubgroupSwapHorizontal_UInt16x3;

/// subgroupSwapHorizontal with UInt16x4
extern Variable SubgroupSwapHorizontal_UInt16x4_value;
extern Function SubgroupSwapHorizontal_UInt16x4;

/// atomicLoad with UInt32, MemorySemantics
extern Variable AtomicLoad_UInt32_ptr;
extern Variable AtomicLoad_UInt32_semantics;
extern Function AtomicLoad_UInt32;

/// atomicIncrement with UInt32, MemorySemantics
extern Variable AtomicIncrement_UInt32_ptr;
extern Variable AtomicIncrement_UInt32_semantics;
extern Function AtomicIncrement_UInt32;

/// atomicDecrement with UInt32, MemorySemantics
extern Variable AtomicDecrement_UInt32_ptr;
extern Variable AtomicDecrement_UInt32_semantics;
extern Function AtomicDecrement_UInt32;

/// atomicLoad with Int32, MemorySemantics
extern Variable AtomicLoad_Int32_ptr;
extern Variable AtomicLoad_Int32_semantics;
extern Function AtomicLoad_Int32;

/// atomicIncrement with Int32, MemorySemantics
extern Variable AtomicIncrement_Int32_ptr;
extern Variable AtomicIncrement_Int32_semantics;
extern Function AtomicIncrement_Int32;

/// atomicDecrement with Int32, MemorySemantics
extern Variable AtomicDecrement_Int32_ptr;
extern Variable AtomicDecrement_Int32_semantics;
extern Function AtomicDecrement_Int32;

/// atomicLoad with UInt16, MemorySemantics
extern Variable AtomicLoad_UInt16_ptr;
extern Variable AtomicLoad_UInt16_semantics;
extern Function AtomicLoad_UInt16;

/// atomicIncrement with UInt16, MemorySemantics
extern Variable AtomicIncrement_UInt16_ptr;
extern Variable AtomicIncrement_UInt16_semantics;
extern Function AtomicIncrement_UInt16;

/// atomicDecrement with UInt16, MemorySemantics
extern Variable AtomicDecrement_UInt16_ptr;
extern Variable AtomicDecrement_UInt16_semantics;
extern Function AtomicDecrement_UInt16;

/// atomicLoad with Int16, MemorySemantics
extern Variable AtomicLoad_Int16_ptr;
extern Variable AtomicLoad_Int16_semantics;
extern Function AtomicLoad_Int16;

/// atomicIncrement with Int16, MemorySemantics
extern Variable AtomicIncrement_Int16_ptr;
extern Variable AtomicIncrement_Int16_semantics;
extern Function AtomicIncrement_Int16;

/// atomicDecrement with Int16, MemorySemantics
extern Variable AtomicDecrement_Int16_ptr;
extern Variable AtomicDecrement_Int16_semantics;
extern Function AtomicDecrement_Int16;

/// atomicStore with UInt32, UInt32, MemorySemantics
extern Variable AtomicStore_UInt32_ptr;
extern Variable AtomicStore_UInt32_value;
extern Variable AtomicStore_UInt32_semantics;
extern Function AtomicStore_UInt32;

/// atomicExchange with UInt32, UInt32, MemorySemantics
extern Variable AtomicExchange_UInt32_ptr;
extern Variable AtomicExchange_UInt32_value;
extern Variable AtomicExchange_UInt32_semantics;
extern Function AtomicExchange_UInt32;

/// atomicAdd with UInt32, UInt32, MemorySemantics
extern Variable AtomicAdd_UInt32_ptr;
extern Variable AtomicAdd_UInt32_value;
extern Variable AtomicAdd_UInt32_semantics;
extern Function AtomicAdd_UInt32;

/// atomicSubtract with UInt32, UInt32, MemorySemantics
extern Variable AtomicSubtract_UInt32_ptr;
extern Variable AtomicSubtract_UInt32_value;
extern Variable AtomicSubtract_UInt32_semantics;
extern Function AtomicSubtract_UInt32;

/// atomicAnd with UInt32, UInt32, MemorySemantics
extern Variable AtomicAnd_UInt32_ptr;
extern Variable AtomicAnd_UInt32_value;
extern Variable AtomicAnd_UInt32_semantics;
extern Function AtomicAnd_UInt32;

/// atomicOr with UInt32, UInt32, MemorySemantics
extern Variable AtomicOr_UInt32_ptr;
extern Variable AtomicOr_UInt32_value;
extern Variable AtomicOr_UInt32_semantics;
extern Function AtomicOr_UInt32;

/// atomicXor with UInt32, UInt32, MemorySemantics
extern Variable AtomicXor_UInt32_ptr;
extern Variable AtomicXor_UInt32_value;
extern Variable AtomicXor_UInt32_semantics;
extern Function AtomicXor_UInt32;

/// atomicStore with Int32, Int32, MemorySemantics
extern Variable AtomicStore_Int32_ptr;
extern Variable AtomicStore_Int32_value;
extern Variable AtomicStore_Int32_semantics;
extern Function AtomicStore_Int32;

/// atomicExchange with Int32, Int32, MemorySemantics
extern Variable AtomicExchange_Int32_ptr;
extern Variable AtomicExchange_Int32_value;
extern Variable AtomicExchange_Int32_semantics;
extern Function AtomicExchange_Int32;

/// atomicAdd with Int32, Int32, MemorySemantics
extern Variable AtomicAdd_Int32_ptr;
extern Variable AtomicAdd_Int32_value;
extern Variable AtomicAdd_Int32_semantics;
extern Function AtomicAdd_Int32;

/// atomicSubtract with Int32, Int32, MemorySemantics
extern Variable AtomicSubtract_Int32_ptr;
extern Variable AtomicSubtract_Int32_value;
extern Variable AtomicSubtract_Int32_semantics;
extern Function AtomicSubtract_Int32;

/// atomicAnd with Int32, Int32, MemorySemantics
extern Variable AtomicAnd_Int32_ptr;
extern Variable AtomicAnd_Int32_value;
extern Variable AtomicAnd_Int32_semantics;
extern Function AtomicAnd_Int32;

/// atomicOr with Int32, Int32, MemorySemantics
extern Variable AtomicOr_Int32_ptr;
extern Variable AtomicOr_Int32_value;
extern Variable AtomicOr_Int32_semantics;
extern Function AtomicOr_Int32;

/// atomicXor with Int32, Int32, MemorySemantics
extern Variable AtomicXor_Int32_ptr;
extern Variable AtomicXor_Int32_value;
extern Variable AtomicXor_Int32_semantics;
extern Function AtomicXor_Int32;

/// atomicStore with UInt16, UInt16, MemorySemantics
extern Variable AtomicStore_UInt16_ptr;
extern Variable AtomicStore_UInt16_value;
extern Variable AtomicStore_UInt16_semantics;
extern Function AtomicStore_UInt16;

/// atomicExchange with UInt16, UInt16, MemorySemantics
extern Variable AtomicExchange_UInt16_ptr;
extern Variable AtomicExchange_UInt16_value;
extern Variable AtomicExchange_UInt16_semantics;
extern Function AtomicExchange_UInt16;

/// atomicAdd with UInt16, UInt16, MemorySemantics
extern Variable AtomicAdd_UInt16_ptr;
extern Variable AtomicAdd_UInt16_value;
extern Variable AtomicAdd_UInt16_semantics;
extern Function AtomicAdd_UInt16;

/// atomicSubtract with UInt16, UInt16, MemorySemantics
extern Variable AtomicSubtract_UInt16_ptr;
extern Variable AtomicSubtract_UInt16_value;
extern Variable AtomicSubtract_UInt16_semantics;
extern Function AtomicSubtract_UInt16;

/// atomicAnd with UInt16, UInt16, MemorySemantics
extern Variable AtomicAnd_UInt16_ptr;
extern Variable AtomicAnd_UInt16_value;
extern Variable AtomicAnd_UInt16_semantics;
extern Function AtomicAnd_UInt16;

/// atomicOr with UInt16, UInt16, MemorySemantics
extern Variable AtomicOr_UInt16_ptr;
extern Variable AtomicOr_UInt16_value;
extern Variable AtomicOr_UInt16_semantics;
extern Function AtomicOr_UInt16;

/// atomicXor with UInt16, UInt16, MemorySemantics
extern Variable AtomicXor_UInt16_ptr;
extern Variable AtomicXor_UInt16_value;
extern Variable AtomicXor_UInt16_semantics;
extern Function AtomicXor_UInt16;

/// atomicStore with Int16, Int16, MemorySemantics
extern Variable AtomicStore_Int16_ptr;
extern Variable AtomicStore_Int16_value;
extern Variable AtomicStore_Int16_semantics;
extern Function AtomicStore_Int16;

/// atomicExchange with Int16, Int16, MemorySemantics
extern Variable AtomicExchange_Int16_ptr;
extern Variable AtomicExchange_Int16_value;
extern Variable AtomicExchange_Int16_semantics;
extern Function AtomicExchange_Int16;

/// atomicAdd with Int16, Int16, MemorySemantics
extern Variable AtomicAdd_Int16_ptr;
extern Variable AtomicAdd_Int16_value;
extern Variable AtomicAdd_Int16_semantics;
extern Function AtomicAdd_Int16;

/// atomicSubtract with Int16, Int16, MemorySemantics
extern Variable AtomicSubtract_Int16_ptr;
extern Variable AtomicSubtract_Int16_value;
extern Variable AtomicSubtract_Int16_semantics;
extern Function AtomicSubtract_Int16;

/// atomicAnd with Int16, Int16, MemorySemantics
extern Variable AtomicAnd_Int16_ptr;
extern Variable AtomicAnd_Int16_value;
extern Variable AtomicAnd_Int16_semantics;
extern Function AtomicAnd_Int16;

/// atomicOr with Int16, Int16, MemorySemantics
extern Variable AtomicOr_Int16_ptr;
extern Variable AtomicOr_Int16_value;
extern Variable AtomicOr_Int16_semantics;
extern Function AtomicOr_Int16;

/// atomicXor with Int16, Int16, MemorySemantics
extern Variable AtomicXor_Int16_ptr;
extern Variable AtomicXor_Int16_value;
extern Variable AtomicXor_Int16_semantics;
extern Function AtomicXor_Int16;

/// atomicCompareExchange with Int16, Int16, Int16, MemorySemantics
extern Variable AtomicCompareExchange_UInt32_ptr;
extern Variable AtomicCompareExchange_UInt32_value;
extern Variable AtomicCompareExchange_UInt32_compare;
extern Variable AtomicCompareExchange_UInt32_semantics;
extern Function AtomicCompareExchange_UInt32;

/// atomicCompareExchange with Int16, Int16, Int16, MemorySemantics
extern Variable AtomicCompareExchange_Int32_ptr;
extern Variable AtomicCompareExchange_Int32_value;
extern Variable AtomicCompareExchange_Int32_compare;
extern Variable AtomicCompareExchange_Int32_semantics;
extern Function AtomicCompareExchange_Int32;

/// atomicCompareExchange with Int16, Int16, Int16, MemorySemantics
extern Variable AtomicCompareExchange_UInt16_ptr;
extern Variable AtomicCompareExchange_UInt16_value;
extern Variable AtomicCompareExchange_UInt16_compare;
extern Variable AtomicCompareExchange_UInt16_semantics;
extern Function AtomicCompareExchange_UInt16;

/// atomicCompareExchange with Int16, Int16, Int16, MemorySemantics
extern Variable AtomicCompareExchange_Int16_ptr;
extern Variable AtomicCompareExchange_Int16_value;
extern Variable AtomicCompareExchange_Int16_compare;
extern Variable AtomicCompareExchange_Int16_semantics;
extern Function AtomicCompareExchange_Int16;

/// bitInsert with UInt16, UInt16, UInt16, UInt16
extern Variable BitInsert_UInt16_base;
extern Variable BitInsert_UInt16_value;
extern Variable BitInsert_UInt16_offset;
extern Variable BitInsert_UInt16_count;
extern Function BitInsert_UInt16;

/// bitInsert with UInt32, UInt32, UInt32, UInt32
extern Variable BitInsert_UInt32_base;
extern Variable BitInsert_UInt32_value;
extern Variable BitInsert_UInt32_offset;
extern Variable BitInsert_UInt32_count;
extern Function BitInsert_UInt32;

/// bitExtract with UInt32, UInt32, UInt32
extern Variable BitExtract_UInt32_base;
extern Variable BitExtract_UInt32_offset;
extern Variable BitExtract_UInt32_count;
extern Function BitExtract_UInt32;

/// bitExtract with Int32, Int32, Int32
extern Variable BitExtract_Int32_base;
extern Variable BitExtract_Int32_offset;
extern Variable BitExtract_Int32_count;
extern Function BitExtract_Int32;

/// bitExtract with UInt16, UInt16, UInt16
extern Variable BitExtract_UInt16_base;
extern Variable BitExtract_UInt16_offset;
extern Variable BitExtract_UInt16_count;
extern Function BitExtract_UInt16;

/// bitExtract with Int16, Int16, Int16
extern Variable BitExtract_Int16_base;
extern Variable BitExtract_Int16_offset;
extern Variable BitExtract_Int16_count;
extern Function BitExtract_Int16;

/// bitReverse with UInt32
extern Variable BitReverse_UInt32_base;
extern Function BitReverse_UInt32;

/// bitReverse with Int32
extern Variable BitReverse_Int32_base;
extern Function BitReverse_Int32;

/// bitReverse with UInt16
extern Variable BitReverse_UInt16_base;
extern Function BitReverse_UInt16;

/// bitReverse with Int16
extern Variable BitReverse_Int16_base;
extern Function BitReverse_Int16;

/// bitCount with UInt32
extern Variable BitCount_UInt32_base;
extern Function BitCount_UInt32;

/// bitCount with Int32
extern Variable BitCount_Int32_base;
extern Function BitCount_Int32;

/// bitCount with UInt16
extern Variable BitCount_UInt16_base;
extern Function BitCount_UInt16;

/// bitCount with Int16
extern Variable BitCount_Int16_base;
extern Function BitCount_Int16;

/// executionBarrier
extern Function ExecutionBarrier;

/// executionBarrierSubgroup
extern Function ExecutionBarrierSubgroup;

/// executionBarrierWorkgroup
extern Function ExecutionBarrierWorkgroup;

/// memoryBarrier
extern Function MemoryBarrier;

/// memoryBarrierBuffer
extern Function MemoryBarrierBuffer;

/// memoryBarrierTexture
extern Function MemoryBarrierTexture;

/// memoryBarrierAtomic
extern Function MemoryBarrierAtomic;

/// memoryBarrierSubgroup
extern Function MemoryBarrierSubgroup;

/// memoryBarrierWorkgroup
extern Function MemoryBarrierWorkgroup;

/// textureGetSize with Texture1D
extern Variable TextureGetSize_Texture1D_texture;
extern Function TextureGetSize_Texture1D;

/// textureGetSize with Texture2D
extern Variable TextureGetSize_Texture2D_texture;
extern Function TextureGetSize_Texture2D;

/// textureGetSize with Texture3D
extern Variable TextureGetSize_Texture3D_texture;
extern Function TextureGetSize_Texture3D;

/// textureGetSize with TextureCube
extern Variable TextureGetSize_TextureCube_texture;
extern Function TextureGetSize_TextureCube;

/// textureGetSize with Texture1DArray
extern Variable TextureGetSize_Texture1DArray_texture;
extern Function TextureGetSize_Texture1DArray;

/// textureGetSize with Texture2DArray
extern Variable TextureGetSize_Texture2DArray_texture;
extern Function TextureGetSize_Texture2DArray;

/// textureGetSize with TextureCubeArray
extern Variable TextureGetSize_TextureCubeArray_texture;
extern Function TextureGetSize_TextureCubeArray;

/// textureGetSizeMip with Texture1D, UInt32
extern Variable TextureGetSizeMip_Texture1D_texture;
extern Variable TextureGetSizeMip_Texture1D_mip;
extern Function TextureGetSizeMip_Texture1D;

/// textureGetSizeMip with Texture2D, UInt32
extern Variable TextureGetSizeMip_Texture2D_texture;
extern Variable TextureGetSizeMip_Texture2D_mip;
extern Function TextureGetSizeMip_Texture2D;

/// textureGetSizeMip with Texture3D, UInt32
extern Variable TextureGetSizeMip_Texture3D_texture;
extern Variable TextureGetSizeMip_Texture3D_mip;
extern Function TextureGetSizeMip_Texture3D;

/// textureGetSizeMip with TextureCube, UInt32
extern Variable TextureGetSizeMip_TextureCube_texture;
extern Variable TextureGetSizeMip_TextureCube_mip;
extern Function TextureGetSizeMip_TextureCube;

/// textureGetSizeMip with Texture1DArray, UInt32
extern Variable TextureGetSizeMip_Texture1DArray_texture;
extern Variable TextureGetSizeMip_Texture1DArray_mip;
extern Function TextureGetSizeMip_Texture1DArray;

/// textureGetSizeMip with Texture2DArray, UInt32
extern Variable TextureGetSizeMip_Texture2DArray_texture;
extern Variable TextureGetSizeMip_Texture2DArray_mip;
extern Function TextureGetSizeMip_Texture2DArray;

/// textureGetSizeMip with TextureCubeArray, UInt32
extern Variable TextureGetSizeMip_TextureCubeArray_texture;
extern Variable TextureGetSizeMip_TextureCubeArray_mip;
extern Function TextureGetSizeMip_TextureCubeArray;

/// textureGetMips with Texture1D
extern Variable TextureGetMips_Texture1D_texture;
extern Function TextureGetMips_Texture1D;

/// textureGetMips with Texture2D
extern Variable TextureGetMips_Texture2D_texture;
extern Function TextureGetMips_Texture2D;

/// textureGetMips with Texture3D
extern Variable TextureGetMips_Texture3D_texture;
extern Function TextureGetMips_Texture3D;

/// textureGetMips with TextureCube
extern Variable TextureGetMips_TextureCube_texture;
extern Function TextureGetMips_TextureCube;

/// textureGetMips with Texture1DArray
extern Variable TextureGetMips_Texture1DArray_texture;
extern Function TextureGetMips_Texture1DArray;

/// textureGetMips with Texture2DArray
extern Variable TextureGetMips_Texture2DArray_texture;
extern Function TextureGetMips_Texture2DArray;

/// textureGetMips with TextureCubeArray
extern Variable TextureGetMips_TextureCubeArray_texture;
extern Function TextureGetMips_TextureCubeArray;

/// textureGetSamples with Texture2DMS
extern Variable TextureGetSamples_Texture2DMS_texture;
extern Function TextureGetSamples_Texture2DMS;

/// textureGetSamples with Texture2DMSArray
extern Variable TextureGetSamples_Texture2DMSArray_texture;
extern Function TextureGetSamples_Texture2DMSArray;

/// textureGetSampledMip with Texture1D, Sampler, Float32
extern Variable TextureGetSampledMip_Texture1D_texture;
extern Variable TextureGetSampledMip_Texture1D_sampler;
extern Variable TextureGetSampledMip_Texture1D_coordinate;
extern Function TextureGetSampledMip_Texture1D;

/// textureGetSampledMip with Texture1D, Float32
extern Variable SampledTextureGetSampledMip_Texture1D_texture;
extern Variable SampledTextureGetSampledMip_Texture1D_coordinate;
extern Function SampledTextureGetSampledMip_Texture1D;

/// textureGetSampledMip with Texture2D, Sampler, Float32x2
extern Variable TextureGetSampledMip_Texture2D_texture;
extern Variable TextureGetSampledMip_Texture2D_sampler;
extern Variable TextureGetSampledMip_Texture2D_coordinate;
extern Function TextureGetSampledMip_Texture2D;

/// textureGetSampledMip with Texture2D, Float32x2
extern Variable SampledTextureGetSampledMip_Texture2D_texture;
extern Variable SampledTextureGetSampledMip_Texture2D_coordinate;
extern Function SampledTextureGetSampledMip_Texture2D;

/// textureGetSampledMip with Texture3D, Sampler, Float32x3
extern Variable TextureGetSampledMip_Texture3D_texture;
extern Variable TextureGetSampledMip_Texture3D_sampler;
extern Variable TextureGetSampledMip_Texture3D_coordinate;
extern Function TextureGetSampledMip_Texture3D;

/// textureGetSampledMip with Texture3D, Float32x3
extern Variable SampledTextureGetSampledMip_Texture3D_texture;
extern Variable SampledTextureGetSampledMip_Texture3D_coordinate;
extern Function SampledTextureGetSampledMip_Texture3D;

/// textureGetSampledMip with TextureCube, Sampler, Float32x3
extern Variable TextureGetSampledMip_TextureCube_texture;
extern Variable TextureGetSampledMip_TextureCube_sampler;
extern Variable TextureGetSampledMip_TextureCube_coordinate;
extern Function TextureGetSampledMip_TextureCube;

/// textureGetSampledMip with TextureCube, Float32x3
extern Variable SampledTextureGetSampledMip_TextureCube_texture;
extern Variable SampledTextureGetSampledMip_TextureCube_coordinate;
extern Function SampledTextureGetSampledMip_TextureCube;

/// textureGetSampledMip with Texture1DArray, Sampler, Float32x2
extern Variable TextureGetSampledMip_Texture1DArray_texture;
extern Variable TextureGetSampledMip_Texture1DArray_sampler;
extern Variable TextureGetSampledMip_Texture1DArray_coordinate;
extern Function TextureGetSampledMip_Texture1DArray;

/// textureGetSampledMip with Texture1DArray, Float32x2
extern Variable SampledTextureGetSampledMip_Texture1DArray_texture;
extern Variable SampledTextureGetSampledMip_Texture1DArray_coordinate;
extern Function SampledTextureGetSampledMip_Texture1DArray;

/// textureGetSampledMip with Texture2DArray, Sampler, Float32x3
extern Variable TextureGetSampledMip_Texture2DArray_texture;
extern Variable TextureGetSampledMip_Texture2DArray_sampler;
extern Variable TextureGetSampledMip_Texture2DArray_coordinate;
extern Function TextureGetSampledMip_Texture2DArray;

/// textureGetSampledMip with Texture2DArray, Float32x3
extern Variable SampledTextureGetSampledMip_Texture2DArray_texture;
extern Variable SampledTextureGetSampledMip_Texture2DArray_coordinate;
extern Function SampledTextureGetSampledMip_Texture2DArray;

/// textureGetSampledMip with TextureCubeArray, Sampler, Float32x4
extern Variable TextureGetSampledMip_TextureCubeArray_texture;
extern Variable TextureGetSampledMip_TextureCubeArray_sampler;
extern Variable TextureGetSampledMip_TextureCubeArray_coordinate;
extern Function TextureGetSampledMip_TextureCubeArray;

/// textureGetSampledMip with TextureCubeArray, Float32x4
extern Variable SampledTextureGetSampledMip_TextureCubeArray_texture;
extern Variable SampledTextureGetSampledMip_TextureCubeArray_coordinate;
extern Function SampledTextureGetSampledMip_TextureCubeArray;

/// textureLoad with Texture1D, Int32
extern Variable TextureLoad_Texture1D_texture;
extern Variable TextureLoad_Texture1D_coordinate;
extern Function TextureLoad_Texture1D;

/// textureLoadMip with Texture1D, Int32, Int32
extern Variable TextureLoadMip_Texture1D_texture;
extern Variable TextureLoadMip_Texture1D_coordinate;
extern Variable TextureLoadMip_Texture1D_mip;
extern Function TextureLoadMip_Texture1D;

/// textureStore with Texture1D, Int32, Float32x4
extern Variable TextureStore_Texture1D_texture;
extern Variable TextureStore_Texture1D_coordinate;
extern Variable TextureStore_Texture1D_value;
extern Function TextureStore_Texture1D;

/// textureStoreMip with Texture1D, Int32, Int32, Float32x4
extern Variable TextureStoreMip_Texture1D_texture;
extern Variable TextureStoreMip_Texture1D_coordinate;
extern Variable TextureStoreMip_Texture1D_mip;
extern Variable TextureStoreMip_Texture1D_value;
extern Function TextureStoreMip_Texture1D;

/// textureLoad with Texture2D, Int32x2
extern Variable TextureLoad_Texture2D_texture;
extern Variable TextureLoad_Texture2D_coordinate;
extern Function TextureLoad_Texture2D;

/// textureLoadMip with Texture2D, Int32x2, Int32
extern Variable TextureLoadMip_Texture2D_texture;
extern Variable TextureLoadMip_Texture2D_coordinate;
extern Variable TextureLoadMip_Texture2D_mip;
extern Function TextureLoadMip_Texture2D;

/// textureStore with Texture2D, Int32x2, Float32x4
extern Variable TextureStore_Texture2D_texture;
extern Variable TextureStore_Texture2D_coordinate;
extern Variable TextureStore_Texture2D_value;
extern Function TextureStore_Texture2D;

/// textureStoreMip with Texture2D, Int32x2, Int32, Float32x4
extern Variable TextureStoreMip_Texture2D_texture;
extern Variable TextureStoreMip_Texture2D_coordinate;
extern Variable TextureStoreMip_Texture2D_mip;
extern Variable TextureStoreMip_Texture2D_value;
extern Function TextureStoreMip_Texture2D;

/// textureLoad with Texture3D, Int32x3
extern Variable TextureLoad_Texture3D_texture;
extern Variable TextureLoad_Texture3D_coordinate;
extern Function TextureLoad_Texture3D;

/// textureLoadMip with Texture3D, Int32x3, Int32
extern Variable TextureLoadMip_Texture3D_texture;
extern Variable TextureLoadMip_Texture3D_coordinate;
extern Variable TextureLoadMip_Texture3D_mip;
extern Function TextureLoadMip_Texture3D;

/// textureStore with Texture3D, Int32x3, Float32x4
extern Variable TextureStore_Texture3D_texture;
extern Variable TextureStore_Texture3D_coordinate;
extern Variable TextureStore_Texture3D_value;
extern Function TextureStore_Texture3D;

/// textureStoreMip with Texture3D, Int32x3, Int32, Float32x4
extern Variable TextureStoreMip_Texture3D_texture;
extern Variable TextureStoreMip_Texture3D_coordinate;
extern Variable TextureStoreMip_Texture3D_mip;
extern Variable TextureStoreMip_Texture3D_value;
extern Function TextureStoreMip_Texture3D;

/// textureLoad with TextureCube, Int32x3
extern Variable TextureLoad_TextureCube_texture;
extern Variable TextureLoad_TextureCube_coordinate;
extern Function TextureLoad_TextureCube;

/// textureLoadMip with TextureCube, Int32x3, Int32
extern Variable TextureLoadMip_TextureCube_texture;
extern Variable TextureLoadMip_TextureCube_coordinate;
extern Variable TextureLoadMip_TextureCube_mip;
extern Function TextureLoadMip_TextureCube;

/// textureStore with TextureCube, Int32x3, Float32x4
extern Variable TextureStore_TextureCube_texture;
extern Variable TextureStore_TextureCube_coordinate;
extern Variable TextureStore_TextureCube_value;
extern Function TextureStore_TextureCube;

/// textureStoreMip with TextureCube, Int32x3, Int32, Float32x4
extern Variable TextureStoreMip_TextureCube_texture;
extern Variable TextureStoreMip_TextureCube_coordinate;
extern Variable TextureStoreMip_TextureCube_mip;
extern Variable TextureStoreMip_TextureCube_value;
extern Function TextureStoreMip_TextureCube;

/// textureLoad with Texture1DArray, Int32x2
extern Variable TextureLoad_Texture1DArray_texture;
extern Variable TextureLoad_Texture1DArray_coordinate;
extern Function TextureLoad_Texture1DArray;

/// textureLoadMip with Texture1DArray, Int32x2, Int32
extern Variable TextureLoadMip_Texture1DArray_texture;
extern Variable TextureLoadMip_Texture1DArray_coordinate;
extern Variable TextureLoadMip_Texture1DArray_mip;
extern Function TextureLoadMip_Texture1DArray;

/// textureStore with Texture1DArray, Int32x2, Float32x4
extern Variable TextureStore_Texture1DArray_texture;
extern Variable TextureStore_Texture1DArray_coordinate;
extern Variable TextureStore_Texture1DArray_value;
extern Function TextureStore_Texture1DArray;

/// textureStoreMip with Texture1DArray, Int32x2, Int32, Float32x4
extern Variable TextureStoreMip_Texture1DArray_texture;
extern Variable TextureStoreMip_Texture1DArray_coordinate;
extern Variable TextureStoreMip_Texture1DArray_mip;
extern Variable TextureStoreMip_Texture1DArray_value;
extern Function TextureStoreMip_Texture1DArray;

/// textureLoad with Texture2DArray, Int32x3
extern Variable TextureLoad_Texture2DArray_texture;
extern Variable TextureLoad_Texture2DArray_coordinate;
extern Function TextureLoad_Texture2DArray;

/// textureLoadMip with Texture2DArray, Int32x3, Int32
extern Variable TextureLoadMip_Texture2DArray_texture;
extern Variable TextureLoadMip_Texture2DArray_coordinate;
extern Variable TextureLoadMip_Texture2DArray_mip;
extern Function TextureLoadMip_Texture2DArray;

/// textureStore with Texture2DArray, Int32x3, Float32x4
extern Variable TextureStore_Texture2DArray_texture;
extern Variable TextureStore_Texture2DArray_coordinate;
extern Variable TextureStore_Texture2DArray_value;
extern Function TextureStore_Texture2DArray;

/// textureStoreMip with Texture2DArray, Int32x3, Int32, Float32x4
extern Variable TextureStoreMip_Texture2DArray_texture;
extern Variable TextureStoreMip_Texture2DArray_coordinate;
extern Variable TextureStoreMip_Texture2DArray_mip;
extern Variable TextureStoreMip_Texture2DArray_value;
extern Function TextureStoreMip_Texture2DArray;

/// textureLoad with TextureCubeArray, Int32x4
extern Variable TextureLoad_TextureCubeArray_texture;
extern Variable TextureLoad_TextureCubeArray_coordinate;
extern Function TextureLoad_TextureCubeArray;

/// textureLoadMip with TextureCubeArray, Int32x4, Int32
extern Variable TextureLoadMip_TextureCubeArray_texture;
extern Variable TextureLoadMip_TextureCubeArray_coordinate;
extern Variable TextureLoadMip_TextureCubeArray_mip;
extern Function TextureLoadMip_TextureCubeArray;

/// textureStore with TextureCubeArray, Int32x4, Float32x4
extern Variable TextureStore_TextureCubeArray_texture;
extern Variable TextureStore_TextureCubeArray_coordinate;
extern Variable TextureStore_TextureCubeArray_value;
extern Function TextureStore_TextureCubeArray;

/// textureStoreMip with TextureCubeArray, Int32x4, Int32, Float32x4
extern Variable TextureStoreMip_TextureCubeArray_texture;
extern Variable TextureStoreMip_TextureCubeArray_coordinate;
extern Variable TextureStoreMip_TextureCubeArray_mip;
extern Variable TextureStoreMip_TextureCubeArray_value;
extern Function TextureStoreMip_TextureCubeArray;

/// textureLoad with Texture2DMS, Int32x2
extern Variable TextureLoad_Texture2DMS_texture;
extern Variable TextureLoad_Texture2DMS_coordinate;
extern Function TextureLoad_Texture2DMS;

/// textureLoadMip with Texture2DMS, Int32x2, Int32
extern Variable TextureLoadMip_Texture2DMS_texture;
extern Variable TextureLoadMip_Texture2DMS_coordinate;
extern Variable TextureLoadMip_Texture2DMS_mip;
extern Function TextureLoadMip_Texture2DMS;

/// textureStore with Texture2DMS, Int32x2, Float32x4
extern Variable TextureStore_Texture2DMS_texture;
extern Variable TextureStore_Texture2DMS_coordinate;
extern Variable TextureStore_Texture2DMS_value;
extern Function TextureStore_Texture2DMS;

/// textureStoreMip with Texture2DMS, Int32x2, Int32, Float32x4
extern Variable TextureStoreMip_Texture2DMS_texture;
extern Variable TextureStoreMip_Texture2DMS_coordinate;
extern Variable TextureStoreMip_Texture2DMS_mip;
extern Variable TextureStoreMip_Texture2DMS_value;
extern Function TextureStoreMip_Texture2DMS;

/// textureLoad with Texture2DMSArray, Int32x3
extern Variable TextureLoad_Texture2DMSArray_texture;
extern Variable TextureLoad_Texture2DMSArray_coordinate;
extern Function TextureLoad_Texture2DMSArray;

/// textureLoadMip with Texture2DMSArray, Int32x3, Int32
extern Variable TextureLoadMip_Texture2DMSArray_texture;
extern Variable TextureLoadMip_Texture2DMSArray_coordinate;
extern Variable TextureLoadMip_Texture2DMSArray_mip;
extern Function TextureLoadMip_Texture2DMSArray;

/// textureStore with Texture2DMSArray, Int32x3, Float32x4
extern Variable TextureStore_Texture2DMSArray_texture;
extern Variable TextureStore_Texture2DMSArray_coordinate;
extern Variable TextureStore_Texture2DMSArray_value;
extern Function TextureStore_Texture2DMSArray;

/// textureStoreMip with Texture2DMSArray, Int32x3, Int32, Float32x4
extern Variable TextureStoreMip_Texture2DMSArray_texture;
extern Variable TextureStoreMip_Texture2DMSArray_coordinate;
extern Variable TextureStoreMip_Texture2DMSArray_mip;
extern Variable TextureStoreMip_Texture2DMSArray_value;
extern Function TextureStoreMip_Texture2DMSArray;

/// textureFetch with Texture1D, Int32, UInt32
extern Variable TextureFetch_Texture1D_texture;
extern Variable TextureFetch_Texture1D_coordinate;
extern Variable TextureFetch_Texture1D_lod;
extern Function TextureFetch_Texture1D;

/// textureFetchSample with Texture1D, Int32, UInt32, UInt32
extern Variable TextureFetchSample_Texture1D_texture;
extern Variable TextureFetchSample_Texture1D_coordinate;
extern Variable TextureFetchSample_Texture1D_lod;
extern Variable TextureFetchSample_Texture1D_sample;
extern Function TextureFetchSample_Texture1D;

/// textureFetch with Texture2D, Int32x2, UInt32
extern Variable TextureFetch_Texture2D_texture;
extern Variable TextureFetch_Texture2D_coordinate;
extern Variable TextureFetch_Texture2D_lod;
extern Function TextureFetch_Texture2D;

/// textureFetchSample with Texture2D, Int32x2, UInt32, UInt32
extern Variable TextureFetchSample_Texture2D_texture;
extern Variable TextureFetchSample_Texture2D_coordinate;
extern Variable TextureFetchSample_Texture2D_lod;
extern Variable TextureFetchSample_Texture2D_sample;
extern Function TextureFetchSample_Texture2D;

/// textureFetch with Texture3D, Int32x3, UInt32
extern Variable TextureFetch_Texture3D_texture;
extern Variable TextureFetch_Texture3D_coordinate;
extern Variable TextureFetch_Texture3D_lod;
extern Function TextureFetch_Texture3D;

/// textureFetchSample with Texture3D, Int32x3, UInt32, UInt32
extern Variable TextureFetchSample_Texture3D_texture;
extern Variable TextureFetchSample_Texture3D_coordinate;
extern Variable TextureFetchSample_Texture3D_lod;
extern Variable TextureFetchSample_Texture3D_sample;
extern Function TextureFetchSample_Texture3D;

/// textureFetch with Texture1DArray, Int32x2, UInt32
extern Variable TextureFetch_Texture1DArray_texture;
extern Variable TextureFetch_Texture1DArray_coordinate;
extern Variable TextureFetch_Texture1DArray_lod;
extern Function TextureFetch_Texture1DArray;

/// textureFetchSample with Texture1DArray, Int32x2, UInt32, UInt32
extern Variable TextureFetchSample_Texture1DArray_texture;
extern Variable TextureFetchSample_Texture1DArray_coordinate;
extern Variable TextureFetchSample_Texture1DArray_lod;
extern Variable TextureFetchSample_Texture1DArray_sample;
extern Function TextureFetchSample_Texture1DArray;

/// textureFetch with Texture2DArray, Int32x3, UInt32
extern Variable TextureFetch_Texture2DArray_texture;
extern Variable TextureFetch_Texture2DArray_coordinate;
extern Variable TextureFetch_Texture2DArray_lod;
extern Function TextureFetch_Texture2DArray;

/// textureFetchSample with Texture2DArray, Int32x3, UInt32, UInt32
extern Variable TextureFetchSample_Texture2DArray_texture;
extern Variable TextureFetchSample_Texture2DArray_coordinate;
extern Variable TextureFetchSample_Texture2DArray_lod;
extern Variable TextureFetchSample_Texture2DArray_sample;
extern Function TextureFetchSample_Texture2DArray;

/// textureFetch with Texture2DMS, Int32x2, UInt32
extern Variable TextureFetch_Texture2DMS_texture;
extern Variable TextureFetch_Texture2DMS_coordinate;
extern Variable TextureFetch_Texture2DMS_lod;
extern Function TextureFetch_Texture2DMS;

/// textureFetchSample with Texture2DMS, Int32x2, UInt32, UInt32
extern Variable TextureFetchSample_Texture2DMS_texture;
extern Variable TextureFetchSample_Texture2DMS_coordinate;
extern Variable TextureFetchSample_Texture2DMS_lod;
extern Variable TextureFetchSample_Texture2DMS_sample;
extern Function TextureFetchSample_Texture2DMS;

/// textureFetch with Texture2DMSArray, Int32x3, UInt32
extern Variable TextureFetch_Texture2DMSArray_texture;
extern Variable TextureFetch_Texture2DMSArray_coordinate;
extern Variable TextureFetch_Texture2DMSArray_lod;
extern Function TextureFetch_Texture2DMSArray;

/// textureFetchSample with Texture2DMSArray, Int32x3, UInt32, UInt32
extern Variable TextureFetchSample_Texture2DMSArray_texture;
extern Variable TextureFetchSample_Texture2DMSArray_coordinate;
extern Variable TextureFetchSample_Texture2DMSArray_lod;
extern Variable TextureFetchSample_Texture2DMSArray_sample;
extern Function TextureFetchSample_Texture2DMSArray;

/// textureGather with Texture2D, Sampler, Int32x2, Int32
extern Variable TextureGather_Texture2D_texture;
extern Variable TextureGather_Texture2D_sampler;
extern Variable TextureGather_Texture2D_coordinate;
extern Variable TextureGather_Texture2D_component;
extern Function TextureGather_Texture2D;

/// textureGather with Texture2D, Int32x2, Int32
extern Variable SampledTextureGather_Texture2D_texture;
extern Variable SampledTextureGather_Texture2D_coordinate;
extern Variable SampledTextureGather_Texture2D_component;
extern Function SampledTextureGather_Texture2D;

/// textureGatherOffset with Texture2D, Sampler, Int32x2, Int32, UInt32
extern Variable TextureGatherOffset_Texture2D_texture;
extern Variable TextureGatherOffset_Texture2D_sampler;
extern Variable TextureGatherOffset_Texture2D_coordinate;
extern Variable TextureGatherOffset_Texture2D_component;
extern Variable TextureGatherOffset_Texture2D_offset;
extern Function TextureGatherOffset_Texture2D;

/// textureGatherOffset with Texture2D, Int32x2, Int32, UInt32
extern Variable SampledTextureGatherOffset_Texture2D_texture;
extern Variable SampledTextureGatherOffset_Texture2D_coordinate;
extern Variable SampledTextureGatherOffset_Texture2D_component;
extern Variable SampledTextureGatherOffset_Texture2D_offset;
extern Function SampledTextureGatherOffset_Texture2D;

/// textureGather with TextureCube, Sampler, Int32x3, Int32
extern Variable TextureGather_TextureCube_texture;
extern Variable TextureGather_TextureCube_sampler;
extern Variable TextureGather_TextureCube_coordinate;
extern Variable TextureGather_TextureCube_component;
extern Function TextureGather_TextureCube;

/// textureGather with TextureCube, Int32x3, Int32
extern Variable SampledTextureGather_TextureCube_texture;
extern Variable SampledTextureGather_TextureCube_coordinate;
extern Variable SampledTextureGather_TextureCube_component;
extern Function SampledTextureGather_TextureCube;

/// textureGatherOffset with TextureCube, Sampler, Int32x3, Int32, UInt32
extern Variable TextureGatherOffset_TextureCube_texture;
extern Variable TextureGatherOffset_TextureCube_sampler;
extern Variable TextureGatherOffset_TextureCube_coordinate;
extern Variable TextureGatherOffset_TextureCube_component;
extern Variable TextureGatherOffset_TextureCube_offset;
extern Function TextureGatherOffset_TextureCube;

/// textureGatherOffset with TextureCube, Int32x3, Int32, UInt32
extern Variable SampledTextureGatherOffset_TextureCube_texture;
extern Variable SampledTextureGatherOffset_TextureCube_coordinate;
extern Variable SampledTextureGatherOffset_TextureCube_component;
extern Variable SampledTextureGatherOffset_TextureCube_offset;
extern Function SampledTextureGatherOffset_TextureCube;

/// textureGather with Texture2DArray, Sampler, Int32x3, Int32
extern Variable TextureGather_Texture2DArray_texture;
extern Variable TextureGather_Texture2DArray_sampler;
extern Variable TextureGather_Texture2DArray_coordinate;
extern Variable TextureGather_Texture2DArray_component;
extern Function TextureGather_Texture2DArray;

/// textureGather with Texture2DArray, Int32x3, Int32
extern Variable SampledTextureGather_Texture2DArray_texture;
extern Variable SampledTextureGather_Texture2DArray_coordinate;
extern Variable SampledTextureGather_Texture2DArray_component;
extern Function SampledTextureGather_Texture2DArray;

/// textureGatherOffset with Texture2DArray, Sampler, Int32x3, Int32, UInt32
extern Variable TextureGatherOffset_Texture2DArray_texture;
extern Variable TextureGatherOffset_Texture2DArray_sampler;
extern Variable TextureGatherOffset_Texture2DArray_coordinate;
extern Variable TextureGatherOffset_Texture2DArray_component;
extern Variable TextureGatherOffset_Texture2DArray_offset;
extern Function TextureGatherOffset_Texture2DArray;

/// textureGatherOffset with Texture2DArray, Int32x3, Int32, UInt32
extern Variable SampledTextureGatherOffset_Texture2DArray_texture;
extern Variable SampledTextureGatherOffset_Texture2DArray_coordinate;
extern Variable SampledTextureGatherOffset_Texture2DArray_component;
extern Variable SampledTextureGatherOffset_Texture2DArray_offset;
extern Function SampledTextureGatherOffset_Texture2DArray;

/// textureGather with TextureCubeArray, Sampler, Int32x4, Int32
extern Variable TextureGather_TextureCubeArray_texture;
extern Variable TextureGather_TextureCubeArray_sampler;
extern Variable TextureGather_TextureCubeArray_coordinate;
extern Variable TextureGather_TextureCubeArray_component;
extern Function TextureGather_TextureCubeArray;

/// textureGather with TextureCubeArray, Int32x4, Int32
extern Variable SampledTextureGather_TextureCubeArray_texture;
extern Variable SampledTextureGather_TextureCubeArray_coordinate;
extern Variable SampledTextureGather_TextureCubeArray_component;
extern Function SampledTextureGather_TextureCubeArray;

/// textureGatherOffset with TextureCubeArray, Sampler, Int32x4, Int32, UInt32
extern Variable TextureGatherOffset_TextureCubeArray_texture;
extern Variable TextureGatherOffset_TextureCubeArray_sampler;
extern Variable TextureGatherOffset_TextureCubeArray_coordinate;
extern Variable TextureGatherOffset_TextureCubeArray_component;
extern Variable TextureGatherOffset_TextureCubeArray_offset;
extern Function TextureGatherOffset_TextureCubeArray;

/// textureGatherOffset with TextureCubeArray, Int32x4, Int32, UInt32
extern Variable SampledTextureGatherOffset_TextureCubeArray_texture;
extern Variable SampledTextureGatherOffset_TextureCubeArray_coordinate;
extern Variable SampledTextureGatherOffset_TextureCubeArray_component;
extern Variable SampledTextureGatherOffset_TextureCubeArray_offset;
extern Function SampledTextureGatherOffset_TextureCubeArray;

/// texturePixelCacheLoad with PixelCache
extern Variable TexturePixelCacheLoad_PixelCache_texture;
extern Function TexturePixelCacheLoad_PixelCache;

/// texturePixelCacheLoad with PixelCacheMS, UInt32
extern Variable TexturePixelCacheLoad_PixelCacheMS_texture;
extern Variable TexturePixelCacheLoad_PixelCacheMS_sample;
extern Function TexturePixelCacheLoad_PixelCacheMS;

/// textureSample with Texture1D, Sampler, Float32
extern Variable TextureSample_Texture1D_texture;
extern Variable TextureSample_Texture1D_sampler;
extern Variable TextureSample_Texture1D_coordinate;
extern Function TextureSample_Texture1D;

/// textureSample with Texture1D, Float32
extern Variable SampledTextureSample_Texture1D_texture;
extern Variable SampledTextureSample_Texture1D_coordinate;
extern Function SampledTextureSample_Texture1D;

/// textureSample with Texture2D, Sampler, Float32x2
extern Variable TextureSample_Texture2D_texture;
extern Variable TextureSample_Texture2D_sampler;
extern Variable TextureSample_Texture2D_coordinate;
extern Function TextureSample_Texture2D;

/// textureSample with Texture2D, Float32x2
extern Variable SampledTextureSample_Texture2D_texture;
extern Variable SampledTextureSample_Texture2D_coordinate;
extern Function SampledTextureSample_Texture2D;

/// textureSample with Texture3D, Sampler, Float32x3
extern Variable TextureSample_Texture3D_texture;
extern Variable TextureSample_Texture3D_sampler;
extern Variable TextureSample_Texture3D_coordinate;
extern Function TextureSample_Texture3D;

/// textureSample with Texture3D, Float32x3
extern Variable SampledTextureSample_Texture3D_texture;
extern Variable SampledTextureSample_Texture3D_coordinate;
extern Function SampledTextureSample_Texture3D;

/// textureSample with TextureCube, Sampler, Float32x3
extern Variable TextureSample_TextureCube_texture;
extern Variable TextureSample_TextureCube_sampler;
extern Variable TextureSample_TextureCube_coordinate;
extern Function TextureSample_TextureCube;

/// textureSample with TextureCube, Float32x3
extern Variable SampledTextureSample_TextureCube_texture;
extern Variable SampledTextureSample_TextureCube_coordinate;
extern Function SampledTextureSample_TextureCube;

/// textureSample with Texture1DArray, Sampler, Float32x2
extern Variable TextureSample_Texture1DArray_texture;
extern Variable TextureSample_Texture1DArray_sampler;
extern Variable TextureSample_Texture1DArray_coordinate;
extern Function TextureSample_Texture1DArray;

/// textureSample with Texture1DArray, Float32x2
extern Variable SampledTextureSample_Texture1DArray_texture;
extern Variable SampledTextureSample_Texture1DArray_coordinate;
extern Function SampledTextureSample_Texture1DArray;

/// textureSample with Texture2DArray, Sampler, Float32x3
extern Variable TextureSample_Texture2DArray_texture;
extern Variable TextureSample_Texture2DArray_sampler;
extern Variable TextureSample_Texture2DArray_coordinate;
extern Function TextureSample_Texture2DArray;

/// textureSample with Texture2DArray, Float32x3
extern Variable SampledTextureSample_Texture2DArray_texture;
extern Variable SampledTextureSample_Texture2DArray_coordinate;
extern Function SampledTextureSample_Texture2DArray;

/// textureSample with TextureCubeArray, Sampler, Float32x4
extern Variable TextureSample_TextureCubeArray_texture;
extern Variable TextureSample_TextureCubeArray_sampler;
extern Variable TextureSample_TextureCubeArray_coordinate;
extern Function TextureSample_TextureCubeArray;

/// textureSample with TextureCubeArray, Float32x4
extern Variable SampledTextureSample_TextureCubeArray_texture;
extern Variable SampledTextureSample_TextureCubeArray_coordinate;
extern Function SampledTextureSample_TextureCubeArray;

/// textureSampleOffset with Texture1D, Sampler, Float32, Float32
extern Variable TextureSampleOffset_Texture1D_texture;
extern Variable TextureSampleOffset_Texture1D_sampler;
extern Variable TextureSampleOffset_Texture1D_coordinate;
extern Variable TextureSampleOffset_Texture1D_offset;
extern Function TextureSampleOffset_Texture1D;

/// textureSampleOffset with Texture1D, Float32, Float32
extern Variable SampledTextureSampleOffset_Texture1D_texture;
extern Variable SampledTextureSampleOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleOffset_Texture1D_offset;
extern Function SampledTextureSampleOffset_Texture1D;

/// textureSampleOffset with Texture2D, Sampler, Float32x2, Float32x2
extern Variable TextureSampleOffset_Texture2D_texture;
extern Variable TextureSampleOffset_Texture2D_sampler;
extern Variable TextureSampleOffset_Texture2D_coordinate;
extern Variable TextureSampleOffset_Texture2D_offset;
extern Function TextureSampleOffset_Texture2D;

/// textureSampleOffset with Texture2D, Float32x2, Float32x2
extern Variable SampledTextureSampleOffset_Texture2D_texture;
extern Variable SampledTextureSampleOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleOffset_Texture2D_offset;
extern Function SampledTextureSampleOffset_Texture2D;

/// textureSampleOffset with Texture3D, Sampler, Float32x3, Float32x3
extern Variable TextureSampleOffset_Texture3D_texture;
extern Variable TextureSampleOffset_Texture3D_sampler;
extern Variable TextureSampleOffset_Texture3D_coordinate;
extern Variable TextureSampleOffset_Texture3D_offset;
extern Function TextureSampleOffset_Texture3D;

/// textureSampleOffset with Texture3D, Float32x3, Float32x3
extern Variable SampledTextureSampleOffset_Texture3D_texture;
extern Variable SampledTextureSampleOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleOffset_Texture3D_offset;
extern Function SampledTextureSampleOffset_Texture3D;

/// textureSampleOffset with Texture1DArray, Sampler, Float32x2, Float32x2
extern Variable TextureSampleOffset_Texture1DArray_texture;
extern Variable TextureSampleOffset_Texture1DArray_sampler;
extern Variable TextureSampleOffset_Texture1DArray_coordinate;
extern Variable TextureSampleOffset_Texture1DArray_offset;
extern Function TextureSampleOffset_Texture1DArray;

/// textureSampleOffset with Texture1DArray, Float32x2, Float32x2
extern Variable SampledTextureSampleOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleOffset_Texture1DArray_offset;
extern Function SampledTextureSampleOffset_Texture1DArray;

/// textureSampleOffset with Texture2DArray, Sampler, Float32x3, Float32x3
extern Variable TextureSampleOffset_Texture2DArray_texture;
extern Variable TextureSampleOffset_Texture2DArray_sampler;
extern Variable TextureSampleOffset_Texture2DArray_coordinate;
extern Variable TextureSampleOffset_Texture2DArray_offset;
extern Function TextureSampleOffset_Texture2DArray;

/// textureSampleOffset with Texture2DArray, Float32x3, Float32x3
extern Variable SampledTextureSampleOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleOffset_Texture2DArray_offset;
extern Function SampledTextureSampleOffset_Texture2DArray;

/// textureSampleProj with Texture1D, Sampler, Float32, Float32
extern Variable TextureSampleProj_Texture1D_texture;
extern Variable TextureSampleProj_Texture1D_sampler;
extern Variable TextureSampleProj_Texture1D_coordinate;
extern Variable TextureSampleProj_Texture1D_proj;
extern Function TextureSampleProj_Texture1D;

/// textureSampleProj with Texture1D, Float32, Float32
extern Variable SampledTextureSampleProj_Texture1D_texture;
extern Variable SampledTextureSampleProj_Texture1D_coordinate;
extern Variable SampledTextureSampleProj_Texture1D_proj;
extern Function SampledTextureSampleProj_Texture1D;

/// textureSampleProj with Texture2D, Sampler, Float32x2, Float32
extern Variable TextureSampleProj_Texture2D_texture;
extern Variable TextureSampleProj_Texture2D_sampler;
extern Variable TextureSampleProj_Texture2D_coordinate;
extern Variable TextureSampleProj_Texture2D_proj;
extern Function TextureSampleProj_Texture2D;

/// textureSampleProj with Texture2D, Float32x2, Float32
extern Variable SampledTextureSampleProj_Texture2D_texture;
extern Variable SampledTextureSampleProj_Texture2D_coordinate;
extern Variable SampledTextureSampleProj_Texture2D_proj;
extern Function SampledTextureSampleProj_Texture2D;

/// textureSampleProj with Texture3D, Sampler, Float32x3, Float32
extern Variable TextureSampleProj_Texture3D_texture;
extern Variable TextureSampleProj_Texture3D_sampler;
extern Variable TextureSampleProj_Texture3D_coordinate;
extern Variable TextureSampleProj_Texture3D_proj;
extern Function TextureSampleProj_Texture3D;

/// textureSampleProj with Texture3D, Float32x3, Float32
extern Variable SampledTextureSampleProj_Texture3D_texture;
extern Variable SampledTextureSampleProj_Texture3D_coordinate;
extern Variable SampledTextureSampleProj_Texture3D_proj;
extern Function SampledTextureSampleProj_Texture3D;

/// textureSampleProjOffset with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleProjOffset_Texture1D_texture;
extern Variable TextureSampleProjOffset_Texture1D_sampler;
extern Variable TextureSampleProjOffset_Texture1D_coordinate;
extern Variable TextureSampleProjOffset_Texture1D_proj;
extern Variable TextureSampleProjOffset_Texture1D_offset;
extern Function TextureSampleProjOffset_Texture1D;

/// textureSampleProjOffset with Texture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleProjOffset_Texture1D_texture;
extern Variable SampledTextureSampleProjOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleProjOffset_Texture1D_proj;
extern Variable SampledTextureSampleProjOffset_Texture1D_offset;
extern Function SampledTextureSampleProjOffset_Texture1D;

/// textureSampleProjOffset with Texture2D, Sampler, Float32x2, Float32, Float32x2
extern Variable TextureSampleProjOffset_Texture2D_texture;
extern Variable TextureSampleProjOffset_Texture2D_sampler;
extern Variable TextureSampleProjOffset_Texture2D_coordinate;
extern Variable TextureSampleProjOffset_Texture2D_proj;
extern Variable TextureSampleProjOffset_Texture2D_offset;
extern Function TextureSampleProjOffset_Texture2D;

/// textureSampleProjOffset with Texture2D, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleProjOffset_Texture2D_texture;
extern Variable SampledTextureSampleProjOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleProjOffset_Texture2D_proj;
extern Variable SampledTextureSampleProjOffset_Texture2D_offset;
extern Function SampledTextureSampleProjOffset_Texture2D;

/// textureSampleProjOffset with Texture3D, Sampler, Float32x3, Float32, Float32x3
extern Variable TextureSampleProjOffset_Texture3D_texture;
extern Variable TextureSampleProjOffset_Texture3D_sampler;
extern Variable TextureSampleProjOffset_Texture3D_coordinate;
extern Variable TextureSampleProjOffset_Texture3D_proj;
extern Variable TextureSampleProjOffset_Texture3D_offset;
extern Function TextureSampleProjOffset_Texture3D;

/// textureSampleProjOffset with Texture3D, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleProjOffset_Texture3D_texture;
extern Variable SampledTextureSampleProjOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleProjOffset_Texture3D_proj;
extern Variable SampledTextureSampleProjOffset_Texture3D_offset;
extern Function SampledTextureSampleProjOffset_Texture3D;

/// textureSampleCompare with Texture1D, Sampler, Float32, Float32
extern Variable TextureSampleCompare_Texture1D_texture;
extern Variable TextureSampleCompare_Texture1D_sampler;
extern Variable TextureSampleCompare_Texture1D_coordinate;
extern Variable TextureSampleCompare_Texture1D_compare;
extern Function TextureSampleCompare_Texture1D;

/// textureSampleCompare with Texture1D, Float32, Float32
extern Variable SampledTextureSampleCompare_Texture1D_texture;
extern Variable SampledTextureSampleCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleCompare_Texture1D_compare;
extern Function SampledTextureSampleCompare_Texture1D;

/// textureSampleCompare with Texture2D, Sampler, Float32x2, Float32
extern Variable TextureSampleCompare_Texture2D_texture;
extern Variable TextureSampleCompare_Texture2D_sampler;
extern Variable TextureSampleCompare_Texture2D_coordinate;
extern Variable TextureSampleCompare_Texture2D_compare;
extern Function TextureSampleCompare_Texture2D;

/// textureSampleCompare with Texture2D, Float32x2, Float32
extern Variable SampledTextureSampleCompare_Texture2D_texture;
extern Variable SampledTextureSampleCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleCompare_Texture2D_compare;
extern Function SampledTextureSampleCompare_Texture2D;

/// textureSampleCompare with Texture3D, Sampler, Float32x3, Float32
extern Variable TextureSampleCompare_Texture3D_texture;
extern Variable TextureSampleCompare_Texture3D_sampler;
extern Variable TextureSampleCompare_Texture3D_coordinate;
extern Variable TextureSampleCompare_Texture3D_compare;
extern Function TextureSampleCompare_Texture3D;

/// textureSampleCompare with Texture3D, Float32x3, Float32
extern Variable SampledTextureSampleCompare_Texture3D_texture;
extern Variable SampledTextureSampleCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleCompare_Texture3D_compare;
extern Function SampledTextureSampleCompare_Texture3D;

/// textureSampleCompare with Texture1DArray, Sampler, Float32x2, Float32
extern Variable TextureSampleCompare_Texture1DArray_texture;
extern Variable TextureSampleCompare_Texture1DArray_sampler;
extern Variable TextureSampleCompare_Texture1DArray_coordinate;
extern Variable TextureSampleCompare_Texture1DArray_compare;
extern Function TextureSampleCompare_Texture1DArray;

/// textureSampleCompare with Texture1DArray, Float32x2, Float32
extern Variable SampledTextureSampleCompare_Texture1DArray_texture;
extern Variable SampledTextureSampleCompare_Texture1DArray_coordinate;
extern Variable SampledTextureSampleCompare_Texture1DArray_compare;
extern Function SampledTextureSampleCompare_Texture1DArray;

/// textureSampleCompare with Texture2DArray, Sampler, Float32x3, Float32
extern Variable TextureSampleCompare_Texture2DArray_texture;
extern Variable TextureSampleCompare_Texture2DArray_sampler;
extern Variable TextureSampleCompare_Texture2DArray_coordinate;
extern Variable TextureSampleCompare_Texture2DArray_compare;
extern Function TextureSampleCompare_Texture2DArray;

/// textureSampleCompare with Texture2DArray, Float32x3, Float32
extern Variable SampledTextureSampleCompare_Texture2DArray_texture;
extern Variable SampledTextureSampleCompare_Texture2DArray_coordinate;
extern Variable SampledTextureSampleCompare_Texture2DArray_compare;
extern Function SampledTextureSampleCompare_Texture2DArray;

/// textureSampleCompareOffset with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleCompareOffset_Texture1D_texture;
extern Variable TextureSampleCompareOffset_Texture1D_sampler;
extern Variable TextureSampleCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleCompareOffset_Texture1D_compare;
extern Variable TextureSampleCompareOffset_Texture1D_offset;
extern Function TextureSampleCompareOffset_Texture1D;

/// textureSampleCompareOffset with Texture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleCompareOffset_Texture1D;

/// textureSampleCompareOffset with Texture2D, Sampler, Float32x2, Float32, Float32x2
extern Variable TextureSampleCompareOffset_Texture2D_texture;
extern Variable TextureSampleCompareOffset_Texture2D_sampler;
extern Variable TextureSampleCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleCompareOffset_Texture2D_compare;
extern Variable TextureSampleCompareOffset_Texture2D_offset;
extern Function TextureSampleCompareOffset_Texture2D;

/// textureSampleCompareOffset with Texture2D, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleCompareOffset_Texture2D;

/// textureSampleCompareOffset with Texture3D, Sampler, Float32x3, Float32, Float32x3
extern Variable TextureSampleCompareOffset_Texture3D_texture;
extern Variable TextureSampleCompareOffset_Texture3D_sampler;
extern Variable TextureSampleCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleCompareOffset_Texture3D_compare;
extern Variable TextureSampleCompareOffset_Texture3D_offset;
extern Function TextureSampleCompareOffset_Texture3D;

/// textureSampleCompareOffset with Texture3D, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleCompareOffset_Texture3D;

/// textureSampleCompareOffset with Texture1DArray, Sampler, Float32x2, Float32, Float32x2
extern Variable TextureSampleCompareOffset_Texture1DArray_texture;
extern Variable TextureSampleCompareOffset_Texture1DArray_sampler;
extern Variable TextureSampleCompareOffset_Texture1DArray_coordinate;
extern Variable TextureSampleCompareOffset_Texture1DArray_compare;
extern Variable TextureSampleCompareOffset_Texture1DArray_offset;
extern Function TextureSampleCompareOffset_Texture1DArray;

/// textureSampleCompareOffset with Texture1DArray, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleCompareOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleCompareOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleCompareOffset_Texture1DArray_compare;
extern Variable SampledTextureSampleCompareOffset_Texture1DArray_offset;
extern Function SampledTextureSampleCompareOffset_Texture1DArray;

/// textureSampleCompareOffset with Texture2DArray, Sampler, Float32x3, Float32, Float32x3
extern Variable TextureSampleCompareOffset_Texture2DArray_texture;
extern Variable TextureSampleCompareOffset_Texture2DArray_sampler;
extern Variable TextureSampleCompareOffset_Texture2DArray_coordinate;
extern Variable TextureSampleCompareOffset_Texture2DArray_compare;
extern Variable TextureSampleCompareOffset_Texture2DArray_offset;
extern Function TextureSampleCompareOffset_Texture2DArray;

/// textureSampleCompareOffset with Texture2DArray, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleCompareOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleCompareOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleCompareOffset_Texture2DArray_compare;
extern Variable SampledTextureSampleCompareOffset_Texture2DArray_offset;
extern Function SampledTextureSampleCompareOffset_Texture2DArray;

/// textureSampleProjCompare with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleProjCompare_Texture1D_texture;
extern Variable TextureSampleProjCompare_Texture1D_sampler;
extern Variable TextureSampleProjCompare_Texture1D_coordinate;
extern Variable TextureSampleProjCompare_Texture1D_proj;
extern Variable TextureSampleProjCompare_Texture1D_compare;
extern Function TextureSampleProjCompare_Texture1D;

/// textureSampleProjCompare with Texture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleProjCompare_Texture1D_texture;
extern Variable SampledTextureSampleProjCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleProjCompare_Texture1D_proj;
extern Variable SampledTextureSampleProjCompare_Texture1D_compare;
extern Function SampledTextureSampleProjCompare_Texture1D;

/// textureSampleProjCompare with Texture2D, Sampler, Float32x2, Float32, Float32
extern Variable TextureSampleProjCompare_Texture2D_texture;
extern Variable TextureSampleProjCompare_Texture2D_sampler;
extern Variable TextureSampleProjCompare_Texture2D_coordinate;
extern Variable TextureSampleProjCompare_Texture2D_proj;
extern Variable TextureSampleProjCompare_Texture2D_compare;
extern Function TextureSampleProjCompare_Texture2D;

/// textureSampleProjCompare with Texture2D, Float32x2, Float32, Float32
extern Variable SampledTextureSampleProjCompare_Texture2D_texture;
extern Variable SampledTextureSampleProjCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleProjCompare_Texture2D_proj;
extern Variable SampledTextureSampleProjCompare_Texture2D_compare;
extern Function SampledTextureSampleProjCompare_Texture2D;

/// textureSampleProjCompare with Texture3D, Sampler, Float32x3, Float32, Float32
extern Variable TextureSampleProjCompare_Texture3D_texture;
extern Variable TextureSampleProjCompare_Texture3D_sampler;
extern Variable TextureSampleProjCompare_Texture3D_coordinate;
extern Variable TextureSampleProjCompare_Texture3D_proj;
extern Variable TextureSampleProjCompare_Texture3D_compare;
extern Function TextureSampleProjCompare_Texture3D;

/// textureSampleProjCompare with Texture3D, Float32x3, Float32, Float32
extern Variable SampledTextureSampleProjCompare_Texture3D_texture;
extern Variable SampledTextureSampleProjCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleProjCompare_Texture3D_proj;
extern Variable SampledTextureSampleProjCompare_Texture3D_compare;
extern Function SampledTextureSampleProjCompare_Texture3D;

/// textureSampleProjCompareOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleProjCompareOffset_Texture1D_texture;
extern Variable TextureSampleProjCompareOffset_Texture1D_sampler;
extern Variable TextureSampleProjCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleProjCompareOffset_Texture1D_proj;
extern Variable TextureSampleProjCompareOffset_Texture1D_compare;
extern Variable TextureSampleProjCompareOffset_Texture1D_offset;
extern Function TextureSampleProjCompareOffset_Texture1D;

/// textureSampleProjCompareOffset with Texture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleProjCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleProjCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleProjCompareOffset_Texture1D_proj;
extern Variable SampledTextureSampleProjCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleProjCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleProjCompareOffset_Texture1D;

/// textureSampleProjCompareOffset with Texture2D, Sampler, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleProjCompareOffset_Texture2D_texture;
extern Variable TextureSampleProjCompareOffset_Texture2D_sampler;
extern Variable TextureSampleProjCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleProjCompareOffset_Texture2D_proj;
extern Variable TextureSampleProjCompareOffset_Texture2D_compare;
extern Variable TextureSampleProjCompareOffset_Texture2D_offset;
extern Function TextureSampleProjCompareOffset_Texture2D;

/// textureSampleProjCompareOffset with Texture2D, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleProjCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleProjCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleProjCompareOffset_Texture2D_proj;
extern Variable SampledTextureSampleProjCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleProjCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleProjCompareOffset_Texture2D;

/// textureSampleProjCompareOffset with Texture3D, Sampler, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleProjCompareOffset_Texture3D_texture;
extern Variable TextureSampleProjCompareOffset_Texture3D_sampler;
extern Variable TextureSampleProjCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleProjCompareOffset_Texture3D_proj;
extern Variable TextureSampleProjCompareOffset_Texture3D_compare;
extern Variable TextureSampleProjCompareOffset_Texture3D_offset;
extern Function TextureSampleProjCompareOffset_Texture3D;

/// textureSampleProjCompareOffset with Texture3D, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleProjCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleProjCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleProjCompareOffset_Texture3D_proj;
extern Variable SampledTextureSampleProjCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleProjCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleProjCompareOffset_Texture3D;

/// textureSampleLod with Texture1D, Sampler, Float32, Float32
extern Variable TextureSampleLod_Texture1D_texture;
extern Variable TextureSampleLod_Texture1D_sampler;
extern Variable TextureSampleLod_Texture1D_coordinate;
extern Variable TextureSampleLod_Texture1D_lod;
extern Function TextureSampleLod_Texture1D;

/// textureSampleLod with Texture1D, Float32, Float32
extern Variable SampledTextureSampleLod_Texture1D_texture;
extern Variable SampledTextureSampleLod_Texture1D_coordinate;
extern Variable SampledTextureSampleLod_Texture1D_lod;
extern Function SampledTextureSampleLod_Texture1D;

/// textureSampleLod with Texture2D, Sampler, Float32x2, Float32
extern Variable TextureSampleLod_Texture2D_texture;
extern Variable TextureSampleLod_Texture2D_sampler;
extern Variable TextureSampleLod_Texture2D_coordinate;
extern Variable TextureSampleLod_Texture2D_lod;
extern Function TextureSampleLod_Texture2D;

/// textureSampleLod with Texture2D, Float32x2, Float32
extern Variable SampledTextureSampleLod_Texture2D_texture;
extern Variable SampledTextureSampleLod_Texture2D_coordinate;
extern Variable SampledTextureSampleLod_Texture2D_lod;
extern Function SampledTextureSampleLod_Texture2D;

/// textureSampleLod with Texture3D, Sampler, Float32x3, Float32
extern Variable TextureSampleLod_Texture3D_texture;
extern Variable TextureSampleLod_Texture3D_sampler;
extern Variable TextureSampleLod_Texture3D_coordinate;
extern Variable TextureSampleLod_Texture3D_lod;
extern Function TextureSampleLod_Texture3D;

/// textureSampleLod with Texture3D, Float32x3, Float32
extern Variable SampledTextureSampleLod_Texture3D_texture;
extern Variable SampledTextureSampleLod_Texture3D_coordinate;
extern Variable SampledTextureSampleLod_Texture3D_lod;
extern Function SampledTextureSampleLod_Texture3D;

/// textureSampleLod with TextureCube, Sampler, Float32x3, Float32
extern Variable TextureSampleLod_TextureCube_texture;
extern Variable TextureSampleLod_TextureCube_sampler;
extern Variable TextureSampleLod_TextureCube_coordinate;
extern Variable TextureSampleLod_TextureCube_lod;
extern Function TextureSampleLod_TextureCube;

/// textureSampleLod with TextureCube, Float32x3, Float32
extern Variable SampledTextureSampleLod_TextureCube_texture;
extern Variable SampledTextureSampleLod_TextureCube_coordinate;
extern Variable SampledTextureSampleLod_TextureCube_lod;
extern Function SampledTextureSampleLod_TextureCube;

/// textureSampleLod with Texture1DArray, Sampler, Float32x2, Float32
extern Variable TextureSampleLod_Texture1DArray_texture;
extern Variable TextureSampleLod_Texture1DArray_sampler;
extern Variable TextureSampleLod_Texture1DArray_coordinate;
extern Variable TextureSampleLod_Texture1DArray_lod;
extern Function TextureSampleLod_Texture1DArray;

/// textureSampleLod with Texture1DArray, Float32x2, Float32
extern Variable SampledTextureSampleLod_Texture1DArray_texture;
extern Variable SampledTextureSampleLod_Texture1DArray_coordinate;
extern Variable SampledTextureSampleLod_Texture1DArray_lod;
extern Function SampledTextureSampleLod_Texture1DArray;

/// textureSampleLod with Texture2DArray, Sampler, Float32x3, Float32
extern Variable TextureSampleLod_Texture2DArray_texture;
extern Variable TextureSampleLod_Texture2DArray_sampler;
extern Variable TextureSampleLod_Texture2DArray_coordinate;
extern Variable TextureSampleLod_Texture2DArray_lod;
extern Function TextureSampleLod_Texture2DArray;

/// textureSampleLod with Texture2DArray, Float32x3, Float32
extern Variable SampledTextureSampleLod_Texture2DArray_texture;
extern Variable SampledTextureSampleLod_Texture2DArray_coordinate;
extern Variable SampledTextureSampleLod_Texture2DArray_lod;
extern Function SampledTextureSampleLod_Texture2DArray;

/// textureSampleLod with TextureCubeArray, Sampler, Float32x4, Float32
extern Variable TextureSampleLod_TextureCubeArray_texture;
extern Variable TextureSampleLod_TextureCubeArray_sampler;
extern Variable TextureSampleLod_TextureCubeArray_coordinate;
extern Variable TextureSampleLod_TextureCubeArray_lod;
extern Function TextureSampleLod_TextureCubeArray;

/// textureSampleLod with TextureCubeArray, Float32x4, Float32
extern Variable SampledTextureSampleLod_TextureCubeArray_texture;
extern Variable SampledTextureSampleLod_TextureCubeArray_coordinate;
extern Variable SampledTextureSampleLod_TextureCubeArray_lod;
extern Function SampledTextureSampleLod_TextureCubeArray;

/// textureSampleLodOffset with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleLodOffset_Texture1D_texture;
extern Variable TextureSampleLodOffset_Texture1D_sampler;
extern Variable TextureSampleLodOffset_Texture1D_coordinate;
extern Variable TextureSampleLodOffset_Texture1D_lod;
extern Variable TextureSampleLodOffset_Texture1D_offset;
extern Function TextureSampleLodOffset_Texture1D;

/// textureSampleLodOffset with Texture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleLodOffset_Texture1D_texture;
extern Variable SampledTextureSampleLodOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleLodOffset_Texture1D_lod;
extern Variable SampledTextureSampleLodOffset_Texture1D_offset;
extern Function SampledTextureSampleLodOffset_Texture1D;

/// textureSampleLodOffset with Texture2D, Sampler, Float32x2, Float32, Float32x2
extern Variable TextureSampleLodOffset_Texture2D_texture;
extern Variable TextureSampleLodOffset_Texture2D_sampler;
extern Variable TextureSampleLodOffset_Texture2D_coordinate;
extern Variable TextureSampleLodOffset_Texture2D_lod;
extern Variable TextureSampleLodOffset_Texture2D_offset;
extern Function TextureSampleLodOffset_Texture2D;

/// textureSampleLodOffset with Texture2D, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleLodOffset_Texture2D_texture;
extern Variable SampledTextureSampleLodOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleLodOffset_Texture2D_lod;
extern Variable SampledTextureSampleLodOffset_Texture2D_offset;
extern Function SampledTextureSampleLodOffset_Texture2D;

/// textureSampleLodOffset with Texture3D, Sampler, Float32x3, Float32, Float32x3
extern Variable TextureSampleLodOffset_Texture3D_texture;
extern Variable TextureSampleLodOffset_Texture3D_sampler;
extern Variable TextureSampleLodOffset_Texture3D_coordinate;
extern Variable TextureSampleLodOffset_Texture3D_lod;
extern Variable TextureSampleLodOffset_Texture3D_offset;
extern Function TextureSampleLodOffset_Texture3D;

/// textureSampleLodOffset with Texture3D, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleLodOffset_Texture3D_texture;
extern Variable SampledTextureSampleLodOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleLodOffset_Texture3D_lod;
extern Variable SampledTextureSampleLodOffset_Texture3D_offset;
extern Function SampledTextureSampleLodOffset_Texture3D;

/// textureSampleLodOffset with Texture1DArray, Sampler, Float32x2, Float32, Float32x2
extern Variable TextureSampleLodOffset_Texture1DArray_texture;
extern Variable TextureSampleLodOffset_Texture1DArray_sampler;
extern Variable TextureSampleLodOffset_Texture1DArray_coordinate;
extern Variable TextureSampleLodOffset_Texture1DArray_lod;
extern Variable TextureSampleLodOffset_Texture1DArray_offset;
extern Function TextureSampleLodOffset_Texture1DArray;

/// textureSampleLodOffset with Texture1DArray, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleLodOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleLodOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleLodOffset_Texture1DArray_lod;
extern Variable SampledTextureSampleLodOffset_Texture1DArray_offset;
extern Function SampledTextureSampleLodOffset_Texture1DArray;

/// textureSampleLodOffset with Texture2DArray, Sampler, Float32x3, Float32, Float32x3
extern Variable TextureSampleLodOffset_Texture2DArray_texture;
extern Variable TextureSampleLodOffset_Texture2DArray_sampler;
extern Variable TextureSampleLodOffset_Texture2DArray_coordinate;
extern Variable TextureSampleLodOffset_Texture2DArray_lod;
extern Variable TextureSampleLodOffset_Texture2DArray_offset;
extern Function TextureSampleLodOffset_Texture2DArray;

/// textureSampleLodOffset with Texture2DArray, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleLodOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleLodOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleLodOffset_Texture2DArray_lod;
extern Variable SampledTextureSampleLodOffset_Texture2DArray_offset;
extern Function SampledTextureSampleLodOffset_Texture2DArray;

/// textureSampleLodProj with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleLodProj_Texture1D_texture;
extern Variable TextureSampleLodProj_Texture1D_sampler;
extern Variable TextureSampleLodProj_Texture1D_coordinate;
extern Variable TextureSampleLodProj_Texture1D_lod;
extern Variable TextureSampleLodProj_Texture1D_proj;
extern Function TextureSampleLodProj_Texture1D;

/// textureSampleLodProj with Texture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleLodProj_Texture1D_texture;
extern Variable SampledTextureSampleLodProj_Texture1D_coordinate;
extern Variable SampledTextureSampleLodProj_Texture1D_lod;
extern Variable SampledTextureSampleLodProj_Texture1D_proj;
extern Function SampledTextureSampleLodProj_Texture1D;

/// textureSampleLodProj with Texture2D, Sampler, Float32x2, Float32, Float32
extern Variable TextureSampleLodProj_Texture2D_texture;
extern Variable TextureSampleLodProj_Texture2D_sampler;
extern Variable TextureSampleLodProj_Texture2D_coordinate;
extern Variable TextureSampleLodProj_Texture2D_lod;
extern Variable TextureSampleLodProj_Texture2D_proj;
extern Function TextureSampleLodProj_Texture2D;

/// textureSampleLodProj with Texture2D, Float32x2, Float32, Float32
extern Variable SampledTextureSampleLodProj_Texture2D_texture;
extern Variable SampledTextureSampleLodProj_Texture2D_coordinate;
extern Variable SampledTextureSampleLodProj_Texture2D_lod;
extern Variable SampledTextureSampleLodProj_Texture2D_proj;
extern Function SampledTextureSampleLodProj_Texture2D;

/// textureSampleLodProj with Texture3D, Sampler, Float32x3, Float32, Float32
extern Variable TextureSampleLodProj_Texture3D_texture;
extern Variable TextureSampleLodProj_Texture3D_sampler;
extern Variable TextureSampleLodProj_Texture3D_coordinate;
extern Variable TextureSampleLodProj_Texture3D_lod;
extern Variable TextureSampleLodProj_Texture3D_proj;
extern Function TextureSampleLodProj_Texture3D;

/// textureSampleLodProj with Texture3D, Float32x3, Float32, Float32
extern Variable SampledTextureSampleLodProj_Texture3D_texture;
extern Variable SampledTextureSampleLodProj_Texture3D_coordinate;
extern Variable SampledTextureSampleLodProj_Texture3D_lod;
extern Variable SampledTextureSampleLodProj_Texture3D_proj;
extern Function SampledTextureSampleLodProj_Texture3D;

/// textureSampleLodProjOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleLodProjOffset_Texture1D_texture;
extern Variable TextureSampleLodProjOffset_Texture1D_sampler;
extern Variable TextureSampleLodProjOffset_Texture1D_coordinate;
extern Variable TextureSampleLodProjOffset_Texture1D_lod;
extern Variable TextureSampleLodProjOffset_Texture1D_proj;
extern Variable TextureSampleLodProjOffset_Texture1D_offset;
extern Function TextureSampleLodProjOffset_Texture1D;

/// textureSampleLodProjOffset with Texture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleLodProjOffset_Texture1D_texture;
extern Variable SampledTextureSampleLodProjOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleLodProjOffset_Texture1D_lod;
extern Variable SampledTextureSampleLodProjOffset_Texture1D_proj;
extern Variable SampledTextureSampleLodProjOffset_Texture1D_offset;
extern Function SampledTextureSampleLodProjOffset_Texture1D;

/// textureSampleLodProjOffset with Texture2D, Sampler, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleLodProjOffset_Texture2D_texture;
extern Variable TextureSampleLodProjOffset_Texture2D_sampler;
extern Variable TextureSampleLodProjOffset_Texture2D_coordinate;
extern Variable TextureSampleLodProjOffset_Texture2D_lod;
extern Variable TextureSampleLodProjOffset_Texture2D_proj;
extern Variable TextureSampleLodProjOffset_Texture2D_offset;
extern Function TextureSampleLodProjOffset_Texture2D;

/// textureSampleLodProjOffset with Texture2D, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleLodProjOffset_Texture2D_texture;
extern Variable SampledTextureSampleLodProjOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleLodProjOffset_Texture2D_lod;
extern Variable SampledTextureSampleLodProjOffset_Texture2D_proj;
extern Variable SampledTextureSampleLodProjOffset_Texture2D_offset;
extern Function SampledTextureSampleLodProjOffset_Texture2D;

/// textureSampleLodProjOffset with Texture3D, Sampler, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleLodProjOffset_Texture3D_texture;
extern Variable TextureSampleLodProjOffset_Texture3D_sampler;
extern Variable TextureSampleLodProjOffset_Texture3D_coordinate;
extern Variable TextureSampleLodProjOffset_Texture3D_lod;
extern Variable TextureSampleLodProjOffset_Texture3D_proj;
extern Variable TextureSampleLodProjOffset_Texture3D_offset;
extern Function TextureSampleLodProjOffset_Texture3D;

/// textureSampleLodProjOffset with Texture3D, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleLodProjOffset_Texture3D_texture;
extern Variable SampledTextureSampleLodProjOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleLodProjOffset_Texture3D_lod;
extern Variable SampledTextureSampleLodProjOffset_Texture3D_proj;
extern Variable SampledTextureSampleLodProjOffset_Texture3D_offset;
extern Function SampledTextureSampleLodProjOffset_Texture3D;

/// textureSampleLodCompare with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleLodCompare_Texture1D_texture;
extern Variable TextureSampleLodCompare_Texture1D_sampler;
extern Variable TextureSampleLodCompare_Texture1D_coordinate;
extern Variable TextureSampleLodCompare_Texture1D_lod;
extern Variable TextureSampleLodCompare_Texture1D_compare;
extern Function TextureSampleLodCompare_Texture1D;

/// textureSampleLodCompare with Texture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleLodCompare_Texture1D_texture;
extern Variable SampledTextureSampleLodCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleLodCompare_Texture1D_lod;
extern Variable SampledTextureSampleLodCompare_Texture1D_compare;
extern Function SampledTextureSampleLodCompare_Texture1D;

/// textureSampleLodCompare with Texture2D, Sampler, Float32x2, Float32, Float32
extern Variable TextureSampleLodCompare_Texture2D_texture;
extern Variable TextureSampleLodCompare_Texture2D_sampler;
extern Variable TextureSampleLodCompare_Texture2D_coordinate;
extern Variable TextureSampleLodCompare_Texture2D_lod;
extern Variable TextureSampleLodCompare_Texture2D_compare;
extern Function TextureSampleLodCompare_Texture2D;

/// textureSampleLodCompare with Texture2D, Float32x2, Float32, Float32
extern Variable SampledTextureSampleLodCompare_Texture2D_texture;
extern Variable SampledTextureSampleLodCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleLodCompare_Texture2D_lod;
extern Variable SampledTextureSampleLodCompare_Texture2D_compare;
extern Function SampledTextureSampleLodCompare_Texture2D;

/// textureSampleLodCompare with Texture3D, Sampler, Float32x3, Float32, Float32
extern Variable TextureSampleLodCompare_Texture3D_texture;
extern Variable TextureSampleLodCompare_Texture3D_sampler;
extern Variable TextureSampleLodCompare_Texture3D_coordinate;
extern Variable TextureSampleLodCompare_Texture3D_lod;
extern Variable TextureSampleLodCompare_Texture3D_compare;
extern Function TextureSampleLodCompare_Texture3D;

/// textureSampleLodCompare with Texture3D, Float32x3, Float32, Float32
extern Variable SampledTextureSampleLodCompare_Texture3D_texture;
extern Variable SampledTextureSampleLodCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleLodCompare_Texture3D_lod;
extern Variable SampledTextureSampleLodCompare_Texture3D_compare;
extern Function SampledTextureSampleLodCompare_Texture3D;

/// textureSampleLodCompare with Texture1DArray, Sampler, Float32x2, Float32, Float32
extern Variable TextureSampleLodCompare_Texture1DArray_texture;
extern Variable TextureSampleLodCompare_Texture1DArray_sampler;
extern Variable TextureSampleLodCompare_Texture1DArray_coordinate;
extern Variable TextureSampleLodCompare_Texture1DArray_lod;
extern Variable TextureSampleLodCompare_Texture1DArray_compare;
extern Function TextureSampleLodCompare_Texture1DArray;

/// textureSampleLodCompare with Texture1DArray, Float32x2, Float32, Float32
extern Variable SampledTextureSampleLodCompare_Texture1DArray_texture;
extern Variable SampledTextureSampleLodCompare_Texture1DArray_coordinate;
extern Variable SampledTextureSampleLodCompare_Texture1DArray_lod;
extern Variable SampledTextureSampleLodCompare_Texture1DArray_compare;
extern Function SampledTextureSampleLodCompare_Texture1DArray;

/// textureSampleLodCompare with Texture2DArray, Sampler, Float32x3, Float32, Float32
extern Variable TextureSampleLodCompare_Texture2DArray_texture;
extern Variable TextureSampleLodCompare_Texture2DArray_sampler;
extern Variable TextureSampleLodCompare_Texture2DArray_coordinate;
extern Variable TextureSampleLodCompare_Texture2DArray_lod;
extern Variable TextureSampleLodCompare_Texture2DArray_compare;
extern Function TextureSampleLodCompare_Texture2DArray;

/// textureSampleLodCompare with Texture2DArray, Float32x3, Float32, Float32
extern Variable SampledTextureSampleLodCompare_Texture2DArray_texture;
extern Variable SampledTextureSampleLodCompare_Texture2DArray_coordinate;
extern Variable SampledTextureSampleLodCompare_Texture2DArray_lod;
extern Variable SampledTextureSampleLodCompare_Texture2DArray_compare;
extern Function SampledTextureSampleLodCompare_Texture2DArray;

/// textureSampleLodCompareOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleLodCompareOffset_Texture1D_texture;
extern Variable TextureSampleLodCompareOffset_Texture1D_sampler;
extern Variable TextureSampleLodCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleLodCompareOffset_Texture1D_lod;
extern Variable TextureSampleLodCompareOffset_Texture1D_compare;
extern Variable TextureSampleLodCompareOffset_Texture1D_offset;
extern Function TextureSampleLodCompareOffset_Texture1D;

/// textureSampleLodCompareOffset with Texture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleLodCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleLodCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleLodCompareOffset_Texture1D_lod;
extern Variable SampledTextureSampleLodCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleLodCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleLodCompareOffset_Texture1D;

/// textureSampleLodCompareOffset with Texture2D, Sampler, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleLodCompareOffset_Texture2D_texture;
extern Variable TextureSampleLodCompareOffset_Texture2D_sampler;
extern Variable TextureSampleLodCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleLodCompareOffset_Texture2D_lod;
extern Variable TextureSampleLodCompareOffset_Texture2D_compare;
extern Variable TextureSampleLodCompareOffset_Texture2D_offset;
extern Function TextureSampleLodCompareOffset_Texture2D;

/// textureSampleLodCompareOffset with Texture2D, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleLodCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleLodCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleLodCompareOffset_Texture2D_lod;
extern Variable SampledTextureSampleLodCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleLodCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleLodCompareOffset_Texture2D;

/// textureSampleLodCompareOffset with Texture3D, Sampler, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleLodCompareOffset_Texture3D_texture;
extern Variable TextureSampleLodCompareOffset_Texture3D_sampler;
extern Variable TextureSampleLodCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleLodCompareOffset_Texture3D_lod;
extern Variable TextureSampleLodCompareOffset_Texture3D_compare;
extern Variable TextureSampleLodCompareOffset_Texture3D_offset;
extern Function TextureSampleLodCompareOffset_Texture3D;

/// textureSampleLodCompareOffset with Texture3D, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleLodCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleLodCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleLodCompareOffset_Texture3D_lod;
extern Variable SampledTextureSampleLodCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleLodCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleLodCompareOffset_Texture3D;

/// textureSampleLodCompareOffset with Texture1DArray, Sampler, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleLodCompareOffset_Texture1DArray_texture;
extern Variable TextureSampleLodCompareOffset_Texture1DArray_sampler;
extern Variable TextureSampleLodCompareOffset_Texture1DArray_coordinate;
extern Variable TextureSampleLodCompareOffset_Texture1DArray_lod;
extern Variable TextureSampleLodCompareOffset_Texture1DArray_compare;
extern Variable TextureSampleLodCompareOffset_Texture1DArray_offset;
extern Function TextureSampleLodCompareOffset_Texture1DArray;

/// textureSampleLodCompareOffset with Texture1DArray, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleLodCompareOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleLodCompareOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleLodCompareOffset_Texture1DArray_lod;
extern Variable SampledTextureSampleLodCompareOffset_Texture1DArray_compare;
extern Variable SampledTextureSampleLodCompareOffset_Texture1DArray_offset;
extern Function SampledTextureSampleLodCompareOffset_Texture1DArray;

/// textureSampleLodCompareOffset with Texture2DArray, Sampler, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleLodCompareOffset_Texture2DArray_texture;
extern Variable TextureSampleLodCompareOffset_Texture2DArray_sampler;
extern Variable TextureSampleLodCompareOffset_Texture2DArray_coordinate;
extern Variable TextureSampleLodCompareOffset_Texture2DArray_lod;
extern Variable TextureSampleLodCompareOffset_Texture2DArray_compare;
extern Variable TextureSampleLodCompareOffset_Texture2DArray_offset;
extern Function TextureSampleLodCompareOffset_Texture2DArray;

/// textureSampleLodCompareOffset with Texture2DArray, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleLodCompareOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleLodCompareOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleLodCompareOffset_Texture2DArray_lod;
extern Variable SampledTextureSampleLodCompareOffset_Texture2DArray_compare;
extern Variable SampledTextureSampleLodCompareOffset_Texture2DArray_offset;
extern Function SampledTextureSampleLodCompareOffset_Texture2DArray;

/// textureSampleLodProjCompare with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleLodProjCompare_Texture1D_texture;
extern Variable TextureSampleLodProjCompare_Texture1D_sampler;
extern Variable TextureSampleLodProjCompare_Texture1D_coordinate;
extern Variable TextureSampleLodProjCompare_Texture1D_lod;
extern Variable TextureSampleLodProjCompare_Texture1D_proj;
extern Variable TextureSampleLodProjCompare_Texture1D_compare;
extern Function TextureSampleLodProjCompare_Texture1D;

/// textureSampleLodProjCompare with Texture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleLodProjCompare_Texture1D_texture;
extern Variable SampledTextureSampleLodProjCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleLodProjCompare_Texture1D_lod;
extern Variable SampledTextureSampleLodProjCompare_Texture1D_proj;
extern Variable SampledTextureSampleLodProjCompare_Texture1D_compare;
extern Function SampledTextureSampleLodProjCompare_Texture1D;

/// textureSampleLodProjCompare with Texture2D, Sampler, Float32x2, Float32, Float32, Float32
extern Variable TextureSampleLodProjCompare_Texture2D_texture;
extern Variable TextureSampleLodProjCompare_Texture2D_sampler;
extern Variable TextureSampleLodProjCompare_Texture2D_coordinate;
extern Variable TextureSampleLodProjCompare_Texture2D_lod;
extern Variable TextureSampleLodProjCompare_Texture2D_proj;
extern Variable TextureSampleLodProjCompare_Texture2D_compare;
extern Function TextureSampleLodProjCompare_Texture2D;

/// textureSampleLodProjCompare with Texture2D, Float32x2, Float32, Float32, Float32
extern Variable SampledTextureSampleLodProjCompare_Texture2D_texture;
extern Variable SampledTextureSampleLodProjCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleLodProjCompare_Texture2D_lod;
extern Variable SampledTextureSampleLodProjCompare_Texture2D_proj;
extern Variable SampledTextureSampleLodProjCompare_Texture2D_compare;
extern Function SampledTextureSampleLodProjCompare_Texture2D;

/// textureSampleLodProjCompare with Texture3D, Sampler, Float32x3, Float32, Float32, Float32
extern Variable TextureSampleLodProjCompare_Texture3D_texture;
extern Variable TextureSampleLodProjCompare_Texture3D_sampler;
extern Variable TextureSampleLodProjCompare_Texture3D_coordinate;
extern Variable TextureSampleLodProjCompare_Texture3D_lod;
extern Variable TextureSampleLodProjCompare_Texture3D_proj;
extern Variable TextureSampleLodProjCompare_Texture3D_compare;
extern Function TextureSampleLodProjCompare_Texture3D;

/// textureSampleLodProjCompare with Texture3D, Float32x3, Float32, Float32, Float32
extern Variable SampledTextureSampleLodProjCompare_Texture3D_texture;
extern Variable SampledTextureSampleLodProjCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleLodProjCompare_Texture3D_lod;
extern Variable SampledTextureSampleLodProjCompare_Texture3D_proj;
extern Variable SampledTextureSampleLodProjCompare_Texture3D_compare;
extern Function SampledTextureSampleLodProjCompare_Texture3D;

/// textureSampleLodProjCompareOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32, Float32
extern Variable TextureSampleLodProjCompareOffset_Texture1D_texture;
extern Variable TextureSampleLodProjCompareOffset_Texture1D_sampler;
extern Variable TextureSampleLodProjCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleLodProjCompareOffset_Texture1D_lod;
extern Variable TextureSampleLodProjCompareOffset_Texture1D_proj;
extern Variable TextureSampleLodProjCompareOffset_Texture1D_compare;
extern Variable TextureSampleLodProjCompareOffset_Texture1D_offset;
extern Function TextureSampleLodProjCompareOffset_Texture1D;

/// textureSampleLodProjCompareOffset with Texture1D, Float32, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleLodProjCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture1D_lod;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture1D_proj;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleLodProjCompareOffset_Texture1D;

/// textureSampleLodProjCompareOffset with Texture2D, Sampler, Float32x2, Float32, Float32, Float32, Float32x2
extern Variable TextureSampleLodProjCompareOffset_Texture2D_texture;
extern Variable TextureSampleLodProjCompareOffset_Texture2D_sampler;
extern Variable TextureSampleLodProjCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleLodProjCompareOffset_Texture2D_lod;
extern Variable TextureSampleLodProjCompareOffset_Texture2D_proj;
extern Variable TextureSampleLodProjCompareOffset_Texture2D_compare;
extern Variable TextureSampleLodProjCompareOffset_Texture2D_offset;
extern Function TextureSampleLodProjCompareOffset_Texture2D;

/// textureSampleLodProjCompareOffset with Texture2D, Float32x2, Float32, Float32, Float32, Float32x2
extern Variable SampledTextureSampleLodProjCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture2D_lod;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture2D_proj;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleLodProjCompareOffset_Texture2D;

/// textureSampleLodProjCompareOffset with Texture3D, Sampler, Float32x3, Float32, Float32, Float32, Float32x3
extern Variable TextureSampleLodProjCompareOffset_Texture3D_texture;
extern Variable TextureSampleLodProjCompareOffset_Texture3D_sampler;
extern Variable TextureSampleLodProjCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleLodProjCompareOffset_Texture3D_lod;
extern Variable TextureSampleLodProjCompareOffset_Texture3D_proj;
extern Variable TextureSampleLodProjCompareOffset_Texture3D_compare;
extern Variable TextureSampleLodProjCompareOffset_Texture3D_offset;
extern Function TextureSampleLodProjCompareOffset_Texture3D;

/// textureSampleLodProjCompareOffset with Texture3D, Float32x3, Float32, Float32, Float32, Float32x3
extern Variable SampledTextureSampleLodProjCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture3D_lod;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture3D_proj;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleLodProjCompareOffset_Texture3D;

/// textureSampleGrad with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleGrad_Texture1D_texture;
extern Variable TextureSampleGrad_Texture1D_sampler;
extern Variable TextureSampleGrad_Texture1D_coordinate;
extern Variable TextureSampleGrad_Texture1D_grad_x;
extern Variable TextureSampleGrad_Texture1D_grad_y;
extern Function TextureSampleGrad_Texture1D;

/// textureSampleGrad with Texture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleGrad_Texture1D_texture;
extern Variable SampledTextureSampleGrad_Texture1D_coordinate;
extern Variable SampledTextureSampleGrad_Texture1D_grad_x;
extern Variable SampledTextureSampleGrad_Texture1D_grad_y;
extern Function SampledTextureSampleGrad_Texture1D;

/// textureSampleGrad with Texture2D, Sampler, Float32x2, Float32x2, Float32x2
extern Variable TextureSampleGrad_Texture2D_texture;
extern Variable TextureSampleGrad_Texture2D_sampler;
extern Variable TextureSampleGrad_Texture2D_coordinate;
extern Variable TextureSampleGrad_Texture2D_grad_x;
extern Variable TextureSampleGrad_Texture2D_grad_y;
extern Function TextureSampleGrad_Texture2D;

/// textureSampleGrad with Texture2D, Float32x2, Float32x2, Float32x2
extern Variable SampledTextureSampleGrad_Texture2D_texture;
extern Variable SampledTextureSampleGrad_Texture2D_coordinate;
extern Variable SampledTextureSampleGrad_Texture2D_grad_x;
extern Variable SampledTextureSampleGrad_Texture2D_grad_y;
extern Function SampledTextureSampleGrad_Texture2D;

/// textureSampleGrad with Texture3D, Sampler, Float32x3, Float32x3, Float32x3
extern Variable TextureSampleGrad_Texture3D_texture;
extern Variable TextureSampleGrad_Texture3D_sampler;
extern Variable TextureSampleGrad_Texture3D_coordinate;
extern Variable TextureSampleGrad_Texture3D_grad_x;
extern Variable TextureSampleGrad_Texture3D_grad_y;
extern Function TextureSampleGrad_Texture3D;

/// textureSampleGrad with Texture3D, Float32x3, Float32x3, Float32x3
extern Variable SampledTextureSampleGrad_Texture3D_texture;
extern Variable SampledTextureSampleGrad_Texture3D_coordinate;
extern Variable SampledTextureSampleGrad_Texture3D_grad_x;
extern Variable SampledTextureSampleGrad_Texture3D_grad_y;
extern Function SampledTextureSampleGrad_Texture3D;

/// textureSampleGrad with TextureCube, Sampler, Float32x3, Float32x3, Float32x3
extern Variable TextureSampleGrad_TextureCube_texture;
extern Variable TextureSampleGrad_TextureCube_sampler;
extern Variable TextureSampleGrad_TextureCube_coordinate;
extern Variable TextureSampleGrad_TextureCube_grad_x;
extern Variable TextureSampleGrad_TextureCube_grad_y;
extern Function TextureSampleGrad_TextureCube;

/// textureSampleGrad with TextureCube, Float32x3, Float32x3, Float32x3
extern Variable SampledTextureSampleGrad_TextureCube_texture;
extern Variable SampledTextureSampleGrad_TextureCube_coordinate;
extern Variable SampledTextureSampleGrad_TextureCube_grad_x;
extern Variable SampledTextureSampleGrad_TextureCube_grad_y;
extern Function SampledTextureSampleGrad_TextureCube;

/// textureSampleGrad with Texture1DArray, Sampler, Float32x2, Float32x2, Float32x2
extern Variable TextureSampleGrad_Texture1DArray_texture;
extern Variable TextureSampleGrad_Texture1DArray_sampler;
extern Variable TextureSampleGrad_Texture1DArray_coordinate;
extern Variable TextureSampleGrad_Texture1DArray_grad_x;
extern Variable TextureSampleGrad_Texture1DArray_grad_y;
extern Function TextureSampleGrad_Texture1DArray;

/// textureSampleGrad with Texture1DArray, Float32x2, Float32x2, Float32x2
extern Variable SampledTextureSampleGrad_Texture1DArray_texture;
extern Variable SampledTextureSampleGrad_Texture1DArray_coordinate;
extern Variable SampledTextureSampleGrad_Texture1DArray_grad_x;
extern Variable SampledTextureSampleGrad_Texture1DArray_grad_y;
extern Function SampledTextureSampleGrad_Texture1DArray;

/// textureSampleGrad with Texture2DArray, Sampler, Float32x3, Float32x3, Float32x3
extern Variable TextureSampleGrad_Texture2DArray_texture;
extern Variable TextureSampleGrad_Texture2DArray_sampler;
extern Variable TextureSampleGrad_Texture2DArray_coordinate;
extern Variable TextureSampleGrad_Texture2DArray_grad_x;
extern Variable TextureSampleGrad_Texture2DArray_grad_y;
extern Function TextureSampleGrad_Texture2DArray;

/// textureSampleGrad with Texture2DArray, Float32x3, Float32x3, Float32x3
extern Variable SampledTextureSampleGrad_Texture2DArray_texture;
extern Variable SampledTextureSampleGrad_Texture2DArray_coordinate;
extern Variable SampledTextureSampleGrad_Texture2DArray_grad_x;
extern Variable SampledTextureSampleGrad_Texture2DArray_grad_y;
extern Function SampledTextureSampleGrad_Texture2DArray;

/// textureSampleGrad with TextureCubeArray, Sampler, Float32x4, Float32x4, Float32x4
extern Variable TextureSampleGrad_TextureCubeArray_texture;
extern Variable TextureSampleGrad_TextureCubeArray_sampler;
extern Variable TextureSampleGrad_TextureCubeArray_coordinate;
extern Variable TextureSampleGrad_TextureCubeArray_grad_x;
extern Variable TextureSampleGrad_TextureCubeArray_grad_y;
extern Function TextureSampleGrad_TextureCubeArray;

/// textureSampleGrad with TextureCubeArray, Float32x4, Float32x4, Float32x4
extern Variable SampledTextureSampleGrad_TextureCubeArray_texture;
extern Variable SampledTextureSampleGrad_TextureCubeArray_coordinate;
extern Variable SampledTextureSampleGrad_TextureCubeArray_grad_x;
extern Variable SampledTextureSampleGrad_TextureCubeArray_grad_y;
extern Function SampledTextureSampleGrad_TextureCubeArray;

/// textureSampleGradOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleGradOffset_Texture1D_texture;
extern Variable TextureSampleGradOffset_Texture1D_sampler;
extern Variable TextureSampleGradOffset_Texture1D_coordinate;
extern Variable TextureSampleGradOffset_Texture1D_grad_x;
extern Variable TextureSampleGradOffset_Texture1D_grad_y;
extern Variable TextureSampleGradOffset_Texture1D_offset;
extern Function TextureSampleGradOffset_Texture1D;

/// textureSampleGradOffset with Texture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleGradOffset_Texture1D_texture;
extern Variable SampledTextureSampleGradOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleGradOffset_Texture1D_grad_x;
extern Variable SampledTextureSampleGradOffset_Texture1D_grad_y;
extern Variable SampledTextureSampleGradOffset_Texture1D_offset;
extern Function SampledTextureSampleGradOffset_Texture1D;

/// textureSampleGradOffset with Texture2D, Sampler, Float32x2, Float32x2, Float32x2, Float32x2
extern Variable TextureSampleGradOffset_Texture2D_texture;
extern Variable TextureSampleGradOffset_Texture2D_sampler;
extern Variable TextureSampleGradOffset_Texture2D_coordinate;
extern Variable TextureSampleGradOffset_Texture2D_grad_x;
extern Variable TextureSampleGradOffset_Texture2D_grad_y;
extern Variable TextureSampleGradOffset_Texture2D_offset;
extern Function TextureSampleGradOffset_Texture2D;

/// textureSampleGradOffset with Texture2D, Float32x2, Float32x2, Float32x2, Float32x2
extern Variable SampledTextureSampleGradOffset_Texture2D_texture;
extern Variable SampledTextureSampleGradOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleGradOffset_Texture2D_grad_x;
extern Variable SampledTextureSampleGradOffset_Texture2D_grad_y;
extern Variable SampledTextureSampleGradOffset_Texture2D_offset;
extern Function SampledTextureSampleGradOffset_Texture2D;

/// textureSampleGradOffset with Texture3D, Sampler, Float32x3, Float32x3, Float32x3, Float32x3
extern Variable TextureSampleGradOffset_Texture3D_texture;
extern Variable TextureSampleGradOffset_Texture3D_sampler;
extern Variable TextureSampleGradOffset_Texture3D_coordinate;
extern Variable TextureSampleGradOffset_Texture3D_grad_x;
extern Variable TextureSampleGradOffset_Texture3D_grad_y;
extern Variable TextureSampleGradOffset_Texture3D_offset;
extern Function TextureSampleGradOffset_Texture3D;

/// textureSampleGradOffset with Texture3D, Float32x3, Float32x3, Float32x3, Float32x3
extern Variable SampledTextureSampleGradOffset_Texture3D_texture;
extern Variable SampledTextureSampleGradOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleGradOffset_Texture3D_grad_x;
extern Variable SampledTextureSampleGradOffset_Texture3D_grad_y;
extern Variable SampledTextureSampleGradOffset_Texture3D_offset;
extern Function SampledTextureSampleGradOffset_Texture3D;

/// textureSampleGradOffset with Texture1DArray, Sampler, Float32x2, Float32x2, Float32x2, Float32x2
extern Variable TextureSampleGradOffset_Texture1DArray_texture;
extern Variable TextureSampleGradOffset_Texture1DArray_sampler;
extern Variable TextureSampleGradOffset_Texture1DArray_coordinate;
extern Variable TextureSampleGradOffset_Texture1DArray_grad_x;
extern Variable TextureSampleGradOffset_Texture1DArray_grad_y;
extern Variable TextureSampleGradOffset_Texture1DArray_offset;
extern Function TextureSampleGradOffset_Texture1DArray;

/// textureSampleGradOffset with Texture1DArray, Float32x2, Float32x2, Float32x2, Float32x2
extern Variable SampledTextureSampleGradOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleGradOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleGradOffset_Texture1DArray_grad_x;
extern Variable SampledTextureSampleGradOffset_Texture1DArray_grad_y;
extern Variable SampledTextureSampleGradOffset_Texture1DArray_offset;
extern Function SampledTextureSampleGradOffset_Texture1DArray;

/// textureSampleGradOffset with Texture2DArray, Sampler, Float32x3, Float32x3, Float32x3, Float32x3
extern Variable TextureSampleGradOffset_Texture2DArray_texture;
extern Variable TextureSampleGradOffset_Texture2DArray_sampler;
extern Variable TextureSampleGradOffset_Texture2DArray_coordinate;
extern Variable TextureSampleGradOffset_Texture2DArray_grad_x;
extern Variable TextureSampleGradOffset_Texture2DArray_grad_y;
extern Variable TextureSampleGradOffset_Texture2DArray_offset;
extern Function TextureSampleGradOffset_Texture2DArray;

/// textureSampleGradOffset with Texture2DArray, Float32x3, Float32x3, Float32x3, Float32x3
extern Variable SampledTextureSampleGradOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleGradOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleGradOffset_Texture2DArray_grad_x;
extern Variable SampledTextureSampleGradOffset_Texture2DArray_grad_y;
extern Variable SampledTextureSampleGradOffset_Texture2DArray_offset;
extern Function SampledTextureSampleGradOffset_Texture2DArray;

/// textureSampleGradProj with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleGradProj_Texture1D_texture;
extern Variable TextureSampleGradProj_Texture1D_sampler;
extern Variable TextureSampleGradProj_Texture1D_coordinate;
extern Variable TextureSampleGradProj_Texture1D_grad_x;
extern Variable TextureSampleGradProj_Texture1D_grad_y;
extern Variable TextureSampleGradProj_Texture1D_proj;
extern Function TextureSampleGradProj_Texture1D;

/// textureSampleGradProj with Texture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleGradProj_Texture1D_texture;
extern Variable SampledTextureSampleGradProj_Texture1D_coordinate;
extern Variable SampledTextureSampleGradProj_Texture1D_grad_x;
extern Variable SampledTextureSampleGradProj_Texture1D_grad_y;
extern Variable SampledTextureSampleGradProj_Texture1D_proj;
extern Function SampledTextureSampleGradProj_Texture1D;

/// textureSampleGradProj with Texture2D, Sampler, Float32x2, Float32x2, Float32x2, Float32
extern Variable TextureSampleGradProj_Texture2D_texture;
extern Variable TextureSampleGradProj_Texture2D_sampler;
extern Variable TextureSampleGradProj_Texture2D_coordinate;
extern Variable TextureSampleGradProj_Texture2D_grad_x;
extern Variable TextureSampleGradProj_Texture2D_grad_y;
extern Variable TextureSampleGradProj_Texture2D_proj;
extern Function TextureSampleGradProj_Texture2D;

/// textureSampleGradProj with Texture2D, Float32x2, Float32x2, Float32x2, Float32
extern Variable SampledTextureSampleGradProj_Texture2D_texture;
extern Variable SampledTextureSampleGradProj_Texture2D_coordinate;
extern Variable SampledTextureSampleGradProj_Texture2D_grad_x;
extern Variable SampledTextureSampleGradProj_Texture2D_grad_y;
extern Variable SampledTextureSampleGradProj_Texture2D_proj;
extern Function SampledTextureSampleGradProj_Texture2D;

/// textureSampleGradProj with Texture3D, Sampler, Float32x3, Float32x3, Float32x3, Float32
extern Variable TextureSampleGradProj_Texture3D_texture;
extern Variable TextureSampleGradProj_Texture3D_sampler;
extern Variable TextureSampleGradProj_Texture3D_coordinate;
extern Variable TextureSampleGradProj_Texture3D_grad_x;
extern Variable TextureSampleGradProj_Texture3D_grad_y;
extern Variable TextureSampleGradProj_Texture3D_proj;
extern Function TextureSampleGradProj_Texture3D;

/// textureSampleGradProj with Texture3D, Float32x3, Float32x3, Float32x3, Float32
extern Variable SampledTextureSampleGradProj_Texture3D_texture;
extern Variable SampledTextureSampleGradProj_Texture3D_coordinate;
extern Variable SampledTextureSampleGradProj_Texture3D_grad_x;
extern Variable SampledTextureSampleGradProj_Texture3D_grad_y;
extern Variable SampledTextureSampleGradProj_Texture3D_proj;
extern Function SampledTextureSampleGradProj_Texture3D;

/// textureSampleGradProjOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32, Float32
extern Variable TextureSampleGradProjOffset_Texture1D_texture;
extern Variable TextureSampleGradProjOffset_Texture1D_sampler;
extern Variable TextureSampleGradProjOffset_Texture1D_coordinate;
extern Variable TextureSampleGradProjOffset_Texture1D_grad_x;
extern Variable TextureSampleGradProjOffset_Texture1D_grad_y;
extern Variable TextureSampleGradProjOffset_Texture1D_proj;
extern Variable TextureSampleGradProjOffset_Texture1D_offset;
extern Function TextureSampleGradProjOffset_Texture1D;

/// textureSampleGradProjOffset with Texture1D, Float32, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleGradProjOffset_Texture1D_texture;
extern Variable SampledTextureSampleGradProjOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleGradProjOffset_Texture1D_grad_x;
extern Variable SampledTextureSampleGradProjOffset_Texture1D_grad_y;
extern Variable SampledTextureSampleGradProjOffset_Texture1D_proj;
extern Variable SampledTextureSampleGradProjOffset_Texture1D_offset;
extern Function SampledTextureSampleGradProjOffset_Texture1D;

/// textureSampleGradProjOffset with Texture2D, Sampler, Float32x2, Float32x2, Float32x2, Float32, Float32x2
extern Variable TextureSampleGradProjOffset_Texture2D_texture;
extern Variable TextureSampleGradProjOffset_Texture2D_sampler;
extern Variable TextureSampleGradProjOffset_Texture2D_coordinate;
extern Variable TextureSampleGradProjOffset_Texture2D_grad_x;
extern Variable TextureSampleGradProjOffset_Texture2D_grad_y;
extern Variable TextureSampleGradProjOffset_Texture2D_proj;
extern Variable TextureSampleGradProjOffset_Texture2D_offset;
extern Function TextureSampleGradProjOffset_Texture2D;

/// textureSampleGradProjOffset with Texture2D, Float32x2, Float32x2, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleGradProjOffset_Texture2D_texture;
extern Variable SampledTextureSampleGradProjOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleGradProjOffset_Texture2D_grad_x;
extern Variable SampledTextureSampleGradProjOffset_Texture2D_grad_y;
extern Variable SampledTextureSampleGradProjOffset_Texture2D_proj;
extern Variable SampledTextureSampleGradProjOffset_Texture2D_offset;
extern Function SampledTextureSampleGradProjOffset_Texture2D;

/// textureSampleGradProjOffset with Texture3D, Sampler, Float32x3, Float32x3, Float32x3, Float32, Float32x3
extern Variable TextureSampleGradProjOffset_Texture3D_texture;
extern Variable TextureSampleGradProjOffset_Texture3D_sampler;
extern Variable TextureSampleGradProjOffset_Texture3D_coordinate;
extern Variable TextureSampleGradProjOffset_Texture3D_grad_x;
extern Variable TextureSampleGradProjOffset_Texture3D_grad_y;
extern Variable TextureSampleGradProjOffset_Texture3D_proj;
extern Variable TextureSampleGradProjOffset_Texture3D_offset;
extern Function TextureSampleGradProjOffset_Texture3D;

/// textureSampleGradProjOffset with Texture3D, Float32x3, Float32x3, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleGradProjOffset_Texture3D_texture;
extern Variable SampledTextureSampleGradProjOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleGradProjOffset_Texture3D_grad_x;
extern Variable SampledTextureSampleGradProjOffset_Texture3D_grad_y;
extern Variable SampledTextureSampleGradProjOffset_Texture3D_proj;
extern Variable SampledTextureSampleGradProjOffset_Texture3D_offset;
extern Function SampledTextureSampleGradProjOffset_Texture3D;

/// textureSampleGradCompare with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleGradCompare_Texture1D_texture;
extern Variable TextureSampleGradCompare_Texture1D_sampler;
extern Variable TextureSampleGradCompare_Texture1D_coordinate;
extern Variable TextureSampleGradCompare_Texture1D_grad_x;
extern Variable TextureSampleGradCompare_Texture1D_grad_y;
extern Variable TextureSampleGradCompare_Texture1D_compare;
extern Function TextureSampleGradCompare_Texture1D;

/// textureSampleGradCompare with Texture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleGradCompare_Texture1D_texture;
extern Variable SampledTextureSampleGradCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleGradCompare_Texture1D_grad_x;
extern Variable SampledTextureSampleGradCompare_Texture1D_grad_y;
extern Variable SampledTextureSampleGradCompare_Texture1D_compare;
extern Function SampledTextureSampleGradCompare_Texture1D;

/// textureSampleGradCompare with Texture2D, Sampler, Float32x2, Float32x2, Float32x2, Float32
extern Variable TextureSampleGradCompare_Texture2D_texture;
extern Variable TextureSampleGradCompare_Texture2D_sampler;
extern Variable TextureSampleGradCompare_Texture2D_coordinate;
extern Variable TextureSampleGradCompare_Texture2D_grad_x;
extern Variable TextureSampleGradCompare_Texture2D_grad_y;
extern Variable TextureSampleGradCompare_Texture2D_compare;
extern Function TextureSampleGradCompare_Texture2D;

/// textureSampleGradCompare with Texture2D, Float32x2, Float32x2, Float32x2, Float32
extern Variable SampledTextureSampleGradCompare_Texture2D_texture;
extern Variable SampledTextureSampleGradCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleGradCompare_Texture2D_grad_x;
extern Variable SampledTextureSampleGradCompare_Texture2D_grad_y;
extern Variable SampledTextureSampleGradCompare_Texture2D_compare;
extern Function SampledTextureSampleGradCompare_Texture2D;

/// textureSampleGradCompare with Texture3D, Sampler, Float32x3, Float32x3, Float32x3, Float32
extern Variable TextureSampleGradCompare_Texture3D_texture;
extern Variable TextureSampleGradCompare_Texture3D_sampler;
extern Variable TextureSampleGradCompare_Texture3D_coordinate;
extern Variable TextureSampleGradCompare_Texture3D_grad_x;
extern Variable TextureSampleGradCompare_Texture3D_grad_y;
extern Variable TextureSampleGradCompare_Texture3D_compare;
extern Function TextureSampleGradCompare_Texture3D;

/// textureSampleGradCompare with Texture3D, Float32x3, Float32x3, Float32x3, Float32
extern Variable SampledTextureSampleGradCompare_Texture3D_texture;
extern Variable SampledTextureSampleGradCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleGradCompare_Texture3D_grad_x;
extern Variable SampledTextureSampleGradCompare_Texture3D_grad_y;
extern Variable SampledTextureSampleGradCompare_Texture3D_compare;
extern Function SampledTextureSampleGradCompare_Texture3D;

/// textureSampleGradCompare with Texture1DArray, Sampler, Float32x2, Float32x2, Float32x2, Float32
extern Variable TextureSampleGradCompare_Texture1DArray_texture;
extern Variable TextureSampleGradCompare_Texture1DArray_sampler;
extern Variable TextureSampleGradCompare_Texture1DArray_coordinate;
extern Variable TextureSampleGradCompare_Texture1DArray_grad_x;
extern Variable TextureSampleGradCompare_Texture1DArray_grad_y;
extern Variable TextureSampleGradCompare_Texture1DArray_compare;
extern Function TextureSampleGradCompare_Texture1DArray;

/// textureSampleGradCompare with Texture1DArray, Float32x2, Float32x2, Float32x2, Float32
extern Variable SampledTextureSampleGradCompare_Texture1DArray_texture;
extern Variable SampledTextureSampleGradCompare_Texture1DArray_coordinate;
extern Variable SampledTextureSampleGradCompare_Texture1DArray_grad_x;
extern Variable SampledTextureSampleGradCompare_Texture1DArray_grad_y;
extern Variable SampledTextureSampleGradCompare_Texture1DArray_compare;
extern Function SampledTextureSampleGradCompare_Texture1DArray;

/// textureSampleGradCompare with Texture2DArray, Sampler, Float32x3, Float32x3, Float32x3, Float32
extern Variable TextureSampleGradCompare_Texture2DArray_texture;
extern Variable TextureSampleGradCompare_Texture2DArray_sampler;
extern Variable TextureSampleGradCompare_Texture2DArray_coordinate;
extern Variable TextureSampleGradCompare_Texture2DArray_grad_x;
extern Variable TextureSampleGradCompare_Texture2DArray_grad_y;
extern Variable TextureSampleGradCompare_Texture2DArray_compare;
extern Function TextureSampleGradCompare_Texture2DArray;

/// textureSampleGradCompare with Texture2DArray, Float32x3, Float32x3, Float32x3, Float32
extern Variable SampledTextureSampleGradCompare_Texture2DArray_texture;
extern Variable SampledTextureSampleGradCompare_Texture2DArray_coordinate;
extern Variable SampledTextureSampleGradCompare_Texture2DArray_grad_x;
extern Variable SampledTextureSampleGradCompare_Texture2DArray_grad_y;
extern Variable SampledTextureSampleGradCompare_Texture2DArray_compare;
extern Function SampledTextureSampleGradCompare_Texture2DArray;

/// textureSampleGradCompareOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32, Float32
extern Variable TextureSampleGradCompareOffset_Texture1D_texture;
extern Variable TextureSampleGradCompareOffset_Texture1D_sampler;
extern Variable TextureSampleGradCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleGradCompareOffset_Texture1D_grad_x;
extern Variable TextureSampleGradCompareOffset_Texture1D_grad_y;
extern Variable TextureSampleGradCompareOffset_Texture1D_compare;
extern Variable TextureSampleGradCompareOffset_Texture1D_offset;
extern Function TextureSampleGradCompareOffset_Texture1D;

/// textureSampleGradCompareOffset with Texture1D, Float32, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleGradCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleGradCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleGradCompareOffset_Texture1D_grad_x;
extern Variable SampledTextureSampleGradCompareOffset_Texture1D_grad_y;
extern Variable SampledTextureSampleGradCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleGradCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleGradCompareOffset_Texture1D;

/// textureSampleGradCompareOffset with Texture2D, Sampler, Float32x2, Float32x2, Float32x2, Float32, Float32x2
extern Variable TextureSampleGradCompareOffset_Texture2D_texture;
extern Variable TextureSampleGradCompareOffset_Texture2D_sampler;
extern Variable TextureSampleGradCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleGradCompareOffset_Texture2D_grad_x;
extern Variable TextureSampleGradCompareOffset_Texture2D_grad_y;
extern Variable TextureSampleGradCompareOffset_Texture2D_compare;
extern Variable TextureSampleGradCompareOffset_Texture2D_offset;
extern Function TextureSampleGradCompareOffset_Texture2D;

/// textureSampleGradCompareOffset with Texture2D, Float32x2, Float32x2, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleGradCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleGradCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleGradCompareOffset_Texture2D_grad_x;
extern Variable SampledTextureSampleGradCompareOffset_Texture2D_grad_y;
extern Variable SampledTextureSampleGradCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleGradCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleGradCompareOffset_Texture2D;

/// textureSampleGradCompareOffset with Texture3D, Sampler, Float32x3, Float32x3, Float32x3, Float32, Float32x3
extern Variable TextureSampleGradCompareOffset_Texture3D_texture;
extern Variable TextureSampleGradCompareOffset_Texture3D_sampler;
extern Variable TextureSampleGradCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleGradCompareOffset_Texture3D_grad_x;
extern Variable TextureSampleGradCompareOffset_Texture3D_grad_y;
extern Variable TextureSampleGradCompareOffset_Texture3D_compare;
extern Variable TextureSampleGradCompareOffset_Texture3D_offset;
extern Function TextureSampleGradCompareOffset_Texture3D;

/// textureSampleGradCompareOffset with Texture3D, Float32x3, Float32x3, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleGradCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleGradCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleGradCompareOffset_Texture3D_grad_x;
extern Variable SampledTextureSampleGradCompareOffset_Texture3D_grad_y;
extern Variable SampledTextureSampleGradCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleGradCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleGradCompareOffset_Texture3D;

/// textureSampleGradCompareOffset with Texture1DArray, Sampler, Float32x2, Float32x2, Float32x2, Float32, Float32x2
extern Variable TextureSampleGradCompareOffset_Texture1DArray_texture;
extern Variable TextureSampleGradCompareOffset_Texture1DArray_sampler;
extern Variable TextureSampleGradCompareOffset_Texture1DArray_coordinate;
extern Variable TextureSampleGradCompareOffset_Texture1DArray_grad_x;
extern Variable TextureSampleGradCompareOffset_Texture1DArray_grad_y;
extern Variable TextureSampleGradCompareOffset_Texture1DArray_compare;
extern Variable TextureSampleGradCompareOffset_Texture1DArray_offset;
extern Function TextureSampleGradCompareOffset_Texture1DArray;

/// textureSampleGradCompareOffset with Texture1DArray, Float32x2, Float32x2, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleGradCompareOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleGradCompareOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleGradCompareOffset_Texture1DArray_grad_x;
extern Variable SampledTextureSampleGradCompareOffset_Texture1DArray_grad_y;
extern Variable SampledTextureSampleGradCompareOffset_Texture1DArray_compare;
extern Variable SampledTextureSampleGradCompareOffset_Texture1DArray_offset;
extern Function SampledTextureSampleGradCompareOffset_Texture1DArray;

/// textureSampleGradCompareOffset with Texture2DArray, Sampler, Float32x3, Float32x3, Float32x3, Float32, Float32x3
extern Variable TextureSampleGradCompareOffset_Texture2DArray_texture;
extern Variable TextureSampleGradCompareOffset_Texture2DArray_sampler;
extern Variable TextureSampleGradCompareOffset_Texture2DArray_coordinate;
extern Variable TextureSampleGradCompareOffset_Texture2DArray_grad_x;
extern Variable TextureSampleGradCompareOffset_Texture2DArray_grad_y;
extern Variable TextureSampleGradCompareOffset_Texture2DArray_compare;
extern Variable TextureSampleGradCompareOffset_Texture2DArray_offset;
extern Function TextureSampleGradCompareOffset_Texture2DArray;

/// textureSampleGradCompareOffset with Texture2DArray, Float32x3, Float32x3, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleGradCompareOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleGradCompareOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleGradCompareOffset_Texture2DArray_grad_x;
extern Variable SampledTextureSampleGradCompareOffset_Texture2DArray_grad_y;
extern Variable SampledTextureSampleGradCompareOffset_Texture2DArray_compare;
extern Variable SampledTextureSampleGradCompareOffset_Texture2DArray_offset;
extern Function SampledTextureSampleGradCompareOffset_Texture2DArray;

/// textureSampleGradProjCompare with Texture1D, Sampler, Float32, Float32, Float32, Float32, Float32
extern Variable TextureSampleGradProjCompare_Texture1D_texture;
extern Variable TextureSampleGradProjCompare_Texture1D_sampler;
extern Variable TextureSampleGradProjCompare_Texture1D_coordinate;
extern Variable TextureSampleGradProjCompare_Texture1D_grad_x;
extern Variable TextureSampleGradProjCompare_Texture1D_grad_y;
extern Variable TextureSampleGradProjCompare_Texture1D_proj;
extern Variable TextureSampleGradProjCompare_Texture1D_compare;
extern Function TextureSampleGradProjCompare_Texture1D;

/// textureSampleGradProjCompare with Texture1D, Float32, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleGradProjCompare_Texture1D_texture;
extern Variable SampledTextureSampleGradProjCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleGradProjCompare_Texture1D_grad_x;
extern Variable SampledTextureSampleGradProjCompare_Texture1D_grad_y;
extern Variable SampledTextureSampleGradProjCompare_Texture1D_proj;
extern Variable SampledTextureSampleGradProjCompare_Texture1D_compare;
extern Function SampledTextureSampleGradProjCompare_Texture1D;

/// textureSampleGradProjCompare with Texture2D, Sampler, Float32x2, Float32x2, Float32x2, Float32, Float32
extern Variable TextureSampleGradProjCompare_Texture2D_texture;
extern Variable TextureSampleGradProjCompare_Texture2D_sampler;
extern Variable TextureSampleGradProjCompare_Texture2D_coordinate;
extern Variable TextureSampleGradProjCompare_Texture2D_grad_x;
extern Variable TextureSampleGradProjCompare_Texture2D_grad_y;
extern Variable TextureSampleGradProjCompare_Texture2D_proj;
extern Variable TextureSampleGradProjCompare_Texture2D_compare;
extern Function TextureSampleGradProjCompare_Texture2D;

/// textureSampleGradProjCompare with Texture2D, Float32x2, Float32x2, Float32x2, Float32, Float32
extern Variable SampledTextureSampleGradProjCompare_Texture2D_texture;
extern Variable SampledTextureSampleGradProjCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleGradProjCompare_Texture2D_grad_x;
extern Variable SampledTextureSampleGradProjCompare_Texture2D_grad_y;
extern Variable SampledTextureSampleGradProjCompare_Texture2D_proj;
extern Variable SampledTextureSampleGradProjCompare_Texture2D_compare;
extern Function SampledTextureSampleGradProjCompare_Texture2D;

/// textureSampleGradProjCompare with Texture3D, Sampler, Float32x3, Float32x3, Float32x3, Float32, Float32
extern Variable TextureSampleGradProjCompare_Texture3D_texture;
extern Variable TextureSampleGradProjCompare_Texture3D_sampler;
extern Variable TextureSampleGradProjCompare_Texture3D_coordinate;
extern Variable TextureSampleGradProjCompare_Texture3D_grad_x;
extern Variable TextureSampleGradProjCompare_Texture3D_grad_y;
extern Variable TextureSampleGradProjCompare_Texture3D_proj;
extern Variable TextureSampleGradProjCompare_Texture3D_compare;
extern Function TextureSampleGradProjCompare_Texture3D;

/// textureSampleGradProjCompare with Texture3D, Float32x3, Float32x3, Float32x3, Float32, Float32
extern Variable SampledTextureSampleGradProjCompare_Texture3D_texture;
extern Variable SampledTextureSampleGradProjCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleGradProjCompare_Texture3D_grad_x;
extern Variable SampledTextureSampleGradProjCompare_Texture3D_grad_y;
extern Variable SampledTextureSampleGradProjCompare_Texture3D_proj;
extern Variable SampledTextureSampleGradProjCompare_Texture3D_compare;
extern Function SampledTextureSampleGradProjCompare_Texture3D;

/// textureSampleGradProjCompareOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable TextureSampleGradProjCompareOffset_Texture1D_texture;
extern Variable TextureSampleGradProjCompareOffset_Texture1D_sampler;
extern Variable TextureSampleGradProjCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleGradProjCompareOffset_Texture1D_grad_x;
extern Variable TextureSampleGradProjCompareOffset_Texture1D_grad_y;
extern Variable TextureSampleGradProjCompareOffset_Texture1D_proj;
extern Variable TextureSampleGradProjCompareOffset_Texture1D_compare;
extern Variable TextureSampleGradProjCompareOffset_Texture1D_offset;
extern Function TextureSampleGradProjCompareOffset_Texture1D;

/// textureSampleGradProjCompareOffset with Texture1D, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleGradProjCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture1D_grad_x;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture1D_grad_y;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture1D_proj;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleGradProjCompareOffset_Texture1D;

/// textureSampleGradProjCompareOffset with Texture2D, Sampler, Float32x2, Float32x2, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleGradProjCompareOffset_Texture2D_texture;
extern Variable TextureSampleGradProjCompareOffset_Texture2D_sampler;
extern Variable TextureSampleGradProjCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleGradProjCompareOffset_Texture2D_grad_x;
extern Variable TextureSampleGradProjCompareOffset_Texture2D_grad_y;
extern Variable TextureSampleGradProjCompareOffset_Texture2D_proj;
extern Variable TextureSampleGradProjCompareOffset_Texture2D_compare;
extern Variable TextureSampleGradProjCompareOffset_Texture2D_offset;
extern Function TextureSampleGradProjCompareOffset_Texture2D;

/// textureSampleGradProjCompareOffset with Texture2D, Float32x2, Float32x2, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleGradProjCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture2D_grad_x;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture2D_grad_y;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture2D_proj;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleGradProjCompareOffset_Texture2D;

/// textureSampleGradProjCompareOffset with Texture3D, Sampler, Float32x3, Float32x3, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleGradProjCompareOffset_Texture3D_texture;
extern Variable TextureSampleGradProjCompareOffset_Texture3D_sampler;
extern Variable TextureSampleGradProjCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleGradProjCompareOffset_Texture3D_grad_x;
extern Variable TextureSampleGradProjCompareOffset_Texture3D_grad_y;
extern Variable TextureSampleGradProjCompareOffset_Texture3D_proj;
extern Variable TextureSampleGradProjCompareOffset_Texture3D_compare;
extern Variable TextureSampleGradProjCompareOffset_Texture3D_offset;
extern Function TextureSampleGradProjCompareOffset_Texture3D;

/// textureSampleGradProjCompareOffset with Texture3D, Float32x3, Float32x3, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleGradProjCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture3D_grad_x;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture3D_grad_y;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture3D_proj;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleGradProjCompareOffset_Texture3D;

/// textureSampleBias with Texture1D, Sampler, Float32, Float32
extern Variable TextureSampleBias_Texture1D_texture;
extern Variable TextureSampleBias_Texture1D_sampler;
extern Variable TextureSampleBias_Texture1D_coordinate;
extern Variable TextureSampleBias_Texture1D_bias;
extern Function TextureSampleBias_Texture1D;

/// textureSampleBias with Texture1D, Float32, Float32
extern Variable SampledTextureSampleBias_Texture1D_texture;
extern Variable SampledTextureSampleBias_Texture1D_coordinate;
extern Variable SampledTextureSampleBias_Texture1D_bias;
extern Function SampledTextureSampleBias_Texture1D;

/// textureSampleBias with Texture2D, Sampler, Float32x2, Float32
extern Variable TextureSampleBias_Texture2D_texture;
extern Variable TextureSampleBias_Texture2D_sampler;
extern Variable TextureSampleBias_Texture2D_coordinate;
extern Variable TextureSampleBias_Texture2D_bias;
extern Function TextureSampleBias_Texture2D;

/// textureSampleBias with Texture2D, Float32x2, Float32
extern Variable SampledTextureSampleBias_Texture2D_texture;
extern Variable SampledTextureSampleBias_Texture2D_coordinate;
extern Variable SampledTextureSampleBias_Texture2D_bias;
extern Function SampledTextureSampleBias_Texture2D;

/// textureSampleBias with Texture3D, Sampler, Float32x3, Float32
extern Variable TextureSampleBias_Texture3D_texture;
extern Variable TextureSampleBias_Texture3D_sampler;
extern Variable TextureSampleBias_Texture3D_coordinate;
extern Variable TextureSampleBias_Texture3D_bias;
extern Function TextureSampleBias_Texture3D;

/// textureSampleBias with Texture3D, Float32x3, Float32
extern Variable SampledTextureSampleBias_Texture3D_texture;
extern Variable SampledTextureSampleBias_Texture3D_coordinate;
extern Variable SampledTextureSampleBias_Texture3D_bias;
extern Function SampledTextureSampleBias_Texture3D;

/// textureSampleBias with TextureCube, Sampler, Float32x3, Float32
extern Variable TextureSampleBias_TextureCube_texture;
extern Variable TextureSampleBias_TextureCube_sampler;
extern Variable TextureSampleBias_TextureCube_coordinate;
extern Variable TextureSampleBias_TextureCube_bias;
extern Function TextureSampleBias_TextureCube;

/// textureSampleBias with TextureCube, Float32x3, Float32
extern Variable SampledTextureSampleBias_TextureCube_texture;
extern Variable SampledTextureSampleBias_TextureCube_coordinate;
extern Variable SampledTextureSampleBias_TextureCube_bias;
extern Function SampledTextureSampleBias_TextureCube;

/// textureSampleBias with Texture1DArray, Sampler, Float32x2, Float32
extern Variable TextureSampleBias_Texture1DArray_texture;
extern Variable TextureSampleBias_Texture1DArray_sampler;
extern Variable TextureSampleBias_Texture1DArray_coordinate;
extern Variable TextureSampleBias_Texture1DArray_bias;
extern Function TextureSampleBias_Texture1DArray;

/// textureSampleBias with Texture1DArray, Float32x2, Float32
extern Variable SampledTextureSampleBias_Texture1DArray_texture;
extern Variable SampledTextureSampleBias_Texture1DArray_coordinate;
extern Variable SampledTextureSampleBias_Texture1DArray_bias;
extern Function SampledTextureSampleBias_Texture1DArray;

/// textureSampleBias with Texture2DArray, Sampler, Float32x3, Float32
extern Variable TextureSampleBias_Texture2DArray_texture;
extern Variable TextureSampleBias_Texture2DArray_sampler;
extern Variable TextureSampleBias_Texture2DArray_coordinate;
extern Variable TextureSampleBias_Texture2DArray_bias;
extern Function TextureSampleBias_Texture2DArray;

/// textureSampleBias with Texture2DArray, Float32x3, Float32
extern Variable SampledTextureSampleBias_Texture2DArray_texture;
extern Variable SampledTextureSampleBias_Texture2DArray_coordinate;
extern Variable SampledTextureSampleBias_Texture2DArray_bias;
extern Function SampledTextureSampleBias_Texture2DArray;

/// textureSampleBias with TextureCubeArray, Sampler, Float32x4, Float32
extern Variable TextureSampleBias_TextureCubeArray_texture;
extern Variable TextureSampleBias_TextureCubeArray_sampler;
extern Variable TextureSampleBias_TextureCubeArray_coordinate;
extern Variable TextureSampleBias_TextureCubeArray_bias;
extern Function TextureSampleBias_TextureCubeArray;

/// textureSampleBias with TextureCubeArray, Float32x4, Float32
extern Variable SampledTextureSampleBias_TextureCubeArray_texture;
extern Variable SampledTextureSampleBias_TextureCubeArray_coordinate;
extern Variable SampledTextureSampleBias_TextureCubeArray_bias;
extern Function SampledTextureSampleBias_TextureCubeArray;

/// textureSampleBiasOffset with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleBiasOffset_Texture1D_texture;
extern Variable TextureSampleBiasOffset_Texture1D_sampler;
extern Variable TextureSampleBiasOffset_Texture1D_coordinate;
extern Variable TextureSampleBiasOffset_Texture1D_bias;
extern Variable TextureSampleBiasOffset_Texture1D_offset;
extern Function TextureSampleBiasOffset_Texture1D;

/// textureSampleBiasOffset with Texture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasOffset_Texture1D_texture;
extern Variable SampledTextureSampleBiasOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleBiasOffset_Texture1D_bias;
extern Variable SampledTextureSampleBiasOffset_Texture1D_offset;
extern Function SampledTextureSampleBiasOffset_Texture1D;

/// textureSampleBiasOffset with Texture2D, Sampler, Float32x2, Float32, Float32x2
extern Variable TextureSampleBiasOffset_Texture2D_texture;
extern Variable TextureSampleBiasOffset_Texture2D_sampler;
extern Variable TextureSampleBiasOffset_Texture2D_coordinate;
extern Variable TextureSampleBiasOffset_Texture2D_bias;
extern Variable TextureSampleBiasOffset_Texture2D_offset;
extern Function TextureSampleBiasOffset_Texture2D;

/// textureSampleBiasOffset with Texture2D, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleBiasOffset_Texture2D_texture;
extern Variable SampledTextureSampleBiasOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleBiasOffset_Texture2D_bias;
extern Variable SampledTextureSampleBiasOffset_Texture2D_offset;
extern Function SampledTextureSampleBiasOffset_Texture2D;

/// textureSampleBiasOffset with Texture3D, Sampler, Float32x3, Float32, Float32x3
extern Variable TextureSampleBiasOffset_Texture3D_texture;
extern Variable TextureSampleBiasOffset_Texture3D_sampler;
extern Variable TextureSampleBiasOffset_Texture3D_coordinate;
extern Variable TextureSampleBiasOffset_Texture3D_bias;
extern Variable TextureSampleBiasOffset_Texture3D_offset;
extern Function TextureSampleBiasOffset_Texture3D;

/// textureSampleBiasOffset with Texture3D, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleBiasOffset_Texture3D_texture;
extern Variable SampledTextureSampleBiasOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleBiasOffset_Texture3D_bias;
extern Variable SampledTextureSampleBiasOffset_Texture3D_offset;
extern Function SampledTextureSampleBiasOffset_Texture3D;

/// textureSampleBiasOffset with Texture1DArray, Sampler, Float32x2, Float32, Float32x2
extern Variable TextureSampleBiasOffset_Texture1DArray_texture;
extern Variable TextureSampleBiasOffset_Texture1DArray_sampler;
extern Variable TextureSampleBiasOffset_Texture1DArray_coordinate;
extern Variable TextureSampleBiasOffset_Texture1DArray_bias;
extern Variable TextureSampleBiasOffset_Texture1DArray_offset;
extern Function TextureSampleBiasOffset_Texture1DArray;

/// textureSampleBiasOffset with Texture1DArray, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleBiasOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleBiasOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleBiasOffset_Texture1DArray_bias;
extern Variable SampledTextureSampleBiasOffset_Texture1DArray_offset;
extern Function SampledTextureSampleBiasOffset_Texture1DArray;

/// textureSampleBiasOffset with Texture2DArray, Sampler, Float32x3, Float32, Float32x3
extern Variable TextureSampleBiasOffset_Texture2DArray_texture;
extern Variable TextureSampleBiasOffset_Texture2DArray_sampler;
extern Variable TextureSampleBiasOffset_Texture2DArray_coordinate;
extern Variable TextureSampleBiasOffset_Texture2DArray_bias;
extern Variable TextureSampleBiasOffset_Texture2DArray_offset;
extern Function TextureSampleBiasOffset_Texture2DArray;

/// textureSampleBiasOffset with Texture2DArray, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleBiasOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleBiasOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleBiasOffset_Texture2DArray_bias;
extern Variable SampledTextureSampleBiasOffset_Texture2DArray_offset;
extern Function SampledTextureSampleBiasOffset_Texture2DArray;

/// textureSampleBiasProj with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleBiasProj_Texture1D_texture;
extern Variable TextureSampleBiasProj_Texture1D_sampler;
extern Variable TextureSampleBiasProj_Texture1D_coordinate;
extern Variable TextureSampleBiasProj_Texture1D_bias;
extern Variable TextureSampleBiasProj_Texture1D_proj;
extern Function TextureSampleBiasProj_Texture1D;

/// textureSampleBiasProj with Texture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasProj_Texture1D_texture;
extern Variable SampledTextureSampleBiasProj_Texture1D_coordinate;
extern Variable SampledTextureSampleBiasProj_Texture1D_bias;
extern Variable SampledTextureSampleBiasProj_Texture1D_proj;
extern Function SampledTextureSampleBiasProj_Texture1D;

/// textureSampleBiasProj with Texture2D, Sampler, Float32x2, Float32, Float32
extern Variable TextureSampleBiasProj_Texture2D_texture;
extern Variable TextureSampleBiasProj_Texture2D_sampler;
extern Variable TextureSampleBiasProj_Texture2D_coordinate;
extern Variable TextureSampleBiasProj_Texture2D_bias;
extern Variable TextureSampleBiasProj_Texture2D_proj;
extern Function TextureSampleBiasProj_Texture2D;

/// textureSampleBiasProj with Texture2D, Float32x2, Float32, Float32
extern Variable SampledTextureSampleBiasProj_Texture2D_texture;
extern Variable SampledTextureSampleBiasProj_Texture2D_coordinate;
extern Variable SampledTextureSampleBiasProj_Texture2D_bias;
extern Variable SampledTextureSampleBiasProj_Texture2D_proj;
extern Function SampledTextureSampleBiasProj_Texture2D;

/// textureSampleBiasProj with Texture3D, Sampler, Float32x3, Float32, Float32
extern Variable TextureSampleBiasProj_Texture3D_texture;
extern Variable TextureSampleBiasProj_Texture3D_sampler;
extern Variable TextureSampleBiasProj_Texture3D_coordinate;
extern Variable TextureSampleBiasProj_Texture3D_bias;
extern Variable TextureSampleBiasProj_Texture3D_proj;
extern Function TextureSampleBiasProj_Texture3D;

/// textureSampleBiasProj with Texture3D, Float32x3, Float32, Float32
extern Variable SampledTextureSampleBiasProj_Texture3D_texture;
extern Variable SampledTextureSampleBiasProj_Texture3D_coordinate;
extern Variable SampledTextureSampleBiasProj_Texture3D_bias;
extern Variable SampledTextureSampleBiasProj_Texture3D_proj;
extern Function SampledTextureSampleBiasProj_Texture3D;

/// textureSampleBiasProjOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleBiasProjOffset_Texture1D_texture;
extern Variable TextureSampleBiasProjOffset_Texture1D_sampler;
extern Variable TextureSampleBiasProjOffset_Texture1D_coordinate;
extern Variable TextureSampleBiasProjOffset_Texture1D_bias;
extern Variable TextureSampleBiasProjOffset_Texture1D_proj;
extern Variable TextureSampleBiasProjOffset_Texture1D_offset;
extern Function TextureSampleBiasProjOffset_Texture1D;

/// textureSampleBiasProjOffset with Texture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasProjOffset_Texture1D_texture;
extern Variable SampledTextureSampleBiasProjOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleBiasProjOffset_Texture1D_bias;
extern Variable SampledTextureSampleBiasProjOffset_Texture1D_proj;
extern Variable SampledTextureSampleBiasProjOffset_Texture1D_offset;
extern Function SampledTextureSampleBiasProjOffset_Texture1D;

/// textureSampleBiasProjOffset with Texture2D, Sampler, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleBiasProjOffset_Texture2D_texture;
extern Variable TextureSampleBiasProjOffset_Texture2D_sampler;
extern Variable TextureSampleBiasProjOffset_Texture2D_coordinate;
extern Variable TextureSampleBiasProjOffset_Texture2D_bias;
extern Variable TextureSampleBiasProjOffset_Texture2D_proj;
extern Variable TextureSampleBiasProjOffset_Texture2D_offset;
extern Function TextureSampleBiasProjOffset_Texture2D;

/// textureSampleBiasProjOffset with Texture2D, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleBiasProjOffset_Texture2D_texture;
extern Variable SampledTextureSampleBiasProjOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleBiasProjOffset_Texture2D_bias;
extern Variable SampledTextureSampleBiasProjOffset_Texture2D_proj;
extern Variable SampledTextureSampleBiasProjOffset_Texture2D_offset;
extern Function SampledTextureSampleBiasProjOffset_Texture2D;

/// textureSampleBiasProjOffset with Texture3D, Sampler, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleBiasProjOffset_Texture3D_texture;
extern Variable TextureSampleBiasProjOffset_Texture3D_sampler;
extern Variable TextureSampleBiasProjOffset_Texture3D_coordinate;
extern Variable TextureSampleBiasProjOffset_Texture3D_bias;
extern Variable TextureSampleBiasProjOffset_Texture3D_proj;
extern Variable TextureSampleBiasProjOffset_Texture3D_offset;
extern Function TextureSampleBiasProjOffset_Texture3D;

/// textureSampleBiasProjOffset with Texture3D, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleBiasProjOffset_Texture3D_texture;
extern Variable SampledTextureSampleBiasProjOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleBiasProjOffset_Texture3D_bias;
extern Variable SampledTextureSampleBiasProjOffset_Texture3D_proj;
extern Variable SampledTextureSampleBiasProjOffset_Texture3D_offset;
extern Function SampledTextureSampleBiasProjOffset_Texture3D;

/// textureSampleBiasCompare with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleBiasCompare_Texture1D_texture;
extern Variable TextureSampleBiasCompare_Texture1D_sampler;
extern Variable TextureSampleBiasCompare_Texture1D_coordinate;
extern Variable TextureSampleBiasCompare_Texture1D_bias;
extern Variable TextureSampleBiasCompare_Texture1D_compare;
extern Function TextureSampleBiasCompare_Texture1D;

/// textureSampleBiasCompare with Texture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasCompare_Texture1D_texture;
extern Variable SampledTextureSampleBiasCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleBiasCompare_Texture1D_bias;
extern Variable SampledTextureSampleBiasCompare_Texture1D_compare;
extern Function SampledTextureSampleBiasCompare_Texture1D;

/// textureSampleBiasCompare with Texture2D, Sampler, Float32x2, Float32, Float32
extern Variable TextureSampleBiasCompare_Texture2D_texture;
extern Variable TextureSampleBiasCompare_Texture2D_sampler;
extern Variable TextureSampleBiasCompare_Texture2D_coordinate;
extern Variable TextureSampleBiasCompare_Texture2D_bias;
extern Variable TextureSampleBiasCompare_Texture2D_compare;
extern Function TextureSampleBiasCompare_Texture2D;

/// textureSampleBiasCompare with Texture2D, Float32x2, Float32, Float32
extern Variable SampledTextureSampleBiasCompare_Texture2D_texture;
extern Variable SampledTextureSampleBiasCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleBiasCompare_Texture2D_bias;
extern Variable SampledTextureSampleBiasCompare_Texture2D_compare;
extern Function SampledTextureSampleBiasCompare_Texture2D;

/// textureSampleBiasCompare with Texture3D, Sampler, Float32x3, Float32, Float32
extern Variable TextureSampleBiasCompare_Texture3D_texture;
extern Variable TextureSampleBiasCompare_Texture3D_sampler;
extern Variable TextureSampleBiasCompare_Texture3D_coordinate;
extern Variable TextureSampleBiasCompare_Texture3D_bias;
extern Variable TextureSampleBiasCompare_Texture3D_compare;
extern Function TextureSampleBiasCompare_Texture3D;

/// textureSampleBiasCompare with Texture3D, Float32x3, Float32, Float32
extern Variable SampledTextureSampleBiasCompare_Texture3D_texture;
extern Variable SampledTextureSampleBiasCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleBiasCompare_Texture3D_bias;
extern Variable SampledTextureSampleBiasCompare_Texture3D_compare;
extern Function SampledTextureSampleBiasCompare_Texture3D;

/// textureSampleBiasCompare with Texture1DArray, Sampler, Float32x2, Float32, Float32
extern Variable TextureSampleBiasCompare_Texture1DArray_texture;
extern Variable TextureSampleBiasCompare_Texture1DArray_sampler;
extern Variable TextureSampleBiasCompare_Texture1DArray_coordinate;
extern Variable TextureSampleBiasCompare_Texture1DArray_bias;
extern Variable TextureSampleBiasCompare_Texture1DArray_compare;
extern Function TextureSampleBiasCompare_Texture1DArray;

/// textureSampleBiasCompare with Texture1DArray, Float32x2, Float32, Float32
extern Variable SampledTextureSampleBiasCompare_Texture1DArray_texture;
extern Variable SampledTextureSampleBiasCompare_Texture1DArray_coordinate;
extern Variable SampledTextureSampleBiasCompare_Texture1DArray_bias;
extern Variable SampledTextureSampleBiasCompare_Texture1DArray_compare;
extern Function SampledTextureSampleBiasCompare_Texture1DArray;

/// textureSampleBiasCompare with Texture2DArray, Sampler, Float32x3, Float32, Float32
extern Variable TextureSampleBiasCompare_Texture2DArray_texture;
extern Variable TextureSampleBiasCompare_Texture2DArray_sampler;
extern Variable TextureSampleBiasCompare_Texture2DArray_coordinate;
extern Variable TextureSampleBiasCompare_Texture2DArray_bias;
extern Variable TextureSampleBiasCompare_Texture2DArray_compare;
extern Function TextureSampleBiasCompare_Texture2DArray;

/// textureSampleBiasCompare with Texture2DArray, Float32x3, Float32, Float32
extern Variable SampledTextureSampleBiasCompare_Texture2DArray_texture;
extern Variable SampledTextureSampleBiasCompare_Texture2DArray_coordinate;
extern Variable SampledTextureSampleBiasCompare_Texture2DArray_bias;
extern Variable SampledTextureSampleBiasCompare_Texture2DArray_compare;
extern Function SampledTextureSampleBiasCompare_Texture2DArray;

/// textureSampleBiasCompareOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleBiasCompareOffset_Texture1D_texture;
extern Variable TextureSampleBiasCompareOffset_Texture1D_sampler;
extern Variable TextureSampleBiasCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleBiasCompareOffset_Texture1D_bias;
extern Variable TextureSampleBiasCompareOffset_Texture1D_compare;
extern Variable TextureSampleBiasCompareOffset_Texture1D_offset;
extern Function TextureSampleBiasCompareOffset_Texture1D;

/// textureSampleBiasCompareOffset with Texture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1D_bias;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleBiasCompareOffset_Texture1D;

/// textureSampleBiasCompareOffset with Texture2D, Sampler, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleBiasCompareOffset_Texture2D_texture;
extern Variable TextureSampleBiasCompareOffset_Texture2D_sampler;
extern Variable TextureSampleBiasCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleBiasCompareOffset_Texture2D_bias;
extern Variable TextureSampleBiasCompareOffset_Texture2D_compare;
extern Variable TextureSampleBiasCompareOffset_Texture2D_offset;
extern Function TextureSampleBiasCompareOffset_Texture2D;

/// textureSampleBiasCompareOffset with Texture2D, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleBiasCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2D_bias;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleBiasCompareOffset_Texture2D;

/// textureSampleBiasCompareOffset with Texture3D, Sampler, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleBiasCompareOffset_Texture3D_texture;
extern Variable TextureSampleBiasCompareOffset_Texture3D_sampler;
extern Variable TextureSampleBiasCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleBiasCompareOffset_Texture3D_bias;
extern Variable TextureSampleBiasCompareOffset_Texture3D_compare;
extern Variable TextureSampleBiasCompareOffset_Texture3D_offset;
extern Function TextureSampleBiasCompareOffset_Texture3D;

/// textureSampleBiasCompareOffset with Texture3D, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleBiasCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleBiasCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleBiasCompareOffset_Texture3D_bias;
extern Variable SampledTextureSampleBiasCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleBiasCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleBiasCompareOffset_Texture3D;

/// textureSampleBiasCompareOffset with Texture1DArray, Sampler, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleBiasCompareOffset_Texture1DArray_texture;
extern Variable TextureSampleBiasCompareOffset_Texture1DArray_sampler;
extern Variable TextureSampleBiasCompareOffset_Texture1DArray_coordinate;
extern Variable TextureSampleBiasCompareOffset_Texture1DArray_bias;
extern Variable TextureSampleBiasCompareOffset_Texture1DArray_compare;
extern Variable TextureSampleBiasCompareOffset_Texture1DArray_offset;
extern Function TextureSampleBiasCompareOffset_Texture1DArray;

/// textureSampleBiasCompareOffset with Texture1DArray, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleBiasCompareOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1DArray_bias;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1DArray_compare;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1DArray_offset;
extern Function SampledTextureSampleBiasCompareOffset_Texture1DArray;

/// textureSampleBiasCompareOffset with Texture2DArray, Sampler, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleBiasCompareOffset_Texture2DArray_texture;
extern Variable TextureSampleBiasCompareOffset_Texture2DArray_sampler;
extern Variable TextureSampleBiasCompareOffset_Texture2DArray_coordinate;
extern Variable TextureSampleBiasCompareOffset_Texture2DArray_bias;
extern Variable TextureSampleBiasCompareOffset_Texture2DArray_compare;
extern Variable TextureSampleBiasCompareOffset_Texture2DArray_offset;
extern Function TextureSampleBiasCompareOffset_Texture2DArray;

/// textureSampleBiasCompareOffset with Texture2DArray, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleBiasCompareOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2DArray_bias;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2DArray_compare;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2DArray_offset;
extern Function SampledTextureSampleBiasCompareOffset_Texture2DArray;

/// textureSampleBiasProjCompare with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleBiasProjCompare_Texture1D_texture;
extern Variable TextureSampleBiasProjCompare_Texture1D_sampler;
extern Variable TextureSampleBiasProjCompare_Texture1D_coordinate;
extern Variable TextureSampleBiasProjCompare_Texture1D_bias;
extern Variable TextureSampleBiasProjCompare_Texture1D_proj;
extern Variable TextureSampleBiasProjCompare_Texture1D_compare;
extern Function TextureSampleBiasProjCompare_Texture1D;

/// textureSampleBiasProjCompare with Texture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasProjCompare_Texture1D_texture;
extern Variable SampledTextureSampleBiasProjCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleBiasProjCompare_Texture1D_bias;
extern Variable SampledTextureSampleBiasProjCompare_Texture1D_proj;
extern Variable SampledTextureSampleBiasProjCompare_Texture1D_compare;
extern Function SampledTextureSampleBiasProjCompare_Texture1D;

/// textureSampleBiasProjCompare with Texture2D, Sampler, Float32x2, Float32, Float32, Float32
extern Variable TextureSampleBiasProjCompare_Texture2D_texture;
extern Variable TextureSampleBiasProjCompare_Texture2D_sampler;
extern Variable TextureSampleBiasProjCompare_Texture2D_coordinate;
extern Variable TextureSampleBiasProjCompare_Texture2D_bias;
extern Variable TextureSampleBiasProjCompare_Texture2D_proj;
extern Variable TextureSampleBiasProjCompare_Texture2D_compare;
extern Function TextureSampleBiasProjCompare_Texture2D;

/// textureSampleBiasProjCompare with Texture2D, Float32x2, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasProjCompare_Texture2D_texture;
extern Variable SampledTextureSampleBiasProjCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleBiasProjCompare_Texture2D_bias;
extern Variable SampledTextureSampleBiasProjCompare_Texture2D_proj;
extern Variable SampledTextureSampleBiasProjCompare_Texture2D_compare;
extern Function SampledTextureSampleBiasProjCompare_Texture2D;

/// textureSampleBiasProjCompare with Texture3D, Sampler, Float32x3, Float32, Float32, Float32
extern Variable TextureSampleBiasProjCompare_Texture3D_texture;
extern Variable TextureSampleBiasProjCompare_Texture3D_sampler;
extern Variable TextureSampleBiasProjCompare_Texture3D_coordinate;
extern Variable TextureSampleBiasProjCompare_Texture3D_bias;
extern Variable TextureSampleBiasProjCompare_Texture3D_proj;
extern Variable TextureSampleBiasProjCompare_Texture3D_compare;
extern Function TextureSampleBiasProjCompare_Texture3D;

/// textureSampleBiasProjCompare with Texture3D, Float32x3, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasProjCompare_Texture3D_texture;
extern Variable SampledTextureSampleBiasProjCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleBiasProjCompare_Texture3D_bias;
extern Variable SampledTextureSampleBiasProjCompare_Texture3D_proj;
extern Variable SampledTextureSampleBiasProjCompare_Texture3D_compare;
extern Function SampledTextureSampleBiasProjCompare_Texture3D;

/// textureSampleBiasProjCompareOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32, Float32
extern Variable TextureSampleBiasProjCompareOffset_Texture1D_texture;
extern Variable TextureSampleBiasProjCompareOffset_Texture1D_sampler;
extern Variable TextureSampleBiasProjCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleBiasProjCompareOffset_Texture1D_bias;
extern Variable TextureSampleBiasProjCompareOffset_Texture1D_proj;
extern Variable TextureSampleBiasProjCompareOffset_Texture1D_compare;
extern Variable TextureSampleBiasProjCompareOffset_Texture1D_offset;
extern Function TextureSampleBiasProjCompareOffset_Texture1D;

/// textureSampleBiasProjCompareOffset with Texture1D, Float32, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture1D_bias;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture1D_proj;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleBiasProjCompareOffset_Texture1D;

/// textureSampleBiasProjCompareOffset with Texture2D, Sampler, Float32x2, Float32, Float32, Float32, Float32x2
extern Variable TextureSampleBiasProjCompareOffset_Texture2D_texture;
extern Variable TextureSampleBiasProjCompareOffset_Texture2D_sampler;
extern Variable TextureSampleBiasProjCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleBiasProjCompareOffset_Texture2D_bias;
extern Variable TextureSampleBiasProjCompareOffset_Texture2D_proj;
extern Variable TextureSampleBiasProjCompareOffset_Texture2D_compare;
extern Variable TextureSampleBiasProjCompareOffset_Texture2D_offset;
extern Function TextureSampleBiasProjCompareOffset_Texture2D;

/// textureSampleBiasProjCompareOffset with Texture2D, Float32x2, Float32, Float32, Float32, Float32x2
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture2D_bias;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture2D_proj;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleBiasProjCompareOffset_Texture2D;

/// textureSampleBiasProjCompareOffset with Texture3D, Sampler, Float32x3, Float32, Float32, Float32, Float32x3
extern Variable TextureSampleBiasProjCompareOffset_Texture3D_texture;
extern Variable TextureSampleBiasProjCompareOffset_Texture3D_sampler;
extern Variable TextureSampleBiasProjCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleBiasProjCompareOffset_Texture3D_bias;
extern Variable TextureSampleBiasProjCompareOffset_Texture3D_proj;
extern Variable TextureSampleBiasProjCompareOffset_Texture3D_compare;
extern Variable TextureSampleBiasProjCompareOffset_Texture3D_offset;
extern Function TextureSampleBiasProjCompareOffset_Texture3D;

/// textureSampleBiasProjCompareOffset with Texture3D, Float32x3, Float32, Float32, Float32, Float32x3
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture3D_bias;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture3D_proj;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleBiasProjCompareOffset_Texture3D;

void SetupIntrinsics();

inline constexpr StaticMap<ConstantString, Symbol*, 1999> DefaultIntrinsics = {
    std::pair{ "BaseIndex", &VertexGetBaseIndex } /* 0 */,
    std::pair{ "BaseInstanceIndex", &VertexGetBaseInstanceIndex } /* 1 */,
    std::pair{ "DrawIndex", &VertexGetDrawIndex } /* 2 */,
    std::pair{ "Index", &VertexGetIndex } /* 3 */,
    std::pair{ "InstanceIndex", &VertexGetInstanceIndex } /* 4 */,
    std::pair{ "OutputLayer", &VertexGetOutputLayer } /* 5 */,
    std::pair{ "OutputLayer", &VertexSetOutputLayer_UInt16 } /* 6 */,
    std::pair{ "OutputLayer", &VertexSetOutputLayer_UInt32 } /* 7 */,
    std::pair{ "OutputViewport", &VertexGetOutputViewport } /* 8 */,
    std::pair{ "OutputViewport", &VertexSetOutputViewport_UInt16 } /* 9 */,
    std::pair{ "OutputViewport", &VertexSetOutputViewport_UInt32 } /* 10 */,
    std::pair{ "abs", &abs_Int32 } /* 11 */,
    std::pair{ "abs", &abs_Int32x2 } /* 12 */,
    std::pair{ "abs", &abs_Int32x3 } /* 13 */,
    std::pair{ "abs", &abs_Int32x4 } /* 14 */,
    std::pair{ "abs", &abs_Int16 } /* 15 */,
    std::pair{ "abs", &abs_Int16x2 } /* 16 */,
    std::pair{ "abs", &abs_Int16x3 } /* 17 */,
    std::pair{ "abs", &abs_Int16x4 } /* 18 */,
    std::pair{ "abs", &abs_Float32 } /* 19 */,
    std::pair{ "abs", &abs_Float32x2 } /* 20 */,
    std::pair{ "abs", &abs_Float32x3 } /* 21 */,
    std::pair{ "abs", &abs_Float32x4 } /* 22 */,
    std::pair{ "abs", &abs_Float16 } /* 23 */,
    std::pair{ "abs", &abs_Float16x2 } /* 24 */,
    std::pair{ "abs", &abs_Float16x3 } /* 25 */,
    std::pair{ "abs", &abs_Float16x4 } /* 26 */,
    std::pair{ "acos", &acos_Float32 } /* 27 */,
    std::pair{ "acos", &acos_Float32x2 } /* 28 */,
    std::pair{ "acos", &acos_Float32x3 } /* 29 */,
    std::pair{ "acos", &acos_Float32x4 } /* 30 */,
    std::pair{ "acos", &acos_Float16 } /* 31 */,
    std::pair{ "acos", &acos_Float16x2 } /* 32 */,
    std::pair{ "acos", &acos_Float16x3 } /* 33 */,
    std::pair{ "acos", &acos_Float16x4 } /* 34 */,
    std::pair{ "acosh", &acosh_Float32 } /* 35 */,
    std::pair{ "acosh", &acosh_Float32x2 } /* 36 */,
    std::pair{ "acosh", &acosh_Float32x3 } /* 37 */,
    std::pair{ "acosh", &acosh_Float32x4 } /* 38 */,
    std::pair{ "acosh", &acosh_Float16 } /* 39 */,
    std::pair{ "acosh", &acosh_Float16x2 } /* 40 */,
    std::pair{ "acosh", &acosh_Float16x3 } /* 41 */,
    std::pair{ "acosh", &acosh_Float16x4 } /* 42 */,
    std::pair{ "all", &all_Bool8 } /* 43 */,
    std::pair{ "all", &all_Bool8x2 } /* 44 */,
    std::pair{ "all", &all_Bool8x3 } /* 45 */,
    std::pair{ "all", &all_Bool8x4 } /* 46 */,
    std::pair{ "any", &any_Bool8 } /* 47 */,
    std::pair{ "any", &any_Bool8x2 } /* 48 */,
    std::pair{ "any", &any_Bool8x3 } /* 49 */,
    std::pair{ "any", &any_Bool8x4 } /* 50 */,
    std::pair{ "asin", &asin_Float32 } /* 51 */,
    std::pair{ "asin", &asin_Float32x2 } /* 52 */,
    std::pair{ "asin", &asin_Float32x3 } /* 53 */,
    std::pair{ "asin", &asin_Float32x4 } /* 54 */,
    std::pair{ "asin", &asin_Float16 } /* 55 */,
    std::pair{ "asin", &asin_Float16x2 } /* 56 */,
    std::pair{ "asin", &asin_Float16x3 } /* 57 */,
    std::pair{ "asin", &asin_Float16x4 } /* 58 */,
    std::pair{ "asinh", &asinh_Float32 } /* 59 */,
    std::pair{ "asinh", &asinh_Float32x2 } /* 60 */,
    std::pair{ "asinh", &asinh_Float32x3 } /* 61 */,
    std::pair{ "asinh", &asinh_Float32x4 } /* 62 */,
    std::pair{ "asinh", &asinh_Float16 } /* 63 */,
    std::pair{ "asinh", &asinh_Float16x2 } /* 64 */,
    std::pair{ "asinh", &asinh_Float16x3 } /* 65 */,
    std::pair{ "asinh", &asinh_Float16x4 } /* 66 */,
    std::pair{ "atan", &atan_Float32 } /* 67 */,
    std::pair{ "atan", &atan_Float32x2 } /* 68 */,
    std::pair{ "atan", &atan_Float32x3 } /* 69 */,
    std::pair{ "atan", &atan_Float32x4 } /* 70 */,
    std::pair{ "atan", &atan_Float16 } /* 71 */,
    std::pair{ "atan", &atan_Float16x2 } /* 72 */,
    std::pair{ "atan", &atan_Float16x3 } /* 73 */,
    std::pair{ "atan", &atan_Float16x4 } /* 74 */,
    std::pair{ "atanh", &atanh_Float32 } /* 75 */,
    std::pair{ "atanh", &atanh_Float32x2 } /* 76 */,
    std::pair{ "atanh", &atanh_Float32x3 } /* 77 */,
    std::pair{ "atanh", &atanh_Float32x4 } /* 78 */,
    std::pair{ "atanh", &atanh_Float16 } /* 79 */,
    std::pair{ "atanh", &atanh_Float16x2 } /* 80 */,
    std::pair{ "atanh", &atanh_Float16x3 } /* 81 */,
    std::pair{ "atanh", &atanh_Float16x4 } /* 82 */,
    std::pair{ "atomicAdd", &AtomicAdd_UInt32 } /* 83 */,
    std::pair{ "atomicAdd", &AtomicAdd_Int32 } /* 84 */,
    std::pair{ "atomicAdd", &AtomicAdd_UInt16 } /* 85 */,
    std::pair{ "atomicAdd", &AtomicAdd_Int16 } /* 86 */,
    std::pair{ "atomicAnd", &AtomicAnd_UInt32 } /* 87 */,
    std::pair{ "atomicAnd", &AtomicAnd_Int32 } /* 88 */,
    std::pair{ "atomicAnd", &AtomicAnd_UInt16 } /* 89 */,
    std::pair{ "atomicAnd", &AtomicAnd_Int16 } /* 90 */,
    std::pair{ "atomicCompareExchange", &AtomicCompareExchange_UInt32 } /* 91 */,
    std::pair{ "atomicCompareExchange", &AtomicCompareExchange_Int32 } /* 92 */,
    std::pair{ "atomicCompareExchange", &AtomicCompareExchange_UInt16 } /* 93 */,
    std::pair{ "atomicCompareExchange", &AtomicCompareExchange_Int16 } /* 94 */,
    std::pair{ "atomicDecrement", &AtomicDecrement_UInt32 } /* 95 */,
    std::pair{ "atomicDecrement", &AtomicDecrement_Int32 } /* 96 */,
    std::pair{ "atomicDecrement", &AtomicDecrement_UInt16 } /* 97 */,
    std::pair{ "atomicDecrement", &AtomicDecrement_Int16 } /* 98 */,
    std::pair{ "atomicExchange", &AtomicExchange_UInt32 } /* 99 */,
    std::pair{ "atomicExchange", &AtomicExchange_Int32 } /* 100 */,
    std::pair{ "atomicExchange", &AtomicExchange_UInt16 } /* 101 */,
    std::pair{ "atomicExchange", &AtomicExchange_Int16 } /* 102 */,
    std::pair{ "atomicIncrement", &AtomicIncrement_UInt32 } /* 103 */,
    std::pair{ "atomicIncrement", &AtomicIncrement_Int32 } /* 104 */,
    std::pair{ "atomicIncrement", &AtomicIncrement_UInt16 } /* 105 */,
    std::pair{ "atomicIncrement", &AtomicIncrement_Int16 } /* 106 */,
    std::pair{ "atomicLoad", &AtomicLoad_UInt32 } /* 107 */,
    std::pair{ "atomicLoad", &AtomicLoad_Int32 } /* 108 */,
    std::pair{ "atomicLoad", &AtomicLoad_UInt16 } /* 109 */,
    std::pair{ "atomicLoad", &AtomicLoad_Int16 } /* 110 */,
    std::pair{ "atomicOr", &AtomicOr_UInt32 } /* 111 */,
    std::pair{ "atomicOr", &AtomicOr_Int32 } /* 112 */,
    std::pair{ "atomicOr", &AtomicOr_UInt16 } /* 113 */,
    std::pair{ "atomicOr", &AtomicOr_Int16 } /* 114 */,
    std::pair{ "atomicStore", &AtomicStore_UInt32 } /* 115 */,
    std::pair{ "atomicStore", &AtomicStore_Int32 } /* 116 */,
    std::pair{ "atomicStore", &AtomicStore_UInt16 } /* 117 */,
    std::pair{ "atomicStore", &AtomicStore_Int16 } /* 118 */,
    std::pair{ "atomicSubtract", &AtomicSubtract_UInt32 } /* 119 */,
    std::pair{ "atomicSubtract", &AtomicSubtract_Int32 } /* 120 */,
    std::pair{ "atomicSubtract", &AtomicSubtract_UInt16 } /* 121 */,
    std::pair{ "atomicSubtract", &AtomicSubtract_Int16 } /* 122 */,
    std::pair{ "atomicXor", &AtomicXor_UInt32 } /* 123 */,
    std::pair{ "atomicXor", &AtomicXor_Int32 } /* 124 */,
    std::pair{ "atomicXor", &AtomicXor_UInt16 } /* 125 */,
    std::pair{ "atomicXor", &AtomicXor_Int16 } /* 126 */,
    std::pair{ "b8", &Bool8Type } /* 127 */,
    std::pair{ "b8", &Bool8_convert_UInt32 } /* 128 */,
    std::pair{ "b8", &Bool8_convert_Int32 } /* 129 */,
    std::pair{ "b8", &Bool8_convert_UInt16 } /* 130 */,
    std::pair{ "b8", &Bool8_convert_Int16 } /* 131 */,
    std::pair{ "b8", &Bool8_ctor0 } /* 132 */,
    std::pair{ "b8(b8)", &Bool8_ctor0 } /* 133 */,
    std::pair{ "b8(i16)", &Bool8_convert_Int16 } /* 134 */,
    std::pair{ "b8(i32)", &Bool8_convert_Int32 } /* 135 */,
    std::pair{ "b8(u16)", &Bool8_convert_UInt16 } /* 136 */,
    std::pair{ "b8(u32)", &Bool8_convert_UInt32 } /* 137 */,
    std::pair{ "b8x2", &Bool8x2Type } /* 138 */,
    std::pair{ "b8x2", &Bool8x2_convert_UInt32x2 } /* 139 */,
    std::pair{ "b8x2", &Bool8x2_splat_UInt32 } /* 140 */,
    std::pair{ "b8x2", &Bool8x2_convert_Int32x2 } /* 141 */,
    std::pair{ "b8x2", &Bool8x2_splat_Int32 } /* 142 */,
    std::pair{ "b8x2", &Bool8x2_convert_UInt16x2 } /* 143 */,
    std::pair{ "b8x2", &Bool8x2_splat_UInt16 } /* 144 */,
    std::pair{ "b8x2", &Bool8x2_convert_Int16x2 } /* 145 */,
    std::pair{ "b8x2", &Bool8x2_splat_Int16 } /* 146 */,
    std::pair{ "b8x2", &Bool8x2_ctor0 } /* 147 */,
    std::pair{ "b8x2(b8,b8)", &Bool8x2_ctor0 } /* 148 */,
    std::pair{ "b8x2(i16)", &Bool8x2_splat_Int16 } /* 149 */,
    std::pair{ "b8x2(i16x2)", &Bool8x2_convert_Int16x2 } /* 150 */,
    std::pair{ "b8x2(i32)", &Bool8x2_splat_Int32 } /* 151 */,
    std::pair{ "b8x2(i32x2)", &Bool8x2_convert_Int32x2 } /* 152 */,
    std::pair{ "b8x2(u16)", &Bool8x2_splat_UInt16 } /* 153 */,
    std::pair{ "b8x2(u16x2)", &Bool8x2_convert_UInt16x2 } /* 154 */,
    std::pair{ "b8x2(u32)", &Bool8x2_splat_UInt32 } /* 155 */,
    std::pair{ "b8x2(u32x2)", &Bool8x2_convert_UInt32x2 } /* 156 */,
    std::pair{ "b8x3", &Bool8x3Type } /* 157 */,
    std::pair{ "b8x3", &Bool8x3_convert_UInt32x3 } /* 158 */,
    std::pair{ "b8x3", &Bool8x3_splat_UInt32 } /* 159 */,
    std::pair{ "b8x3", &Bool8x3_convert_Int32x3 } /* 160 */,
    std::pair{ "b8x3", &Bool8x3_splat_Int32 } /* 161 */,
    std::pair{ "b8x3", &Bool8x3_convert_UInt16x3 } /* 162 */,
    std::pair{ "b8x3", &Bool8x3_splat_UInt16 } /* 163 */,
    std::pair{ "b8x3", &Bool8x3_convert_Int16x3 } /* 164 */,
    std::pair{ "b8x3", &Bool8x3_splat_Int16 } /* 165 */,
    std::pair{ "b8x3", &Bool8x3_ctor0 } /* 166 */,
    std::pair{ "b8x3", &Bool8x3_ctor1 } /* 167 */,
    std::pair{ "b8x3", &Bool8x3_ctor2 } /* 168 */,
    std::pair{ "b8x3(b8,b8,b8)", &Bool8x3_ctor0 } /* 169 */,
    std::pair{ "b8x3(b8,b8x2)", &Bool8x3_ctor2 } /* 170 */,
    std::pair{ "b8x3(b8x2,b8)", &Bool8x3_ctor1 } /* 171 */,
    std::pair{ "b8x3(i16)", &Bool8x3_splat_Int16 } /* 172 */,
    std::pair{ "b8x3(i16x3)", &Bool8x3_convert_Int16x3 } /* 173 */,
    std::pair{ "b8x3(i32)", &Bool8x3_splat_Int32 } /* 174 */,
    std::pair{ "b8x3(i32x3)", &Bool8x3_convert_Int32x3 } /* 175 */,
    std::pair{ "b8x3(u16)", &Bool8x3_splat_UInt16 } /* 176 */,
    std::pair{ "b8x3(u16x3)", &Bool8x3_convert_UInt16x3 } /* 177 */,
    std::pair{ "b8x3(u32)", &Bool8x3_splat_UInt32 } /* 178 */,
    std::pair{ "b8x3(u32x3)", &Bool8x3_convert_UInt32x3 } /* 179 */,
    std::pair{ "b8x4", &Bool8x4Type } /* 180 */,
    std::pair{ "b8x4", &Bool8x4_convert_UInt32x4 } /* 181 */,
    std::pair{ "b8x4", &Bool8x4_splat_UInt32 } /* 182 */,
    std::pair{ "b8x4", &Bool8x4_convert_Int32x4 } /* 183 */,
    std::pair{ "b8x4", &Bool8x4_splat_Int32 } /* 184 */,
    std::pair{ "b8x4", &Bool8x4_convert_UInt16x4 } /* 185 */,
    std::pair{ "b8x4", &Bool8x4_splat_UInt16 } /* 186 */,
    std::pair{ "b8x4", &Bool8x4_convert_Int16x4 } /* 187 */,
    std::pair{ "b8x4", &Bool8x4_splat_Int16 } /* 188 */,
    std::pair{ "b8x4", &Bool8x4_ctor0 } /* 189 */,
    std::pair{ "b8x4", &Bool8x4_ctor1 } /* 190 */,
    std::pair{ "b8x4", &Bool8x4_ctor2 } /* 191 */,
    std::pair{ "b8x4", &Bool8x4_ctor3 } /* 192 */,
    std::pair{ "b8x4", &Bool8x4_ctor4 } /* 193 */,
    std::pair{ "b8x4", &Bool8x4_ctor5 } /* 194 */,
    std::pair{ "b8x4(b8,b8,b8,b8)", &Bool8x4_ctor0 } /* 195 */,
    std::pair{ "b8x4(b8,b8,b8x2)", &Bool8x4_ctor3 } /* 196 */,
    std::pair{ "b8x4(b8,b8x2,b8)", &Bool8x4_ctor2 } /* 197 */,
    std::pair{ "b8x4(b8,b8x3)", &Bool8x4_ctor5 } /* 198 */,
    std::pair{ "b8x4(b8x2,b8,b8)", &Bool8x4_ctor1 } /* 199 */,
    std::pair{ "b8x4(b8x3,b8)", &Bool8x4_ctor4 } /* 200 */,
    std::pair{ "b8x4(i16)", &Bool8x4_splat_Int16 } /* 201 */,
    std::pair{ "b8x4(i16x4)", &Bool8x4_convert_Int16x4 } /* 202 */,
    std::pair{ "b8x4(i32)", &Bool8x4_splat_Int32 } /* 203 */,
    std::pair{ "b8x4(i32x4)", &Bool8x4_convert_Int32x4 } /* 204 */,
    std::pair{ "b8x4(u16)", &Bool8x4_splat_UInt16 } /* 205 */,
    std::pair{ "b8x4(u16x4)", &Bool8x4_convert_UInt16x4 } /* 206 */,
    std::pair{ "b8x4(u32)", &Bool8x4_splat_UInt32 } /* 207 */,
    std::pair{ "b8x4(u32x4)", &Bool8x4_convert_UInt32x4 } /* 208 */,
    std::pair{ "bitCount", &BitCount_UInt32 } /* 209 */,
    std::pair{ "bitCount", &BitCount_Int32 } /* 210 */,
    std::pair{ "bitCount", &BitCount_UInt16 } /* 211 */,
    std::pair{ "bitCount", &BitCount_Int16 } /* 212 */,
    std::pair{ "bitExtract", &BitExtract_UInt32 } /* 213 */,
    std::pair{ "bitExtract", &BitExtract_Int32 } /* 214 */,
    std::pair{ "bitExtract", &BitExtract_UInt16 } /* 215 */,
    std::pair{ "bitExtract", &BitExtract_Int16 } /* 216 */,
    std::pair{ "bitInsert", &BitInsert_UInt16 } /* 217 */,
    std::pair{ "bitInsert", &BitInsert_UInt32 } /* 218 */,
    std::pair{ "bitReverse", &BitReverse_UInt32 } /* 219 */,
    std::pair{ "bitReverse", &BitReverse_Int32 } /* 220 */,
    std::pair{ "bitReverse", &BitReverse_UInt16 } /* 221 */,
    std::pair{ "bitReverse", &BitReverse_Int16 } /* 222 */,
    std::pair{ "castToF16", &castToF16_UInt16 } /* 223 */,
    std::pair{ "castToF16", &castToF16_Int16 } /* 224 */,
    std::pair{ "castToF32", &castToF32_UInt32 } /* 225 */,
    std::pair{ "castToF32", &castToF32_Int32 } /* 226 */,
    std::pair{ "castToI16", &castToI16_Float16 } /* 227 */,
    std::pair{ "castToI16", &castToI16_UInt16 } /* 228 */,
    std::pair{ "castToI32", &castToI32_Float32 } /* 229 */,
    std::pair{ "castToI32", &castToI32_UInt32 } /* 230 */,
    std::pair{ "castToU16", &castToU16_Float16 } /* 231 */,
    std::pair{ "castToU16", &castToU16_Int16 } /* 232 */,
    std::pair{ "castToU32", &castToU32_Float32 } /* 233 */,
    std::pair{ "castToU32", &castToU32_Int32 } /* 234 */,
    std::pair{ "ceil", &ceil_Float32 } /* 235 */,
    std::pair{ "ceil", &ceil_Float32x2 } /* 236 */,
    std::pair{ "ceil", &ceil_Float32x3 } /* 237 */,
    std::pair{ "ceil", &ceil_Float32x4 } /* 238 */,
    std::pair{ "ceil", &ceil_Float16 } /* 239 */,
    std::pair{ "ceil", &ceil_Float16x2 } /* 240 */,
    std::pair{ "ceil", &ceil_Float16x3 } /* 241 */,
    std::pair{ "ceil", &ceil_Float16x4 } /* 242 */,
    std::pair{ "clamp", &clamp_Float32 } /* 243 */,
    std::pair{ "clamp", &clamp_Float32x2 } /* 244 */,
    std::pair{ "clamp", &clamp_Float32x3 } /* 245 */,
    std::pair{ "clamp", &clamp_Float32x4 } /* 246 */,
    std::pair{ "clamp", &clamp_Float16 } /* 247 */,
    std::pair{ "clamp", &clamp_Float16x2 } /* 248 */,
    std::pair{ "clamp", &clamp_Float16x3 } /* 249 */,
    std::pair{ "clamp", &clamp_Float16x4 } /* 250 */,
    std::pair{ "clamp", &clamp_Int32 } /* 251 */,
    std::pair{ "clamp", &clamp_Int32x2 } /* 252 */,
    std::pair{ "clamp", &clamp_Int32x3 } /* 253 */,
    std::pair{ "clamp", &clamp_Int32x4 } /* 254 */,
    std::pair{ "clamp", &clamp_Int16 } /* 255 */,
    std::pair{ "clamp", &clamp_Int16x2 } /* 256 */,
    std::pair{ "clamp", &clamp_Int16x3 } /* 257 */,
    std::pair{ "clamp", &clamp_Int16x4 } /* 258 */,
    std::pair{ "clamp", &clamp_UInt32 } /* 259 */,
    std::pair{ "clamp", &clamp_UInt32x2 } /* 260 */,
    std::pair{ "clamp", &clamp_UInt32x3 } /* 261 */,
    std::pair{ "clamp", &clamp_UInt32x4 } /* 262 */,
    std::pair{ "clamp", &clamp_UInt16 } /* 263 */,
    std::pair{ "clamp", &clamp_UInt16x2 } /* 264 */,
    std::pair{ "clamp", &clamp_UInt16x3 } /* 265 */,
    std::pair{ "clamp", &clamp_UInt16x4 } /* 266 */,
    std::pair{ "computeGetGlobalThreadIndices", &ComputeGetGlobalThreadIndices } /* 267 */,
    std::pair{ "computeGetIndexInWorkgroup", &ComputeGetIndexInWorkgroup } /* 268 */,
    std::pair{ "computeGetLocalThreadIndices", &ComputeGetLocalThreadIndices } /* 269 */,
    std::pair{ "computeGetWorkGroupDimensions", &ComputeGetWorkGroupDimensions } /* 270 */,
    std::pair{ "computeGetWorkgroupIndices", &ComputeGetWorkgroupIndices } /* 271 */,
    std::pair{ "cos", &cos_Float32 } /* 272 */,
    std::pair{ "cos", &cos_Float32x2 } /* 273 */,
    std::pair{ "cos", &cos_Float32x3 } /* 274 */,
    std::pair{ "cos", &cos_Float32x4 } /* 275 */,
    std::pair{ "cos", &cos_Float16 } /* 276 */,
    std::pair{ "cos", &cos_Float16x2 } /* 277 */,
    std::pair{ "cos", &cos_Float16x3 } /* 278 */,
    std::pair{ "cos", &cos_Float16x4 } /* 279 */,
    std::pair{ "cosh", &cosh_Float32 } /* 280 */,
    std::pair{ "cosh", &cosh_Float32x2 } /* 281 */,
    std::pair{ "cosh", &cosh_Float32x3 } /* 282 */,
    std::pair{ "cosh", &cosh_Float32x4 } /* 283 */,
    std::pair{ "cosh", &cosh_Float16 } /* 284 */,
    std::pair{ "cosh", &cosh_Float16x2 } /* 285 */,
    std::pair{ "cosh", &cosh_Float16x3 } /* 286 */,
    std::pair{ "cosh", &cosh_Float16x4 } /* 287 */,
    std::pair{ "cross", &cross_Float32x3 } /* 288 */,
    std::pair{ "cross", &cross_Float16x3 } /* 289 */,
    std::pair{ "cross", &length_Float32x2 } /* 290 */,
    std::pair{ "cross", &length_Float32x3 } /* 291 */,
    std::pair{ "cross", &length_Float32x4 } /* 292 */,
    std::pair{ "cross", &length_Float16x2 } /* 293 */,
    std::pair{ "cross", &length_Float16x3 } /* 294 */,
    std::pair{ "cross", &length_Float16x4 } /* 295 */,
    std::pair{ "cross", &normalize_Float32x2 } /* 296 */,
    std::pair{ "cross", &normalize_Float32x3 } /* 297 */,
    std::pair{ "cross", &normalize_Float32x4 } /* 298 */,
    std::pair{ "cross", &normalize_Float16x2 } /* 299 */,
    std::pair{ "cross", &normalize_Float16x3 } /* 300 */,
    std::pair{ "cross", &normalize_Float16x4 } /* 301 */,
    std::pair{ "ddx", &ddx_Float32 } /* 302 */,
    std::pair{ "ddx", &ddx_Float32x2 } /* 303 */,
    std::pair{ "ddx", &ddx_Float32x3 } /* 304 */,
    std::pair{ "ddx", &ddx_Float32x4 } /* 305 */,
    std::pair{ "ddx", &ddx_Float16 } /* 306 */,
    std::pair{ "ddx", &ddx_Float16x2 } /* 307 */,
    std::pair{ "ddx", &ddx_Float16x3 } /* 308 */,
    std::pair{ "ddx", &ddx_Float16x4 } /* 309 */,
    std::pair{ "ddy", &ddy_Float32 } /* 310 */,
    std::pair{ "ddy", &ddy_Float32x2 } /* 311 */,
    std::pair{ "ddy", &ddy_Float32x3 } /* 312 */,
    std::pair{ "ddy", &ddy_Float32x4 } /* 313 */,
    std::pair{ "ddy", &ddy_Float16 } /* 314 */,
    std::pair{ "ddy", &ddy_Float16x2 } /* 315 */,
    std::pair{ "ddy", &ddy_Float16x3 } /* 316 */,
    std::pair{ "ddy", &ddy_Float16x4 } /* 317 */,
    std::pair{ "distance", &distance_Float32x2 } /* 318 */,
    std::pair{ "distance", &distance_Float32x3 } /* 319 */,
    std::pair{ "distance", &distance_Float32x4 } /* 320 */,
    std::pair{ "distance", &distance_Float16x2 } /* 321 */,
    std::pair{ "distance", &distance_Float16x3 } /* 322 */,
    std::pair{ "distance", &distance_Float16x4 } /* 323 */,
    std::pair{ "distance", &min_Float32 } /* 324 */,
    std::pair{ "distance", &min_Float32x2 } /* 325 */,
    std::pair{ "distance", &min_Float32x3 } /* 326 */,
    std::pair{ "distance", &min_Float32x4 } /* 327 */,
    std::pair{ "distance", &min_Float16 } /* 328 */,
    std::pair{ "distance", &min_Float16x2 } /* 329 */,
    std::pair{ "distance", &min_Float16x3 } /* 330 */,
    std::pair{ "distance", &min_Float16x4 } /* 331 */,
    std::pair{ "distance", &min_Int32 } /* 332 */,
    std::pair{ "distance", &min_Int32x2 } /* 333 */,
    std::pair{ "distance", &min_Int32x3 } /* 334 */,
    std::pair{ "distance", &min_Int32x4 } /* 335 */,
    std::pair{ "distance", &min_Int16 } /* 336 */,
    std::pair{ "distance", &min_Int16x2 } /* 337 */,
    std::pair{ "distance", &min_Int16x3 } /* 338 */,
    std::pair{ "distance", &min_Int16x4 } /* 339 */,
    std::pair{ "distance", &min_UInt32 } /* 340 */,
    std::pair{ "distance", &min_UInt32x2 } /* 341 */,
    std::pair{ "distance", &min_UInt32x3 } /* 342 */,
    std::pair{ "distance", &min_UInt32x4 } /* 343 */,
    std::pair{ "distance", &min_UInt16 } /* 344 */,
    std::pair{ "distance", &min_UInt16x2 } /* 345 */,
    std::pair{ "distance", &min_UInt16x3 } /* 346 */,
    std::pair{ "distance", &min_UInt16x4 } /* 347 */,
    std::pair{ "distance", &max_Float32 } /* 348 */,
    std::pair{ "distance", &max_Float32x2 } /* 349 */,
    std::pair{ "distance", &max_Float32x3 } /* 350 */,
    std::pair{ "distance", &max_Float32x4 } /* 351 */,
    std::pair{ "distance", &max_Float16 } /* 352 */,
    std::pair{ "distance", &max_Float16x2 } /* 353 */,
    std::pair{ "distance", &max_Float16x3 } /* 354 */,
    std::pair{ "distance", &max_Float16x4 } /* 355 */,
    std::pair{ "distance", &max_Int32 } /* 356 */,
    std::pair{ "distance", &max_Int32x2 } /* 357 */,
    std::pair{ "distance", &max_Int32x3 } /* 358 */,
    std::pair{ "distance", &max_Int32x4 } /* 359 */,
    std::pair{ "distance", &max_Int16 } /* 360 */,
    std::pair{ "distance", &max_Int16x2 } /* 361 */,
    std::pair{ "distance", &max_Int16x3 } /* 362 */,
    std::pair{ "distance", &max_Int16x4 } /* 363 */,
    std::pair{ "distance", &max_UInt32 } /* 364 */,
    std::pair{ "distance", &max_UInt32x2 } /* 365 */,
    std::pair{ "distance", &max_UInt32x3 } /* 366 */,
    std::pair{ "distance", &max_UInt32x4 } /* 367 */,
    std::pair{ "distance", &max_UInt16 } /* 368 */,
    std::pair{ "distance", &max_UInt16x2 } /* 369 */,
    std::pair{ "distance", &max_UInt16x3 } /* 370 */,
    std::pair{ "distance", &max_UInt16x4 } /* 371 */,
    std::pair{ "dot", &dot_Float32x2 } /* 372 */,
    std::pair{ "dot", &dot_Float32x3 } /* 373 */,
    std::pair{ "dot", &dot_Float32x4 } /* 374 */,
    std::pair{ "dot", &dot_Float16x2 } /* 375 */,
    std::pair{ "dot", &dot_Float16x3 } /* 376 */,
    std::pair{ "dot", &dot_Float16x4 } /* 377 */,
    std::pair{ "executionBarrier", &ExecutionBarrier } /* 378 */,
    std::pair{ "executionBarrierSubgroup", &ExecutionBarrierSubgroup } /* 379 */,
    std::pair{ "executionBarrierWorkgroup", &ExecutionBarrierWorkgroup } /* 380 */,
    std::pair{ "exp", &exp_Float32 } /* 381 */,
    std::pair{ "exp", &exp_Float32x2 } /* 382 */,
    std::pair{ "exp", &exp_Float32x3 } /* 383 */,
    std::pair{ "exp", &exp_Float32x4 } /* 384 */,
    std::pair{ "exp", &exp_Float16 } /* 385 */,
    std::pair{ "exp", &exp_Float16x2 } /* 386 */,
    std::pair{ "exp", &exp_Float16x3 } /* 387 */,
    std::pair{ "exp", &exp_Float16x4 } /* 388 */,
    std::pair{ "exp2", &exp2_Float32 } /* 389 */,
    std::pair{ "exp2", &exp2_Float32x2 } /* 390 */,
    std::pair{ "exp2", &exp2_Float32x3 } /* 391 */,
    std::pair{ "exp2", &exp2_Float32x4 } /* 392 */,
    std::pair{ "exp2", &exp2_Float16 } /* 393 */,
    std::pair{ "exp2", &exp2_Float16x2 } /* 394 */,
    std::pair{ "exp2", &exp2_Float16x3 } /* 395 */,
    std::pair{ "exp2", &exp2_Float16x4 } /* 396 */,
    std::pair{ "f16", &Float16Type } /* 397 */,
    std::pair{ "f16", &Float16_convert_Float32 } /* 398 */,
    std::pair{ "f16", &Float16_convert_UInt32 } /* 399 */,
    std::pair{ "f16", &Float16_convert_Int32 } /* 400 */,
    std::pair{ "f16", &Float16_convert_UInt16 } /* 401 */,
    std::pair{ "f16", &Float16_convert_Int16 } /* 402 */,
    std::pair{ "f16", &Float16_ctor0 } /* 403 */,
    std::pair{ "f16(f16)", &Float16_ctor0 } /* 404 */,
    std::pair{ "f16(f32)", &Float16_convert_Float32 } /* 405 */,
    std::pair{ "f16(i16)", &Float16_convert_Int16 } /* 406 */,
    std::pair{ "f16(i32)", &Float16_convert_Int32 } /* 407 */,
    std::pair{ "f16(u16)", &Float16_convert_UInt16 } /* 408 */,
    std::pair{ "f16(u32)", &Float16_convert_UInt32 } /* 409 */,
    std::pair{ "f16x2", &Float16x2Type } /* 410 */,
    std::pair{ "f16x2", &Float16x2_convert_Float32x2 } /* 411 */,
    std::pair{ "f16x2", &Float16x2_splat_Float32 } /* 412 */,
    std::pair{ "f16x2", &Float16x2_convert_UInt32x2 } /* 413 */,
    std::pair{ "f16x2", &Float16x2_splat_UInt32 } /* 414 */,
    std::pair{ "f16x2", &Float16x2_convert_Int32x2 } /* 415 */,
    std::pair{ "f16x2", &Float16x2_splat_Int32 } /* 416 */,
    std::pair{ "f16x2", &Float16x2_convert_Float16x2 } /* 417 */,
    std::pair{ "f16x2", &Float16x2_splat_Float16 } /* 418 */,
    std::pair{ "f16x2", &Float16x2_convert_UInt16x2 } /* 419 */,
    std::pair{ "f16x2", &Float16x2_splat_UInt16 } /* 420 */,
    std::pair{ "f16x2", &Float16x2_convert_Int16x2 } /* 421 */,
    std::pair{ "f16x2", &Float16x2_splat_Int16 } /* 422 */,
    std::pair{ "f16x2", &Float16x2_ctor0 } /* 423 */,
    std::pair{ "f16x2(f16)", &Float16x2_splat_Float16 } /* 424 */,
    std::pair{ "f16x2(f16,f16)", &Float16x2_ctor0 } /* 425 */,
    std::pair{ "f16x2(f16x2)", &Float16x2_convert_Float16x2 } /* 426 */,
    std::pair{ "f16x2(f32)", &Float16x2_splat_Float32 } /* 427 */,
    std::pair{ "f16x2(f32x2)", &Float16x2_convert_Float32x2 } /* 428 */,
    std::pair{ "f16x2(i16)", &Float16x2_splat_Int16 } /* 429 */,
    std::pair{ "f16x2(i16x2)", &Float16x2_convert_Int16x2 } /* 430 */,
    std::pair{ "f16x2(i32)", &Float16x2_splat_Int32 } /* 431 */,
    std::pair{ "f16x2(i32x2)", &Float16x2_convert_Int32x2 } /* 432 */,
    std::pair{ "f16x2(u16)", &Float16x2_splat_UInt16 } /* 433 */,
    std::pair{ "f16x2(u16x2)", &Float16x2_convert_UInt16x2 } /* 434 */,
    std::pair{ "f16x2(u32)", &Float16x2_splat_UInt32 } /* 435 */,
    std::pair{ "f16x2(u32x2)", &Float16x2_convert_UInt32x2 } /* 436 */,
    std::pair{ "f16x2x2", &Float16x2x2Type } /* 437 */,
    std::pair{ "f16x2x2", &Float16x2x2_Float16_2_ctor } /* 438 */,
    std::pair{ "f16x2x2", &Float16x2x2_identity } /* 439 */,
    std::pair{ "f16x2x2", &Float16x2x2_raw_list } /* 440 */,
    std::pair{ "f16x2x2()", &Float16x2x2_identity } /* 441 */,
    std::pair{ "f16x2x2(f16,f16,f16,f16)", &Float16x2x2_raw_list } /* 442 */,
    std::pair{ "f16x2x2(f16x2,f16x2)", &Float16x2x2_Float16_2_ctor } /* 443 */,
    std::pair{ "f16x2x3", &Float16x2x3Type } /* 444 */,
    std::pair{ "f16x2x3", &Float16x2x3_Float16_3_ctor } /* 445 */,
    std::pair{ "f16x2x3", &Float16x2x3_identity } /* 446 */,
    std::pair{ "f16x2x3", &Float16x2x3_raw_list } /* 447 */,
    std::pair{ "f16x2x3()", &Float16x2x3_identity } /* 448 */,
    std::pair{ "f16x2x3(f16,f16,f16,f16,f16,f16)", &Float16x2x3_raw_list } /* 449 */,
    std::pair{ "f16x2x3(f16x3,f16x3)", &Float16x2x3_Float16_3_ctor } /* 450 */,
    std::pair{ "f16x2x4", &Float16x2x4Type } /* 451 */,
    std::pair{ "f16x2x4", &Float16x2x4_Float16_4_ctor } /* 452 */,
    std::pair{ "f16x2x4", &Float16x2x4_identity } /* 453 */,
    std::pair{ "f16x2x4", &Float16x2x4_raw_list } /* 454 */,
    std::pair{ "f16x2x4()", &Float16x2x4_identity } /* 455 */,
    std::pair{ "f16x2x4(f16,f16,f16,f16,f16,f16,f16,f16)", &Float16x2x4_raw_list } /* 456 */,
    std::pair{ "f16x2x4(f16x4,f16x4)", &Float16x2x4_Float16_4_ctor } /* 457 */,
    std::pair{ "f16x3", &Float16x3Type } /* 458 */,
    std::pair{ "f16x3", &Float16x3_convert_Float32x3 } /* 459 */,
    std::pair{ "f16x3", &Float16x3_splat_Float32 } /* 460 */,
    std::pair{ "f16x3", &Float16x3_convert_UInt32x3 } /* 461 */,
    std::pair{ "f16x3", &Float16x3_splat_UInt32 } /* 462 */,
    std::pair{ "f16x3", &Float16x3_convert_Int32x3 } /* 463 */,
    std::pair{ "f16x3", &Float16x3_splat_Int32 } /* 464 */,
    std::pair{ "f16x3", &Float16x3_convert_Float16x3 } /* 465 */,
    std::pair{ "f16x3", &Float16x3_splat_Float16 } /* 466 */,
    std::pair{ "f16x3", &Float16x3_convert_UInt16x3 } /* 467 */,
    std::pair{ "f16x3", &Float16x3_splat_UInt16 } /* 468 */,
    std::pair{ "f16x3", &Float16x3_convert_Int16x3 } /* 469 */,
    std::pair{ "f16x3", &Float16x3_splat_Int16 } /* 470 */,
    std::pair{ "f16x3", &Float16x3_ctor0 } /* 471 */,
    std::pair{ "f16x3", &Float16x3_ctor1 } /* 472 */,
    std::pair{ "f16x3", &Float16x3_ctor2 } /* 473 */,
    std::pair{ "f16x3(f16)", &Float16x3_splat_Float16 } /* 474 */,
    std::pair{ "f16x3(f16,f16,f16)", &Float16x3_ctor0 } /* 475 */,
    std::pair{ "f16x3(f16,f16x2)", &Float16x3_ctor2 } /* 476 */,
    std::pair{ "f16x3(f16x2,f16)", &Float16x3_ctor1 } /* 477 */,
    std::pair{ "f16x3(f16x3)", &Float16x3_convert_Float16x3 } /* 478 */,
    std::pair{ "f16x3(f32)", &Float16x3_splat_Float32 } /* 479 */,
    std::pair{ "f16x3(f32x3)", &Float16x3_convert_Float32x3 } /* 480 */,
    std::pair{ "f16x3(i16)", &Float16x3_splat_Int16 } /* 481 */,
    std::pair{ "f16x3(i16x3)", &Float16x3_convert_Int16x3 } /* 482 */,
    std::pair{ "f16x3(i32)", &Float16x3_splat_Int32 } /* 483 */,
    std::pair{ "f16x3(i32x3)", &Float16x3_convert_Int32x3 } /* 484 */,
    std::pair{ "f16x3(u16)", &Float16x3_splat_UInt16 } /* 485 */,
    std::pair{ "f16x3(u16x3)", &Float16x3_convert_UInt16x3 } /* 486 */,
    std::pair{ "f16x3(u32)", &Float16x3_splat_UInt32 } /* 487 */,
    std::pair{ "f16x3(u32x3)", &Float16x3_convert_UInt32x3 } /* 488 */,
    std::pair{ "f16x3x2", &Float16x3x2Type } /* 489 */,
    std::pair{ "f16x3x2", &Float16x3x2_Float16_2_ctor } /* 490 */,
    std::pair{ "f16x3x2", &Float16x3x2_identity } /* 491 */,
    std::pair{ "f16x3x2", &Float16x3x2_raw_list } /* 492 */,
    std::pair{ "f16x3x2()", &Float16x3x2_identity } /* 493 */,
    std::pair{ "f16x3x2(f16,f16,f16,f16,f16,f16)", &Float16x3x2_raw_list } /* 494 */,
    std::pair{ "f16x3x2(f16x2,f16x2,f16x2)", &Float16x3x2_Float16_2_ctor } /* 495 */,
    std::pair{ "f16x3x3", &Float16x3x3Type } /* 496 */,
    std::pair{ "f16x3x3", &Float16x3x3_Float16_3_ctor } /* 497 */,
    std::pair{ "f16x3x3", &Float16x3x3_identity } /* 498 */,
    std::pair{ "f16x3x3", &Float16x3x3_raw_list } /* 499 */,
    std::pair{ "f16x3x3()", &Float16x3x3_identity } /* 500 */,
    std::pair{ "f16x3x3(f16,f16,f16,f16,f16,f16,f16,f16,f16)", &Float16x3x3_raw_list } /* 501 */,
    std::pair{ "f16x3x3(f16x3,f16x3,f16x3)", &Float16x3x3_Float16_3_ctor } /* 502 */,
    std::pair{ "f16x3x4", &Float16x3x4Type } /* 503 */,
    std::pair{ "f16x3x4", &Float16x3x4_Float16_4_ctor } /* 504 */,
    std::pair{ "f16x3x4", &Float16x3x4_identity } /* 505 */,
    std::pair{ "f16x3x4", &Float16x3x4_raw_list } /* 506 */,
    std::pair{ "f16x3x4()", &Float16x3x4_identity } /* 507 */,
    std::pair{ "f16x3x4(f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16)", &Float16x3x4_raw_list } /* 508 */,
    std::pair{ "f16x3x4(f16x4,f16x4,f16x4)", &Float16x3x4_Float16_4_ctor } /* 509 */,
    std::pair{ "f16x4", &Float16x4Type } /* 510 */,
    std::pair{ "f16x4", &Float16x4_convert_Float32x4 } /* 511 */,
    std::pair{ "f16x4", &Float16x4_splat_Float32 } /* 512 */,
    std::pair{ "f16x4", &Float16x4_convert_UInt32x4 } /* 513 */,
    std::pair{ "f16x4", &Float16x4_splat_UInt32 } /* 514 */,
    std::pair{ "f16x4", &Float16x4_convert_Int32x4 } /* 515 */,
    std::pair{ "f16x4", &Float16x4_splat_Int32 } /* 516 */,
    std::pair{ "f16x4", &Float16x4_convert_Float16x4 } /* 517 */,
    std::pair{ "f16x4", &Float16x4_splat_Float16 } /* 518 */,
    std::pair{ "f16x4", &Float16x4_convert_UInt16x4 } /* 519 */,
    std::pair{ "f16x4", &Float16x4_splat_UInt16 } /* 520 */,
    std::pair{ "f16x4", &Float16x4_convert_Int16x4 } /* 521 */,
    std::pair{ "f16x4", &Float16x4_splat_Int16 } /* 522 */,
    std::pair{ "f16x4", &Float16x4_ctor0 } /* 523 */,
    std::pair{ "f16x4", &Float16x4_ctor1 } /* 524 */,
    std::pair{ "f16x4", &Float16x4_ctor2 } /* 525 */,
    std::pair{ "f16x4", &Float16x4_ctor3 } /* 526 */,
    std::pair{ "f16x4", &Float16x4_ctor4 } /* 527 */,
    std::pair{ "f16x4", &Float16x4_ctor5 } /* 528 */,
    std::pair{ "f16x4(f16)", &Float16x4_splat_Float16 } /* 529 */,
    std::pair{ "f16x4(f16,f16,f16,f16)", &Float16x4_ctor0 } /* 530 */,
    std::pair{ "f16x4(f16,f16,f16x2)", &Float16x4_ctor3 } /* 531 */,
    std::pair{ "f16x4(f16,f16x2,f16)", &Float16x4_ctor2 } /* 532 */,
    std::pair{ "f16x4(f16,f16x3)", &Float16x4_ctor5 } /* 533 */,
    std::pair{ "f16x4(f16x2,f16,f16)", &Float16x4_ctor1 } /* 534 */,
    std::pair{ "f16x4(f16x3,f16)", &Float16x4_ctor4 } /* 535 */,
    std::pair{ "f16x4(f16x4)", &Float16x4_convert_Float16x4 } /* 536 */,
    std::pair{ "f16x4(f32)", &Float16x4_splat_Float32 } /* 537 */,
    std::pair{ "f16x4(f32x4)", &Float16x4_convert_Float32x4 } /* 538 */,
    std::pair{ "f16x4(i16)", &Float16x4_splat_Int16 } /* 539 */,
    std::pair{ "f16x4(i16x4)", &Float16x4_convert_Int16x4 } /* 540 */,
    std::pair{ "f16x4(i32)", &Float16x4_splat_Int32 } /* 541 */,
    std::pair{ "f16x4(i32x4)", &Float16x4_convert_Int32x4 } /* 542 */,
    std::pair{ "f16x4(u16)", &Float16x4_splat_UInt16 } /* 543 */,
    std::pair{ "f16x4(u16x4)", &Float16x4_convert_UInt16x4 } /* 544 */,
    std::pair{ "f16x4(u32)", &Float16x4_splat_UInt32 } /* 545 */,
    std::pair{ "f16x4(u32x4)", &Float16x4_convert_UInt32x4 } /* 546 */,
    std::pair{ "f16x4x2", &Float16x4x2Type } /* 547 */,
    std::pair{ "f16x4x2", &Float16x4x2_Float16_2_ctor } /* 548 */,
    std::pair{ "f16x4x2", &Float16x4x2_identity } /* 549 */,
    std::pair{ "f16x4x2", &Float16x4x2_raw_list } /* 550 */,
    std::pair{ "f16x4x2()", &Float16x4x2_identity } /* 551 */,
    std::pair{ "f16x4x2(f16,f16,f16,f16,f16,f16,f16,f16)", &Float16x4x2_raw_list } /* 552 */,
    std::pair{ "f16x4x2(f16x2,f16x2,f16x2,f16x2)", &Float16x4x2_Float16_2_ctor } /* 553 */,
    std::pair{ "f16x4x3", &Float16x4x3Type } /* 554 */,
    std::pair{ "f16x4x3", &Float16x4x3_Float16_3_ctor } /* 555 */,
    std::pair{ "f16x4x3", &Float16x4x3_identity } /* 556 */,
    std::pair{ "f16x4x3", &Float16x4x3_raw_list } /* 557 */,
    std::pair{ "f16x4x3()", &Float16x4x3_identity } /* 558 */,
    std::pair{ "f16x4x3(f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16)", &Float16x4x3_raw_list } /* 559 */,
    std::pair{ "f16x4x3(f16x3,f16x3,f16x3,f16x3)", &Float16x4x3_Float16_3_ctor } /* 560 */,
    std::pair{ "f16x4x4", &Float16x4x4Type } /* 561 */,
    std::pair{ "f16x4x4", &Float16x4x4_Float16_4_ctor } /* 562 */,
    std::pair{ "f16x4x4", &Float16x4x4_identity } /* 563 */,
    std::pair{ "f16x4x4", &Float16x4x4_raw_list } /* 564 */,
    std::pair{ "f16x4x4()", &Float16x4x4_identity } /* 565 */,
    std::pair{ "f16x4x4(f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16)", &Float16x4x4_raw_list } /* 566 */,
    std::pair{ "f16x4x4(f16x4,f16x4,f16x4,f16x4)", &Float16x4x4_Float16_4_ctor } /* 567 */,
    std::pair{ "f32", &Float32Type } /* 568 */,
    std::pair{ "f32", &Float32_convert_UInt32 } /* 569 */,
    std::pair{ "f32", &Float32_convert_Int32 } /* 570 */,
    std::pair{ "f32", &Float32_convert_Float16 } /* 571 */,
    std::pair{ "f32", &Float32_convert_UInt16 } /* 572 */,
    std::pair{ "f32", &Float32_convert_Int16 } /* 573 */,
    std::pair{ "f32", &Float32_ctor0 } /* 574 */,
    std::pair{ "f32(f16)", &Float32_convert_Float16 } /* 575 */,
    std::pair{ "f32(f32)", &Float32_ctor0 } /* 576 */,
    std::pair{ "f32(i16)", &Float32_convert_Int16 } /* 577 */,
    std::pair{ "f32(i32)", &Float32_convert_Int32 } /* 578 */,
    std::pair{ "f32(u16)", &Float32_convert_UInt16 } /* 579 */,
    std::pair{ "f32(u32)", &Float32_convert_UInt32 } /* 580 */,
    std::pair{ "f32x2", &Float32x2Type } /* 581 */,
    std::pair{ "f32x2", &Float32x2_convert_Float32x2 } /* 582 */,
    std::pair{ "f32x2", &Float32x2_splat_Float32 } /* 583 */,
    std::pair{ "f32x2", &Float32x2_convert_UInt32x2 } /* 584 */,
    std::pair{ "f32x2", &Float32x2_splat_UInt32 } /* 585 */,
    std::pair{ "f32x2", &Float32x2_convert_Int32x2 } /* 586 */,
    std::pair{ "f32x2", &Float32x2_splat_Int32 } /* 587 */,
    std::pair{ "f32x2", &Float32x2_convert_Float16x2 } /* 588 */,
    std::pair{ "f32x2", &Float32x2_splat_Float16 } /* 589 */,
    std::pair{ "f32x2", &Float32x2_convert_UInt16x2 } /* 590 */,
    std::pair{ "f32x2", &Float32x2_splat_UInt16 } /* 591 */,
    std::pair{ "f32x2", &Float32x2_convert_Int16x2 } /* 592 */,
    std::pair{ "f32x2", &Float32x2_splat_Int16 } /* 593 */,
    std::pair{ "f32x2", &Float32x2_ctor0 } /* 594 */,
    std::pair{ "f32x2(f16)", &Float32x2_splat_Float16 } /* 595 */,
    std::pair{ "f32x2(f16x2)", &Float32x2_convert_Float16x2 } /* 596 */,
    std::pair{ "f32x2(f32)", &Float32x2_splat_Float32 } /* 597 */,
    std::pair{ "f32x2(f32,f32)", &Float32x2_ctor0 } /* 598 */,
    std::pair{ "f32x2(f32x2)", &Float32x2_convert_Float32x2 } /* 599 */,
    std::pair{ "f32x2(i16)", &Float32x2_splat_Int16 } /* 600 */,
    std::pair{ "f32x2(i16x2)", &Float32x2_convert_Int16x2 } /* 601 */,
    std::pair{ "f32x2(i32)", &Float32x2_splat_Int32 } /* 602 */,
    std::pair{ "f32x2(i32x2)", &Float32x2_convert_Int32x2 } /* 603 */,
    std::pair{ "f32x2(u16)", &Float32x2_splat_UInt16 } /* 604 */,
    std::pair{ "f32x2(u16x2)", &Float32x2_convert_UInt16x2 } /* 605 */,
    std::pair{ "f32x2(u32)", &Float32x2_splat_UInt32 } /* 606 */,
    std::pair{ "f32x2(u32x2)", &Float32x2_convert_UInt32x2 } /* 607 */,
    std::pair{ "f32x2x2", &Float32x2x2Type } /* 608 */,
    std::pair{ "f32x2x2", &Float32x2x2_Float32_2_ctor } /* 609 */,
    std::pair{ "f32x2x2", &Float32x2x2_identity } /* 610 */,
    std::pair{ "f32x2x2", &Float32x2x2_raw_list } /* 611 */,
    std::pair{ "f32x2x2()", &Float32x2x2_identity } /* 612 */,
    std::pair{ "f32x2x2(f32,f32,f32,f32)", &Float32x2x2_raw_list } /* 613 */,
    std::pair{ "f32x2x2(f32x2,f32x2)", &Float32x2x2_Float32_2_ctor } /* 614 */,
    std::pair{ "f32x2x3", &Float32x2x3Type } /* 615 */,
    std::pair{ "f32x2x3", &Float32x2x3_Float32_3_ctor } /* 616 */,
    std::pair{ "f32x2x3", &Float32x2x3_identity } /* 617 */,
    std::pair{ "f32x2x3", &Float32x2x3_raw_list } /* 618 */,
    std::pair{ "f32x2x3()", &Float32x2x3_identity } /* 619 */,
    std::pair{ "f32x2x3(f32,f32,f32,f32,f32,f32)", &Float32x2x3_raw_list } /* 620 */,
    std::pair{ "f32x2x3(f32x3,f32x3)", &Float32x2x3_Float32_3_ctor } /* 621 */,
    std::pair{ "f32x2x4", &Float32x2x4Type } /* 622 */,
    std::pair{ "f32x2x4", &Float32x2x4_Float32_4_ctor } /* 623 */,
    std::pair{ "f32x2x4", &Float32x2x4_identity } /* 624 */,
    std::pair{ "f32x2x4", &Float32x2x4_raw_list } /* 625 */,
    std::pair{ "f32x2x4()", &Float32x2x4_identity } /* 626 */,
    std::pair{ "f32x2x4(f32,f32,f32,f32,f32,f32,f32,f32)", &Float32x2x4_raw_list } /* 627 */,
    std::pair{ "f32x2x4(f32x4,f32x4)", &Float32x2x4_Float32_4_ctor } /* 628 */,
    std::pair{ "f32x3", &Float32x3Type } /* 629 */,
    std::pair{ "f32x3", &Float32x3_convert_Float32x3 } /* 630 */,
    std::pair{ "f32x3", &Float32x3_splat_Float32 } /* 631 */,
    std::pair{ "f32x3", &Float32x3_convert_UInt32x3 } /* 632 */,
    std::pair{ "f32x3", &Float32x3_splat_UInt32 } /* 633 */,
    std::pair{ "f32x3", &Float32x3_convert_Int32x3 } /* 634 */,
    std::pair{ "f32x3", &Float32x3_splat_Int32 } /* 635 */,
    std::pair{ "f32x3", &Float32x3_convert_Float16x3 } /* 636 */,
    std::pair{ "f32x3", &Float32x3_splat_Float16 } /* 637 */,
    std::pair{ "f32x3", &Float32x3_convert_UInt16x3 } /* 638 */,
    std::pair{ "f32x3", &Float32x3_splat_UInt16 } /* 639 */,
    std::pair{ "f32x3", &Float32x3_convert_Int16x3 } /* 640 */,
    std::pair{ "f32x3", &Float32x3_splat_Int16 } /* 641 */,
    std::pair{ "f32x3", &Float32x3_ctor0 } /* 642 */,
    std::pair{ "f32x3", &Float32x3_ctor1 } /* 643 */,
    std::pair{ "f32x3", &Float32x3_ctor2 } /* 644 */,
    std::pair{ "f32x3(f16)", &Float32x3_splat_Float16 } /* 645 */,
    std::pair{ "f32x3(f16x3)", &Float32x3_convert_Float16x3 } /* 646 */,
    std::pair{ "f32x3(f32)", &Float32x3_splat_Float32 } /* 647 */,
    std::pair{ "f32x3(f32,f32,f32)", &Float32x3_ctor0 } /* 648 */,
    std::pair{ "f32x3(f32,f32x2)", &Float32x3_ctor2 } /* 649 */,
    std::pair{ "f32x3(f32x2,f32)", &Float32x3_ctor1 } /* 650 */,
    std::pair{ "f32x3(f32x3)", &Float32x3_convert_Float32x3 } /* 651 */,
    std::pair{ "f32x3(i16)", &Float32x3_splat_Int16 } /* 652 */,
    std::pair{ "f32x3(i16x3)", &Float32x3_convert_Int16x3 } /* 653 */,
    std::pair{ "f32x3(i32)", &Float32x3_splat_Int32 } /* 654 */,
    std::pair{ "f32x3(i32x3)", &Float32x3_convert_Int32x3 } /* 655 */,
    std::pair{ "f32x3(u16)", &Float32x3_splat_UInt16 } /* 656 */,
    std::pair{ "f32x3(u16x3)", &Float32x3_convert_UInt16x3 } /* 657 */,
    std::pair{ "f32x3(u32)", &Float32x3_splat_UInt32 } /* 658 */,
    std::pair{ "f32x3(u32x3)", &Float32x3_convert_UInt32x3 } /* 659 */,
    std::pair{ "f32x3x2", &Float32x3x2Type } /* 660 */,
    std::pair{ "f32x3x2", &Float32x3x2_Float32_2_ctor } /* 661 */,
    std::pair{ "f32x3x2", &Float32x3x2_identity } /* 662 */,
    std::pair{ "f32x3x2", &Float32x3x2_raw_list } /* 663 */,
    std::pair{ "f32x3x2()", &Float32x3x2_identity } /* 664 */,
    std::pair{ "f32x3x2(f32,f32,f32,f32,f32,f32)", &Float32x3x2_raw_list } /* 665 */,
    std::pair{ "f32x3x2(f32x2,f32x2,f32x2)", &Float32x3x2_Float32_2_ctor } /* 666 */,
    std::pair{ "f32x3x3", &Float32x3x3Type } /* 667 */,
    std::pair{ "f32x3x3", &Float32x3x3_Float32_3_ctor } /* 668 */,
    std::pair{ "f32x3x3", &Float32x3x3_identity } /* 669 */,
    std::pair{ "f32x3x3", &Float32x3x3_raw_list } /* 670 */,
    std::pair{ "f32x3x3()", &Float32x3x3_identity } /* 671 */,
    std::pair{ "f32x3x3(f32,f32,f32,f32,f32,f32,f32,f32,f32)", &Float32x3x3_raw_list } /* 672 */,
    std::pair{ "f32x3x3(f32x3,f32x3,f32x3)", &Float32x3x3_Float32_3_ctor } /* 673 */,
    std::pair{ "f32x3x4", &Float32x3x4Type } /* 674 */,
    std::pair{ "f32x3x4", &Float32x3x4_Float32_4_ctor } /* 675 */,
    std::pair{ "f32x3x4", &Float32x3x4_identity } /* 676 */,
    std::pair{ "f32x3x4", &Float32x3x4_raw_list } /* 677 */,
    std::pair{ "f32x3x4()", &Float32x3x4_identity } /* 678 */,
    std::pair{ "f32x3x4(f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32)", &Float32x3x4_raw_list } /* 679 */,
    std::pair{ "f32x3x4(f32x4,f32x4,f32x4)", &Float32x3x4_Float32_4_ctor } /* 680 */,
    std::pair{ "f32x4", &Float32x4Type } /* 681 */,
    std::pair{ "f32x4", &Float32x4_convert_Float32x4 } /* 682 */,
    std::pair{ "f32x4", &Float32x4_splat_Float32 } /* 683 */,
    std::pair{ "f32x4", &Float32x4_convert_UInt32x4 } /* 684 */,
    std::pair{ "f32x4", &Float32x4_splat_UInt32 } /* 685 */,
    std::pair{ "f32x4", &Float32x4_convert_Int32x4 } /* 686 */,
    std::pair{ "f32x4", &Float32x4_splat_Int32 } /* 687 */,
    std::pair{ "f32x4", &Float32x4_convert_Float16x4 } /* 688 */,
    std::pair{ "f32x4", &Float32x4_splat_Float16 } /* 689 */,
    std::pair{ "f32x4", &Float32x4_convert_UInt16x4 } /* 690 */,
    std::pair{ "f32x4", &Float32x4_splat_UInt16 } /* 691 */,
    std::pair{ "f32x4", &Float32x4_convert_Int16x4 } /* 692 */,
    std::pair{ "f32x4", &Float32x4_splat_Int16 } /* 693 */,
    std::pair{ "f32x4", &Float32x4_ctor0 } /* 694 */,
    std::pair{ "f32x4", &Float32x4_ctor1 } /* 695 */,
    std::pair{ "f32x4", &Float32x4_ctor2 } /* 696 */,
    std::pair{ "f32x4", &Float32x4_ctor3 } /* 697 */,
    std::pair{ "f32x4", &Float32x4_ctor4 } /* 698 */,
    std::pair{ "f32x4", &Float32x4_ctor5 } /* 699 */,
    std::pair{ "f32x4(f16)", &Float32x4_splat_Float16 } /* 700 */,
    std::pair{ "f32x4(f16x4)", &Float32x4_convert_Float16x4 } /* 701 */,
    std::pair{ "f32x4(f32)", &Float32x4_splat_Float32 } /* 702 */,
    std::pair{ "f32x4(f32,f32,f32,f32)", &Float32x4_ctor0 } /* 703 */,
    std::pair{ "f32x4(f32,f32,f32x2)", &Float32x4_ctor3 } /* 704 */,
    std::pair{ "f32x4(f32,f32x2,f32)", &Float32x4_ctor2 } /* 705 */,
    std::pair{ "f32x4(f32,f32x3)", &Float32x4_ctor5 } /* 706 */,
    std::pair{ "f32x4(f32x2,f32,f32)", &Float32x4_ctor1 } /* 707 */,
    std::pair{ "f32x4(f32x3,f32)", &Float32x4_ctor4 } /* 708 */,
    std::pair{ "f32x4(f32x4)", &Float32x4_convert_Float32x4 } /* 709 */,
    std::pair{ "f32x4(i16)", &Float32x4_splat_Int16 } /* 710 */,
    std::pair{ "f32x4(i16x4)", &Float32x4_convert_Int16x4 } /* 711 */,
    std::pair{ "f32x4(i32)", &Float32x4_splat_Int32 } /* 712 */,
    std::pair{ "f32x4(i32x4)", &Float32x4_convert_Int32x4 } /* 713 */,
    std::pair{ "f32x4(u16)", &Float32x4_splat_UInt16 } /* 714 */,
    std::pair{ "f32x4(u16x4)", &Float32x4_convert_UInt16x4 } /* 715 */,
    std::pair{ "f32x4(u32)", &Float32x4_splat_UInt32 } /* 716 */,
    std::pair{ "f32x4(u32x4)", &Float32x4_convert_UInt32x4 } /* 717 */,
    std::pair{ "f32x4x2", &Float32x4x2Type } /* 718 */,
    std::pair{ "f32x4x2", &Float32x4x2_Float32_2_ctor } /* 719 */,
    std::pair{ "f32x4x2", &Float32x4x2_identity } /* 720 */,
    std::pair{ "f32x4x2", &Float32x4x2_raw_list } /* 721 */,
    std::pair{ "f32x4x2()", &Float32x4x2_identity } /* 722 */,
    std::pair{ "f32x4x2(f32,f32,f32,f32,f32,f32,f32,f32)", &Float32x4x2_raw_list } /* 723 */,
    std::pair{ "f32x4x2(f32x2,f32x2,f32x2,f32x2)", &Float32x4x2_Float32_2_ctor } /* 724 */,
    std::pair{ "f32x4x3", &Float32x4x3Type } /* 725 */,
    std::pair{ "f32x4x3", &Float32x4x3_Float32_3_ctor } /* 726 */,
    std::pair{ "f32x4x3", &Float32x4x3_identity } /* 727 */,
    std::pair{ "f32x4x3", &Float32x4x3_raw_list } /* 728 */,
    std::pair{ "f32x4x3()", &Float32x4x3_identity } /* 729 */,
    std::pair{ "f32x4x3(f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32)", &Float32x4x3_raw_list } /* 730 */,
    std::pair{ "f32x4x3(f32x3,f32x3,f32x3,f32x3)", &Float32x4x3_Float32_3_ctor } /* 731 */,
    std::pair{ "f32x4x4", &Float32x4x4Type } /* 732 */,
    std::pair{ "f32x4x4", &Float32x4x4_Float32_4_ctor } /* 733 */,
    std::pair{ "f32x4x4", &Float32x4x4_identity } /* 734 */,
    std::pair{ "f32x4x4", &Float32x4x4_raw_list } /* 735 */,
    std::pair{ "f32x4x4()", &Float32x4x4_identity } /* 736 */,
    std::pair{ "f32x4x4(f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32)", &Float32x4x4_raw_list } /* 737 */,
    std::pair{ "f32x4x4(f32x4,f32x4,f32x4,f32x4)", &Float32x4x4_Float32_4_ctor } /* 738 */,
    std::pair{ "floor", &floor_Float32 } /* 739 */,
    std::pair{ "floor", &floor_Float32x2 } /* 740 */,
    std::pair{ "floor", &floor_Float32x3 } /* 741 */,
    std::pair{ "floor", &floor_Float32x4 } /* 742 */,
    std::pair{ "floor", &floor_Float16 } /* 743 */,
    std::pair{ "floor", &floor_Float16x2 } /* 744 */,
    std::pair{ "floor", &floor_Float16x3 } /* 745 */,
    std::pair{ "floor", &floor_Float16x4 } /* 746 */,
    std::pair{ "fract", &fract_Float32 } /* 747 */,
    std::pair{ "fract", &fract_Float32x2 } /* 748 */,
    std::pair{ "fract", &fract_Float32x3 } /* 749 */,
    std::pair{ "fract", &fract_Float32x4 } /* 750 */,
    std::pair{ "fract", &fract_Float16 } /* 751 */,
    std::pair{ "fract", &fract_Float16x2 } /* 752 */,
    std::pair{ "fract", &fract_Float16x3 } /* 753 */,
    std::pair{ "fract", &fract_Float16x4 } /* 754 */,
    std::pair{ "fwidth", &fwidth_Float32 } /* 755 */,
    std::pair{ "fwidth", &fwidth_Float32x2 } /* 756 */,
    std::pair{ "fwidth", &fwidth_Float32x3 } /* 757 */,
    std::pair{ "fwidth", &fwidth_Float32x4 } /* 758 */,
    std::pair{ "fwidth", &fwidth_Float16 } /* 759 */,
    std::pair{ "fwidth", &fwidth_Float16x2 } /* 760 */,
    std::pair{ "fwidth", &fwidth_Float16x3 } /* 761 */,
    std::pair{ "fwidth", &fwidth_Float16x4 } /* 762 */,
    std::pair{ "geometryExportPrimitive", &GeometryExportPrimitive } /* 763 */,
    std::pair{ "geometryExportVertex", &GeometryExportVertex } /* 764 */,
    std::pair{ "i16", &Int16Type } /* 765 */,
    std::pair{ "i16", &Int16_convert_Float32 } /* 766 */,
    std::pair{ "i16", &Int16_convert_UInt32 } /* 767 */,
    std::pair{ "i16", &Int16_convert_Int32 } /* 768 */,
    std::pair{ "i16", &Int16_convert_Float16 } /* 769 */,
    std::pair{ "i16", &Int16_convert_UInt16 } /* 770 */,
    std::pair{ "i16", &Int16_ctor0 } /* 771 */,
    std::pair{ "i16(f16)", &Int16_convert_Float16 } /* 772 */,
    std::pair{ "i16(f32)", &Int16_convert_Float32 } /* 773 */,
    std::pair{ "i16(i16)", &Int16_ctor0 } /* 774 */,
    std::pair{ "i16(i32)", &Int16_convert_Int32 } /* 775 */,
    std::pair{ "i16(u16)", &Int16_convert_UInt16 } /* 776 */,
    std::pair{ "i16(u32)", &Int16_convert_UInt32 } /* 777 */,
    std::pair{ "i16x2", &Int16x2Type } /* 778 */,
    std::pair{ "i16x2", &Int16x2_convert_Float32x2 } /* 779 */,
    std::pair{ "i16x2", &Int16x2_splat_Float32 } /* 780 */,
    std::pair{ "i16x2", &Int16x2_convert_UInt32x2 } /* 781 */,
    std::pair{ "i16x2", &Int16x2_splat_UInt32 } /* 782 */,
    std::pair{ "i16x2", &Int16x2_convert_Int32x2 } /* 783 */,
    std::pair{ "i16x2", &Int16x2_splat_Int32 } /* 784 */,
    std::pair{ "i16x2", &Int16x2_convert_Float16x2 } /* 785 */,
    std::pair{ "i16x2", &Int16x2_splat_Float16 } /* 786 */,
    std::pair{ "i16x2", &Int16x2_convert_UInt16x2 } /* 787 */,
    std::pair{ "i16x2", &Int16x2_splat_UInt16 } /* 788 */,
    std::pair{ "i16x2", &Int16x2_convert_Int16x2 } /* 789 */,
    std::pair{ "i16x2", &Int16x2_splat_Int16 } /* 790 */,
    std::pair{ "i16x2", &Int16x2_ctor0 } /* 791 */,
    std::pair{ "i16x2(f16)", &Int16x2_splat_Float16 } /* 792 */,
    std::pair{ "i16x2(f16x2)", &Int16x2_convert_Float16x2 } /* 793 */,
    std::pair{ "i16x2(f32)", &Int16x2_splat_Float32 } /* 794 */,
    std::pair{ "i16x2(f32x2)", &Int16x2_convert_Float32x2 } /* 795 */,
    std::pair{ "i16x2(i16)", &Int16x2_splat_Int16 } /* 796 */,
    std::pair{ "i16x2(i16,i16)", &Int16x2_ctor0 } /* 797 */,
    std::pair{ "i16x2(i16x2)", &Int16x2_convert_Int16x2 } /* 798 */,
    std::pair{ "i16x2(i32)", &Int16x2_splat_Int32 } /* 799 */,
    std::pair{ "i16x2(i32x2)", &Int16x2_convert_Int32x2 } /* 800 */,
    std::pair{ "i16x2(u16)", &Int16x2_splat_UInt16 } /* 801 */,
    std::pair{ "i16x2(u16x2)", &Int16x2_convert_UInt16x2 } /* 802 */,
    std::pair{ "i16x2(u32)", &Int16x2_splat_UInt32 } /* 803 */,
    std::pair{ "i16x2(u32x2)", &Int16x2_convert_UInt32x2 } /* 804 */,
    std::pair{ "i16x3", &Int16x3Type } /* 805 */,
    std::pair{ "i16x3", &Int16x3_convert_Float32x3 } /* 806 */,
    std::pair{ "i16x3", &Int16x3_splat_Float32 } /* 807 */,
    std::pair{ "i16x3", &Int16x3_convert_UInt32x3 } /* 808 */,
    std::pair{ "i16x3", &Int16x3_splat_UInt32 } /* 809 */,
    std::pair{ "i16x3", &Int16x3_convert_Int32x3 } /* 810 */,
    std::pair{ "i16x3", &Int16x3_splat_Int32 } /* 811 */,
    std::pair{ "i16x3", &Int16x3_convert_Float16x3 } /* 812 */,
    std::pair{ "i16x3", &Int16x3_splat_Float16 } /* 813 */,
    std::pair{ "i16x3", &Int16x3_convert_UInt16x3 } /* 814 */,
    std::pair{ "i16x3", &Int16x3_splat_UInt16 } /* 815 */,
    std::pair{ "i16x3", &Int16x3_convert_Int16x3 } /* 816 */,
    std::pair{ "i16x3", &Int16x3_splat_Int16 } /* 817 */,
    std::pair{ "i16x3", &Int16x3_ctor0 } /* 818 */,
    std::pair{ "i16x3", &Int16x3_ctor1 } /* 819 */,
    std::pair{ "i16x3", &Int16x3_ctor2 } /* 820 */,
    std::pair{ "i16x3(f16)", &Int16x3_splat_Float16 } /* 821 */,
    std::pair{ "i16x3(f16x3)", &Int16x3_convert_Float16x3 } /* 822 */,
    std::pair{ "i16x3(f32)", &Int16x3_splat_Float32 } /* 823 */,
    std::pair{ "i16x3(f32x3)", &Int16x3_convert_Float32x3 } /* 824 */,
    std::pair{ "i16x3(i16)", &Int16x3_splat_Int16 } /* 825 */,
    std::pair{ "i16x3(i16,i16,i16)", &Int16x3_ctor0 } /* 826 */,
    std::pair{ "i16x3(i16,i16x2)", &Int16x3_ctor2 } /* 827 */,
    std::pair{ "i16x3(i16x2,i16)", &Int16x3_ctor1 } /* 828 */,
    std::pair{ "i16x3(i16x3)", &Int16x3_convert_Int16x3 } /* 829 */,
    std::pair{ "i16x3(i32)", &Int16x3_splat_Int32 } /* 830 */,
    std::pair{ "i16x3(i32x3)", &Int16x3_convert_Int32x3 } /* 831 */,
    std::pair{ "i16x3(u16)", &Int16x3_splat_UInt16 } /* 832 */,
    std::pair{ "i16x3(u16x3)", &Int16x3_convert_UInt16x3 } /* 833 */,
    std::pair{ "i16x3(u32)", &Int16x3_splat_UInt32 } /* 834 */,
    std::pair{ "i16x3(u32x3)", &Int16x3_convert_UInt32x3 } /* 835 */,
    std::pair{ "i16x4", &Int16x4Type } /* 836 */,
    std::pair{ "i16x4", &Int16x4_convert_Float32x4 } /* 837 */,
    std::pair{ "i16x4", &Int16x4_splat_Float32 } /* 838 */,
    std::pair{ "i16x4", &Int16x4_convert_UInt32x4 } /* 839 */,
    std::pair{ "i16x4", &Int16x4_splat_UInt32 } /* 840 */,
    std::pair{ "i16x4", &Int16x4_convert_Int32x4 } /* 841 */,
    std::pair{ "i16x4", &Int16x4_splat_Int32 } /* 842 */,
    std::pair{ "i16x4", &Int16x4_convert_Float16x4 } /* 843 */,
    std::pair{ "i16x4", &Int16x4_splat_Float16 } /* 844 */,
    std::pair{ "i16x4", &Int16x4_convert_UInt16x4 } /* 845 */,
    std::pair{ "i16x4", &Int16x4_splat_UInt16 } /* 846 */,
    std::pair{ "i16x4", &Int16x4_convert_Int16x4 } /* 847 */,
    std::pair{ "i16x4", &Int16x4_splat_Int16 } /* 848 */,
    std::pair{ "i16x4", &Int16x4_ctor0 } /* 849 */,
    std::pair{ "i16x4", &Int16x4_ctor1 } /* 850 */,
    std::pair{ "i16x4", &Int16x4_ctor2 } /* 851 */,
    std::pair{ "i16x4", &Int16x4_ctor3 } /* 852 */,
    std::pair{ "i16x4", &Int16x4_ctor4 } /* 853 */,
    std::pair{ "i16x4", &Int16x4_ctor5 } /* 854 */,
    std::pair{ "i16x4(f16)", &Int16x4_splat_Float16 } /* 855 */,
    std::pair{ "i16x4(f16x4)", &Int16x4_convert_Float16x4 } /* 856 */,
    std::pair{ "i16x4(f32)", &Int16x4_splat_Float32 } /* 857 */,
    std::pair{ "i16x4(f32x4)", &Int16x4_convert_Float32x4 } /* 858 */,
    std::pair{ "i16x4(i16)", &Int16x4_splat_Int16 } /* 859 */,
    std::pair{ "i16x4(i16,i16,i16,i16)", &Int16x4_ctor0 } /* 860 */,
    std::pair{ "i16x4(i16,i16,i16x2)", &Int16x4_ctor3 } /* 861 */,
    std::pair{ "i16x4(i16,i16x2,i16)", &Int16x4_ctor2 } /* 862 */,
    std::pair{ "i16x4(i16,i16x3)", &Int16x4_ctor5 } /* 863 */,
    std::pair{ "i16x4(i16x2,i16,i16)", &Int16x4_ctor1 } /* 864 */,
    std::pair{ "i16x4(i16x3,i16)", &Int16x4_ctor4 } /* 865 */,
    std::pair{ "i16x4(i16x4)", &Int16x4_convert_Int16x4 } /* 866 */,
    std::pair{ "i16x4(i32)", &Int16x4_splat_Int32 } /* 867 */,
    std::pair{ "i16x4(i32x4)", &Int16x4_convert_Int32x4 } /* 868 */,
    std::pair{ "i16x4(u16)", &Int16x4_splat_UInt16 } /* 869 */,
    std::pair{ "i16x4(u16x4)", &Int16x4_convert_UInt16x4 } /* 870 */,
    std::pair{ "i16x4(u32)", &Int16x4_splat_UInt32 } /* 871 */,
    std::pair{ "i16x4(u32x4)", &Int16x4_convert_UInt32x4 } /* 872 */,
    std::pair{ "i32", &Int32Type } /* 873 */,
    std::pair{ "i32", &Int32_convert_Float32 } /* 874 */,
    std::pair{ "i32", &Int32_convert_UInt32 } /* 875 */,
    std::pair{ "i32", &Int32_convert_Float16 } /* 876 */,
    std::pair{ "i32", &Int32_convert_UInt16 } /* 877 */,
    std::pair{ "i32", &Int32_convert_Int16 } /* 878 */,
    std::pair{ "i32", &Int32_ctor0 } /* 879 */,
    std::pair{ "i32(f16)", &Int32_convert_Float16 } /* 880 */,
    std::pair{ "i32(f32)", &Int32_convert_Float32 } /* 881 */,
    std::pair{ "i32(i16)", &Int32_convert_Int16 } /* 882 */,
    std::pair{ "i32(i32)", &Int32_ctor0 } /* 883 */,
    std::pair{ "i32(u16)", &Int32_convert_UInt16 } /* 884 */,
    std::pair{ "i32(u32)", &Int32_convert_UInt32 } /* 885 */,
    std::pair{ "i32x2", &Int32x2Type } /* 886 */,
    std::pair{ "i32x2", &Int32x2_convert_Float32x2 } /* 887 */,
    std::pair{ "i32x2", &Int32x2_splat_Float32 } /* 888 */,
    std::pair{ "i32x2", &Int32x2_convert_UInt32x2 } /* 889 */,
    std::pair{ "i32x2", &Int32x2_splat_UInt32 } /* 890 */,
    std::pair{ "i32x2", &Int32x2_convert_Int32x2 } /* 891 */,
    std::pair{ "i32x2", &Int32x2_splat_Int32 } /* 892 */,
    std::pair{ "i32x2", &Int32x2_convert_Float16x2 } /* 893 */,
    std::pair{ "i32x2", &Int32x2_splat_Float16 } /* 894 */,
    std::pair{ "i32x2", &Int32x2_convert_UInt16x2 } /* 895 */,
    std::pair{ "i32x2", &Int32x2_splat_UInt16 } /* 896 */,
    std::pair{ "i32x2", &Int32x2_convert_Int16x2 } /* 897 */,
    std::pair{ "i32x2", &Int32x2_splat_Int16 } /* 898 */,
    std::pair{ "i32x2", &Int32x2_ctor0 } /* 899 */,
    std::pair{ "i32x2(f16)", &Int32x2_splat_Float16 } /* 900 */,
    std::pair{ "i32x2(f16x2)", &Int32x2_convert_Float16x2 } /* 901 */,
    std::pair{ "i32x2(f32)", &Int32x2_splat_Float32 } /* 902 */,
    std::pair{ "i32x2(f32x2)", &Int32x2_convert_Float32x2 } /* 903 */,
    std::pair{ "i32x2(i16)", &Int32x2_splat_Int16 } /* 904 */,
    std::pair{ "i32x2(i16x2)", &Int32x2_convert_Int16x2 } /* 905 */,
    std::pair{ "i32x2(i32)", &Int32x2_splat_Int32 } /* 906 */,
    std::pair{ "i32x2(i32,i32)", &Int32x2_ctor0 } /* 907 */,
    std::pair{ "i32x2(i32x2)", &Int32x2_convert_Int32x2 } /* 908 */,
    std::pair{ "i32x2(u16)", &Int32x2_splat_UInt16 } /* 909 */,
    std::pair{ "i32x2(u16x2)", &Int32x2_convert_UInt16x2 } /* 910 */,
    std::pair{ "i32x2(u32)", &Int32x2_splat_UInt32 } /* 911 */,
    std::pair{ "i32x2(u32x2)", &Int32x2_convert_UInt32x2 } /* 912 */,
    std::pair{ "i32x3", &Int32x3Type } /* 913 */,
    std::pair{ "i32x3", &Int32x3_convert_Float32x3 } /* 914 */,
    std::pair{ "i32x3", &Int32x3_splat_Float32 } /* 915 */,
    std::pair{ "i32x3", &Int32x3_convert_UInt32x3 } /* 916 */,
    std::pair{ "i32x3", &Int32x3_splat_UInt32 } /* 917 */,
    std::pair{ "i32x3", &Int32x3_convert_Int32x3 } /* 918 */,
    std::pair{ "i32x3", &Int32x3_splat_Int32 } /* 919 */,
    std::pair{ "i32x3", &Int32x3_convert_Float16x3 } /* 920 */,
    std::pair{ "i32x3", &Int32x3_splat_Float16 } /* 921 */,
    std::pair{ "i32x3", &Int32x3_convert_UInt16x3 } /* 922 */,
    std::pair{ "i32x3", &Int32x3_splat_UInt16 } /* 923 */,
    std::pair{ "i32x3", &Int32x3_convert_Int16x3 } /* 924 */,
    std::pair{ "i32x3", &Int32x3_splat_Int16 } /* 925 */,
    std::pair{ "i32x3", &Int32x3_ctor0 } /* 926 */,
    std::pair{ "i32x3", &Int32x3_ctor1 } /* 927 */,
    std::pair{ "i32x3", &Int32x3_ctor2 } /* 928 */,
    std::pair{ "i32x3(f16)", &Int32x3_splat_Float16 } /* 929 */,
    std::pair{ "i32x3(f16x3)", &Int32x3_convert_Float16x3 } /* 930 */,
    std::pair{ "i32x3(f32)", &Int32x3_splat_Float32 } /* 931 */,
    std::pair{ "i32x3(f32x3)", &Int32x3_convert_Float32x3 } /* 932 */,
    std::pair{ "i32x3(i16)", &Int32x3_splat_Int16 } /* 933 */,
    std::pair{ "i32x3(i16x3)", &Int32x3_convert_Int16x3 } /* 934 */,
    std::pair{ "i32x3(i32)", &Int32x3_splat_Int32 } /* 935 */,
    std::pair{ "i32x3(i32,i32,i32)", &Int32x3_ctor0 } /* 936 */,
    std::pair{ "i32x3(i32,i32x2)", &Int32x3_ctor2 } /* 937 */,
    std::pair{ "i32x3(i32x2,i32)", &Int32x3_ctor1 } /* 938 */,
    std::pair{ "i32x3(i32x3)", &Int32x3_convert_Int32x3 } /* 939 */,
    std::pair{ "i32x3(u16)", &Int32x3_splat_UInt16 } /* 940 */,
    std::pair{ "i32x3(u16x3)", &Int32x3_convert_UInt16x3 } /* 941 */,
    std::pair{ "i32x3(u32)", &Int32x3_splat_UInt32 } /* 942 */,
    std::pair{ "i32x3(u32x3)", &Int32x3_convert_UInt32x3 } /* 943 */,
    std::pair{ "i32x4", &Int32x4Type } /* 944 */,
    std::pair{ "i32x4", &Int32x4_convert_Float32x4 } /* 945 */,
    std::pair{ "i32x4", &Int32x4_splat_Float32 } /* 946 */,
    std::pair{ "i32x4", &Int32x4_convert_UInt32x4 } /* 947 */,
    std::pair{ "i32x4", &Int32x4_splat_UInt32 } /* 948 */,
    std::pair{ "i32x4", &Int32x4_convert_Int32x4 } /* 949 */,
    std::pair{ "i32x4", &Int32x4_splat_Int32 } /* 950 */,
    std::pair{ "i32x4", &Int32x4_convert_Float16x4 } /* 951 */,
    std::pair{ "i32x4", &Int32x4_splat_Float16 } /* 952 */,
    std::pair{ "i32x4", &Int32x4_convert_UInt16x4 } /* 953 */,
    std::pair{ "i32x4", &Int32x4_splat_UInt16 } /* 954 */,
    std::pair{ "i32x4", &Int32x4_convert_Int16x4 } /* 955 */,
    std::pair{ "i32x4", &Int32x4_splat_Int16 } /* 956 */,
    std::pair{ "i32x4", &Int32x4_ctor0 } /* 957 */,
    std::pair{ "i32x4", &Int32x4_ctor1 } /* 958 */,
    std::pair{ "i32x4", &Int32x4_ctor2 } /* 959 */,
    std::pair{ "i32x4", &Int32x4_ctor3 } /* 960 */,
    std::pair{ "i32x4", &Int32x4_ctor4 } /* 961 */,
    std::pair{ "i32x4", &Int32x4_ctor5 } /* 962 */,
    std::pair{ "i32x4(f16)", &Int32x4_splat_Float16 } /* 963 */,
    std::pair{ "i32x4(f16x4)", &Int32x4_convert_Float16x4 } /* 964 */,
    std::pair{ "i32x4(f32)", &Int32x4_splat_Float32 } /* 965 */,
    std::pair{ "i32x4(f32x4)", &Int32x4_convert_Float32x4 } /* 966 */,
    std::pair{ "i32x4(i16)", &Int32x4_splat_Int16 } /* 967 */,
    std::pair{ "i32x4(i16x4)", &Int32x4_convert_Int16x4 } /* 968 */,
    std::pair{ "i32x4(i32)", &Int32x4_splat_Int32 } /* 969 */,
    std::pair{ "i32x4(i32,i32,i32,i32)", &Int32x4_ctor0 } /* 970 */,
    std::pair{ "i32x4(i32,i32,i32x2)", &Int32x4_ctor3 } /* 971 */,
    std::pair{ "i32x4(i32,i32x2,i32)", &Int32x4_ctor2 } /* 972 */,
    std::pair{ "i32x4(i32,i32x3)", &Int32x4_ctor5 } /* 973 */,
    std::pair{ "i32x4(i32x2,i32,i32)", &Int32x4_ctor1 } /* 974 */,
    std::pair{ "i32x4(i32x3,i32)", &Int32x4_ctor4 } /* 975 */,
    std::pair{ "i32x4(i32x4)", &Int32x4_convert_Int32x4 } /* 976 */,
    std::pair{ "i32x4(u16)", &Int32x4_splat_UInt16 } /* 977 */,
    std::pair{ "i32x4(u16x4)", &Int32x4_convert_UInt16x4 } /* 978 */,
    std::pair{ "i32x4(u32)", &Int32x4_splat_UInt32 } /* 979 */,
    std::pair{ "i32x4(u32x4)", &Int32x4_convert_UInt32x4 } /* 980 */,
    std::pair{ "invSqrt", &invSqrt_Float32 } /* 981 */,
    std::pair{ "invSqrt", &invSqrt_Float32x2 } /* 982 */,
    std::pair{ "invSqrt", &invSqrt_Float32x3 } /* 983 */,
    std::pair{ "invSqrt", &invSqrt_Float32x4 } /* 984 */,
    std::pair{ "invSqrt", &invSqrt_Float16 } /* 985 */,
    std::pair{ "invSqrt", &invSqrt_Float16x2 } /* 986 */,
    std::pair{ "invSqrt", &invSqrt_Float16x3 } /* 987 */,
    std::pair{ "invSqrt", &invSqrt_Float16x4 } /* 988 */,
    std::pair{ "inverse", &inverse_Float32x2x2 } /* 989 */,
    std::pair{ "inverse", &inverse_Float16x2x2 } /* 990 */,
    std::pair{ "inverse", &inverse_Float32x2x3 } /* 991 */,
    std::pair{ "inverse", &inverse_Float16x2x3 } /* 992 */,
    std::pair{ "inverse", &inverse_Float32x2x4 } /* 993 */,
    std::pair{ "inverse", &inverse_Float16x2x4 } /* 994 */,
    std::pair{ "inverse", &inverse_Float32x3x2 } /* 995 */,
    std::pair{ "inverse", &inverse_Float16x3x2 } /* 996 */,
    std::pair{ "inverse", &inverse_Float32x3x3 } /* 997 */,
    std::pair{ "inverse", &inverse_Float16x3x3 } /* 998 */,
    std::pair{ "inverse", &inverse_Float32x3x4 } /* 999 */,
    std::pair{ "inverse", &inverse_Float16x3x4 } /* 1000 */,
    std::pair{ "inverse", &inverse_Float32x4x2 } /* 1001 */,
    std::pair{ "inverse", &inverse_Float16x4x2 } /* 1002 */,
    std::pair{ "inverse", &inverse_Float32x4x3 } /* 1003 */,
    std::pair{ "inverse", &inverse_Float16x4x3 } /* 1004 */,
    std::pair{ "inverse", &inverse_Float32x4x4 } /* 1005 */,
    std::pair{ "inverse", &inverse_Float16x4x4 } /* 1006 */,
    std::pair{ "lerp", &lerp_Float32x2 } /* 1007 */,
    std::pair{ "lerp", &lerp_Float32x3 } /* 1008 */,
    std::pair{ "lerp", &lerp_Float32x4 } /* 1009 */,
    std::pair{ "lerp", &lerp_Float16x2 } /* 1010 */,
    std::pair{ "lerp", &lerp_Float16x3 } /* 1011 */,
    std::pair{ "lerp", &lerp_Float16x4 } /* 1012 */,
    std::pair{ "log", &log_Float32 } /* 1013 */,
    std::pair{ "log", &log_Float32x2 } /* 1014 */,
    std::pair{ "log", &log_Float32x3 } /* 1015 */,
    std::pair{ "log", &log_Float32x4 } /* 1016 */,
    std::pair{ "log", &log_Float16 } /* 1017 */,
    std::pair{ "log", &log_Float16x2 } /* 1018 */,
    std::pair{ "log", &log_Float16x3 } /* 1019 */,
    std::pair{ "log", &log_Float16x4 } /* 1020 */,
    std::pair{ "log2", &log2_Float32 } /* 1021 */,
    std::pair{ "log2", &log2_Float32x2 } /* 1022 */,
    std::pair{ "log2", &log2_Float32x3 } /* 1023 */,
    std::pair{ "log2", &log2_Float32x4 } /* 1024 */,
    std::pair{ "log2", &log2_Float16 } /* 1025 */,
    std::pair{ "log2", &log2_Float16x2 } /* 1026 */,
    std::pair{ "log2", &log2_Float16x3 } /* 1027 */,
    std::pair{ "log2", &log2_Float16x4 } /* 1028 */,
    std::pair{ "mad", &mad_Float32 } /* 1029 */,
    std::pair{ "mad", &mad_Float32x2 } /* 1030 */,
    std::pair{ "mad", &mad_Float32x3 } /* 1031 */,
    std::pair{ "mad", &mad_Float32x4 } /* 1032 */,
    std::pair{ "mad", &mad_Float16 } /* 1033 */,
    std::pair{ "mad", &mad_Float16x2 } /* 1034 */,
    std::pair{ "mad", &mad_Float16x3 } /* 1035 */,
    std::pair{ "mad", &mad_Float16x4 } /* 1036 */,
    std::pair{ "mad", &mad_Int32 } /* 1037 */,
    std::pair{ "mad", &mad_Int32x2 } /* 1038 */,
    std::pair{ "mad", &mad_Int32x3 } /* 1039 */,
    std::pair{ "mad", &mad_Int32x4 } /* 1040 */,
    std::pair{ "mad", &mad_Int16 } /* 1041 */,
    std::pair{ "mad", &mad_Int16x2 } /* 1042 */,
    std::pair{ "mad", &mad_Int16x3 } /* 1043 */,
    std::pair{ "mad", &mad_Int16x4 } /* 1044 */,
    std::pair{ "mad", &mad_UInt32 } /* 1045 */,
    std::pair{ "mad", &mad_UInt32x2 } /* 1046 */,
    std::pair{ "mad", &mad_UInt32x3 } /* 1047 */,
    std::pair{ "mad", &mad_UInt32x4 } /* 1048 */,
    std::pair{ "mad", &mad_UInt16 } /* 1049 */,
    std::pair{ "mad", &mad_UInt16x2 } /* 1050 */,
    std::pair{ "mad", &mad_UInt16x3 } /* 1051 */,
    std::pair{ "mad", &mad_UInt16x4 } /* 1052 */,
    std::pair{ "memoryBarrier", &MemoryBarrier } /* 1053 */,
    std::pair{ "memoryBarrierAtomic", &MemoryBarrierAtomic } /* 1054 */,
    std::pair{ "memoryBarrierBuffer", &MemoryBarrierBuffer } /* 1055 */,
    std::pair{ "memoryBarrierSubgroup", &MemoryBarrierSubgroup } /* 1056 */,
    std::pair{ "memoryBarrierTexture", &MemoryBarrierTexture } /* 1057 */,
    std::pair{ "memoryBarrierWorkgroup", &MemoryBarrierWorkgroup } /* 1058 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32_Int32 } /* 1059 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32_UInt32 } /* 1060 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32_Int16 } /* 1061 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32_UInt16 } /* 1062 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32x2_Int32 } /* 1063 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32x2_UInt32 } /* 1064 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32x2_Int16 } /* 1065 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32x2_UInt16 } /* 1066 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32x3_Int32 } /* 1067 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32x3_UInt32 } /* 1068 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32x3_Int16 } /* 1069 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32x3_UInt16 } /* 1070 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32x4_Int32 } /* 1071 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32x4_UInt32 } /* 1072 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32x4_Int16 } /* 1073 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float32x4_UInt16 } /* 1074 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16_Int32 } /* 1075 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16_UInt32 } /* 1076 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16_Int16 } /* 1077 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16_UInt16 } /* 1078 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16x2_Int32 } /* 1079 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16x2_UInt32 } /* 1080 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16x2_Int16 } /* 1081 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16x2_UInt16 } /* 1082 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16x3_Int32 } /* 1083 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16x3_UInt32 } /* 1084 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16x3_Int16 } /* 1085 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16x3_UInt16 } /* 1086 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16x4_Int32 } /* 1087 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16x4_UInt32 } /* 1088 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16x4_Int16 } /* 1089 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Float16x4_UInt16 } /* 1090 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32_Int32 } /* 1091 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32_UInt32 } /* 1092 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32_Int16 } /* 1093 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32_UInt16 } /* 1094 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32x2_Int32 } /* 1095 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32x2_UInt32 } /* 1096 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32x2_Int16 } /* 1097 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32x2_UInt16 } /* 1098 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32x3_Int32 } /* 1099 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32x3_UInt32 } /* 1100 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32x3_Int16 } /* 1101 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32x3_UInt16 } /* 1102 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32x4_Int32 } /* 1103 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32x4_UInt32 } /* 1104 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32x4_Int16 } /* 1105 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int32x4_UInt16 } /* 1106 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16_Int32 } /* 1107 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16_UInt32 } /* 1108 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16_Int16 } /* 1109 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16_UInt16 } /* 1110 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16x2_Int32 } /* 1111 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16x2_UInt32 } /* 1112 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16x2_Int16 } /* 1113 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16x2_UInt16 } /* 1114 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16x3_Int32 } /* 1115 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16x3_UInt32 } /* 1116 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16x3_Int16 } /* 1117 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16x3_UInt16 } /* 1118 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16x4_Int32 } /* 1119 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16x4_UInt32 } /* 1120 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16x4_Int16 } /* 1121 */,
    std::pair{ "pixelExportColor", &PixelExportColor_Int16x4_UInt16 } /* 1122 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32_Int32 } /* 1123 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32_UInt32 } /* 1124 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32_Int16 } /* 1125 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32_UInt16 } /* 1126 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32x2_Int32 } /* 1127 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32x2_UInt32 } /* 1128 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32x2_Int16 } /* 1129 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32x2_UInt16 } /* 1130 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32x3_Int32 } /* 1131 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32x3_UInt32 } /* 1132 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32x3_Int16 } /* 1133 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32x3_UInt16 } /* 1134 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32x4_Int32 } /* 1135 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32x4_UInt32 } /* 1136 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32x4_Int16 } /* 1137 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt32x4_UInt16 } /* 1138 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16_Int32 } /* 1139 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16_UInt32 } /* 1140 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16_Int16 } /* 1141 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16_UInt16 } /* 1142 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16x2_Int32 } /* 1143 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16x2_UInt32 } /* 1144 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16x2_Int16 } /* 1145 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16x2_UInt16 } /* 1146 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16x3_Int32 } /* 1147 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16x3_UInt32 } /* 1148 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16x3_Int16 } /* 1149 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16x3_UInt16 } /* 1150 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16x4_Int32 } /* 1151 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16x4_UInt32 } /* 1152 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16x4_Int16 } /* 1153 */,
    std::pair{ "pixelExportColor", &PixelExportColor_UInt16x4_UInt16 } /* 1154 */,
    std::pair{ "pixelGetCoordinates", &PixelGetCoordinates_Float32x4 } /* 1155 */,
    std::pair{ "pixelGetCoordinates", &PixelGetCoordinates_Float16x4 } /* 1156 */,
    std::pair{ "pixelGetDepth", &PixelGetDepth } /* 1157 */,
    std::pair{ "pixelSetDepth", &PixelSetDepth } /* 1158 */,
    std::pair{ "pow", &pow_Float32 } /* 1159 */,
    std::pair{ "pow", &pow_Float32x2 } /* 1160 */,
    std::pair{ "pow", &pow_Float32x3 } /* 1161 */,
    std::pair{ "pow", &pow_Float32x4 } /* 1162 */,
    std::pair{ "pow", &pow_Float16 } /* 1163 */,
    std::pair{ "pow", &pow_Float16x2 } /* 1164 */,
    std::pair{ "pow", &pow_Float16x3 } /* 1165 */,
    std::pair{ "pow", &pow_Float16x4 } /* 1166 */,
    std::pair{ "reflect", &reflect_Float32x2 } /* 1167 */,
    std::pair{ "reflect", &reflect_Float32x3 } /* 1168 */,
    std::pair{ "reflect", &reflect_Float32x4 } /* 1169 */,
    std::pair{ "reflect", &reflect_Float16x2 } /* 1170 */,
    std::pair{ "reflect", &reflect_Float16x3 } /* 1171 */,
    std::pair{ "reflect", &reflect_Float16x4 } /* 1172 */,
    std::pair{ "refract", &refract_Float32x2 } /* 1173 */,
    std::pair{ "refract", &refract_Float32x3 } /* 1174 */,
    std::pair{ "refract", &refract_Float32x4 } /* 1175 */,
    std::pair{ "refract", &refract_Float16x2 } /* 1176 */,
    std::pair{ "refract", &refract_Float16x3 } /* 1177 */,
    std::pair{ "refract", &refract_Float16x4 } /* 1178 */,
    std::pair{ "saturate", &saturate_Float32 } /* 1179 */,
    std::pair{ "saturate", &saturate_Float32x2 } /* 1180 */,
    std::pair{ "saturate", &saturate_Float32x3 } /* 1181 */,
    std::pair{ "saturate", &saturate_Float32x4 } /* 1182 */,
    std::pair{ "saturate", &saturate_Float16 } /* 1183 */,
    std::pair{ "saturate", &saturate_Float16x2 } /* 1184 */,
    std::pair{ "saturate", &saturate_Float16x3 } /* 1185 */,
    std::pair{ "saturate", &saturate_Float16x4 } /* 1186 */,
    std::pair{ "sign", &sign_Int32 } /* 1187 */,
    std::pair{ "sign", &sign_Int32x2 } /* 1188 */,
    std::pair{ "sign", &sign_Int32x3 } /* 1189 */,
    std::pair{ "sign", &sign_Int32x4 } /* 1190 */,
    std::pair{ "sign", &sign_Int16 } /* 1191 */,
    std::pair{ "sign", &sign_Int16x2 } /* 1192 */,
    std::pair{ "sign", &sign_Int16x3 } /* 1193 */,
    std::pair{ "sign", &sign_Int16x4 } /* 1194 */,
    std::pair{ "sign", &sign_Float32 } /* 1195 */,
    std::pair{ "sign", &sign_Float32x2 } /* 1196 */,
    std::pair{ "sign", &sign_Float32x3 } /* 1197 */,
    std::pair{ "sign", &sign_Float32x4 } /* 1198 */,
    std::pair{ "sign", &sign_Float16 } /* 1199 */,
    std::pair{ "sign", &sign_Float16x2 } /* 1200 */,
    std::pair{ "sign", &sign_Float16x3 } /* 1201 */,
    std::pair{ "sign", &sign_Float16x4 } /* 1202 */,
    std::pair{ "sin", &sin_Float32 } /* 1203 */,
    std::pair{ "sin", &sin_Float32x2 } /* 1204 */,
    std::pair{ "sin", &sin_Float32x3 } /* 1205 */,
    std::pair{ "sin", &sin_Float32x4 } /* 1206 */,
    std::pair{ "sin", &sin_Float16 } /* 1207 */,
    std::pair{ "sin", &sin_Float16x2 } /* 1208 */,
    std::pair{ "sin", &sin_Float16x3 } /* 1209 */,
    std::pair{ "sin", &sin_Float16x4 } /* 1210 */,
    std::pair{ "sinh", &sinh_Float32 } /* 1211 */,
    std::pair{ "sinh", &sinh_Float32x2 } /* 1212 */,
    std::pair{ "sinh", &sinh_Float32x3 } /* 1213 */,
    std::pair{ "sinh", &sinh_Float32x4 } /* 1214 */,
    std::pair{ "sinh", &sinh_Float16 } /* 1215 */,
    std::pair{ "sinh", &sinh_Float16x2 } /* 1216 */,
    std::pair{ "sinh", &sinh_Float16x3 } /* 1217 */,
    std::pair{ "sinh", &sinh_Float16x4 } /* 1218 */,
    std::pair{ "smoothstep", &smoothstep_Float32 } /* 1219 */,
    std::pair{ "smoothstep", &smoothstep_Float32x2 } /* 1220 */,
    std::pair{ "smoothstep", &smoothstep_Float32x3 } /* 1221 */,
    std::pair{ "smoothstep", &smoothstep_Float32x4 } /* 1222 */,
    std::pair{ "smoothstep", &smoothstep_Float16 } /* 1223 */,
    std::pair{ "smoothstep", &smoothstep_Float16x2 } /* 1224 */,
    std::pair{ "smoothstep", &smoothstep_Float16x3 } /* 1225 */,
    std::pair{ "smoothstep", &smoothstep_Float16x4 } /* 1226 */,
    std::pair{ "sqrt", &sqrt_Float32 } /* 1227 */,
    std::pair{ "sqrt", &sqrt_Float32x2 } /* 1228 */,
    std::pair{ "sqrt", &sqrt_Float32x3 } /* 1229 */,
    std::pair{ "sqrt", &sqrt_Float32x4 } /* 1230 */,
    std::pair{ "sqrt", &sqrt_Float16 } /* 1231 */,
    std::pair{ "sqrt", &sqrt_Float16x2 } /* 1232 */,
    std::pair{ "sqrt", &sqrt_Float16x3 } /* 1233 */,
    std::pair{ "sqrt", &sqrt_Float16x4 } /* 1234 */,
    std::pair{ "step", &step_Float32 } /* 1235 */,
    std::pair{ "step", &step_Float32x2 } /* 1236 */,
    std::pair{ "step", &step_Float32x3 } /* 1237 */,
    std::pair{ "step", &step_Float32x4 } /* 1238 */,
    std::pair{ "step", &step_Float16 } /* 1239 */,
    std::pair{ "step", &step_Float16x2 } /* 1240 */,
    std::pair{ "step", &step_Float16x3 } /* 1241 */,
    std::pair{ "step", &step_Float16x4 } /* 1242 */,
    std::pair{ "subgroupBallot", &SubgroupBallot } /* 1243 */,
    std::pair{ "subgroupBallotBit", &SubgroupBallotBit } /* 1244 */,
    std::pair{ "subgroupBallotBitCount", &SubgroupBallotBitCount } /* 1245 */,
    std::pair{ "subgroupBallotFirstOne", &SubgroupBallotFirstOne } /* 1246 */,
    std::pair{ "subgroupBallotLastOne", &SubgroupBallotLastOne } /* 1247 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Float32 } /* 1248 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Float32x2 } /* 1249 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Float32x3 } /* 1250 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Float32x4 } /* 1251 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Float16 } /* 1252 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Float16x2 } /* 1253 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Float16x3 } /* 1254 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Float16x4 } /* 1255 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Int32 } /* 1256 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Int32x2 } /* 1257 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Int32x3 } /* 1258 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Int32x4 } /* 1259 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Int16 } /* 1260 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Int16x2 } /* 1261 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Int16x3 } /* 1262 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_Int16x4 } /* 1263 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_UInt32 } /* 1264 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_UInt32x2 } /* 1265 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_UInt32x3 } /* 1266 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_UInt32x4 } /* 1267 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_UInt16 } /* 1268 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_UInt16x2 } /* 1269 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_UInt16x3 } /* 1270 */,
    std::pair{ "subgroupBroadcastFirstActiveThread", &SubgroupBroadcastFirstActiveThread_UInt16x4 } /* 1271 */,
    std::pair{ "subgroupGetFirstActiveThread", &SubgroupGetFirstActiveThread } /* 1272 */,
    std::pair{ "subgroupGetGreaterMask", &SubgroupGetGreaterMask } /* 1273 */,
    std::pair{ "subgroupGetId", &SubgroupGetId } /* 1274 */,
    std::pair{ "subgroupGetLowerMask", &SubgroupGetLowerMask } /* 1275 */,
    std::pair{ "subgroupGetNum", &SubgroupGetNum } /* 1276 */,
    std::pair{ "subgroupGetSize", &SubgroupGetSize } /* 1277 */,
    std::pair{ "subgroupGetThreadAndGreaterMask", &SubgroupGetThreadAndGreaterMask } /* 1278 */,
    std::pair{ "subgroupGetThreadAndLowerMask", &SubgroupGetThreadAndLowerMask } /* 1279 */,
    std::pair{ "subgroupGetThreadMask", &SubgroupGetThreadMask } /* 1280 */,
    std::pair{ "subgroupInverseBallot", &SubgroupInverseBallot } /* 1281 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Float32 } /* 1282 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Float32x2 } /* 1283 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Float32x3 } /* 1284 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Float32x4 } /* 1285 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Float16 } /* 1286 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Float16x2 } /* 1287 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Float16x3 } /* 1288 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Float16x4 } /* 1289 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Int32 } /* 1290 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Int32x2 } /* 1291 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Int32x3 } /* 1292 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Int32x4 } /* 1293 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Int16 } /* 1294 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Int16x2 } /* 1295 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Int16x3 } /* 1296 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_Int16x4 } /* 1297 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_UInt32 } /* 1298 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_UInt32x2 } /* 1299 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_UInt32x3 } /* 1300 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_UInt32x4 } /* 1301 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_UInt16 } /* 1302 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_UInt16x2 } /* 1303 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_UInt16x3 } /* 1304 */,
    std::pair{ "subgroupSwapDiagonal", &SubgroupSwapDiagonal_UInt16x4 } /* 1305 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Float32 } /* 1306 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Float32x2 } /* 1307 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Float32x3 } /* 1308 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Float32x4 } /* 1309 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Float16 } /* 1310 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Float16x2 } /* 1311 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Float16x3 } /* 1312 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Float16x4 } /* 1313 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Int32 } /* 1314 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Int32x2 } /* 1315 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Int32x3 } /* 1316 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Int32x4 } /* 1317 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Int16 } /* 1318 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Int16x2 } /* 1319 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Int16x3 } /* 1320 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_Int16x4 } /* 1321 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_UInt32 } /* 1322 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_UInt32x2 } /* 1323 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_UInt32x3 } /* 1324 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_UInt32x4 } /* 1325 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_UInt16 } /* 1326 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_UInt16x2 } /* 1327 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_UInt16x3 } /* 1328 */,
    std::pair{ "subgroupSwapHorizontal", &SubgroupSwapHorizontal_UInt16x4 } /* 1329 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Float32 } /* 1330 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Float32x2 } /* 1331 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Float32x3 } /* 1332 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Float32x4 } /* 1333 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Float16 } /* 1334 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Float16x2 } /* 1335 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Float16x3 } /* 1336 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Float16x4 } /* 1337 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Int32 } /* 1338 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Int32x2 } /* 1339 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Int32x3 } /* 1340 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Int32x4 } /* 1341 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Int16 } /* 1342 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Int16x2 } /* 1343 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Int16x3 } /* 1344 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_Int16x4 } /* 1345 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_UInt32 } /* 1346 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_UInt32x2 } /* 1347 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_UInt32x3 } /* 1348 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_UInt32x4 } /* 1349 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_UInt16 } /* 1350 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_UInt16x2 } /* 1351 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_UInt16x3 } /* 1352 */,
    std::pair{ "subgroupSwapVertical", &SubgroupSwapVertical_UInt16x4 } /* 1353 */,
    std::pair{ "tan", &tan_Float32 } /* 1354 */,
    std::pair{ "tan", &tan_Float32x2 } /* 1355 */,
    std::pair{ "tan", &tan_Float32x3 } /* 1356 */,
    std::pair{ "tan", &tan_Float32x4 } /* 1357 */,
    std::pair{ "tan", &tan_Float16 } /* 1358 */,
    std::pair{ "tan", &tan_Float16x2 } /* 1359 */,
    std::pair{ "tan", &tan_Float16x3 } /* 1360 */,
    std::pair{ "tan", &tan_Float16x4 } /* 1361 */,
    std::pair{ "tanh", &tanh_Float32 } /* 1362 */,
    std::pair{ "tanh", &tanh_Float32x2 } /* 1363 */,
    std::pair{ "tanh", &tanh_Float32x3 } /* 1364 */,
    std::pair{ "tanh", &tanh_Float32x4 } /* 1365 */,
    std::pair{ "tanh", &tanh_Float16 } /* 1366 */,
    std::pair{ "tanh", &tanh_Float16x2 } /* 1367 */,
    std::pair{ "tanh", &tanh_Float16x3 } /* 1368 */,
    std::pair{ "tanh", &tanh_Float16x4 } /* 1369 */,
    std::pair{ "tanh", &atan2_Float32 } /* 1370 */,
    std::pair{ "tanh", &atan2_Float32x2 } /* 1371 */,
    std::pair{ "tanh", &atan2_Float32x3 } /* 1372 */,
    std::pair{ "tanh", &atan2_Float32x4 } /* 1373 */,
    std::pair{ "tanh", &atan2_Float16 } /* 1374 */,
    std::pair{ "tanh", &atan2_Float16x2 } /* 1375 */,
    std::pair{ "tanh", &atan2_Float16x3 } /* 1376 */,
    std::pair{ "tanh", &atan2_Float16x4 } /* 1377 */,
    std::pair{ "textureFetch", &TextureFetch_Texture1D } /* 1378 */,
    std::pair{ "textureFetch", &TextureFetch_Texture2D } /* 1379 */,
    std::pair{ "textureFetch", &TextureFetch_Texture3D } /* 1380 */,
    std::pair{ "textureFetch", &TextureFetch_Texture1DArray } /* 1381 */,
    std::pair{ "textureFetch", &TextureFetch_Texture2DArray } /* 1382 */,
    std::pair{ "textureFetch", &TextureFetch_Texture2DMS } /* 1383 */,
    std::pair{ "textureFetch", &TextureFetch_Texture2DMSArray } /* 1384 */,
    std::pair{ "textureFetchSample", &TextureFetchSample_Texture1D } /* 1385 */,
    std::pair{ "textureFetchSample", &TextureFetchSample_Texture2D } /* 1386 */,
    std::pair{ "textureFetchSample", &TextureFetchSample_Texture3D } /* 1387 */,
    std::pair{ "textureFetchSample", &TextureFetchSample_Texture1DArray } /* 1388 */,
    std::pair{ "textureFetchSample", &TextureFetchSample_Texture2DArray } /* 1389 */,
    std::pair{ "textureFetchSample", &TextureFetchSample_Texture2DMS } /* 1390 */,
    std::pair{ "textureFetchSample", &TextureFetchSample_Texture2DMSArray } /* 1391 */,
    std::pair{ "textureGather", &TextureGather_Texture2D } /* 1392 */,
    std::pair{ "textureGather", &SampledTextureGather_Texture2D } /* 1393 */,
    std::pair{ "textureGather", &TextureGather_TextureCube } /* 1394 */,
    std::pair{ "textureGather", &SampledTextureGather_TextureCube } /* 1395 */,
    std::pair{ "textureGather", &TextureGather_Texture2DArray } /* 1396 */,
    std::pair{ "textureGather", &SampledTextureGather_Texture2DArray } /* 1397 */,
    std::pair{ "textureGather", &TextureGather_TextureCubeArray } /* 1398 */,
    std::pair{ "textureGather", &SampledTextureGather_TextureCubeArray } /* 1399 */,
    std::pair{ "textureGatherOffset", &TextureGatherOffset_Texture2D } /* 1400 */,
    std::pair{ "textureGatherOffset", &SampledTextureGatherOffset_Texture2D } /* 1401 */,
    std::pair{ "textureGatherOffset", &TextureGatherOffset_TextureCube } /* 1402 */,
    std::pair{ "textureGatherOffset", &SampledTextureGatherOffset_TextureCube } /* 1403 */,
    std::pair{ "textureGatherOffset", &TextureGatherOffset_Texture2DArray } /* 1404 */,
    std::pair{ "textureGatherOffset", &SampledTextureGatherOffset_Texture2DArray } /* 1405 */,
    std::pair{ "textureGatherOffset", &TextureGatherOffset_TextureCubeArray } /* 1406 */,
    std::pair{ "textureGatherOffset", &SampledTextureGatherOffset_TextureCubeArray } /* 1407 */,
    std::pair{ "textureGetMips", &TextureGetMips_Texture1D } /* 1408 */,
    std::pair{ "textureGetMips", &TextureGetMips_Texture2D } /* 1409 */,
    std::pair{ "textureGetMips", &TextureGetMips_Texture3D } /* 1410 */,
    std::pair{ "textureGetMips", &TextureGetMips_TextureCube } /* 1411 */,
    std::pair{ "textureGetMips", &TextureGetMips_Texture1DArray } /* 1412 */,
    std::pair{ "textureGetMips", &TextureGetMips_Texture2DArray } /* 1413 */,
    std::pair{ "textureGetMips", &TextureGetMips_TextureCubeArray } /* 1414 */,
    std::pair{ "textureGetSampledMip", &TextureGetSampledMip_Texture1D } /* 1415 */,
    std::pair{ "textureGetSampledMip", &SampledTextureGetSampledMip_Texture1D } /* 1416 */,
    std::pair{ "textureGetSampledMip", &TextureGetSampledMip_Texture2D } /* 1417 */,
    std::pair{ "textureGetSampledMip", &SampledTextureGetSampledMip_Texture2D } /* 1418 */,
    std::pair{ "textureGetSampledMip", &TextureGetSampledMip_Texture3D } /* 1419 */,
    std::pair{ "textureGetSampledMip", &SampledTextureGetSampledMip_Texture3D } /* 1420 */,
    std::pair{ "textureGetSampledMip", &TextureGetSampledMip_TextureCube } /* 1421 */,
    std::pair{ "textureGetSampledMip", &SampledTextureGetSampledMip_TextureCube } /* 1422 */,
    std::pair{ "textureGetSampledMip", &TextureGetSampledMip_Texture1DArray } /* 1423 */,
    std::pair{ "textureGetSampledMip", &SampledTextureGetSampledMip_Texture1DArray } /* 1424 */,
    std::pair{ "textureGetSampledMip", &TextureGetSampledMip_Texture2DArray } /* 1425 */,
    std::pair{ "textureGetSampledMip", &SampledTextureGetSampledMip_Texture2DArray } /* 1426 */,
    std::pair{ "textureGetSampledMip", &TextureGetSampledMip_TextureCubeArray } /* 1427 */,
    std::pair{ "textureGetSampledMip", &SampledTextureGetSampledMip_TextureCubeArray } /* 1428 */,
    std::pair{ "textureGetSamples", &TextureGetSamples_Texture2DMS } /* 1429 */,
    std::pair{ "textureGetSamples", &TextureGetSamples_Texture2DMSArray } /* 1430 */,
    std::pair{ "textureGetSize", &TextureGetSize_Texture1D } /* 1431 */,
    std::pair{ "textureGetSize", &TextureGetSize_Texture2D } /* 1432 */,
    std::pair{ "textureGetSize", &TextureGetSize_Texture3D } /* 1433 */,
    std::pair{ "textureGetSize", &TextureGetSize_TextureCube } /* 1434 */,
    std::pair{ "textureGetSize", &TextureGetSize_Texture1DArray } /* 1435 */,
    std::pair{ "textureGetSize", &TextureGetSize_Texture2DArray } /* 1436 */,
    std::pair{ "textureGetSize", &TextureGetSize_TextureCubeArray } /* 1437 */,
    std::pair{ "textureGetSizeMip", &TextureGetSizeMip_Texture1D } /* 1438 */,
    std::pair{ "textureGetSizeMip", &TextureGetSizeMip_Texture2D } /* 1439 */,
    std::pair{ "textureGetSizeMip", &TextureGetSizeMip_Texture3D } /* 1440 */,
    std::pair{ "textureGetSizeMip", &TextureGetSizeMip_TextureCube } /* 1441 */,
    std::pair{ "textureGetSizeMip", &TextureGetSizeMip_Texture1DArray } /* 1442 */,
    std::pair{ "textureGetSizeMip", &TextureGetSizeMip_Texture2DArray } /* 1443 */,
    std::pair{ "textureGetSizeMip", &TextureGetSizeMip_TextureCubeArray } /* 1444 */,
    std::pair{ "textureLoad", &TextureLoad_Texture1D } /* 1445 */,
    std::pair{ "textureLoad", &TextureLoad_Texture2D } /* 1446 */,
    std::pair{ "textureLoad", &TextureLoad_Texture3D } /* 1447 */,
    std::pair{ "textureLoad", &TextureLoad_TextureCube } /* 1448 */,
    std::pair{ "textureLoad", &TextureLoad_Texture1DArray } /* 1449 */,
    std::pair{ "textureLoad", &TextureLoad_Texture2DArray } /* 1450 */,
    std::pair{ "textureLoad", &TextureLoad_TextureCubeArray } /* 1451 */,
    std::pair{ "textureLoad", &TextureLoad_Texture2DMS } /* 1452 */,
    std::pair{ "textureLoad", &TextureLoad_Texture2DMSArray } /* 1453 */,
    std::pair{ "textureLoadMip", &TextureLoadMip_Texture1D } /* 1454 */,
    std::pair{ "textureLoadMip", &TextureLoadMip_Texture2D } /* 1455 */,
    std::pair{ "textureLoadMip", &TextureLoadMip_Texture3D } /* 1456 */,
    std::pair{ "textureLoadMip", &TextureLoadMip_TextureCube } /* 1457 */,
    std::pair{ "textureLoadMip", &TextureLoadMip_Texture1DArray } /* 1458 */,
    std::pair{ "textureLoadMip", &TextureLoadMip_Texture2DArray } /* 1459 */,
    std::pair{ "textureLoadMip", &TextureLoadMip_TextureCubeArray } /* 1460 */,
    std::pair{ "textureLoadMip", &TextureLoadMip_Texture2DMS } /* 1461 */,
    std::pair{ "textureLoadMip", &TextureLoadMip_Texture2DMSArray } /* 1462 */,
    std::pair{ "texturePixelCacheLoad", &TexturePixelCacheLoad_PixelCache } /* 1463 */,
    std::pair{ "texturePixelCacheLoad", &TexturePixelCacheLoad_PixelCacheMS } /* 1464 */,
    std::pair{ "textureSample", &TextureSample_Texture1D } /* 1465 */,
    std::pair{ "textureSample", &SampledTextureSample_Texture1D } /* 1466 */,
    std::pair{ "textureSample", &TextureSample_Texture2D } /* 1467 */,
    std::pair{ "textureSample", &SampledTextureSample_Texture2D } /* 1468 */,
    std::pair{ "textureSample", &TextureSample_Texture3D } /* 1469 */,
    std::pair{ "textureSample", &SampledTextureSample_Texture3D } /* 1470 */,
    std::pair{ "textureSample", &TextureSample_TextureCube } /* 1471 */,
    std::pair{ "textureSample", &SampledTextureSample_TextureCube } /* 1472 */,
    std::pair{ "textureSample", &TextureSample_Texture1DArray } /* 1473 */,
    std::pair{ "textureSample", &SampledTextureSample_Texture1DArray } /* 1474 */,
    std::pair{ "textureSample", &TextureSample_Texture2DArray } /* 1475 */,
    std::pair{ "textureSample", &SampledTextureSample_Texture2DArray } /* 1476 */,
    std::pair{ "textureSample", &TextureSample_TextureCubeArray } /* 1477 */,
    std::pair{ "textureSample", &SampledTextureSample_TextureCubeArray } /* 1478 */,
    std::pair{ "textureSampleBias", &TextureSampleBias_Texture1D } /* 1479 */,
    std::pair{ "textureSampleBias", &SampledTextureSampleBias_Texture1D } /* 1480 */,
    std::pair{ "textureSampleBias", &TextureSampleBias_Texture2D } /* 1481 */,
    std::pair{ "textureSampleBias", &SampledTextureSampleBias_Texture2D } /* 1482 */,
    std::pair{ "textureSampleBias", &TextureSampleBias_Texture3D } /* 1483 */,
    std::pair{ "textureSampleBias", &SampledTextureSampleBias_Texture3D } /* 1484 */,
    std::pair{ "textureSampleBias", &TextureSampleBias_TextureCube } /* 1485 */,
    std::pair{ "textureSampleBias", &SampledTextureSampleBias_TextureCube } /* 1486 */,
    std::pair{ "textureSampleBias", &TextureSampleBias_Texture1DArray } /* 1487 */,
    std::pair{ "textureSampleBias", &SampledTextureSampleBias_Texture1DArray } /* 1488 */,
    std::pair{ "textureSampleBias", &TextureSampleBias_Texture2DArray } /* 1489 */,
    std::pair{ "textureSampleBias", &SampledTextureSampleBias_Texture2DArray } /* 1490 */,
    std::pair{ "textureSampleBias", &TextureSampleBias_TextureCubeArray } /* 1491 */,
    std::pair{ "textureSampleBias", &SampledTextureSampleBias_TextureCubeArray } /* 1492 */,
    std::pair{ "textureSampleBiasCompare", &TextureSampleBiasCompare_Texture1D } /* 1493 */,
    std::pair{ "textureSampleBiasCompare", &SampledTextureSampleBiasCompare_Texture1D } /* 1494 */,
    std::pair{ "textureSampleBiasCompare", &TextureSampleBiasCompare_Texture2D } /* 1495 */,
    std::pair{ "textureSampleBiasCompare", &SampledTextureSampleBiasCompare_Texture2D } /* 1496 */,
    std::pair{ "textureSampleBiasCompare", &TextureSampleBiasCompare_Texture3D } /* 1497 */,
    std::pair{ "textureSampleBiasCompare", &SampledTextureSampleBiasCompare_Texture3D } /* 1498 */,
    std::pair{ "textureSampleBiasCompare", &TextureSampleBiasCompare_Texture1DArray } /* 1499 */,
    std::pair{ "textureSampleBiasCompare", &SampledTextureSampleBiasCompare_Texture1DArray } /* 1500 */,
    std::pair{ "textureSampleBiasCompare", &TextureSampleBiasCompare_Texture2DArray } /* 1501 */,
    std::pair{ "textureSampleBiasCompare", &SampledTextureSampleBiasCompare_Texture2DArray } /* 1502 */,
    std::pair{ "textureSampleBiasCompareOffset", &TextureSampleBiasCompareOffset_Texture1D } /* 1503 */,
    std::pair{ "textureSampleBiasCompareOffset", &SampledTextureSampleBiasCompareOffset_Texture1D } /* 1504 */,
    std::pair{ "textureSampleBiasCompareOffset", &TextureSampleBiasCompareOffset_Texture2D } /* 1505 */,
    std::pair{ "textureSampleBiasCompareOffset", &SampledTextureSampleBiasCompareOffset_Texture2D } /* 1506 */,
    std::pair{ "textureSampleBiasCompareOffset", &TextureSampleBiasCompareOffset_Texture3D } /* 1507 */,
    std::pair{ "textureSampleBiasCompareOffset", &SampledTextureSampleBiasCompareOffset_Texture3D } /* 1508 */,
    std::pair{ "textureSampleBiasCompareOffset", &TextureSampleBiasCompareOffset_Texture1DArray } /* 1509 */,
    std::pair{ "textureSampleBiasCompareOffset", &SampledTextureSampleBiasCompareOffset_Texture1DArray } /* 1510 */,
    std::pair{ "textureSampleBiasCompareOffset", &TextureSampleBiasCompareOffset_Texture2DArray } /* 1511 */,
    std::pair{ "textureSampleBiasCompareOffset", &SampledTextureSampleBiasCompareOffset_Texture2DArray } /* 1512 */,
    std::pair{ "textureSampleBiasOffset", &TextureSampleBiasOffset_Texture1D } /* 1513 */,
    std::pair{ "textureSampleBiasOffset", &SampledTextureSampleBiasOffset_Texture1D } /* 1514 */,
    std::pair{ "textureSampleBiasOffset", &TextureSampleBiasOffset_Texture2D } /* 1515 */,
    std::pair{ "textureSampleBiasOffset", &SampledTextureSampleBiasOffset_Texture2D } /* 1516 */,
    std::pair{ "textureSampleBiasOffset", &TextureSampleBiasOffset_Texture3D } /* 1517 */,
    std::pair{ "textureSampleBiasOffset", &SampledTextureSampleBiasOffset_Texture3D } /* 1518 */,
    std::pair{ "textureSampleBiasOffset", &TextureSampleBiasOffset_Texture1DArray } /* 1519 */,
    std::pair{ "textureSampleBiasOffset", &SampledTextureSampleBiasOffset_Texture1DArray } /* 1520 */,
    std::pair{ "textureSampleBiasOffset", &TextureSampleBiasOffset_Texture2DArray } /* 1521 */,
    std::pair{ "textureSampleBiasOffset", &SampledTextureSampleBiasOffset_Texture2DArray } /* 1522 */,
    std::pair{ "textureSampleBiasProj", &TextureSampleBiasProj_Texture1D } /* 1523 */,
    std::pair{ "textureSampleBiasProj", &SampledTextureSampleBiasProj_Texture1D } /* 1524 */,
    std::pair{ "textureSampleBiasProj", &TextureSampleBiasProj_Texture2D } /* 1525 */,
    std::pair{ "textureSampleBiasProj", &SampledTextureSampleBiasProj_Texture2D } /* 1526 */,
    std::pair{ "textureSampleBiasProj", &TextureSampleBiasProj_Texture3D } /* 1527 */,
    std::pair{ "textureSampleBiasProj", &SampledTextureSampleBiasProj_Texture3D } /* 1528 */,
    std::pair{ "textureSampleBiasProjCompare", &TextureSampleBiasProjCompare_Texture1D } /* 1529 */,
    std::pair{ "textureSampleBiasProjCompare", &SampledTextureSampleBiasProjCompare_Texture1D } /* 1530 */,
    std::pair{ "textureSampleBiasProjCompare", &TextureSampleBiasProjCompare_Texture2D } /* 1531 */,
    std::pair{ "textureSampleBiasProjCompare", &SampledTextureSampleBiasProjCompare_Texture2D } /* 1532 */,
    std::pair{ "textureSampleBiasProjCompare", &TextureSampleBiasProjCompare_Texture3D } /* 1533 */,
    std::pair{ "textureSampleBiasProjCompare", &SampledTextureSampleBiasProjCompare_Texture3D } /* 1534 */,
    std::pair{ "textureSampleBiasProjCompareOffset", &TextureSampleBiasProjCompareOffset_Texture1D } /* 1535 */,
    std::pair{ "textureSampleBiasProjCompareOffset", &SampledTextureSampleBiasProjCompareOffset_Texture1D } /* 1536 */,
    std::pair{ "textureSampleBiasProjCompareOffset", &TextureSampleBiasProjCompareOffset_Texture2D } /* 1537 */,
    std::pair{ "textureSampleBiasProjCompareOffset", &SampledTextureSampleBiasProjCompareOffset_Texture2D } /* 1538 */,
    std::pair{ "textureSampleBiasProjCompareOffset", &TextureSampleBiasProjCompareOffset_Texture3D } /* 1539 */,
    std::pair{ "textureSampleBiasProjCompareOffset", &SampledTextureSampleBiasProjCompareOffset_Texture3D } /* 1540 */,
    std::pair{ "textureSampleBiasProjOffset", &TextureSampleBiasProjOffset_Texture1D } /* 1541 */,
    std::pair{ "textureSampleBiasProjOffset", &SampledTextureSampleBiasProjOffset_Texture1D } /* 1542 */,
    std::pair{ "textureSampleBiasProjOffset", &TextureSampleBiasProjOffset_Texture2D } /* 1543 */,
    std::pair{ "textureSampleBiasProjOffset", &SampledTextureSampleBiasProjOffset_Texture2D } /* 1544 */,
    std::pair{ "textureSampleBiasProjOffset", &TextureSampleBiasProjOffset_Texture3D } /* 1545 */,
    std::pair{ "textureSampleBiasProjOffset", &SampledTextureSampleBiasProjOffset_Texture3D } /* 1546 */,
    std::pair{ "textureSampleCompare", &TextureSampleCompare_Texture1D } /* 1547 */,
    std::pair{ "textureSampleCompare", &SampledTextureSampleCompare_Texture1D } /* 1548 */,
    std::pair{ "textureSampleCompare", &TextureSampleCompare_Texture2D } /* 1549 */,
    std::pair{ "textureSampleCompare", &SampledTextureSampleCompare_Texture2D } /* 1550 */,
    std::pair{ "textureSampleCompare", &TextureSampleCompare_Texture3D } /* 1551 */,
    std::pair{ "textureSampleCompare", &SampledTextureSampleCompare_Texture3D } /* 1552 */,
    std::pair{ "textureSampleCompare", &TextureSampleCompare_Texture1DArray } /* 1553 */,
    std::pair{ "textureSampleCompare", &SampledTextureSampleCompare_Texture1DArray } /* 1554 */,
    std::pair{ "textureSampleCompare", &TextureSampleCompare_Texture2DArray } /* 1555 */,
    std::pair{ "textureSampleCompare", &SampledTextureSampleCompare_Texture2DArray } /* 1556 */,
    std::pair{ "textureSampleCompareOffset", &TextureSampleCompareOffset_Texture1D } /* 1557 */,
    std::pair{ "textureSampleCompareOffset", &SampledTextureSampleCompareOffset_Texture1D } /* 1558 */,
    std::pair{ "textureSampleCompareOffset", &TextureSampleCompareOffset_Texture2D } /* 1559 */,
    std::pair{ "textureSampleCompareOffset", &SampledTextureSampleCompareOffset_Texture2D } /* 1560 */,
    std::pair{ "textureSampleCompareOffset", &TextureSampleCompareOffset_Texture3D } /* 1561 */,
    std::pair{ "textureSampleCompareOffset", &SampledTextureSampleCompareOffset_Texture3D } /* 1562 */,
    std::pair{ "textureSampleCompareOffset", &TextureSampleCompareOffset_Texture1DArray } /* 1563 */,
    std::pair{ "textureSampleCompareOffset", &SampledTextureSampleCompareOffset_Texture1DArray } /* 1564 */,
    std::pair{ "textureSampleCompareOffset", &TextureSampleCompareOffset_Texture2DArray } /* 1565 */,
    std::pair{ "textureSampleCompareOffset", &SampledTextureSampleCompareOffset_Texture2DArray } /* 1566 */,
    std::pair{ "textureSampleGrad", &TextureSampleGrad_Texture1D } /* 1567 */,
    std::pair{ "textureSampleGrad", &SampledTextureSampleGrad_Texture1D } /* 1568 */,
    std::pair{ "textureSampleGrad", &TextureSampleGrad_Texture2D } /* 1569 */,
    std::pair{ "textureSampleGrad", &SampledTextureSampleGrad_Texture2D } /* 1570 */,
    std::pair{ "textureSampleGrad", &TextureSampleGrad_Texture3D } /* 1571 */,
    std::pair{ "textureSampleGrad", &SampledTextureSampleGrad_Texture3D } /* 1572 */,
    std::pair{ "textureSampleGrad", &TextureSampleGrad_TextureCube } /* 1573 */,
    std::pair{ "textureSampleGrad", &SampledTextureSampleGrad_TextureCube } /* 1574 */,
    std::pair{ "textureSampleGrad", &TextureSampleGrad_Texture1DArray } /* 1575 */,
    std::pair{ "textureSampleGrad", &SampledTextureSampleGrad_Texture1DArray } /* 1576 */,
    std::pair{ "textureSampleGrad", &TextureSampleGrad_Texture2DArray } /* 1577 */,
    std::pair{ "textureSampleGrad", &SampledTextureSampleGrad_Texture2DArray } /* 1578 */,
    std::pair{ "textureSampleGrad", &TextureSampleGrad_TextureCubeArray } /* 1579 */,
    std::pair{ "textureSampleGrad", &SampledTextureSampleGrad_TextureCubeArray } /* 1580 */,
    std::pair{ "textureSampleGradCompare", &TextureSampleGradCompare_Texture1D } /* 1581 */,
    std::pair{ "textureSampleGradCompare", &SampledTextureSampleGradCompare_Texture1D } /* 1582 */,
    std::pair{ "textureSampleGradCompare", &TextureSampleGradCompare_Texture2D } /* 1583 */,
    std::pair{ "textureSampleGradCompare", &SampledTextureSampleGradCompare_Texture2D } /* 1584 */,
    std::pair{ "textureSampleGradCompare", &TextureSampleGradCompare_Texture3D } /* 1585 */,
    std::pair{ "textureSampleGradCompare", &SampledTextureSampleGradCompare_Texture3D } /* 1586 */,
    std::pair{ "textureSampleGradCompare", &TextureSampleGradCompare_Texture1DArray } /* 1587 */,
    std::pair{ "textureSampleGradCompare", &SampledTextureSampleGradCompare_Texture1DArray } /* 1588 */,
    std::pair{ "textureSampleGradCompare", &TextureSampleGradCompare_Texture2DArray } /* 1589 */,
    std::pair{ "textureSampleGradCompare", &SampledTextureSampleGradCompare_Texture2DArray } /* 1590 */,
    std::pair{ "textureSampleGradCompareOffset", &TextureSampleGradCompareOffset_Texture1D } /* 1591 */,
    std::pair{ "textureSampleGradCompareOffset", &SampledTextureSampleGradCompareOffset_Texture1D } /* 1592 */,
    std::pair{ "textureSampleGradCompareOffset", &TextureSampleGradCompareOffset_Texture2D } /* 1593 */,
    std::pair{ "textureSampleGradCompareOffset", &SampledTextureSampleGradCompareOffset_Texture2D } /* 1594 */,
    std::pair{ "textureSampleGradCompareOffset", &TextureSampleGradCompareOffset_Texture3D } /* 1595 */,
    std::pair{ "textureSampleGradCompareOffset", &SampledTextureSampleGradCompareOffset_Texture3D } /* 1596 */,
    std::pair{ "textureSampleGradCompareOffset", &TextureSampleGradCompareOffset_Texture1DArray } /* 1597 */,
    std::pair{ "textureSampleGradCompareOffset", &SampledTextureSampleGradCompareOffset_Texture1DArray } /* 1598 */,
    std::pair{ "textureSampleGradCompareOffset", &TextureSampleGradCompareOffset_Texture2DArray } /* 1599 */,
    std::pair{ "textureSampleGradCompareOffset", &SampledTextureSampleGradCompareOffset_Texture2DArray } /* 1600 */,
    std::pair{ "textureSampleGradOffset", &TextureSampleGradOffset_Texture1D } /* 1601 */,
    std::pair{ "textureSampleGradOffset", &SampledTextureSampleGradOffset_Texture1D } /* 1602 */,
    std::pair{ "textureSampleGradOffset", &TextureSampleGradOffset_Texture2D } /* 1603 */,
    std::pair{ "textureSampleGradOffset", &SampledTextureSampleGradOffset_Texture2D } /* 1604 */,
    std::pair{ "textureSampleGradOffset", &TextureSampleGradOffset_Texture3D } /* 1605 */,
    std::pair{ "textureSampleGradOffset", &SampledTextureSampleGradOffset_Texture3D } /* 1606 */,
    std::pair{ "textureSampleGradOffset", &TextureSampleGradOffset_Texture1DArray } /* 1607 */,
    std::pair{ "textureSampleGradOffset", &SampledTextureSampleGradOffset_Texture1DArray } /* 1608 */,
    std::pair{ "textureSampleGradOffset", &TextureSampleGradOffset_Texture2DArray } /* 1609 */,
    std::pair{ "textureSampleGradOffset", &SampledTextureSampleGradOffset_Texture2DArray } /* 1610 */,
    std::pair{ "textureSampleGradProj", &TextureSampleGradProj_Texture1D } /* 1611 */,
    std::pair{ "textureSampleGradProj", &SampledTextureSampleGradProj_Texture1D } /* 1612 */,
    std::pair{ "textureSampleGradProj", &TextureSampleGradProj_Texture2D } /* 1613 */,
    std::pair{ "textureSampleGradProj", &SampledTextureSampleGradProj_Texture2D } /* 1614 */,
    std::pair{ "textureSampleGradProj", &TextureSampleGradProj_Texture3D } /* 1615 */,
    std::pair{ "textureSampleGradProj", &SampledTextureSampleGradProj_Texture3D } /* 1616 */,
    std::pair{ "textureSampleGradProjCompare", &TextureSampleGradProjCompare_Texture1D } /* 1617 */,
    std::pair{ "textureSampleGradProjCompare", &SampledTextureSampleGradProjCompare_Texture1D } /* 1618 */,
    std::pair{ "textureSampleGradProjCompare", &TextureSampleGradProjCompare_Texture2D } /* 1619 */,
    std::pair{ "textureSampleGradProjCompare", &SampledTextureSampleGradProjCompare_Texture2D } /* 1620 */,
    std::pair{ "textureSampleGradProjCompare", &TextureSampleGradProjCompare_Texture3D } /* 1621 */,
    std::pair{ "textureSampleGradProjCompare", &SampledTextureSampleGradProjCompare_Texture3D } /* 1622 */,
    std::pair{ "textureSampleGradProjCompareOffset", &TextureSampleGradProjCompareOffset_Texture1D } /* 1623 */,
    std::pair{ "textureSampleGradProjCompareOffset", &SampledTextureSampleGradProjCompareOffset_Texture1D } /* 1624 */,
    std::pair{ "textureSampleGradProjCompareOffset", &TextureSampleGradProjCompareOffset_Texture2D } /* 1625 */,
    std::pair{ "textureSampleGradProjCompareOffset", &SampledTextureSampleGradProjCompareOffset_Texture2D } /* 1626 */,
    std::pair{ "textureSampleGradProjCompareOffset", &TextureSampleGradProjCompareOffset_Texture3D } /* 1627 */,
    std::pair{ "textureSampleGradProjCompareOffset", &SampledTextureSampleGradProjCompareOffset_Texture3D } /* 1628 */,
    std::pair{ "textureSampleGradProjOffset", &TextureSampleGradProjOffset_Texture1D } /* 1629 */,
    std::pair{ "textureSampleGradProjOffset", &SampledTextureSampleGradProjOffset_Texture1D } /* 1630 */,
    std::pair{ "textureSampleGradProjOffset", &TextureSampleGradProjOffset_Texture2D } /* 1631 */,
    std::pair{ "textureSampleGradProjOffset", &SampledTextureSampleGradProjOffset_Texture2D } /* 1632 */,
    std::pair{ "textureSampleGradProjOffset", &TextureSampleGradProjOffset_Texture3D } /* 1633 */,
    std::pair{ "textureSampleGradProjOffset", &SampledTextureSampleGradProjOffset_Texture3D } /* 1634 */,
    std::pair{ "textureSampleLod", &TextureSampleLod_Texture1D } /* 1635 */,
    std::pair{ "textureSampleLod", &SampledTextureSampleLod_Texture1D } /* 1636 */,
    std::pair{ "textureSampleLod", &TextureSampleLod_Texture2D } /* 1637 */,
    std::pair{ "textureSampleLod", &SampledTextureSampleLod_Texture2D } /* 1638 */,
    std::pair{ "textureSampleLod", &TextureSampleLod_Texture3D } /* 1639 */,
    std::pair{ "textureSampleLod", &SampledTextureSampleLod_Texture3D } /* 1640 */,
    std::pair{ "textureSampleLod", &TextureSampleLod_TextureCube } /* 1641 */,
    std::pair{ "textureSampleLod", &SampledTextureSampleLod_TextureCube } /* 1642 */,
    std::pair{ "textureSampleLod", &TextureSampleLod_Texture1DArray } /* 1643 */,
    std::pair{ "textureSampleLod", &SampledTextureSampleLod_Texture1DArray } /* 1644 */,
    std::pair{ "textureSampleLod", &TextureSampleLod_Texture2DArray } /* 1645 */,
    std::pair{ "textureSampleLod", &SampledTextureSampleLod_Texture2DArray } /* 1646 */,
    std::pair{ "textureSampleLod", &TextureSampleLod_TextureCubeArray } /* 1647 */,
    std::pair{ "textureSampleLod", &SampledTextureSampleLod_TextureCubeArray } /* 1648 */,
    std::pair{ "textureSampleLodCompare", &TextureSampleLodCompare_Texture1D } /* 1649 */,
    std::pair{ "textureSampleLodCompare", &SampledTextureSampleLodCompare_Texture1D } /* 1650 */,
    std::pair{ "textureSampleLodCompare", &TextureSampleLodCompare_Texture2D } /* 1651 */,
    std::pair{ "textureSampleLodCompare", &SampledTextureSampleLodCompare_Texture2D } /* 1652 */,
    std::pair{ "textureSampleLodCompare", &TextureSampleLodCompare_Texture3D } /* 1653 */,
    std::pair{ "textureSampleLodCompare", &SampledTextureSampleLodCompare_Texture3D } /* 1654 */,
    std::pair{ "textureSampleLodCompare", &TextureSampleLodCompare_Texture1DArray } /* 1655 */,
    std::pair{ "textureSampleLodCompare", &SampledTextureSampleLodCompare_Texture1DArray } /* 1656 */,
    std::pair{ "textureSampleLodCompare", &TextureSampleLodCompare_Texture2DArray } /* 1657 */,
    std::pair{ "textureSampleLodCompare", &SampledTextureSampleLodCompare_Texture2DArray } /* 1658 */,
    std::pair{ "textureSampleLodCompareOffset", &TextureSampleLodCompareOffset_Texture1D } /* 1659 */,
    std::pair{ "textureSampleLodCompareOffset", &SampledTextureSampleLodCompareOffset_Texture1D } /* 1660 */,
    std::pair{ "textureSampleLodCompareOffset", &TextureSampleLodCompareOffset_Texture2D } /* 1661 */,
    std::pair{ "textureSampleLodCompareOffset", &SampledTextureSampleLodCompareOffset_Texture2D } /* 1662 */,
    std::pair{ "textureSampleLodCompareOffset", &TextureSampleLodCompareOffset_Texture3D } /* 1663 */,
    std::pair{ "textureSampleLodCompareOffset", &SampledTextureSampleLodCompareOffset_Texture3D } /* 1664 */,
    std::pair{ "textureSampleLodCompareOffset", &TextureSampleLodCompareOffset_Texture1DArray } /* 1665 */,
    std::pair{ "textureSampleLodCompareOffset", &SampledTextureSampleLodCompareOffset_Texture1DArray } /* 1666 */,
    std::pair{ "textureSampleLodCompareOffset", &TextureSampleLodCompareOffset_Texture2DArray } /* 1667 */,
    std::pair{ "textureSampleLodCompareOffset", &SampledTextureSampleLodCompareOffset_Texture2DArray } /* 1668 */,
    std::pair{ "textureSampleLodOffset", &TextureSampleLodOffset_Texture1D } /* 1669 */,
    std::pair{ "textureSampleLodOffset", &SampledTextureSampleLodOffset_Texture1D } /* 1670 */,
    std::pair{ "textureSampleLodOffset", &TextureSampleLodOffset_Texture2D } /* 1671 */,
    std::pair{ "textureSampleLodOffset", &SampledTextureSampleLodOffset_Texture2D } /* 1672 */,
    std::pair{ "textureSampleLodOffset", &TextureSampleLodOffset_Texture3D } /* 1673 */,
    std::pair{ "textureSampleLodOffset", &SampledTextureSampleLodOffset_Texture3D } /* 1674 */,
    std::pair{ "textureSampleLodOffset", &TextureSampleLodOffset_Texture1DArray } /* 1675 */,
    std::pair{ "textureSampleLodOffset", &SampledTextureSampleLodOffset_Texture1DArray } /* 1676 */,
    std::pair{ "textureSampleLodOffset", &TextureSampleLodOffset_Texture2DArray } /* 1677 */,
    std::pair{ "textureSampleLodOffset", &SampledTextureSampleLodOffset_Texture2DArray } /* 1678 */,
    std::pair{ "textureSampleLodProj", &TextureSampleLodProj_Texture1D } /* 1679 */,
    std::pair{ "textureSampleLodProj", &SampledTextureSampleLodProj_Texture1D } /* 1680 */,
    std::pair{ "textureSampleLodProj", &TextureSampleLodProj_Texture2D } /* 1681 */,
    std::pair{ "textureSampleLodProj", &SampledTextureSampleLodProj_Texture2D } /* 1682 */,
    std::pair{ "textureSampleLodProj", &TextureSampleLodProj_Texture3D } /* 1683 */,
    std::pair{ "textureSampleLodProj", &SampledTextureSampleLodProj_Texture3D } /* 1684 */,
    std::pair{ "textureSampleLodProjCompare", &TextureSampleLodProjCompare_Texture1D } /* 1685 */,
    std::pair{ "textureSampleLodProjCompare", &SampledTextureSampleLodProjCompare_Texture1D } /* 1686 */,
    std::pair{ "textureSampleLodProjCompare", &TextureSampleLodProjCompare_Texture2D } /* 1687 */,
    std::pair{ "textureSampleLodProjCompare", &SampledTextureSampleLodProjCompare_Texture2D } /* 1688 */,
    std::pair{ "textureSampleLodProjCompare", &TextureSampleLodProjCompare_Texture3D } /* 1689 */,
    std::pair{ "textureSampleLodProjCompare", &SampledTextureSampleLodProjCompare_Texture3D } /* 1690 */,
    std::pair{ "textureSampleLodProjCompareOffset", &TextureSampleLodProjCompareOffset_Texture1D } /* 1691 */,
    std::pair{ "textureSampleLodProjCompareOffset", &SampledTextureSampleLodProjCompareOffset_Texture1D } /* 1692 */,
    std::pair{ "textureSampleLodProjCompareOffset", &TextureSampleLodProjCompareOffset_Texture2D } /* 1693 */,
    std::pair{ "textureSampleLodProjCompareOffset", &SampledTextureSampleLodProjCompareOffset_Texture2D } /* 1694 */,
    std::pair{ "textureSampleLodProjCompareOffset", &TextureSampleLodProjCompareOffset_Texture3D } /* 1695 */,
    std::pair{ "textureSampleLodProjCompareOffset", &SampledTextureSampleLodProjCompareOffset_Texture3D } /* 1696 */,
    std::pair{ "textureSampleLodProjOffset", &TextureSampleLodProjOffset_Texture1D } /* 1697 */,
    std::pair{ "textureSampleLodProjOffset", &SampledTextureSampleLodProjOffset_Texture1D } /* 1698 */,
    std::pair{ "textureSampleLodProjOffset", &TextureSampleLodProjOffset_Texture2D } /* 1699 */,
    std::pair{ "textureSampleLodProjOffset", &SampledTextureSampleLodProjOffset_Texture2D } /* 1700 */,
    std::pair{ "textureSampleLodProjOffset", &TextureSampleLodProjOffset_Texture3D } /* 1701 */,
    std::pair{ "textureSampleLodProjOffset", &SampledTextureSampleLodProjOffset_Texture3D } /* 1702 */,
    std::pair{ "textureSampleOffset", &TextureSampleOffset_Texture1D } /* 1703 */,
    std::pair{ "textureSampleOffset", &SampledTextureSampleOffset_Texture1D } /* 1704 */,
    std::pair{ "textureSampleOffset", &TextureSampleOffset_Texture2D } /* 1705 */,
    std::pair{ "textureSampleOffset", &SampledTextureSampleOffset_Texture2D } /* 1706 */,
    std::pair{ "textureSampleOffset", &TextureSampleOffset_Texture3D } /* 1707 */,
    std::pair{ "textureSampleOffset", &SampledTextureSampleOffset_Texture3D } /* 1708 */,
    std::pair{ "textureSampleOffset", &TextureSampleOffset_Texture1DArray } /* 1709 */,
    std::pair{ "textureSampleOffset", &SampledTextureSampleOffset_Texture1DArray } /* 1710 */,
    std::pair{ "textureSampleOffset", &TextureSampleOffset_Texture2DArray } /* 1711 */,
    std::pair{ "textureSampleOffset", &SampledTextureSampleOffset_Texture2DArray } /* 1712 */,
    std::pair{ "textureSampleProj", &TextureSampleProj_Texture1D } /* 1713 */,
    std::pair{ "textureSampleProj", &SampledTextureSampleProj_Texture1D } /* 1714 */,
    std::pair{ "textureSampleProj", &TextureSampleProj_Texture2D } /* 1715 */,
    std::pair{ "textureSampleProj", &SampledTextureSampleProj_Texture2D } /* 1716 */,
    std::pair{ "textureSampleProj", &TextureSampleProj_Texture3D } /* 1717 */,
    std::pair{ "textureSampleProj", &SampledTextureSampleProj_Texture3D } /* 1718 */,
    std::pair{ "textureSampleProjCompare", &TextureSampleProjCompare_Texture1D } /* 1719 */,
    std::pair{ "textureSampleProjCompare", &SampledTextureSampleProjCompare_Texture1D } /* 1720 */,
    std::pair{ "textureSampleProjCompare", &TextureSampleProjCompare_Texture2D } /* 1721 */,
    std::pair{ "textureSampleProjCompare", &SampledTextureSampleProjCompare_Texture2D } /* 1722 */,
    std::pair{ "textureSampleProjCompare", &TextureSampleProjCompare_Texture3D } /* 1723 */,
    std::pair{ "textureSampleProjCompare", &SampledTextureSampleProjCompare_Texture3D } /* 1724 */,
    std::pair{ "textureSampleProjCompareOffset", &TextureSampleProjCompareOffset_Texture1D } /* 1725 */,
    std::pair{ "textureSampleProjCompareOffset", &SampledTextureSampleProjCompareOffset_Texture1D } /* 1726 */,
    std::pair{ "textureSampleProjCompareOffset", &TextureSampleProjCompareOffset_Texture2D } /* 1727 */,
    std::pair{ "textureSampleProjCompareOffset", &SampledTextureSampleProjCompareOffset_Texture2D } /* 1728 */,
    std::pair{ "textureSampleProjCompareOffset", &TextureSampleProjCompareOffset_Texture3D } /* 1729 */,
    std::pair{ "textureSampleProjCompareOffset", &SampledTextureSampleProjCompareOffset_Texture3D } /* 1730 */,
    std::pair{ "textureSampleProjOffset", &TextureSampleProjOffset_Texture1D } /* 1731 */,
    std::pair{ "textureSampleProjOffset", &SampledTextureSampleProjOffset_Texture1D } /* 1732 */,
    std::pair{ "textureSampleProjOffset", &TextureSampleProjOffset_Texture2D } /* 1733 */,
    std::pair{ "textureSampleProjOffset", &SampledTextureSampleProjOffset_Texture2D } /* 1734 */,
    std::pair{ "textureSampleProjOffset", &TextureSampleProjOffset_Texture3D } /* 1735 */,
    std::pair{ "textureSampleProjOffset", &SampledTextureSampleProjOffset_Texture3D } /* 1736 */,
    std::pair{ "textureStore", &TextureStore_Texture1D } /* 1737 */,
    std::pair{ "textureStore", &TextureStore_Texture2D } /* 1738 */,
    std::pair{ "textureStore", &TextureStore_Texture3D } /* 1739 */,
    std::pair{ "textureStore", &TextureStore_TextureCube } /* 1740 */,
    std::pair{ "textureStore", &TextureStore_Texture1DArray } /* 1741 */,
    std::pair{ "textureStore", &TextureStore_Texture2DArray } /* 1742 */,
    std::pair{ "textureStore", &TextureStore_TextureCubeArray } /* 1743 */,
    std::pair{ "textureStore", &TextureStore_Texture2DMS } /* 1744 */,
    std::pair{ "textureStore", &TextureStore_Texture2DMSArray } /* 1745 */,
    std::pair{ "textureStoreMip", &TextureStoreMip_Texture1D } /* 1746 */,
    std::pair{ "textureStoreMip", &TextureStoreMip_Texture2D } /* 1747 */,
    std::pair{ "textureStoreMip", &TextureStoreMip_Texture3D } /* 1748 */,
    std::pair{ "textureStoreMip", &TextureStoreMip_TextureCube } /* 1749 */,
    std::pair{ "textureStoreMip", &TextureStoreMip_Texture1DArray } /* 1750 */,
    std::pair{ "textureStoreMip", &TextureStoreMip_Texture2DArray } /* 1751 */,
    std::pair{ "textureStoreMip", &TextureStoreMip_TextureCubeArray } /* 1752 */,
    std::pair{ "textureStoreMip", &TextureStoreMip_Texture2DMS } /* 1753 */,
    std::pair{ "textureStoreMip", &TextureStoreMip_Texture2DMSArray } /* 1754 */,
    std::pair{ "transpose", &transpose_Float32x2x2 } /* 1755 */,
    std::pair{ "transpose", &transpose_Float16x2x2 } /* 1756 */,
    std::pair{ "transpose", &transpose_Float32x2x3 } /* 1757 */,
    std::pair{ "transpose", &transpose_Float16x2x3 } /* 1758 */,
    std::pair{ "transpose", &transpose_Float32x2x4 } /* 1759 */,
    std::pair{ "transpose", &transpose_Float16x2x4 } /* 1760 */,
    std::pair{ "transpose", &transpose_Float32x3x2 } /* 1761 */,
    std::pair{ "transpose", &transpose_Float16x3x2 } /* 1762 */,
    std::pair{ "transpose", &transpose_Float32x3x3 } /* 1763 */,
    std::pair{ "transpose", &transpose_Float16x3x3 } /* 1764 */,
    std::pair{ "transpose", &transpose_Float32x3x4 } /* 1765 */,
    std::pair{ "transpose", &transpose_Float16x3x4 } /* 1766 */,
    std::pair{ "transpose", &transpose_Float32x4x2 } /* 1767 */,
    std::pair{ "transpose", &transpose_Float16x4x2 } /* 1768 */,
    std::pair{ "transpose", &transpose_Float32x4x3 } /* 1769 */,
    std::pair{ "transpose", &transpose_Float16x4x3 } /* 1770 */,
    std::pair{ "transpose", &transpose_Float32x4x4 } /* 1771 */,
    std::pair{ "transpose", &transpose_Float16x4x4 } /* 1772 */,
    std::pair{ "trunc", &trunc_Float32 } /* 1773 */,
    std::pair{ "trunc", &trunc_Float32x2 } /* 1774 */,
    std::pair{ "trunc", &trunc_Float32x3 } /* 1775 */,
    std::pair{ "trunc", &trunc_Float32x4 } /* 1776 */,
    std::pair{ "trunc", &trunc_Float16 } /* 1777 */,
    std::pair{ "trunc", &trunc_Float16x2 } /* 1778 */,
    std::pair{ "trunc", &trunc_Float16x3 } /* 1779 */,
    std::pair{ "trunc", &trunc_Float16x4 } /* 1780 */,
    std::pair{ "u16", &UInt16Type } /* 1781 */,
    std::pair{ "u16", &UInt16_convert_Float32 } /* 1782 */,
    std::pair{ "u16", &UInt16_convert_UInt32 } /* 1783 */,
    std::pair{ "u16", &UInt16_convert_Int32 } /* 1784 */,
    std::pair{ "u16", &UInt16_convert_Float16 } /* 1785 */,
    std::pair{ "u16", &UInt16_convert_Int16 } /* 1786 */,
    std::pair{ "u16", &UInt16_ctor0 } /* 1787 */,
    std::pair{ "u16(f16)", &UInt16_convert_Float16 } /* 1788 */,
    std::pair{ "u16(f32)", &UInt16_convert_Float32 } /* 1789 */,
    std::pair{ "u16(i16)", &UInt16_convert_Int16 } /* 1790 */,
    std::pair{ "u16(i32)", &UInt16_convert_Int32 } /* 1791 */,
    std::pair{ "u16(u16)", &UInt16_ctor0 } /* 1792 */,
    std::pair{ "u16(u32)", &UInt16_convert_UInt32 } /* 1793 */,
    std::pair{ "u16x2", &UInt16x2Type } /* 1794 */,
    std::pair{ "u16x2", &UInt16x2_convert_Float32x2 } /* 1795 */,
    std::pair{ "u16x2", &UInt16x2_splat_Float32 } /* 1796 */,
    std::pair{ "u16x2", &UInt16x2_convert_UInt32x2 } /* 1797 */,
    std::pair{ "u16x2", &UInt16x2_splat_UInt32 } /* 1798 */,
    std::pair{ "u16x2", &UInt16x2_convert_Int32x2 } /* 1799 */,
    std::pair{ "u16x2", &UInt16x2_splat_Int32 } /* 1800 */,
    std::pair{ "u16x2", &UInt16x2_convert_Float16x2 } /* 1801 */,
    std::pair{ "u16x2", &UInt16x2_splat_Float16 } /* 1802 */,
    std::pair{ "u16x2", &UInt16x2_convert_UInt16x2 } /* 1803 */,
    std::pair{ "u16x2", &UInt16x2_splat_UInt16 } /* 1804 */,
    std::pair{ "u16x2", &UInt16x2_convert_Int16x2 } /* 1805 */,
    std::pair{ "u16x2", &UInt16x2_splat_Int16 } /* 1806 */,
    std::pair{ "u16x2", &UInt16x2_ctor0 } /* 1807 */,
    std::pair{ "u16x2(f16)", &UInt16x2_splat_Float16 } /* 1808 */,
    std::pair{ "u16x2(f16x2)", &UInt16x2_convert_Float16x2 } /* 1809 */,
    std::pair{ "u16x2(f32)", &UInt16x2_splat_Float32 } /* 1810 */,
    std::pair{ "u16x2(f32x2)", &UInt16x2_convert_Float32x2 } /* 1811 */,
    std::pair{ "u16x2(i16)", &UInt16x2_splat_Int16 } /* 1812 */,
    std::pair{ "u16x2(i16x2)", &UInt16x2_convert_Int16x2 } /* 1813 */,
    std::pair{ "u16x2(i32)", &UInt16x2_splat_Int32 } /* 1814 */,
    std::pair{ "u16x2(i32x2)", &UInt16x2_convert_Int32x2 } /* 1815 */,
    std::pair{ "u16x2(u16)", &UInt16x2_splat_UInt16 } /* 1816 */,
    std::pair{ "u16x2(u16,u16)", &UInt16x2_ctor0 } /* 1817 */,
    std::pair{ "u16x2(u16x2)", &UInt16x2_convert_UInt16x2 } /* 1818 */,
    std::pair{ "u16x2(u32)", &UInt16x2_splat_UInt32 } /* 1819 */,
    std::pair{ "u16x2(u32x2)", &UInt16x2_convert_UInt32x2 } /* 1820 */,
    std::pair{ "u16x3", &UInt16x3Type } /* 1821 */,
    std::pair{ "u16x3", &UInt16x3_convert_Float32x3 } /* 1822 */,
    std::pair{ "u16x3", &UInt16x3_splat_Float32 } /* 1823 */,
    std::pair{ "u16x3", &UInt16x3_convert_UInt32x3 } /* 1824 */,
    std::pair{ "u16x3", &UInt16x3_splat_UInt32 } /* 1825 */,
    std::pair{ "u16x3", &UInt16x3_convert_Int32x3 } /* 1826 */,
    std::pair{ "u16x3", &UInt16x3_splat_Int32 } /* 1827 */,
    std::pair{ "u16x3", &UInt16x3_convert_Float16x3 } /* 1828 */,
    std::pair{ "u16x3", &UInt16x3_splat_Float16 } /* 1829 */,
    std::pair{ "u16x3", &UInt16x3_convert_UInt16x3 } /* 1830 */,
    std::pair{ "u16x3", &UInt16x3_splat_UInt16 } /* 1831 */,
    std::pair{ "u16x3", &UInt16x3_convert_Int16x3 } /* 1832 */,
    std::pair{ "u16x3", &UInt16x3_splat_Int16 } /* 1833 */,
    std::pair{ "u16x3", &UInt16x3_ctor0 } /* 1834 */,
    std::pair{ "u16x3", &UInt16x3_ctor1 } /* 1835 */,
    std::pair{ "u16x3", &UInt16x3_ctor2 } /* 1836 */,
    std::pair{ "u16x3(f16)", &UInt16x3_splat_Float16 } /* 1837 */,
    std::pair{ "u16x3(f16x3)", &UInt16x3_convert_Float16x3 } /* 1838 */,
    std::pair{ "u16x3(f32)", &UInt16x3_splat_Float32 } /* 1839 */,
    std::pair{ "u16x3(f32x3)", &UInt16x3_convert_Float32x3 } /* 1840 */,
    std::pair{ "u16x3(i16)", &UInt16x3_splat_Int16 } /* 1841 */,
    std::pair{ "u16x3(i16x3)", &UInt16x3_convert_Int16x3 } /* 1842 */,
    std::pair{ "u16x3(i32)", &UInt16x3_splat_Int32 } /* 1843 */,
    std::pair{ "u16x3(i32x3)", &UInt16x3_convert_Int32x3 } /* 1844 */,
    std::pair{ "u16x3(u16)", &UInt16x3_splat_UInt16 } /* 1845 */,
    std::pair{ "u16x3(u16,u16,u16)", &UInt16x3_ctor0 } /* 1846 */,
    std::pair{ "u16x3(u16,u16x2)", &UInt16x3_ctor2 } /* 1847 */,
    std::pair{ "u16x3(u16x2,u16)", &UInt16x3_ctor1 } /* 1848 */,
    std::pair{ "u16x3(u16x3)", &UInt16x3_convert_UInt16x3 } /* 1849 */,
    std::pair{ "u16x3(u32)", &UInt16x3_splat_UInt32 } /* 1850 */,
    std::pair{ "u16x3(u32x3)", &UInt16x3_convert_UInt32x3 } /* 1851 */,
    std::pair{ "u16x4", &UInt16x4Type } /* 1852 */,
    std::pair{ "u16x4", &UInt16x4_convert_Float32x4 } /* 1853 */,
    std::pair{ "u16x4", &UInt16x4_splat_Float32 } /* 1854 */,
    std::pair{ "u16x4", &UInt16x4_convert_UInt32x4 } /* 1855 */,
    std::pair{ "u16x4", &UInt16x4_splat_UInt32 } /* 1856 */,
    std::pair{ "u16x4", &UInt16x4_convert_Int32x4 } /* 1857 */,
    std::pair{ "u16x4", &UInt16x4_splat_Int32 } /* 1858 */,
    std::pair{ "u16x4", &UInt16x4_convert_Float16x4 } /* 1859 */,
    std::pair{ "u16x4", &UInt16x4_splat_Float16 } /* 1860 */,
    std::pair{ "u16x4", &UInt16x4_convert_UInt16x4 } /* 1861 */,
    std::pair{ "u16x4", &UInt16x4_splat_UInt16 } /* 1862 */,
    std::pair{ "u16x4", &UInt16x4_convert_Int16x4 } /* 1863 */,
    std::pair{ "u16x4", &UInt16x4_splat_Int16 } /* 1864 */,
    std::pair{ "u16x4", &UInt16x4_ctor0 } /* 1865 */,
    std::pair{ "u16x4", &UInt16x4_ctor1 } /* 1866 */,
    std::pair{ "u16x4", &UInt16x4_ctor2 } /* 1867 */,
    std::pair{ "u16x4", &UInt16x4_ctor3 } /* 1868 */,
    std::pair{ "u16x4", &UInt16x4_ctor4 } /* 1869 */,
    std::pair{ "u16x4", &UInt16x4_ctor5 } /* 1870 */,
    std::pair{ "u16x4(f16)", &UInt16x4_splat_Float16 } /* 1871 */,
    std::pair{ "u16x4(f16x4)", &UInt16x4_convert_Float16x4 } /* 1872 */,
    std::pair{ "u16x4(f32)", &UInt16x4_splat_Float32 } /* 1873 */,
    std::pair{ "u16x4(f32x4)", &UInt16x4_convert_Float32x4 } /* 1874 */,
    std::pair{ "u16x4(i16)", &UInt16x4_splat_Int16 } /* 1875 */,
    std::pair{ "u16x4(i16x4)", &UInt16x4_convert_Int16x4 } /* 1876 */,
    std::pair{ "u16x4(i32)", &UInt16x4_splat_Int32 } /* 1877 */,
    std::pair{ "u16x4(i32x4)", &UInt16x4_convert_Int32x4 } /* 1878 */,
    std::pair{ "u16x4(u16)", &UInt16x4_splat_UInt16 } /* 1879 */,
    std::pair{ "u16x4(u16,u16,u16,u16)", &UInt16x4_ctor0 } /* 1880 */,
    std::pair{ "u16x4(u16,u16,u16x2)", &UInt16x4_ctor3 } /* 1881 */,
    std::pair{ "u16x4(u16,u16x2,u16)", &UInt16x4_ctor2 } /* 1882 */,
    std::pair{ "u16x4(u16,u16x3)", &UInt16x4_ctor5 } /* 1883 */,
    std::pair{ "u16x4(u16x2,u16,u16)", &UInt16x4_ctor1 } /* 1884 */,
    std::pair{ "u16x4(u16x3,u16)", &UInt16x4_ctor4 } /* 1885 */,
    std::pair{ "u16x4(u16x4)", &UInt16x4_convert_UInt16x4 } /* 1886 */,
    std::pair{ "u16x4(u32)", &UInt16x4_splat_UInt32 } /* 1887 */,
    std::pair{ "u16x4(u32x4)", &UInt16x4_convert_UInt32x4 } /* 1888 */,
    std::pair{ "u32", &UInt32Type } /* 1889 */,
    std::pair{ "u32", &UInt32_convert_Float32 } /* 1890 */,
    std::pair{ "u32", &UInt32_convert_Int32 } /* 1891 */,
    std::pair{ "u32", &UInt32_convert_Float16 } /* 1892 */,
    std::pair{ "u32", &UInt32_convert_UInt16 } /* 1893 */,
    std::pair{ "u32", &UInt32_convert_Int16 } /* 1894 */,
    std::pair{ "u32", &UInt32_ctor0 } /* 1895 */,
    std::pair{ "u32(f16)", &UInt32_convert_Float16 } /* 1896 */,
    std::pair{ "u32(f32)", &UInt32_convert_Float32 } /* 1897 */,
    std::pair{ "u32(i16)", &UInt32_convert_Int16 } /* 1898 */,
    std::pair{ "u32(i32)", &UInt32_convert_Int32 } /* 1899 */,
    std::pair{ "u32(u16)", &UInt32_convert_UInt16 } /* 1900 */,
    std::pair{ "u32(u32)", &UInt32_ctor0 } /* 1901 */,
    std::pair{ "u32x2", &UInt32x2Type } /* 1902 */,
    std::pair{ "u32x2", &UInt32x2_convert_Float32x2 } /* 1903 */,
    std::pair{ "u32x2", &UInt32x2_splat_Float32 } /* 1904 */,
    std::pair{ "u32x2", &UInt32x2_convert_UInt32x2 } /* 1905 */,
    std::pair{ "u32x2", &UInt32x2_splat_UInt32 } /* 1906 */,
    std::pair{ "u32x2", &UInt32x2_convert_Int32x2 } /* 1907 */,
    std::pair{ "u32x2", &UInt32x2_splat_Int32 } /* 1908 */,
    std::pair{ "u32x2", &UInt32x2_convert_Float16x2 } /* 1909 */,
    std::pair{ "u32x2", &UInt32x2_splat_Float16 } /* 1910 */,
    std::pair{ "u32x2", &UInt32x2_convert_UInt16x2 } /* 1911 */,
    std::pair{ "u32x2", &UInt32x2_splat_UInt16 } /* 1912 */,
    std::pair{ "u32x2", &UInt32x2_convert_Int16x2 } /* 1913 */,
    std::pair{ "u32x2", &UInt32x2_splat_Int16 } /* 1914 */,
    std::pair{ "u32x2", &UInt32x2_ctor0 } /* 1915 */,
    std::pair{ "u32x2(f16)", &UInt32x2_splat_Float16 } /* 1916 */,
    std::pair{ "u32x2(f16x2)", &UInt32x2_convert_Float16x2 } /* 1917 */,
    std::pair{ "u32x2(f32)", &UInt32x2_splat_Float32 } /* 1918 */,
    std::pair{ "u32x2(f32x2)", &UInt32x2_convert_Float32x2 } /* 1919 */,
    std::pair{ "u32x2(i16)", &UInt32x2_splat_Int16 } /* 1920 */,
    std::pair{ "u32x2(i16x2)", &UInt32x2_convert_Int16x2 } /* 1921 */,
    std::pair{ "u32x2(i32)", &UInt32x2_splat_Int32 } /* 1922 */,
    std::pair{ "u32x2(i32x2)", &UInt32x2_convert_Int32x2 } /* 1923 */,
    std::pair{ "u32x2(u16)", &UInt32x2_splat_UInt16 } /* 1924 */,
    std::pair{ "u32x2(u16x2)", &UInt32x2_convert_UInt16x2 } /* 1925 */,
    std::pair{ "u32x2(u32)", &UInt32x2_splat_UInt32 } /* 1926 */,
    std::pair{ "u32x2(u32,u32)", &UInt32x2_ctor0 } /* 1927 */,
    std::pair{ "u32x2(u32x2)", &UInt32x2_convert_UInt32x2 } /* 1928 */,
    std::pair{ "u32x3", &UInt32x3Type } /* 1929 */,
    std::pair{ "u32x3", &UInt32x3_convert_Float32x3 } /* 1930 */,
    std::pair{ "u32x3", &UInt32x3_splat_Float32 } /* 1931 */,
    std::pair{ "u32x3", &UInt32x3_convert_UInt32x3 } /* 1932 */,
    std::pair{ "u32x3", &UInt32x3_splat_UInt32 } /* 1933 */,
    std::pair{ "u32x3", &UInt32x3_convert_Int32x3 } /* 1934 */,
    std::pair{ "u32x3", &UInt32x3_splat_Int32 } /* 1935 */,
    std::pair{ "u32x3", &UInt32x3_convert_Float16x3 } /* 1936 */,
    std::pair{ "u32x3", &UInt32x3_splat_Float16 } /* 1937 */,
    std::pair{ "u32x3", &UInt32x3_convert_UInt16x3 } /* 1938 */,
    std::pair{ "u32x3", &UInt32x3_splat_UInt16 } /* 1939 */,
    std::pair{ "u32x3", &UInt32x3_convert_Int16x3 } /* 1940 */,
    std::pair{ "u32x3", &UInt32x3_splat_Int16 } /* 1941 */,
    std::pair{ "u32x3", &UInt32x3_ctor0 } /* 1942 */,
    std::pair{ "u32x3", &UInt32x3_ctor1 } /* 1943 */,
    std::pair{ "u32x3", &UInt32x3_ctor2 } /* 1944 */,
    std::pair{ "u32x3(f16)", &UInt32x3_splat_Float16 } /* 1945 */,
    std::pair{ "u32x3(f16x3)", &UInt32x3_convert_Float16x3 } /* 1946 */,
    std::pair{ "u32x3(f32)", &UInt32x3_splat_Float32 } /* 1947 */,
    std::pair{ "u32x3(f32x3)", &UInt32x3_convert_Float32x3 } /* 1948 */,
    std::pair{ "u32x3(i16)", &UInt32x3_splat_Int16 } /* 1949 */,
    std::pair{ "u32x3(i16x3)", &UInt32x3_convert_Int16x3 } /* 1950 */,
    std::pair{ "u32x3(i32)", &UInt32x3_splat_Int32 } /* 1951 */,
    std::pair{ "u32x3(i32x3)", &UInt32x3_convert_Int32x3 } /* 1952 */,
    std::pair{ "u32x3(u16)", &UInt32x3_splat_UInt16 } /* 1953 */,
    std::pair{ "u32x3(u16x3)", &UInt32x3_convert_UInt16x3 } /* 1954 */,
    std::pair{ "u32x3(u32)", &UInt32x3_splat_UInt32 } /* 1955 */,
    std::pair{ "u32x3(u32,u32,u32)", &UInt32x3_ctor0 } /* 1956 */,
    std::pair{ "u32x3(u32,u32x2)", &UInt32x3_ctor2 } /* 1957 */,
    std::pair{ "u32x3(u32x2,u32)", &UInt32x3_ctor1 } /* 1958 */,
    std::pair{ "u32x3(u32x3)", &UInt32x3_convert_UInt32x3 } /* 1959 */,
    std::pair{ "u32x4", &UInt32x4Type } /* 1960 */,
    std::pair{ "u32x4", &UInt32x4_convert_Float32x4 } /* 1961 */,
    std::pair{ "u32x4", &UInt32x4_splat_Float32 } /* 1962 */,
    std::pair{ "u32x4", &UInt32x4_convert_UInt32x4 } /* 1963 */,
    std::pair{ "u32x4", &UInt32x4_splat_UInt32 } /* 1964 */,
    std::pair{ "u32x4", &UInt32x4_convert_Int32x4 } /* 1965 */,
    std::pair{ "u32x4", &UInt32x4_splat_Int32 } /* 1966 */,
    std::pair{ "u32x4", &UInt32x4_convert_Float16x4 } /* 1967 */,
    std::pair{ "u32x4", &UInt32x4_splat_Float16 } /* 1968 */,
    std::pair{ "u32x4", &UInt32x4_convert_UInt16x4 } /* 1969 */,
    std::pair{ "u32x4", &UInt32x4_splat_UInt16 } /* 1970 */,
    std::pair{ "u32x4", &UInt32x4_convert_Int16x4 } /* 1971 */,
    std::pair{ "u32x4", &UInt32x4_splat_Int16 } /* 1972 */,
    std::pair{ "u32x4", &UInt32x4_ctor0 } /* 1973 */,
    std::pair{ "u32x4", &UInt32x4_ctor1 } /* 1974 */,
    std::pair{ "u32x4", &UInt32x4_ctor2 } /* 1975 */,
    std::pair{ "u32x4", &UInt32x4_ctor3 } /* 1976 */,
    std::pair{ "u32x4", &UInt32x4_ctor4 } /* 1977 */,
    std::pair{ "u32x4", &UInt32x4_ctor5 } /* 1978 */,
    std::pair{ "u32x4(f16)", &UInt32x4_splat_Float16 } /* 1979 */,
    std::pair{ "u32x4(f16x4)", &UInt32x4_convert_Float16x4 } /* 1980 */,
    std::pair{ "u32x4(f32)", &UInt32x4_splat_Float32 } /* 1981 */,
    std::pair{ "u32x4(f32x4)", &UInt32x4_convert_Float32x4 } /* 1982 */,
    std::pair{ "u32x4(i16)", &UInt32x4_splat_Int16 } /* 1983 */,
    std::pair{ "u32x4(i16x4)", &UInt32x4_convert_Int16x4 } /* 1984 */,
    std::pair{ "u32x4(i32)", &UInt32x4_splat_Int32 } /* 1985 */,
    std::pair{ "u32x4(i32x4)", &UInt32x4_convert_Int32x4 } /* 1986 */,
    std::pair{ "u32x4(u16)", &UInt32x4_splat_UInt16 } /* 1987 */,
    std::pair{ "u32x4(u16x4)", &UInt32x4_convert_UInt16x4 } /* 1988 */,
    std::pair{ "u32x4(u32)", &UInt32x4_splat_UInt32 } /* 1989 */,
    std::pair{ "u32x4(u32,u32,u32,u32)", &UInt32x4_ctor0 } /* 1990 */,
    std::pair{ "u32x4(u32,u32,u32x2)", &UInt32x4_ctor3 } /* 1991 */,
    std::pair{ "u32x4(u32,u32x2,u32)", &UInt32x4_ctor2 } /* 1992 */,
    std::pair{ "u32x4(u32,u32x3)", &UInt32x4_ctor5 } /* 1993 */,
    std::pair{ "u32x4(u32x2,u32,u32)", &UInt32x4_ctor1 } /* 1994 */,
    std::pair{ "u32x4(u32x3,u32)", &UInt32x4_ctor4 } /* 1995 */,
    std::pair{ "u32x4(u32x4)", &UInt32x4_convert_UInt32x4 } /* 1996 */,
    std::pair{ "vertexExportExportCoordinates", &VertexExportCoordinates_Float32x4 } /* 1997 */,
    std::pair{ "vertexExportExportCoordinates", &VertexExportCoordinates_Float16x4 } /* 1998 */
};

} // namespace GPULang

