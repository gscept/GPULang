//-------------------------------------------------
// *** Generated by type_gen.py. ***
//       DO NOT MODIFY!!!
//-------------------------------------------------
namespace GPULang
{
/// f32 with UInt32
extern Variable Float32_from_UInt32_arg;
extern Function Float32_from_UInt32;
inline constexpr auto Float32_from_UInt32_name = "f32"_c;
inline constexpr auto Float32_from_UInt32_backend_index = 0u;

/// f32 with Int32
extern Variable Float32_from_Int32_arg;
extern Function Float32_from_Int32;
inline constexpr auto Float32_from_Int32_name = "f32"_c;
inline constexpr auto Float32_from_Int32_backend_index = 1u;

/// f32 with Bool8
extern Variable Float32_from_Bool8_arg;
extern Function Float32_from_Bool8;
inline constexpr auto Float32_from_Bool8_name = "f32"_c;
inline constexpr auto Float32_from_Bool8_backend_index = 2u;

/// f32 with Float16
extern Variable Float32_from_Float16_arg;
extern Function Float32_from_Float16;
inline constexpr auto Float32_from_Float16_name = "f32"_c;
inline constexpr auto Float32_from_Float16_backend_index = 3u;

/// f32 with UInt16
extern Variable Float32_from_UInt16_arg;
extern Function Float32_from_UInt16;
inline constexpr auto Float32_from_UInt16_name = "f32"_c;
inline constexpr auto Float32_from_UInt16_backend_index = 4u;

/// f32 with Int16
extern Variable Float32_from_Int16_arg;
extern Function Float32_from_Int16;
inline constexpr auto Float32_from_Int16_name = "f32"_c;
inline constexpr auto Float32_from_Int16_backend_index = 5u;

/// f32 with Float32
extern Variable Float32_ctor0_arg0_Float32;
extern Function Float32_ctor0;
inline constexpr auto Float32_ctor0_name = "f32"_c;
inline constexpr auto Float32_ctor0_backend_index = 6u;

/// u32 with Float32
extern Variable UInt32_from_Float32_arg;
extern Function UInt32_from_Float32;
inline constexpr auto UInt32_from_Float32_name = "u32"_c;
inline constexpr auto UInt32_from_Float32_backend_index = 26u;

/// u32 with Int32
extern Variable UInt32_from_Int32_arg;
extern Function UInt32_from_Int32;
inline constexpr auto UInt32_from_Int32_name = "u32"_c;
inline constexpr auto UInt32_from_Int32_backend_index = 27u;

/// u32 with Bool8
extern Variable UInt32_from_Bool8_arg;
extern Function UInt32_from_Bool8;
inline constexpr auto UInt32_from_Bool8_name = "u32"_c;
inline constexpr auto UInt32_from_Bool8_backend_index = 28u;

/// u32 with Float16
extern Variable UInt32_from_Float16_arg;
extern Function UInt32_from_Float16;
inline constexpr auto UInt32_from_Float16_name = "u32"_c;
inline constexpr auto UInt32_from_Float16_backend_index = 29u;

/// u32 with UInt16
extern Variable UInt32_from_UInt16_arg;
extern Function UInt32_from_UInt16;
inline constexpr auto UInt32_from_UInt16_name = "u32"_c;
inline constexpr auto UInt32_from_UInt16_backend_index = 30u;

/// u32 with Int16
extern Variable UInt32_from_Int16_arg;
extern Function UInt32_from_Int16;
inline constexpr auto UInt32_from_Int16_name = "u32"_c;
inline constexpr auto UInt32_from_Int16_backend_index = 31u;

/// u32 with UInt32
extern Variable UInt32_ctor0_arg0_UInt32;
extern Function UInt32_ctor0;
inline constexpr auto UInt32_ctor0_name = "u32"_c;
inline constexpr auto UInt32_ctor0_backend_index = 32u;

/// i32 with Float32
extern Variable Int32_from_Float32_arg;
extern Function Int32_from_Float32;
inline constexpr auto Int32_from_Float32_name = "i32"_c;
inline constexpr auto Int32_from_Float32_backend_index = 62u;

/// i32 with UInt32
extern Variable Int32_from_UInt32_arg;
extern Function Int32_from_UInt32;
inline constexpr auto Int32_from_UInt32_name = "i32"_c;
inline constexpr auto Int32_from_UInt32_backend_index = 63u;

/// i32 with Bool8
extern Variable Int32_from_Bool8_arg;
extern Function Int32_from_Bool8;
inline constexpr auto Int32_from_Bool8_name = "i32"_c;
inline constexpr auto Int32_from_Bool8_backend_index = 64u;

/// i32 with Float16
extern Variable Int32_from_Float16_arg;
extern Function Int32_from_Float16;
inline constexpr auto Int32_from_Float16_name = "i32"_c;
inline constexpr auto Int32_from_Float16_backend_index = 65u;

/// i32 with UInt16
extern Variable Int32_from_UInt16_arg;
extern Function Int32_from_UInt16;
inline constexpr auto Int32_from_UInt16_name = "i32"_c;
inline constexpr auto Int32_from_UInt16_backend_index = 66u;

/// i32 with Int16
extern Variable Int32_from_Int16_arg;
extern Function Int32_from_Int16;
inline constexpr auto Int32_from_Int16_name = "i32"_c;
inline constexpr auto Int32_from_Int16_backend_index = 67u;

/// i32 with Int32
extern Variable Int32_ctor0_arg0_Int32;
extern Function Int32_ctor0;
inline constexpr auto Int32_ctor0_name = "i32"_c;
inline constexpr auto Int32_ctor0_backend_index = 68u;

/// b8 with UInt32
extern Variable Bool8_from_UInt32_arg;
extern Function Bool8_from_UInt32;
inline constexpr auto Bool8_from_UInt32_name = "b8"_c;
inline constexpr auto Bool8_from_UInt32_backend_index = 98u;

/// b8 with Int32
extern Variable Bool8_from_Int32_arg;
extern Function Bool8_from_Int32;
inline constexpr auto Bool8_from_Int32_name = "b8"_c;
inline constexpr auto Bool8_from_Int32_backend_index = 99u;

/// b8 with UInt16
extern Variable Bool8_from_UInt16_arg;
extern Function Bool8_from_UInt16;
inline constexpr auto Bool8_from_UInt16_name = "b8"_c;
inline constexpr auto Bool8_from_UInt16_backend_index = 100u;

/// b8 with Int16
extern Variable Bool8_from_Int16_arg;
extern Function Bool8_from_Int16;
inline constexpr auto Bool8_from_Int16_name = "b8"_c;
inline constexpr auto Bool8_from_Int16_backend_index = 101u;

/// b8 with Bool8
extern Variable Bool8_ctor0_arg0_Bool8;
extern Function Bool8_ctor0;
inline constexpr auto Bool8_ctor0_name = "b8"_c;
inline constexpr auto Bool8_ctor0_backend_index = 102u;

/// f16 with Float32
extern Variable Float16_from_Float32_arg;
extern Function Float16_from_Float32;
inline constexpr auto Float16_from_Float32_name = "f16"_c;
inline constexpr auto Float16_from_Float32_backend_index = 111u;

/// f16 with UInt32
extern Variable Float16_from_UInt32_arg;
extern Function Float16_from_UInt32;
inline constexpr auto Float16_from_UInt32_name = "f16"_c;
inline constexpr auto Float16_from_UInt32_backend_index = 112u;

/// f16 with Int32
extern Variable Float16_from_Int32_arg;
extern Function Float16_from_Int32;
inline constexpr auto Float16_from_Int32_name = "f16"_c;
inline constexpr auto Float16_from_Int32_backend_index = 113u;

/// f16 with Bool8
extern Variable Float16_from_Bool8_arg;
extern Function Float16_from_Bool8;
inline constexpr auto Float16_from_Bool8_name = "f16"_c;
inline constexpr auto Float16_from_Bool8_backend_index = 114u;

/// f16 with UInt16
extern Variable Float16_from_UInt16_arg;
extern Function Float16_from_UInt16;
inline constexpr auto Float16_from_UInt16_name = "f16"_c;
inline constexpr auto Float16_from_UInt16_backend_index = 115u;

/// f16 with Int16
extern Variable Float16_from_Int16_arg;
extern Function Float16_from_Int16;
inline constexpr auto Float16_from_Int16_name = "f16"_c;
inline constexpr auto Float16_from_Int16_backend_index = 116u;

/// f16 with Float16
extern Variable Float16_ctor0_arg0_Float16;
extern Function Float16_ctor0;
inline constexpr auto Float16_ctor0_name = "f16"_c;
inline constexpr auto Float16_ctor0_backend_index = 117u;

/// u16 with Float32
extern Variable UInt16_from_Float32_arg;
extern Function UInt16_from_Float32;
inline constexpr auto UInt16_from_Float32_name = "u16"_c;
inline constexpr auto UInt16_from_Float32_backend_index = 137u;

/// u16 with UInt32
extern Variable UInt16_from_UInt32_arg;
extern Function UInt16_from_UInt32;
inline constexpr auto UInt16_from_UInt32_name = "u16"_c;
inline constexpr auto UInt16_from_UInt32_backend_index = 138u;

/// u16 with Int32
extern Variable UInt16_from_Int32_arg;
extern Function UInt16_from_Int32;
inline constexpr auto UInt16_from_Int32_name = "u16"_c;
inline constexpr auto UInt16_from_Int32_backend_index = 139u;

/// u16 with Bool8
extern Variable UInt16_from_Bool8_arg;
extern Function UInt16_from_Bool8;
inline constexpr auto UInt16_from_Bool8_name = "u16"_c;
inline constexpr auto UInt16_from_Bool8_backend_index = 140u;

/// u16 with Float16
extern Variable UInt16_from_Float16_arg;
extern Function UInt16_from_Float16;
inline constexpr auto UInt16_from_Float16_name = "u16"_c;
inline constexpr auto UInt16_from_Float16_backend_index = 141u;

/// u16 with Int16
extern Variable UInt16_from_Int16_arg;
extern Function UInt16_from_Int16;
inline constexpr auto UInt16_from_Int16_name = "u16"_c;
inline constexpr auto UInt16_from_Int16_backend_index = 142u;

/// u16 with UInt16
extern Variable UInt16_ctor0_arg0_UInt16;
extern Function UInt16_ctor0;
inline constexpr auto UInt16_ctor0_name = "u16"_c;
inline constexpr auto UInt16_ctor0_backend_index = 143u;

/// i16 with Float32
extern Variable Int16_from_Float32_arg;
extern Function Int16_from_Float32;
inline constexpr auto Int16_from_Float32_name = "i16"_c;
inline constexpr auto Int16_from_Float32_backend_index = 173u;

/// i16 with UInt32
extern Variable Int16_from_UInt32_arg;
extern Function Int16_from_UInt32;
inline constexpr auto Int16_from_UInt32_name = "i16"_c;
inline constexpr auto Int16_from_UInt32_backend_index = 174u;

/// i16 with Int32
extern Variable Int16_from_Int32_arg;
extern Function Int16_from_Int32;
inline constexpr auto Int16_from_Int32_name = "i16"_c;
inline constexpr auto Int16_from_Int32_backend_index = 175u;

/// i16 with Bool8
extern Variable Int16_from_Bool8_arg;
extern Function Int16_from_Bool8;
inline constexpr auto Int16_from_Bool8_name = "i16"_c;
inline constexpr auto Int16_from_Bool8_backend_index = 176u;

/// i16 with Float16
extern Variable Int16_from_Float16_arg;
extern Function Int16_from_Float16;
inline constexpr auto Int16_from_Float16_name = "i16"_c;
inline constexpr auto Int16_from_Float16_backend_index = 177u;

/// i16 with UInt16
extern Variable Int16_from_UInt16_arg;
extern Function Int16_from_UInt16;
inline constexpr auto Int16_from_UInt16_name = "i16"_c;
inline constexpr auto Int16_from_UInt16_backend_index = 178u;

/// i16 with Int16
extern Variable Int16_ctor0_arg0_Int16;
extern Function Int16_ctor0;
inline constexpr auto Int16_ctor0_name = "i16"_c;
inline constexpr auto Int16_ctor0_backend_index = 179u;

/// f32x2 with Float32x2
extern Variable Float32x2_from_Float32x2_arg;
extern Function Float32x2_from_Float32x2;
inline constexpr auto Float32x2_from_Float32x2_name = "f32x2"_c;
inline constexpr auto Float32x2_from_Float32x2_backend_index = 209u;

/// f32x2 with Float32
extern Variable Float32x2_splat_Float32_arg;
extern Function Float32x2_splat_Float32;
inline constexpr auto Float32x2_splat_Float32_name = "f32x2"_c;
inline constexpr auto Float32x2_splat_Float32_backend_index = 210u;

/// f32x2 with UInt32x2
extern Variable Float32x2_from_UInt32x2_arg;
extern Function Float32x2_from_UInt32x2;
inline constexpr auto Float32x2_from_UInt32x2_name = "f32x2"_c;
inline constexpr auto Float32x2_from_UInt32x2_backend_index = 211u;

/// f32x2 with UInt32
extern Variable Float32x2_splat_UInt32_arg;
extern Function Float32x2_splat_UInt32;
inline constexpr auto Float32x2_splat_UInt32_name = "f32x2"_c;
inline constexpr auto Float32x2_splat_UInt32_backend_index = 212u;

/// f32x2 with Int32x2
extern Variable Float32x2_from_Int32x2_arg;
extern Function Float32x2_from_Int32x2;
inline constexpr auto Float32x2_from_Int32x2_name = "f32x2"_c;
inline constexpr auto Float32x2_from_Int32x2_backend_index = 213u;

/// f32x2 with Int32
extern Variable Float32x2_splat_Int32_arg;
extern Function Float32x2_splat_Int32;
inline constexpr auto Float32x2_splat_Int32_name = "f32x2"_c;
inline constexpr auto Float32x2_splat_Int32_backend_index = 214u;

/// f32x2 with Bool8x2
extern Variable Float32x2_from_Bool8x2_arg;
extern Function Float32x2_from_Bool8x2;
inline constexpr auto Float32x2_from_Bool8x2_name = "f32x2"_c;
inline constexpr auto Float32x2_from_Bool8x2_backend_index = 215u;

/// f32x2 with Bool8
extern Variable Float32x2_splat_Bool8_arg;
extern Function Float32x2_splat_Bool8;
inline constexpr auto Float32x2_splat_Bool8_name = "f32x2"_c;
inline constexpr auto Float32x2_splat_Bool8_backend_index = 216u;

/// f32x2 with Float16x2
extern Variable Float32x2_from_Float16x2_arg;
extern Function Float32x2_from_Float16x2;
inline constexpr auto Float32x2_from_Float16x2_name = "f32x2"_c;
inline constexpr auto Float32x2_from_Float16x2_backend_index = 217u;

/// f32x2 with Float16
extern Variable Float32x2_splat_Float16_arg;
extern Function Float32x2_splat_Float16;
inline constexpr auto Float32x2_splat_Float16_name = "f32x2"_c;
inline constexpr auto Float32x2_splat_Float16_backend_index = 218u;

/// f32x2 with UInt16x2
extern Variable Float32x2_from_UInt16x2_arg;
extern Function Float32x2_from_UInt16x2;
inline constexpr auto Float32x2_from_UInt16x2_name = "f32x2"_c;
inline constexpr auto Float32x2_from_UInt16x2_backend_index = 219u;

/// f32x2 with UInt16
extern Variable Float32x2_splat_UInt16_arg;
extern Function Float32x2_splat_UInt16;
inline constexpr auto Float32x2_splat_UInt16_name = "f32x2"_c;
inline constexpr auto Float32x2_splat_UInt16_backend_index = 220u;

/// f32x2 with Int16x2
extern Variable Float32x2_from_Int16x2_arg;
extern Function Float32x2_from_Int16x2;
inline constexpr auto Float32x2_from_Int16x2_name = "f32x2"_c;
inline constexpr auto Float32x2_from_Int16x2_backend_index = 221u;

/// f32x2 with Int16
extern Variable Float32x2_splat_Int16_arg;
extern Function Float32x2_splat_Int16;
inline constexpr auto Float32x2_splat_Int16_name = "f32x2"_c;
inline constexpr auto Float32x2_splat_Int16_backend_index = 222u;

/// f32x2 with Float32, Float32
extern Variable Float32x2_ctor0_arg0_Float32;
extern Variable Float32x2_ctor0_arg1_Float32;
extern Function Float32x2_ctor0;
inline constexpr auto Float32x2_ctor0_name = "f32x2"_c;
inline constexpr auto Float32x2_ctor0_backend_index = 223u;

/// u32x2 with Float32x2
extern Variable UInt32x2_from_Float32x2_arg;
extern Function UInt32x2_from_Float32x2;
inline constexpr auto UInt32x2_from_Float32x2_name = "u32x2"_c;
inline constexpr auto UInt32x2_from_Float32x2_backend_index = 249u;

/// u32x2 with Float32
extern Variable UInt32x2_splat_Float32_arg;
extern Function UInt32x2_splat_Float32;
inline constexpr auto UInt32x2_splat_Float32_name = "u32x2"_c;
inline constexpr auto UInt32x2_splat_Float32_backend_index = 250u;

/// u32x2 with UInt32x2
extern Variable UInt32x2_from_UInt32x2_arg;
extern Function UInt32x2_from_UInt32x2;
inline constexpr auto UInt32x2_from_UInt32x2_name = "u32x2"_c;
inline constexpr auto UInt32x2_from_UInt32x2_backend_index = 251u;

/// u32x2 with UInt32
extern Variable UInt32x2_splat_UInt32_arg;
extern Function UInt32x2_splat_UInt32;
inline constexpr auto UInt32x2_splat_UInt32_name = "u32x2"_c;
inline constexpr auto UInt32x2_splat_UInt32_backend_index = 252u;

/// u32x2 with Int32x2
extern Variable UInt32x2_from_Int32x2_arg;
extern Function UInt32x2_from_Int32x2;
inline constexpr auto UInt32x2_from_Int32x2_name = "u32x2"_c;
inline constexpr auto UInt32x2_from_Int32x2_backend_index = 253u;

/// u32x2 with Int32
extern Variable UInt32x2_splat_Int32_arg;
extern Function UInt32x2_splat_Int32;
inline constexpr auto UInt32x2_splat_Int32_name = "u32x2"_c;
inline constexpr auto UInt32x2_splat_Int32_backend_index = 254u;

/// u32x2 with Bool8x2
extern Variable UInt32x2_from_Bool8x2_arg;
extern Function UInt32x2_from_Bool8x2;
inline constexpr auto UInt32x2_from_Bool8x2_name = "u32x2"_c;
inline constexpr auto UInt32x2_from_Bool8x2_backend_index = 255u;

/// u32x2 with Bool8
extern Variable UInt32x2_splat_Bool8_arg;
extern Function UInt32x2_splat_Bool8;
inline constexpr auto UInt32x2_splat_Bool8_name = "u32x2"_c;
inline constexpr auto UInt32x2_splat_Bool8_backend_index = 256u;

/// u32x2 with Float16x2
extern Variable UInt32x2_from_Float16x2_arg;
extern Function UInt32x2_from_Float16x2;
inline constexpr auto UInt32x2_from_Float16x2_name = "u32x2"_c;
inline constexpr auto UInt32x2_from_Float16x2_backend_index = 257u;

/// u32x2 with Float16
extern Variable UInt32x2_splat_Float16_arg;
extern Function UInt32x2_splat_Float16;
inline constexpr auto UInt32x2_splat_Float16_name = "u32x2"_c;
inline constexpr auto UInt32x2_splat_Float16_backend_index = 258u;

/// u32x2 with UInt16x2
extern Variable UInt32x2_from_UInt16x2_arg;
extern Function UInt32x2_from_UInt16x2;
inline constexpr auto UInt32x2_from_UInt16x2_name = "u32x2"_c;
inline constexpr auto UInt32x2_from_UInt16x2_backend_index = 259u;

/// u32x2 with UInt16
extern Variable UInt32x2_splat_UInt16_arg;
extern Function UInt32x2_splat_UInt16;
inline constexpr auto UInt32x2_splat_UInt16_name = "u32x2"_c;
inline constexpr auto UInt32x2_splat_UInt16_backend_index = 260u;

/// u32x2 with Int16x2
extern Variable UInt32x2_from_Int16x2_arg;
extern Function UInt32x2_from_Int16x2;
inline constexpr auto UInt32x2_from_Int16x2_name = "u32x2"_c;
inline constexpr auto UInt32x2_from_Int16x2_backend_index = 261u;

/// u32x2 with Int16
extern Variable UInt32x2_splat_Int16_arg;
extern Function UInt32x2_splat_Int16;
inline constexpr auto UInt32x2_splat_Int16_name = "u32x2"_c;
inline constexpr auto UInt32x2_splat_Int16_backend_index = 262u;

/// u32x2 with UInt32, UInt32
extern Variable UInt32x2_ctor0_arg0_UInt32;
extern Variable UInt32x2_ctor0_arg1_UInt32;
extern Function UInt32x2_ctor0;
inline constexpr auto UInt32x2_ctor0_name = "u32x2"_c;
inline constexpr auto UInt32x2_ctor0_backend_index = 263u;

/// i32x2 with Float32x2
extern Variable Int32x2_from_Float32x2_arg;
extern Function Int32x2_from_Float32x2;
inline constexpr auto Int32x2_from_Float32x2_name = "i32x2"_c;
inline constexpr auto Int32x2_from_Float32x2_backend_index = 296u;

/// i32x2 with Float32
extern Variable Int32x2_splat_Float32_arg;
extern Function Int32x2_splat_Float32;
inline constexpr auto Int32x2_splat_Float32_name = "i32x2"_c;
inline constexpr auto Int32x2_splat_Float32_backend_index = 297u;

/// i32x2 with UInt32x2
extern Variable Int32x2_from_UInt32x2_arg;
extern Function Int32x2_from_UInt32x2;
inline constexpr auto Int32x2_from_UInt32x2_name = "i32x2"_c;
inline constexpr auto Int32x2_from_UInt32x2_backend_index = 298u;

/// i32x2 with UInt32
extern Variable Int32x2_splat_UInt32_arg;
extern Function Int32x2_splat_UInt32;
inline constexpr auto Int32x2_splat_UInt32_name = "i32x2"_c;
inline constexpr auto Int32x2_splat_UInt32_backend_index = 299u;

/// i32x2 with Int32x2
extern Variable Int32x2_from_Int32x2_arg;
extern Function Int32x2_from_Int32x2;
inline constexpr auto Int32x2_from_Int32x2_name = "i32x2"_c;
inline constexpr auto Int32x2_from_Int32x2_backend_index = 300u;

/// i32x2 with Int32
extern Variable Int32x2_splat_Int32_arg;
extern Function Int32x2_splat_Int32;
inline constexpr auto Int32x2_splat_Int32_name = "i32x2"_c;
inline constexpr auto Int32x2_splat_Int32_backend_index = 301u;

/// i32x2 with Bool8x2
extern Variable Int32x2_from_Bool8x2_arg;
extern Function Int32x2_from_Bool8x2;
inline constexpr auto Int32x2_from_Bool8x2_name = "i32x2"_c;
inline constexpr auto Int32x2_from_Bool8x2_backend_index = 302u;

/// i32x2 with Bool8
extern Variable Int32x2_splat_Bool8_arg;
extern Function Int32x2_splat_Bool8;
inline constexpr auto Int32x2_splat_Bool8_name = "i32x2"_c;
inline constexpr auto Int32x2_splat_Bool8_backend_index = 303u;

/// i32x2 with Float16x2
extern Variable Int32x2_from_Float16x2_arg;
extern Function Int32x2_from_Float16x2;
inline constexpr auto Int32x2_from_Float16x2_name = "i32x2"_c;
inline constexpr auto Int32x2_from_Float16x2_backend_index = 304u;

/// i32x2 with Float16
extern Variable Int32x2_splat_Float16_arg;
extern Function Int32x2_splat_Float16;
inline constexpr auto Int32x2_splat_Float16_name = "i32x2"_c;
inline constexpr auto Int32x2_splat_Float16_backend_index = 305u;

/// i32x2 with UInt16x2
extern Variable Int32x2_from_UInt16x2_arg;
extern Function Int32x2_from_UInt16x2;
inline constexpr auto Int32x2_from_UInt16x2_name = "i32x2"_c;
inline constexpr auto Int32x2_from_UInt16x2_backend_index = 306u;

/// i32x2 with UInt16
extern Variable Int32x2_splat_UInt16_arg;
extern Function Int32x2_splat_UInt16;
inline constexpr auto Int32x2_splat_UInt16_name = "i32x2"_c;
inline constexpr auto Int32x2_splat_UInt16_backend_index = 307u;

/// i32x2 with Int16x2
extern Variable Int32x2_from_Int16x2_arg;
extern Function Int32x2_from_Int16x2;
inline constexpr auto Int32x2_from_Int16x2_name = "i32x2"_c;
inline constexpr auto Int32x2_from_Int16x2_backend_index = 308u;

/// i32x2 with Int16
extern Variable Int32x2_splat_Int16_arg;
extern Function Int32x2_splat_Int16;
inline constexpr auto Int32x2_splat_Int16_name = "i32x2"_c;
inline constexpr auto Int32x2_splat_Int16_backend_index = 309u;

/// i32x2 with Int32, Int32
extern Variable Int32x2_ctor0_arg0_Int32;
extern Variable Int32x2_ctor0_arg1_Int32;
extern Function Int32x2_ctor0;
inline constexpr auto Int32x2_ctor0_name = "i32x2"_c;
inline constexpr auto Int32x2_ctor0_backend_index = 310u;

/// b8x2 with UInt32x2
extern Variable Bool8x2_from_UInt32x2_arg;
extern Function Bool8x2_from_UInt32x2;
inline constexpr auto Bool8x2_from_UInt32x2_name = "b8x2"_c;
inline constexpr auto Bool8x2_from_UInt32x2_backend_index = 343u;

/// b8x2 with UInt32
extern Variable Bool8x2_splat_UInt32_arg;
extern Function Bool8x2_splat_UInt32;
inline constexpr auto Bool8x2_splat_UInt32_name = "b8x2"_c;
inline constexpr auto Bool8x2_splat_UInt32_backend_index = 344u;

/// b8x2 with Int32x2
extern Variable Bool8x2_from_Int32x2_arg;
extern Function Bool8x2_from_Int32x2;
inline constexpr auto Bool8x2_from_Int32x2_name = "b8x2"_c;
inline constexpr auto Bool8x2_from_Int32x2_backend_index = 345u;

/// b8x2 with Int32
extern Variable Bool8x2_splat_Int32_arg;
extern Function Bool8x2_splat_Int32;
inline constexpr auto Bool8x2_splat_Int32_name = "b8x2"_c;
inline constexpr auto Bool8x2_splat_Int32_backend_index = 346u;

/// b8x2 with Bool8x2
extern Variable Bool8x2_from_Bool8x2_arg;
extern Function Bool8x2_from_Bool8x2;
inline constexpr auto Bool8x2_from_Bool8x2_name = "b8x2"_c;
inline constexpr auto Bool8x2_from_Bool8x2_backend_index = 347u;

/// b8x2 with Bool8
extern Variable Bool8x2_splat_Bool8_arg;
extern Function Bool8x2_splat_Bool8;
inline constexpr auto Bool8x2_splat_Bool8_name = "b8x2"_c;
inline constexpr auto Bool8x2_splat_Bool8_backend_index = 348u;

/// b8x2 with UInt16x2
extern Variable Bool8x2_from_UInt16x2_arg;
extern Function Bool8x2_from_UInt16x2;
inline constexpr auto Bool8x2_from_UInt16x2_name = "b8x2"_c;
inline constexpr auto Bool8x2_from_UInt16x2_backend_index = 349u;

/// b8x2 with UInt16
extern Variable Bool8x2_splat_UInt16_arg;
extern Function Bool8x2_splat_UInt16;
inline constexpr auto Bool8x2_splat_UInt16_name = "b8x2"_c;
inline constexpr auto Bool8x2_splat_UInt16_backend_index = 350u;

/// b8x2 with Int16x2
extern Variable Bool8x2_from_Int16x2_arg;
extern Function Bool8x2_from_Int16x2;
inline constexpr auto Bool8x2_from_Int16x2_name = "b8x2"_c;
inline constexpr auto Bool8x2_from_Int16x2_backend_index = 351u;

/// b8x2 with Int16
extern Variable Bool8x2_splat_Int16_arg;
extern Function Bool8x2_splat_Int16;
inline constexpr auto Bool8x2_splat_Int16_name = "b8x2"_c;
inline constexpr auto Bool8x2_splat_Int16_backend_index = 352u;

/// b8x2 with Bool8, Bool8
extern Variable Bool8x2_ctor0_arg0_Bool8;
extern Variable Bool8x2_ctor0_arg1_Bool8;
extern Function Bool8x2_ctor0;
inline constexpr auto Bool8x2_ctor0_name = "b8x2"_c;
inline constexpr auto Bool8x2_ctor0_backend_index = 353u;

/// f16x2 with Float32x2
extern Variable Float16x2_from_Float32x2_arg;
extern Function Float16x2_from_Float32x2;
inline constexpr auto Float16x2_from_Float32x2_name = "f16x2"_c;
inline constexpr auto Float16x2_from_Float32x2_backend_index = 362u;

/// f16x2 with Float32
extern Variable Float16x2_splat_Float32_arg;
extern Function Float16x2_splat_Float32;
inline constexpr auto Float16x2_splat_Float32_name = "f16x2"_c;
inline constexpr auto Float16x2_splat_Float32_backend_index = 363u;

/// f16x2 with UInt32x2
extern Variable Float16x2_from_UInt32x2_arg;
extern Function Float16x2_from_UInt32x2;
inline constexpr auto Float16x2_from_UInt32x2_name = "f16x2"_c;
inline constexpr auto Float16x2_from_UInt32x2_backend_index = 364u;

/// f16x2 with UInt32
extern Variable Float16x2_splat_UInt32_arg;
extern Function Float16x2_splat_UInt32;
inline constexpr auto Float16x2_splat_UInt32_name = "f16x2"_c;
inline constexpr auto Float16x2_splat_UInt32_backend_index = 365u;

/// f16x2 with Int32x2
extern Variable Float16x2_from_Int32x2_arg;
extern Function Float16x2_from_Int32x2;
inline constexpr auto Float16x2_from_Int32x2_name = "f16x2"_c;
inline constexpr auto Float16x2_from_Int32x2_backend_index = 366u;

/// f16x2 with Int32
extern Variable Float16x2_splat_Int32_arg;
extern Function Float16x2_splat_Int32;
inline constexpr auto Float16x2_splat_Int32_name = "f16x2"_c;
inline constexpr auto Float16x2_splat_Int32_backend_index = 367u;

/// f16x2 with Bool8x2
extern Variable Float16x2_from_Bool8x2_arg;
extern Function Float16x2_from_Bool8x2;
inline constexpr auto Float16x2_from_Bool8x2_name = "f16x2"_c;
inline constexpr auto Float16x2_from_Bool8x2_backend_index = 368u;

/// f16x2 with Bool8
extern Variable Float16x2_splat_Bool8_arg;
extern Function Float16x2_splat_Bool8;
inline constexpr auto Float16x2_splat_Bool8_name = "f16x2"_c;
inline constexpr auto Float16x2_splat_Bool8_backend_index = 369u;

/// f16x2 with Float16x2
extern Variable Float16x2_from_Float16x2_arg;
extern Function Float16x2_from_Float16x2;
inline constexpr auto Float16x2_from_Float16x2_name = "f16x2"_c;
inline constexpr auto Float16x2_from_Float16x2_backend_index = 370u;

/// f16x2 with Float16
extern Variable Float16x2_splat_Float16_arg;
extern Function Float16x2_splat_Float16;
inline constexpr auto Float16x2_splat_Float16_name = "f16x2"_c;
inline constexpr auto Float16x2_splat_Float16_backend_index = 371u;

/// f16x2 with UInt16x2
extern Variable Float16x2_from_UInt16x2_arg;
extern Function Float16x2_from_UInt16x2;
inline constexpr auto Float16x2_from_UInt16x2_name = "f16x2"_c;
inline constexpr auto Float16x2_from_UInt16x2_backend_index = 372u;

/// f16x2 with UInt16
extern Variable Float16x2_splat_UInt16_arg;
extern Function Float16x2_splat_UInt16;
inline constexpr auto Float16x2_splat_UInt16_name = "f16x2"_c;
inline constexpr auto Float16x2_splat_UInt16_backend_index = 373u;

/// f16x2 with Int16x2
extern Variable Float16x2_from_Int16x2_arg;
extern Function Float16x2_from_Int16x2;
inline constexpr auto Float16x2_from_Int16x2_name = "f16x2"_c;
inline constexpr auto Float16x2_from_Int16x2_backend_index = 374u;

/// f16x2 with Int16
extern Variable Float16x2_splat_Int16_arg;
extern Function Float16x2_splat_Int16;
inline constexpr auto Float16x2_splat_Int16_name = "f16x2"_c;
inline constexpr auto Float16x2_splat_Int16_backend_index = 375u;

/// f16x2 with Float16, Float16
extern Variable Float16x2_ctor0_arg0_Float16;
extern Variable Float16x2_ctor0_arg1_Float16;
extern Function Float16x2_ctor0;
inline constexpr auto Float16x2_ctor0_name = "f16x2"_c;
inline constexpr auto Float16x2_ctor0_backend_index = 376u;

/// u16x2 with Float32x2
extern Variable UInt16x2_from_Float32x2_arg;
extern Function UInt16x2_from_Float32x2;
inline constexpr auto UInt16x2_from_Float32x2_name = "u16x2"_c;
inline constexpr auto UInt16x2_from_Float32x2_backend_index = 402u;

/// u16x2 with Float32
extern Variable UInt16x2_splat_Float32_arg;
extern Function UInt16x2_splat_Float32;
inline constexpr auto UInt16x2_splat_Float32_name = "u16x2"_c;
inline constexpr auto UInt16x2_splat_Float32_backend_index = 403u;

/// u16x2 with UInt32x2
extern Variable UInt16x2_from_UInt32x2_arg;
extern Function UInt16x2_from_UInt32x2;
inline constexpr auto UInt16x2_from_UInt32x2_name = "u16x2"_c;
inline constexpr auto UInt16x2_from_UInt32x2_backend_index = 404u;

/// u16x2 with UInt32
extern Variable UInt16x2_splat_UInt32_arg;
extern Function UInt16x2_splat_UInt32;
inline constexpr auto UInt16x2_splat_UInt32_name = "u16x2"_c;
inline constexpr auto UInt16x2_splat_UInt32_backend_index = 405u;

/// u16x2 with Int32x2
extern Variable UInt16x2_from_Int32x2_arg;
extern Function UInt16x2_from_Int32x2;
inline constexpr auto UInt16x2_from_Int32x2_name = "u16x2"_c;
inline constexpr auto UInt16x2_from_Int32x2_backend_index = 406u;

/// u16x2 with Int32
extern Variable UInt16x2_splat_Int32_arg;
extern Function UInt16x2_splat_Int32;
inline constexpr auto UInt16x2_splat_Int32_name = "u16x2"_c;
inline constexpr auto UInt16x2_splat_Int32_backend_index = 407u;

/// u16x2 with Bool8x2
extern Variable UInt16x2_from_Bool8x2_arg;
extern Function UInt16x2_from_Bool8x2;
inline constexpr auto UInt16x2_from_Bool8x2_name = "u16x2"_c;
inline constexpr auto UInt16x2_from_Bool8x2_backend_index = 408u;

/// u16x2 with Bool8
extern Variable UInt16x2_splat_Bool8_arg;
extern Function UInt16x2_splat_Bool8;
inline constexpr auto UInt16x2_splat_Bool8_name = "u16x2"_c;
inline constexpr auto UInt16x2_splat_Bool8_backend_index = 409u;

/// u16x2 with Float16x2
extern Variable UInt16x2_from_Float16x2_arg;
extern Function UInt16x2_from_Float16x2;
inline constexpr auto UInt16x2_from_Float16x2_name = "u16x2"_c;
inline constexpr auto UInt16x2_from_Float16x2_backend_index = 410u;

/// u16x2 with Float16
extern Variable UInt16x2_splat_Float16_arg;
extern Function UInt16x2_splat_Float16;
inline constexpr auto UInt16x2_splat_Float16_name = "u16x2"_c;
inline constexpr auto UInt16x2_splat_Float16_backend_index = 411u;

/// u16x2 with UInt16x2
extern Variable UInt16x2_from_UInt16x2_arg;
extern Function UInt16x2_from_UInt16x2;
inline constexpr auto UInt16x2_from_UInt16x2_name = "u16x2"_c;
inline constexpr auto UInt16x2_from_UInt16x2_backend_index = 412u;

/// u16x2 with UInt16
extern Variable UInt16x2_splat_UInt16_arg;
extern Function UInt16x2_splat_UInt16;
inline constexpr auto UInt16x2_splat_UInt16_name = "u16x2"_c;
inline constexpr auto UInt16x2_splat_UInt16_backend_index = 413u;

/// u16x2 with Int16x2
extern Variable UInt16x2_from_Int16x2_arg;
extern Function UInt16x2_from_Int16x2;
inline constexpr auto UInt16x2_from_Int16x2_name = "u16x2"_c;
inline constexpr auto UInt16x2_from_Int16x2_backend_index = 414u;

/// u16x2 with Int16
extern Variable UInt16x2_splat_Int16_arg;
extern Function UInt16x2_splat_Int16;
inline constexpr auto UInt16x2_splat_Int16_name = "u16x2"_c;
inline constexpr auto UInt16x2_splat_Int16_backend_index = 415u;

/// u16x2 with UInt16, UInt16
extern Variable UInt16x2_ctor0_arg0_UInt16;
extern Variable UInt16x2_ctor0_arg1_UInt16;
extern Function UInt16x2_ctor0;
inline constexpr auto UInt16x2_ctor0_name = "u16x2"_c;
inline constexpr auto UInt16x2_ctor0_backend_index = 416u;

/// i16x2 with Float32x2
extern Variable Int16x2_from_Float32x2_arg;
extern Function Int16x2_from_Float32x2;
inline constexpr auto Int16x2_from_Float32x2_name = "i16x2"_c;
inline constexpr auto Int16x2_from_Float32x2_backend_index = 449u;

/// i16x2 with Float32
extern Variable Int16x2_splat_Float32_arg;
extern Function Int16x2_splat_Float32;
inline constexpr auto Int16x2_splat_Float32_name = "i16x2"_c;
inline constexpr auto Int16x2_splat_Float32_backend_index = 450u;

/// i16x2 with UInt32x2
extern Variable Int16x2_from_UInt32x2_arg;
extern Function Int16x2_from_UInt32x2;
inline constexpr auto Int16x2_from_UInt32x2_name = "i16x2"_c;
inline constexpr auto Int16x2_from_UInt32x2_backend_index = 451u;

/// i16x2 with UInt32
extern Variable Int16x2_splat_UInt32_arg;
extern Function Int16x2_splat_UInt32;
inline constexpr auto Int16x2_splat_UInt32_name = "i16x2"_c;
inline constexpr auto Int16x2_splat_UInt32_backend_index = 452u;

/// i16x2 with Int32x2
extern Variable Int16x2_from_Int32x2_arg;
extern Function Int16x2_from_Int32x2;
inline constexpr auto Int16x2_from_Int32x2_name = "i16x2"_c;
inline constexpr auto Int16x2_from_Int32x2_backend_index = 453u;

/// i16x2 with Int32
extern Variable Int16x2_splat_Int32_arg;
extern Function Int16x2_splat_Int32;
inline constexpr auto Int16x2_splat_Int32_name = "i16x2"_c;
inline constexpr auto Int16x2_splat_Int32_backend_index = 454u;

/// i16x2 with Bool8x2
extern Variable Int16x2_from_Bool8x2_arg;
extern Function Int16x2_from_Bool8x2;
inline constexpr auto Int16x2_from_Bool8x2_name = "i16x2"_c;
inline constexpr auto Int16x2_from_Bool8x2_backend_index = 455u;

/// i16x2 with Bool8
extern Variable Int16x2_splat_Bool8_arg;
extern Function Int16x2_splat_Bool8;
inline constexpr auto Int16x2_splat_Bool8_name = "i16x2"_c;
inline constexpr auto Int16x2_splat_Bool8_backend_index = 456u;

/// i16x2 with Float16x2
extern Variable Int16x2_from_Float16x2_arg;
extern Function Int16x2_from_Float16x2;
inline constexpr auto Int16x2_from_Float16x2_name = "i16x2"_c;
inline constexpr auto Int16x2_from_Float16x2_backend_index = 457u;

/// i16x2 with Float16
extern Variable Int16x2_splat_Float16_arg;
extern Function Int16x2_splat_Float16;
inline constexpr auto Int16x2_splat_Float16_name = "i16x2"_c;
inline constexpr auto Int16x2_splat_Float16_backend_index = 458u;

/// i16x2 with UInt16x2
extern Variable Int16x2_from_UInt16x2_arg;
extern Function Int16x2_from_UInt16x2;
inline constexpr auto Int16x2_from_UInt16x2_name = "i16x2"_c;
inline constexpr auto Int16x2_from_UInt16x2_backend_index = 459u;

/// i16x2 with UInt16
extern Variable Int16x2_splat_UInt16_arg;
extern Function Int16x2_splat_UInt16;
inline constexpr auto Int16x2_splat_UInt16_name = "i16x2"_c;
inline constexpr auto Int16x2_splat_UInt16_backend_index = 460u;

/// i16x2 with Int16x2
extern Variable Int16x2_from_Int16x2_arg;
extern Function Int16x2_from_Int16x2;
inline constexpr auto Int16x2_from_Int16x2_name = "i16x2"_c;
inline constexpr auto Int16x2_from_Int16x2_backend_index = 461u;

/// i16x2 with Int16
extern Variable Int16x2_splat_Int16_arg;
extern Function Int16x2_splat_Int16;
inline constexpr auto Int16x2_splat_Int16_name = "i16x2"_c;
inline constexpr auto Int16x2_splat_Int16_backend_index = 462u;

/// i16x2 with Int16, Int16
extern Variable Int16x2_ctor0_arg0_Int16;
extern Variable Int16x2_ctor0_arg1_Int16;
extern Function Int16x2_ctor0;
inline constexpr auto Int16x2_ctor0_name = "i16x2"_c;
inline constexpr auto Int16x2_ctor0_backend_index = 463u;

/// f32x3 with Float32x3
extern Variable Float32x3_from_Float32x3_arg;
extern Function Float32x3_from_Float32x3;
inline constexpr auto Float32x3_from_Float32x3_name = "f32x3"_c;
inline constexpr auto Float32x3_from_Float32x3_backend_index = 496u;

/// f32x3 with Float32
extern Variable Float32x3_splat_Float32_arg;
extern Function Float32x3_splat_Float32;
inline constexpr auto Float32x3_splat_Float32_name = "f32x3"_c;
inline constexpr auto Float32x3_splat_Float32_backend_index = 497u;

/// f32x3 with UInt32x3
extern Variable Float32x3_from_UInt32x3_arg;
extern Function Float32x3_from_UInt32x3;
inline constexpr auto Float32x3_from_UInt32x3_name = "f32x3"_c;
inline constexpr auto Float32x3_from_UInt32x3_backend_index = 498u;

/// f32x3 with UInt32
extern Variable Float32x3_splat_UInt32_arg;
extern Function Float32x3_splat_UInt32;
inline constexpr auto Float32x3_splat_UInt32_name = "f32x3"_c;
inline constexpr auto Float32x3_splat_UInt32_backend_index = 499u;

/// f32x3 with Int32x3
extern Variable Float32x3_from_Int32x3_arg;
extern Function Float32x3_from_Int32x3;
inline constexpr auto Float32x3_from_Int32x3_name = "f32x3"_c;
inline constexpr auto Float32x3_from_Int32x3_backend_index = 500u;

/// f32x3 with Int32
extern Variable Float32x3_splat_Int32_arg;
extern Function Float32x3_splat_Int32;
inline constexpr auto Float32x3_splat_Int32_name = "f32x3"_c;
inline constexpr auto Float32x3_splat_Int32_backend_index = 501u;

/// f32x3 with Bool8x3
extern Variable Float32x3_from_Bool8x3_arg;
extern Function Float32x3_from_Bool8x3;
inline constexpr auto Float32x3_from_Bool8x3_name = "f32x3"_c;
inline constexpr auto Float32x3_from_Bool8x3_backend_index = 502u;

/// f32x3 with Bool8
extern Variable Float32x3_splat_Bool8_arg;
extern Function Float32x3_splat_Bool8;
inline constexpr auto Float32x3_splat_Bool8_name = "f32x3"_c;
inline constexpr auto Float32x3_splat_Bool8_backend_index = 503u;

/// f32x3 with Float16x3
extern Variable Float32x3_from_Float16x3_arg;
extern Function Float32x3_from_Float16x3;
inline constexpr auto Float32x3_from_Float16x3_name = "f32x3"_c;
inline constexpr auto Float32x3_from_Float16x3_backend_index = 504u;

/// f32x3 with Float16
extern Variable Float32x3_splat_Float16_arg;
extern Function Float32x3_splat_Float16;
inline constexpr auto Float32x3_splat_Float16_name = "f32x3"_c;
inline constexpr auto Float32x3_splat_Float16_backend_index = 505u;

/// f32x3 with UInt16x3
extern Variable Float32x3_from_UInt16x3_arg;
extern Function Float32x3_from_UInt16x3;
inline constexpr auto Float32x3_from_UInt16x3_name = "f32x3"_c;
inline constexpr auto Float32x3_from_UInt16x3_backend_index = 506u;

/// f32x3 with UInt16
extern Variable Float32x3_splat_UInt16_arg;
extern Function Float32x3_splat_UInt16;
inline constexpr auto Float32x3_splat_UInt16_name = "f32x3"_c;
inline constexpr auto Float32x3_splat_UInt16_backend_index = 507u;

/// f32x3 with Int16x3
extern Variable Float32x3_from_Int16x3_arg;
extern Function Float32x3_from_Int16x3;
inline constexpr auto Float32x3_from_Int16x3_name = "f32x3"_c;
inline constexpr auto Float32x3_from_Int16x3_backend_index = 508u;

/// f32x3 with Int16
extern Variable Float32x3_splat_Int16_arg;
extern Function Float32x3_splat_Int16;
inline constexpr auto Float32x3_splat_Int16_name = "f32x3"_c;
inline constexpr auto Float32x3_splat_Int16_backend_index = 509u;

/// f32x3 with Float32, Float32, Float32
extern Variable Float32x3_ctor0_arg0_Float32;
extern Variable Float32x3_ctor0_arg1_Float32;
extern Variable Float32x3_ctor0_arg2_Float32;
extern Function Float32x3_ctor0;
inline constexpr auto Float32x3_ctor0_name = "f32x3"_c;
inline constexpr auto Float32x3_ctor0_backend_index = 510u;

/// f32x3 with Float32x2, Float32
extern Variable Float32x3_ctor1_arg0_Float32x2;
extern Variable Float32x3_ctor1_arg1_Float32;
extern Function Float32x3_ctor1;
inline constexpr auto Float32x3_ctor1_name = "f32x3"_c;
inline constexpr auto Float32x3_ctor1_backend_index = 511u;

/// f32x3 with Float32, Float32x2
extern Variable Float32x3_ctor2_arg0_Float32;
extern Variable Float32x3_ctor2_arg1_Float32x2;
extern Function Float32x3_ctor2;
inline constexpr auto Float32x3_ctor2_name = "f32x3"_c;
inline constexpr auto Float32x3_ctor2_backend_index = 512u;

/// u32x3 with Float32x3
extern Variable UInt32x3_from_Float32x3_arg;
extern Function UInt32x3_from_Float32x3;
inline constexpr auto UInt32x3_from_Float32x3_name = "u32x3"_c;
inline constexpr auto UInt32x3_from_Float32x3_backend_index = 538u;

/// u32x3 with Float32
extern Variable UInt32x3_splat_Float32_arg;
extern Function UInt32x3_splat_Float32;
inline constexpr auto UInt32x3_splat_Float32_name = "u32x3"_c;
inline constexpr auto UInt32x3_splat_Float32_backend_index = 539u;

/// u32x3 with UInt32x3
extern Variable UInt32x3_from_UInt32x3_arg;
extern Function UInt32x3_from_UInt32x3;
inline constexpr auto UInt32x3_from_UInt32x3_name = "u32x3"_c;
inline constexpr auto UInt32x3_from_UInt32x3_backend_index = 540u;

/// u32x3 with UInt32
extern Variable UInt32x3_splat_UInt32_arg;
extern Function UInt32x3_splat_UInt32;
inline constexpr auto UInt32x3_splat_UInt32_name = "u32x3"_c;
inline constexpr auto UInt32x3_splat_UInt32_backend_index = 541u;

/// u32x3 with Int32x3
extern Variable UInt32x3_from_Int32x3_arg;
extern Function UInt32x3_from_Int32x3;
inline constexpr auto UInt32x3_from_Int32x3_name = "u32x3"_c;
inline constexpr auto UInt32x3_from_Int32x3_backend_index = 542u;

/// u32x3 with Int32
extern Variable UInt32x3_splat_Int32_arg;
extern Function UInt32x3_splat_Int32;
inline constexpr auto UInt32x3_splat_Int32_name = "u32x3"_c;
inline constexpr auto UInt32x3_splat_Int32_backend_index = 543u;

/// u32x3 with Bool8x3
extern Variable UInt32x3_from_Bool8x3_arg;
extern Function UInt32x3_from_Bool8x3;
inline constexpr auto UInt32x3_from_Bool8x3_name = "u32x3"_c;
inline constexpr auto UInt32x3_from_Bool8x3_backend_index = 544u;

/// u32x3 with Bool8
extern Variable UInt32x3_splat_Bool8_arg;
extern Function UInt32x3_splat_Bool8;
inline constexpr auto UInt32x3_splat_Bool8_name = "u32x3"_c;
inline constexpr auto UInt32x3_splat_Bool8_backend_index = 545u;

/// u32x3 with Float16x3
extern Variable UInt32x3_from_Float16x3_arg;
extern Function UInt32x3_from_Float16x3;
inline constexpr auto UInt32x3_from_Float16x3_name = "u32x3"_c;
inline constexpr auto UInt32x3_from_Float16x3_backend_index = 546u;

/// u32x3 with Float16
extern Variable UInt32x3_splat_Float16_arg;
extern Function UInt32x3_splat_Float16;
inline constexpr auto UInt32x3_splat_Float16_name = "u32x3"_c;
inline constexpr auto UInt32x3_splat_Float16_backend_index = 547u;

/// u32x3 with UInt16x3
extern Variable UInt32x3_from_UInt16x3_arg;
extern Function UInt32x3_from_UInt16x3;
inline constexpr auto UInt32x3_from_UInt16x3_name = "u32x3"_c;
inline constexpr auto UInt32x3_from_UInt16x3_backend_index = 548u;

/// u32x3 with UInt16
extern Variable UInt32x3_splat_UInt16_arg;
extern Function UInt32x3_splat_UInt16;
inline constexpr auto UInt32x3_splat_UInt16_name = "u32x3"_c;
inline constexpr auto UInt32x3_splat_UInt16_backend_index = 549u;

/// u32x3 with Int16x3
extern Variable UInt32x3_from_Int16x3_arg;
extern Function UInt32x3_from_Int16x3;
inline constexpr auto UInt32x3_from_Int16x3_name = "u32x3"_c;
inline constexpr auto UInt32x3_from_Int16x3_backend_index = 550u;

/// u32x3 with Int16
extern Variable UInt32x3_splat_Int16_arg;
extern Function UInt32x3_splat_Int16;
inline constexpr auto UInt32x3_splat_Int16_name = "u32x3"_c;
inline constexpr auto UInt32x3_splat_Int16_backend_index = 551u;

/// u32x3 with UInt32, UInt32, UInt32
extern Variable UInt32x3_ctor0_arg0_UInt32;
extern Variable UInt32x3_ctor0_arg1_UInt32;
extern Variable UInt32x3_ctor0_arg2_UInt32;
extern Function UInt32x3_ctor0;
inline constexpr auto UInt32x3_ctor0_name = "u32x3"_c;
inline constexpr auto UInt32x3_ctor0_backend_index = 552u;

/// u32x3 with UInt32x2, UInt32
extern Variable UInt32x3_ctor1_arg0_UInt32x2;
extern Variable UInt32x3_ctor1_arg1_UInt32;
extern Function UInt32x3_ctor1;
inline constexpr auto UInt32x3_ctor1_name = "u32x3"_c;
inline constexpr auto UInt32x3_ctor1_backend_index = 553u;

/// u32x3 with UInt32, UInt32x2
extern Variable UInt32x3_ctor2_arg0_UInt32;
extern Variable UInt32x3_ctor2_arg1_UInt32x2;
extern Function UInt32x3_ctor2;
inline constexpr auto UInt32x3_ctor2_name = "u32x3"_c;
inline constexpr auto UInt32x3_ctor2_backend_index = 554u;

/// i32x3 with Float32x3
extern Variable Int32x3_from_Float32x3_arg;
extern Function Int32x3_from_Float32x3;
inline constexpr auto Int32x3_from_Float32x3_name = "i32x3"_c;
inline constexpr auto Int32x3_from_Float32x3_backend_index = 587u;

/// i32x3 with Float32
extern Variable Int32x3_splat_Float32_arg;
extern Function Int32x3_splat_Float32;
inline constexpr auto Int32x3_splat_Float32_name = "i32x3"_c;
inline constexpr auto Int32x3_splat_Float32_backend_index = 588u;

/// i32x3 with UInt32x3
extern Variable Int32x3_from_UInt32x3_arg;
extern Function Int32x3_from_UInt32x3;
inline constexpr auto Int32x3_from_UInt32x3_name = "i32x3"_c;
inline constexpr auto Int32x3_from_UInt32x3_backend_index = 589u;

/// i32x3 with UInt32
extern Variable Int32x3_splat_UInt32_arg;
extern Function Int32x3_splat_UInt32;
inline constexpr auto Int32x3_splat_UInt32_name = "i32x3"_c;
inline constexpr auto Int32x3_splat_UInt32_backend_index = 590u;

/// i32x3 with Int32x3
extern Variable Int32x3_from_Int32x3_arg;
extern Function Int32x3_from_Int32x3;
inline constexpr auto Int32x3_from_Int32x3_name = "i32x3"_c;
inline constexpr auto Int32x3_from_Int32x3_backend_index = 591u;

/// i32x3 with Int32
extern Variable Int32x3_splat_Int32_arg;
extern Function Int32x3_splat_Int32;
inline constexpr auto Int32x3_splat_Int32_name = "i32x3"_c;
inline constexpr auto Int32x3_splat_Int32_backend_index = 592u;

/// i32x3 with Bool8x3
extern Variable Int32x3_from_Bool8x3_arg;
extern Function Int32x3_from_Bool8x3;
inline constexpr auto Int32x3_from_Bool8x3_name = "i32x3"_c;
inline constexpr auto Int32x3_from_Bool8x3_backend_index = 593u;

/// i32x3 with Bool8
extern Variable Int32x3_splat_Bool8_arg;
extern Function Int32x3_splat_Bool8;
inline constexpr auto Int32x3_splat_Bool8_name = "i32x3"_c;
inline constexpr auto Int32x3_splat_Bool8_backend_index = 594u;

/// i32x3 with Float16x3
extern Variable Int32x3_from_Float16x3_arg;
extern Function Int32x3_from_Float16x3;
inline constexpr auto Int32x3_from_Float16x3_name = "i32x3"_c;
inline constexpr auto Int32x3_from_Float16x3_backend_index = 595u;

/// i32x3 with Float16
extern Variable Int32x3_splat_Float16_arg;
extern Function Int32x3_splat_Float16;
inline constexpr auto Int32x3_splat_Float16_name = "i32x3"_c;
inline constexpr auto Int32x3_splat_Float16_backend_index = 596u;

/// i32x3 with UInt16x3
extern Variable Int32x3_from_UInt16x3_arg;
extern Function Int32x3_from_UInt16x3;
inline constexpr auto Int32x3_from_UInt16x3_name = "i32x3"_c;
inline constexpr auto Int32x3_from_UInt16x3_backend_index = 597u;

/// i32x3 with UInt16
extern Variable Int32x3_splat_UInt16_arg;
extern Function Int32x3_splat_UInt16;
inline constexpr auto Int32x3_splat_UInt16_name = "i32x3"_c;
inline constexpr auto Int32x3_splat_UInt16_backend_index = 598u;

/// i32x3 with Int16x3
extern Variable Int32x3_from_Int16x3_arg;
extern Function Int32x3_from_Int16x3;
inline constexpr auto Int32x3_from_Int16x3_name = "i32x3"_c;
inline constexpr auto Int32x3_from_Int16x3_backend_index = 599u;

/// i32x3 with Int16
extern Variable Int32x3_splat_Int16_arg;
extern Function Int32x3_splat_Int16;
inline constexpr auto Int32x3_splat_Int16_name = "i32x3"_c;
inline constexpr auto Int32x3_splat_Int16_backend_index = 600u;

/// i32x3 with Int32, Int32, Int32
extern Variable Int32x3_ctor0_arg0_Int32;
extern Variable Int32x3_ctor0_arg1_Int32;
extern Variable Int32x3_ctor0_arg2_Int32;
extern Function Int32x3_ctor0;
inline constexpr auto Int32x3_ctor0_name = "i32x3"_c;
inline constexpr auto Int32x3_ctor0_backend_index = 601u;

/// i32x3 with Int32x2, Int32
extern Variable Int32x3_ctor1_arg0_Int32x2;
extern Variable Int32x3_ctor1_arg1_Int32;
extern Function Int32x3_ctor1;
inline constexpr auto Int32x3_ctor1_name = "i32x3"_c;
inline constexpr auto Int32x3_ctor1_backend_index = 602u;

/// i32x3 with Int32, Int32x2
extern Variable Int32x3_ctor2_arg0_Int32;
extern Variable Int32x3_ctor2_arg1_Int32x2;
extern Function Int32x3_ctor2;
inline constexpr auto Int32x3_ctor2_name = "i32x3"_c;
inline constexpr auto Int32x3_ctor2_backend_index = 603u;

/// b8x3 with UInt32x3
extern Variable Bool8x3_from_UInt32x3_arg;
extern Function Bool8x3_from_UInt32x3;
inline constexpr auto Bool8x3_from_UInt32x3_name = "b8x3"_c;
inline constexpr auto Bool8x3_from_UInt32x3_backend_index = 636u;

/// b8x3 with UInt32
extern Variable Bool8x3_splat_UInt32_arg;
extern Function Bool8x3_splat_UInt32;
inline constexpr auto Bool8x3_splat_UInt32_name = "b8x3"_c;
inline constexpr auto Bool8x3_splat_UInt32_backend_index = 637u;

/// b8x3 with Int32x3
extern Variable Bool8x3_from_Int32x3_arg;
extern Function Bool8x3_from_Int32x3;
inline constexpr auto Bool8x3_from_Int32x3_name = "b8x3"_c;
inline constexpr auto Bool8x3_from_Int32x3_backend_index = 638u;

/// b8x3 with Int32
extern Variable Bool8x3_splat_Int32_arg;
extern Function Bool8x3_splat_Int32;
inline constexpr auto Bool8x3_splat_Int32_name = "b8x3"_c;
inline constexpr auto Bool8x3_splat_Int32_backend_index = 639u;

/// b8x3 with Bool8x3
extern Variable Bool8x3_from_Bool8x3_arg;
extern Function Bool8x3_from_Bool8x3;
inline constexpr auto Bool8x3_from_Bool8x3_name = "b8x3"_c;
inline constexpr auto Bool8x3_from_Bool8x3_backend_index = 640u;

/// b8x3 with Bool8
extern Variable Bool8x3_splat_Bool8_arg;
extern Function Bool8x3_splat_Bool8;
inline constexpr auto Bool8x3_splat_Bool8_name = "b8x3"_c;
inline constexpr auto Bool8x3_splat_Bool8_backend_index = 641u;

/// b8x3 with UInt16x3
extern Variable Bool8x3_from_UInt16x3_arg;
extern Function Bool8x3_from_UInt16x3;
inline constexpr auto Bool8x3_from_UInt16x3_name = "b8x3"_c;
inline constexpr auto Bool8x3_from_UInt16x3_backend_index = 642u;

/// b8x3 with UInt16
extern Variable Bool8x3_splat_UInt16_arg;
extern Function Bool8x3_splat_UInt16;
inline constexpr auto Bool8x3_splat_UInt16_name = "b8x3"_c;
inline constexpr auto Bool8x3_splat_UInt16_backend_index = 643u;

/// b8x3 with Int16x3
extern Variable Bool8x3_from_Int16x3_arg;
extern Function Bool8x3_from_Int16x3;
inline constexpr auto Bool8x3_from_Int16x3_name = "b8x3"_c;
inline constexpr auto Bool8x3_from_Int16x3_backend_index = 644u;

/// b8x3 with Int16
extern Variable Bool8x3_splat_Int16_arg;
extern Function Bool8x3_splat_Int16;
inline constexpr auto Bool8x3_splat_Int16_name = "b8x3"_c;
inline constexpr auto Bool8x3_splat_Int16_backend_index = 645u;

/// b8x3 with Bool8, Bool8, Bool8
extern Variable Bool8x3_ctor0_arg0_Bool8;
extern Variable Bool8x3_ctor0_arg1_Bool8;
extern Variable Bool8x3_ctor0_arg2_Bool8;
extern Function Bool8x3_ctor0;
inline constexpr auto Bool8x3_ctor0_name = "b8x3"_c;
inline constexpr auto Bool8x3_ctor0_backend_index = 646u;

/// b8x3 with Bool8x2, Bool8
extern Variable Bool8x3_ctor1_arg0_Bool8x2;
extern Variable Bool8x3_ctor1_arg1_Bool8;
extern Function Bool8x3_ctor1;
inline constexpr auto Bool8x3_ctor1_name = "b8x3"_c;
inline constexpr auto Bool8x3_ctor1_backend_index = 647u;

/// b8x3 with Bool8, Bool8x2
extern Variable Bool8x3_ctor2_arg0_Bool8;
extern Variable Bool8x3_ctor2_arg1_Bool8x2;
extern Function Bool8x3_ctor2;
inline constexpr auto Bool8x3_ctor2_name = "b8x3"_c;
inline constexpr auto Bool8x3_ctor2_backend_index = 648u;

/// f16x3 with Float32x3
extern Variable Float16x3_from_Float32x3_arg;
extern Function Float16x3_from_Float32x3;
inline constexpr auto Float16x3_from_Float32x3_name = "f16x3"_c;
inline constexpr auto Float16x3_from_Float32x3_backend_index = 657u;

/// f16x3 with Float32
extern Variable Float16x3_splat_Float32_arg;
extern Function Float16x3_splat_Float32;
inline constexpr auto Float16x3_splat_Float32_name = "f16x3"_c;
inline constexpr auto Float16x3_splat_Float32_backend_index = 658u;

/// f16x3 with UInt32x3
extern Variable Float16x3_from_UInt32x3_arg;
extern Function Float16x3_from_UInt32x3;
inline constexpr auto Float16x3_from_UInt32x3_name = "f16x3"_c;
inline constexpr auto Float16x3_from_UInt32x3_backend_index = 659u;

/// f16x3 with UInt32
extern Variable Float16x3_splat_UInt32_arg;
extern Function Float16x3_splat_UInt32;
inline constexpr auto Float16x3_splat_UInt32_name = "f16x3"_c;
inline constexpr auto Float16x3_splat_UInt32_backend_index = 660u;

/// f16x3 with Int32x3
extern Variable Float16x3_from_Int32x3_arg;
extern Function Float16x3_from_Int32x3;
inline constexpr auto Float16x3_from_Int32x3_name = "f16x3"_c;
inline constexpr auto Float16x3_from_Int32x3_backend_index = 661u;

/// f16x3 with Int32
extern Variable Float16x3_splat_Int32_arg;
extern Function Float16x3_splat_Int32;
inline constexpr auto Float16x3_splat_Int32_name = "f16x3"_c;
inline constexpr auto Float16x3_splat_Int32_backend_index = 662u;

/// f16x3 with Bool8x3
extern Variable Float16x3_from_Bool8x3_arg;
extern Function Float16x3_from_Bool8x3;
inline constexpr auto Float16x3_from_Bool8x3_name = "f16x3"_c;
inline constexpr auto Float16x3_from_Bool8x3_backend_index = 663u;

/// f16x3 with Bool8
extern Variable Float16x3_splat_Bool8_arg;
extern Function Float16x3_splat_Bool8;
inline constexpr auto Float16x3_splat_Bool8_name = "f16x3"_c;
inline constexpr auto Float16x3_splat_Bool8_backend_index = 664u;

/// f16x3 with Float16x3
extern Variable Float16x3_from_Float16x3_arg;
extern Function Float16x3_from_Float16x3;
inline constexpr auto Float16x3_from_Float16x3_name = "f16x3"_c;
inline constexpr auto Float16x3_from_Float16x3_backend_index = 665u;

/// f16x3 with Float16
extern Variable Float16x3_splat_Float16_arg;
extern Function Float16x3_splat_Float16;
inline constexpr auto Float16x3_splat_Float16_name = "f16x3"_c;
inline constexpr auto Float16x3_splat_Float16_backend_index = 666u;

/// f16x3 with UInt16x3
extern Variable Float16x3_from_UInt16x3_arg;
extern Function Float16x3_from_UInt16x3;
inline constexpr auto Float16x3_from_UInt16x3_name = "f16x3"_c;
inline constexpr auto Float16x3_from_UInt16x3_backend_index = 667u;

/// f16x3 with UInt16
extern Variable Float16x3_splat_UInt16_arg;
extern Function Float16x3_splat_UInt16;
inline constexpr auto Float16x3_splat_UInt16_name = "f16x3"_c;
inline constexpr auto Float16x3_splat_UInt16_backend_index = 668u;

/// f16x3 with Int16x3
extern Variable Float16x3_from_Int16x3_arg;
extern Function Float16x3_from_Int16x3;
inline constexpr auto Float16x3_from_Int16x3_name = "f16x3"_c;
inline constexpr auto Float16x3_from_Int16x3_backend_index = 669u;

/// f16x3 with Int16
extern Variable Float16x3_splat_Int16_arg;
extern Function Float16x3_splat_Int16;
inline constexpr auto Float16x3_splat_Int16_name = "f16x3"_c;
inline constexpr auto Float16x3_splat_Int16_backend_index = 670u;

/// f16x3 with Float16, Float16, Float16
extern Variable Float16x3_ctor0_arg0_Float16;
extern Variable Float16x3_ctor0_arg1_Float16;
extern Variable Float16x3_ctor0_arg2_Float16;
extern Function Float16x3_ctor0;
inline constexpr auto Float16x3_ctor0_name = "f16x3"_c;
inline constexpr auto Float16x3_ctor0_backend_index = 671u;

/// f16x3 with Float16x2, Float16
extern Variable Float16x3_ctor1_arg0_Float16x2;
extern Variable Float16x3_ctor1_arg1_Float16;
extern Function Float16x3_ctor1;
inline constexpr auto Float16x3_ctor1_name = "f16x3"_c;
inline constexpr auto Float16x3_ctor1_backend_index = 672u;

/// f16x3 with Float16, Float16x2
extern Variable Float16x3_ctor2_arg0_Float16;
extern Variable Float16x3_ctor2_arg1_Float16x2;
extern Function Float16x3_ctor2;
inline constexpr auto Float16x3_ctor2_name = "f16x3"_c;
inline constexpr auto Float16x3_ctor2_backend_index = 673u;

/// u16x3 with Float32x3
extern Variable UInt16x3_from_Float32x3_arg;
extern Function UInt16x3_from_Float32x3;
inline constexpr auto UInt16x3_from_Float32x3_name = "u16x3"_c;
inline constexpr auto UInt16x3_from_Float32x3_backend_index = 699u;

/// u16x3 with Float32
extern Variable UInt16x3_splat_Float32_arg;
extern Function UInt16x3_splat_Float32;
inline constexpr auto UInt16x3_splat_Float32_name = "u16x3"_c;
inline constexpr auto UInt16x3_splat_Float32_backend_index = 700u;

/// u16x3 with UInt32x3
extern Variable UInt16x3_from_UInt32x3_arg;
extern Function UInt16x3_from_UInt32x3;
inline constexpr auto UInt16x3_from_UInt32x3_name = "u16x3"_c;
inline constexpr auto UInt16x3_from_UInt32x3_backend_index = 701u;

/// u16x3 with UInt32
extern Variable UInt16x3_splat_UInt32_arg;
extern Function UInt16x3_splat_UInt32;
inline constexpr auto UInt16x3_splat_UInt32_name = "u16x3"_c;
inline constexpr auto UInt16x3_splat_UInt32_backend_index = 702u;

/// u16x3 with Int32x3
extern Variable UInt16x3_from_Int32x3_arg;
extern Function UInt16x3_from_Int32x3;
inline constexpr auto UInt16x3_from_Int32x3_name = "u16x3"_c;
inline constexpr auto UInt16x3_from_Int32x3_backend_index = 703u;

/// u16x3 with Int32
extern Variable UInt16x3_splat_Int32_arg;
extern Function UInt16x3_splat_Int32;
inline constexpr auto UInt16x3_splat_Int32_name = "u16x3"_c;
inline constexpr auto UInt16x3_splat_Int32_backend_index = 704u;

/// u16x3 with Bool8x3
extern Variable UInt16x3_from_Bool8x3_arg;
extern Function UInt16x3_from_Bool8x3;
inline constexpr auto UInt16x3_from_Bool8x3_name = "u16x3"_c;
inline constexpr auto UInt16x3_from_Bool8x3_backend_index = 705u;

/// u16x3 with Bool8
extern Variable UInt16x3_splat_Bool8_arg;
extern Function UInt16x3_splat_Bool8;
inline constexpr auto UInt16x3_splat_Bool8_name = "u16x3"_c;
inline constexpr auto UInt16x3_splat_Bool8_backend_index = 706u;

/// u16x3 with Float16x3
extern Variable UInt16x3_from_Float16x3_arg;
extern Function UInt16x3_from_Float16x3;
inline constexpr auto UInt16x3_from_Float16x3_name = "u16x3"_c;
inline constexpr auto UInt16x3_from_Float16x3_backend_index = 707u;

/// u16x3 with Float16
extern Variable UInt16x3_splat_Float16_arg;
extern Function UInt16x3_splat_Float16;
inline constexpr auto UInt16x3_splat_Float16_name = "u16x3"_c;
inline constexpr auto UInt16x3_splat_Float16_backend_index = 708u;

/// u16x3 with UInt16x3
extern Variable UInt16x3_from_UInt16x3_arg;
extern Function UInt16x3_from_UInt16x3;
inline constexpr auto UInt16x3_from_UInt16x3_name = "u16x3"_c;
inline constexpr auto UInt16x3_from_UInt16x3_backend_index = 709u;

/// u16x3 with UInt16
extern Variable UInt16x3_splat_UInt16_arg;
extern Function UInt16x3_splat_UInt16;
inline constexpr auto UInt16x3_splat_UInt16_name = "u16x3"_c;
inline constexpr auto UInt16x3_splat_UInt16_backend_index = 710u;

/// u16x3 with Int16x3
extern Variable UInt16x3_from_Int16x3_arg;
extern Function UInt16x3_from_Int16x3;
inline constexpr auto UInt16x3_from_Int16x3_name = "u16x3"_c;
inline constexpr auto UInt16x3_from_Int16x3_backend_index = 711u;

/// u16x3 with Int16
extern Variable UInt16x3_splat_Int16_arg;
extern Function UInt16x3_splat_Int16;
inline constexpr auto UInt16x3_splat_Int16_name = "u16x3"_c;
inline constexpr auto UInt16x3_splat_Int16_backend_index = 712u;

/// u16x3 with UInt16, UInt16, UInt16
extern Variable UInt16x3_ctor0_arg0_UInt16;
extern Variable UInt16x3_ctor0_arg1_UInt16;
extern Variable UInt16x3_ctor0_arg2_UInt16;
extern Function UInt16x3_ctor0;
inline constexpr auto UInt16x3_ctor0_name = "u16x3"_c;
inline constexpr auto UInt16x3_ctor0_backend_index = 713u;

/// u16x3 with UInt16x2, UInt16
extern Variable UInt16x3_ctor1_arg0_UInt16x2;
extern Variable UInt16x3_ctor1_arg1_UInt16;
extern Function UInt16x3_ctor1;
inline constexpr auto UInt16x3_ctor1_name = "u16x3"_c;
inline constexpr auto UInt16x3_ctor1_backend_index = 714u;

/// u16x3 with UInt16, UInt16x2
extern Variable UInt16x3_ctor2_arg0_UInt16;
extern Variable UInt16x3_ctor2_arg1_UInt16x2;
extern Function UInt16x3_ctor2;
inline constexpr auto UInt16x3_ctor2_name = "u16x3"_c;
inline constexpr auto UInt16x3_ctor2_backend_index = 715u;

/// i16x3 with Float32x3
extern Variable Int16x3_from_Float32x3_arg;
extern Function Int16x3_from_Float32x3;
inline constexpr auto Int16x3_from_Float32x3_name = "i16x3"_c;
inline constexpr auto Int16x3_from_Float32x3_backend_index = 748u;

/// i16x3 with Float32
extern Variable Int16x3_splat_Float32_arg;
extern Function Int16x3_splat_Float32;
inline constexpr auto Int16x3_splat_Float32_name = "i16x3"_c;
inline constexpr auto Int16x3_splat_Float32_backend_index = 749u;

/// i16x3 with UInt32x3
extern Variable Int16x3_from_UInt32x3_arg;
extern Function Int16x3_from_UInt32x3;
inline constexpr auto Int16x3_from_UInt32x3_name = "i16x3"_c;
inline constexpr auto Int16x3_from_UInt32x3_backend_index = 750u;

/// i16x3 with UInt32
extern Variable Int16x3_splat_UInt32_arg;
extern Function Int16x3_splat_UInt32;
inline constexpr auto Int16x3_splat_UInt32_name = "i16x3"_c;
inline constexpr auto Int16x3_splat_UInt32_backend_index = 751u;

/// i16x3 with Int32x3
extern Variable Int16x3_from_Int32x3_arg;
extern Function Int16x3_from_Int32x3;
inline constexpr auto Int16x3_from_Int32x3_name = "i16x3"_c;
inline constexpr auto Int16x3_from_Int32x3_backend_index = 752u;

/// i16x3 with Int32
extern Variable Int16x3_splat_Int32_arg;
extern Function Int16x3_splat_Int32;
inline constexpr auto Int16x3_splat_Int32_name = "i16x3"_c;
inline constexpr auto Int16x3_splat_Int32_backend_index = 753u;

/// i16x3 with Bool8x3
extern Variable Int16x3_from_Bool8x3_arg;
extern Function Int16x3_from_Bool8x3;
inline constexpr auto Int16x3_from_Bool8x3_name = "i16x3"_c;
inline constexpr auto Int16x3_from_Bool8x3_backend_index = 754u;

/// i16x3 with Bool8
extern Variable Int16x3_splat_Bool8_arg;
extern Function Int16x3_splat_Bool8;
inline constexpr auto Int16x3_splat_Bool8_name = "i16x3"_c;
inline constexpr auto Int16x3_splat_Bool8_backend_index = 755u;

/// i16x3 with Float16x3
extern Variable Int16x3_from_Float16x3_arg;
extern Function Int16x3_from_Float16x3;
inline constexpr auto Int16x3_from_Float16x3_name = "i16x3"_c;
inline constexpr auto Int16x3_from_Float16x3_backend_index = 756u;

/// i16x3 with Float16
extern Variable Int16x3_splat_Float16_arg;
extern Function Int16x3_splat_Float16;
inline constexpr auto Int16x3_splat_Float16_name = "i16x3"_c;
inline constexpr auto Int16x3_splat_Float16_backend_index = 757u;

/// i16x3 with UInt16x3
extern Variable Int16x3_from_UInt16x3_arg;
extern Function Int16x3_from_UInt16x3;
inline constexpr auto Int16x3_from_UInt16x3_name = "i16x3"_c;
inline constexpr auto Int16x3_from_UInt16x3_backend_index = 758u;

/// i16x3 with UInt16
extern Variable Int16x3_splat_UInt16_arg;
extern Function Int16x3_splat_UInt16;
inline constexpr auto Int16x3_splat_UInt16_name = "i16x3"_c;
inline constexpr auto Int16x3_splat_UInt16_backend_index = 759u;

/// i16x3 with Int16x3
extern Variable Int16x3_from_Int16x3_arg;
extern Function Int16x3_from_Int16x3;
inline constexpr auto Int16x3_from_Int16x3_name = "i16x3"_c;
inline constexpr auto Int16x3_from_Int16x3_backend_index = 760u;

/// i16x3 with Int16
extern Variable Int16x3_splat_Int16_arg;
extern Function Int16x3_splat_Int16;
inline constexpr auto Int16x3_splat_Int16_name = "i16x3"_c;
inline constexpr auto Int16x3_splat_Int16_backend_index = 761u;

/// i16x3 with Int16, Int16, Int16
extern Variable Int16x3_ctor0_arg0_Int16;
extern Variable Int16x3_ctor0_arg1_Int16;
extern Variable Int16x3_ctor0_arg2_Int16;
extern Function Int16x3_ctor0;
inline constexpr auto Int16x3_ctor0_name = "i16x3"_c;
inline constexpr auto Int16x3_ctor0_backend_index = 762u;

/// i16x3 with Int16x2, Int16
extern Variable Int16x3_ctor1_arg0_Int16x2;
extern Variable Int16x3_ctor1_arg1_Int16;
extern Function Int16x3_ctor1;
inline constexpr auto Int16x3_ctor1_name = "i16x3"_c;
inline constexpr auto Int16x3_ctor1_backend_index = 763u;

/// i16x3 with Int16, Int16x2
extern Variable Int16x3_ctor2_arg0_Int16;
extern Variable Int16x3_ctor2_arg1_Int16x2;
extern Function Int16x3_ctor2;
inline constexpr auto Int16x3_ctor2_name = "i16x3"_c;
inline constexpr auto Int16x3_ctor2_backend_index = 764u;

/// f32x4 with Float32x4
extern Variable Float32x4_from_Float32x4_arg;
extern Function Float32x4_from_Float32x4;
inline constexpr auto Float32x4_from_Float32x4_name = "f32x4"_c;
inline constexpr auto Float32x4_from_Float32x4_backend_index = 797u;

/// f32x4 with Float32
extern Variable Float32x4_splat_Float32_arg;
extern Function Float32x4_splat_Float32;
inline constexpr auto Float32x4_splat_Float32_name = "f32x4"_c;
inline constexpr auto Float32x4_splat_Float32_backend_index = 798u;

/// f32x4 with UInt32x4
extern Variable Float32x4_from_UInt32x4_arg;
extern Function Float32x4_from_UInt32x4;
inline constexpr auto Float32x4_from_UInt32x4_name = "f32x4"_c;
inline constexpr auto Float32x4_from_UInt32x4_backend_index = 799u;

/// f32x4 with UInt32
extern Variable Float32x4_splat_UInt32_arg;
extern Function Float32x4_splat_UInt32;
inline constexpr auto Float32x4_splat_UInt32_name = "f32x4"_c;
inline constexpr auto Float32x4_splat_UInt32_backend_index = 800u;

/// f32x4 with Int32x4
extern Variable Float32x4_from_Int32x4_arg;
extern Function Float32x4_from_Int32x4;
inline constexpr auto Float32x4_from_Int32x4_name = "f32x4"_c;
inline constexpr auto Float32x4_from_Int32x4_backend_index = 801u;

/// f32x4 with Int32
extern Variable Float32x4_splat_Int32_arg;
extern Function Float32x4_splat_Int32;
inline constexpr auto Float32x4_splat_Int32_name = "f32x4"_c;
inline constexpr auto Float32x4_splat_Int32_backend_index = 802u;

/// f32x4 with Bool8x4
extern Variable Float32x4_from_Bool8x4_arg;
extern Function Float32x4_from_Bool8x4;
inline constexpr auto Float32x4_from_Bool8x4_name = "f32x4"_c;
inline constexpr auto Float32x4_from_Bool8x4_backend_index = 803u;

/// f32x4 with Bool8
extern Variable Float32x4_splat_Bool8_arg;
extern Function Float32x4_splat_Bool8;
inline constexpr auto Float32x4_splat_Bool8_name = "f32x4"_c;
inline constexpr auto Float32x4_splat_Bool8_backend_index = 804u;

/// f32x4 with Float16x4
extern Variable Float32x4_from_Float16x4_arg;
extern Function Float32x4_from_Float16x4;
inline constexpr auto Float32x4_from_Float16x4_name = "f32x4"_c;
inline constexpr auto Float32x4_from_Float16x4_backend_index = 805u;

/// f32x4 with Float16
extern Variable Float32x4_splat_Float16_arg;
extern Function Float32x4_splat_Float16;
inline constexpr auto Float32x4_splat_Float16_name = "f32x4"_c;
inline constexpr auto Float32x4_splat_Float16_backend_index = 806u;

/// f32x4 with UInt16x4
extern Variable Float32x4_from_UInt16x4_arg;
extern Function Float32x4_from_UInt16x4;
inline constexpr auto Float32x4_from_UInt16x4_name = "f32x4"_c;
inline constexpr auto Float32x4_from_UInt16x4_backend_index = 807u;

/// f32x4 with UInt16
extern Variable Float32x4_splat_UInt16_arg;
extern Function Float32x4_splat_UInt16;
inline constexpr auto Float32x4_splat_UInt16_name = "f32x4"_c;
inline constexpr auto Float32x4_splat_UInt16_backend_index = 808u;

/// f32x4 with Int16x4
extern Variable Float32x4_from_Int16x4_arg;
extern Function Float32x4_from_Int16x4;
inline constexpr auto Float32x4_from_Int16x4_name = "f32x4"_c;
inline constexpr auto Float32x4_from_Int16x4_backend_index = 809u;

/// f32x4 with Int16
extern Variable Float32x4_splat_Int16_arg;
extern Function Float32x4_splat_Int16;
inline constexpr auto Float32x4_splat_Int16_name = "f32x4"_c;
inline constexpr auto Float32x4_splat_Int16_backend_index = 810u;

/// f32x4 with Float32, Float32, Float32, Float32
extern Variable Float32x4_ctor0_arg0_Float32;
extern Variable Float32x4_ctor0_arg1_Float32;
extern Variable Float32x4_ctor0_arg2_Float32;
extern Variable Float32x4_ctor0_arg3_Float32;
extern Function Float32x4_ctor0;
inline constexpr auto Float32x4_ctor0_name = "f32x4"_c;
inline constexpr auto Float32x4_ctor0_backend_index = 811u;

/// f32x4 with Float32x2, Float32, Float32
extern Variable Float32x4_ctor1_arg0_Float32x2;
extern Variable Float32x4_ctor1_arg1_Float32;
extern Variable Float32x4_ctor1_arg2_Float32;
extern Function Float32x4_ctor1;
inline constexpr auto Float32x4_ctor1_name = "f32x4"_c;
inline constexpr auto Float32x4_ctor1_backend_index = 812u;

/// f32x4 with Float32, Float32x2, Float32
extern Variable Float32x4_ctor2_arg0_Float32;
extern Variable Float32x4_ctor2_arg1_Float32x2;
extern Variable Float32x4_ctor2_arg2_Float32;
extern Function Float32x4_ctor2;
inline constexpr auto Float32x4_ctor2_name = "f32x4"_c;
inline constexpr auto Float32x4_ctor2_backend_index = 813u;

/// f32x4 with Float32, Float32, Float32x2
extern Variable Float32x4_ctor3_arg0_Float32;
extern Variable Float32x4_ctor3_arg1_Float32;
extern Variable Float32x4_ctor3_arg2_Float32x2;
extern Function Float32x4_ctor3;
inline constexpr auto Float32x4_ctor3_name = "f32x4"_c;
inline constexpr auto Float32x4_ctor3_backend_index = 814u;

/// f32x4 with Float32x2, Float32x2
extern Variable Float32x4_ctor4_arg0_Float32x2;
extern Variable Float32x4_ctor4_arg1_Float32x2;
extern Function Float32x4_ctor4;
inline constexpr auto Float32x4_ctor4_name = "f32x4"_c;
inline constexpr auto Float32x4_ctor4_backend_index = 815u;

/// f32x4 with Float32x3, Float32
extern Variable Float32x4_ctor5_arg0_Float32x3;
extern Variable Float32x4_ctor5_arg1_Float32;
extern Function Float32x4_ctor5;
inline constexpr auto Float32x4_ctor5_name = "f32x4"_c;
inline constexpr auto Float32x4_ctor5_backend_index = 816u;

/// f32x4 with Float32, Float32x3
extern Variable Float32x4_ctor6_arg0_Float32;
extern Variable Float32x4_ctor6_arg1_Float32x3;
extern Function Float32x4_ctor6;
inline constexpr auto Float32x4_ctor6_name = "f32x4"_c;
inline constexpr auto Float32x4_ctor6_backend_index = 817u;

/// u32x4 with Float32x4
extern Variable UInt32x4_from_Float32x4_arg;
extern Function UInt32x4_from_Float32x4;
inline constexpr auto UInt32x4_from_Float32x4_name = "u32x4"_c;
inline constexpr auto UInt32x4_from_Float32x4_backend_index = 843u;

/// u32x4 with Float32
extern Variable UInt32x4_splat_Float32_arg;
extern Function UInt32x4_splat_Float32;
inline constexpr auto UInt32x4_splat_Float32_name = "u32x4"_c;
inline constexpr auto UInt32x4_splat_Float32_backend_index = 844u;

/// u32x4 with UInt32x4
extern Variable UInt32x4_from_UInt32x4_arg;
extern Function UInt32x4_from_UInt32x4;
inline constexpr auto UInt32x4_from_UInt32x4_name = "u32x4"_c;
inline constexpr auto UInt32x4_from_UInt32x4_backend_index = 845u;

/// u32x4 with UInt32
extern Variable UInt32x4_splat_UInt32_arg;
extern Function UInt32x4_splat_UInt32;
inline constexpr auto UInt32x4_splat_UInt32_name = "u32x4"_c;
inline constexpr auto UInt32x4_splat_UInt32_backend_index = 846u;

/// u32x4 with Int32x4
extern Variable UInt32x4_from_Int32x4_arg;
extern Function UInt32x4_from_Int32x4;
inline constexpr auto UInt32x4_from_Int32x4_name = "u32x4"_c;
inline constexpr auto UInt32x4_from_Int32x4_backend_index = 847u;

/// u32x4 with Int32
extern Variable UInt32x4_splat_Int32_arg;
extern Function UInt32x4_splat_Int32;
inline constexpr auto UInt32x4_splat_Int32_name = "u32x4"_c;
inline constexpr auto UInt32x4_splat_Int32_backend_index = 848u;

/// u32x4 with Bool8x4
extern Variable UInt32x4_from_Bool8x4_arg;
extern Function UInt32x4_from_Bool8x4;
inline constexpr auto UInt32x4_from_Bool8x4_name = "u32x4"_c;
inline constexpr auto UInt32x4_from_Bool8x4_backend_index = 849u;

/// u32x4 with Bool8
extern Variable UInt32x4_splat_Bool8_arg;
extern Function UInt32x4_splat_Bool8;
inline constexpr auto UInt32x4_splat_Bool8_name = "u32x4"_c;
inline constexpr auto UInt32x4_splat_Bool8_backend_index = 850u;

/// u32x4 with Float16x4
extern Variable UInt32x4_from_Float16x4_arg;
extern Function UInt32x4_from_Float16x4;
inline constexpr auto UInt32x4_from_Float16x4_name = "u32x4"_c;
inline constexpr auto UInt32x4_from_Float16x4_backend_index = 851u;

/// u32x4 with Float16
extern Variable UInt32x4_splat_Float16_arg;
extern Function UInt32x4_splat_Float16;
inline constexpr auto UInt32x4_splat_Float16_name = "u32x4"_c;
inline constexpr auto UInt32x4_splat_Float16_backend_index = 852u;

/// u32x4 with UInt16x4
extern Variable UInt32x4_from_UInt16x4_arg;
extern Function UInt32x4_from_UInt16x4;
inline constexpr auto UInt32x4_from_UInt16x4_name = "u32x4"_c;
inline constexpr auto UInt32x4_from_UInt16x4_backend_index = 853u;

/// u32x4 with UInt16
extern Variable UInt32x4_splat_UInt16_arg;
extern Function UInt32x4_splat_UInt16;
inline constexpr auto UInt32x4_splat_UInt16_name = "u32x4"_c;
inline constexpr auto UInt32x4_splat_UInt16_backend_index = 854u;

/// u32x4 with Int16x4
extern Variable UInt32x4_from_Int16x4_arg;
extern Function UInt32x4_from_Int16x4;
inline constexpr auto UInt32x4_from_Int16x4_name = "u32x4"_c;
inline constexpr auto UInt32x4_from_Int16x4_backend_index = 855u;

/// u32x4 with Int16
extern Variable UInt32x4_splat_Int16_arg;
extern Function UInt32x4_splat_Int16;
inline constexpr auto UInt32x4_splat_Int16_name = "u32x4"_c;
inline constexpr auto UInt32x4_splat_Int16_backend_index = 856u;

/// u32x4 with UInt32, UInt32, UInt32, UInt32
extern Variable UInt32x4_ctor0_arg0_UInt32;
extern Variable UInt32x4_ctor0_arg1_UInt32;
extern Variable UInt32x4_ctor0_arg2_UInt32;
extern Variable UInt32x4_ctor0_arg3_UInt32;
extern Function UInt32x4_ctor0;
inline constexpr auto UInt32x4_ctor0_name = "u32x4"_c;
inline constexpr auto UInt32x4_ctor0_backend_index = 857u;

/// u32x4 with UInt32x2, UInt32, UInt32
extern Variable UInt32x4_ctor1_arg0_UInt32x2;
extern Variable UInt32x4_ctor1_arg1_UInt32;
extern Variable UInt32x4_ctor1_arg2_UInt32;
extern Function UInt32x4_ctor1;
inline constexpr auto UInt32x4_ctor1_name = "u32x4"_c;
inline constexpr auto UInt32x4_ctor1_backend_index = 858u;

/// u32x4 with UInt32, UInt32x2, UInt32
extern Variable UInt32x4_ctor2_arg0_UInt32;
extern Variable UInt32x4_ctor2_arg1_UInt32x2;
extern Variable UInt32x4_ctor2_arg2_UInt32;
extern Function UInt32x4_ctor2;
inline constexpr auto UInt32x4_ctor2_name = "u32x4"_c;
inline constexpr auto UInt32x4_ctor2_backend_index = 859u;

/// u32x4 with UInt32, UInt32, UInt32x2
extern Variable UInt32x4_ctor3_arg0_UInt32;
extern Variable UInt32x4_ctor3_arg1_UInt32;
extern Variable UInt32x4_ctor3_arg2_UInt32x2;
extern Function UInt32x4_ctor3;
inline constexpr auto UInt32x4_ctor3_name = "u32x4"_c;
inline constexpr auto UInt32x4_ctor3_backend_index = 860u;

/// u32x4 with UInt32x2, UInt32x2
extern Variable UInt32x4_ctor4_arg0_UInt32x2;
extern Variable UInt32x4_ctor4_arg1_UInt32x2;
extern Function UInt32x4_ctor4;
inline constexpr auto UInt32x4_ctor4_name = "u32x4"_c;
inline constexpr auto UInt32x4_ctor4_backend_index = 861u;

/// u32x4 with UInt32x3, UInt32
extern Variable UInt32x4_ctor5_arg0_UInt32x3;
extern Variable UInt32x4_ctor5_arg1_UInt32;
extern Function UInt32x4_ctor5;
inline constexpr auto UInt32x4_ctor5_name = "u32x4"_c;
inline constexpr auto UInt32x4_ctor5_backend_index = 862u;

/// u32x4 with UInt32, UInt32x3
extern Variable UInt32x4_ctor6_arg0_UInt32;
extern Variable UInt32x4_ctor6_arg1_UInt32x3;
extern Function UInt32x4_ctor6;
inline constexpr auto UInt32x4_ctor6_name = "u32x4"_c;
inline constexpr auto UInt32x4_ctor6_backend_index = 863u;

/// i32x4 with Float32x4
extern Variable Int32x4_from_Float32x4_arg;
extern Function Int32x4_from_Float32x4;
inline constexpr auto Int32x4_from_Float32x4_name = "i32x4"_c;
inline constexpr auto Int32x4_from_Float32x4_backend_index = 896u;

/// i32x4 with Float32
extern Variable Int32x4_splat_Float32_arg;
extern Function Int32x4_splat_Float32;
inline constexpr auto Int32x4_splat_Float32_name = "i32x4"_c;
inline constexpr auto Int32x4_splat_Float32_backend_index = 897u;

/// i32x4 with UInt32x4
extern Variable Int32x4_from_UInt32x4_arg;
extern Function Int32x4_from_UInt32x4;
inline constexpr auto Int32x4_from_UInt32x4_name = "i32x4"_c;
inline constexpr auto Int32x4_from_UInt32x4_backend_index = 898u;

/// i32x4 with UInt32
extern Variable Int32x4_splat_UInt32_arg;
extern Function Int32x4_splat_UInt32;
inline constexpr auto Int32x4_splat_UInt32_name = "i32x4"_c;
inline constexpr auto Int32x4_splat_UInt32_backend_index = 899u;

/// i32x4 with Int32x4
extern Variable Int32x4_from_Int32x4_arg;
extern Function Int32x4_from_Int32x4;
inline constexpr auto Int32x4_from_Int32x4_name = "i32x4"_c;
inline constexpr auto Int32x4_from_Int32x4_backend_index = 900u;

/// i32x4 with Int32
extern Variable Int32x4_splat_Int32_arg;
extern Function Int32x4_splat_Int32;
inline constexpr auto Int32x4_splat_Int32_name = "i32x4"_c;
inline constexpr auto Int32x4_splat_Int32_backend_index = 901u;

/// i32x4 with Bool8x4
extern Variable Int32x4_from_Bool8x4_arg;
extern Function Int32x4_from_Bool8x4;
inline constexpr auto Int32x4_from_Bool8x4_name = "i32x4"_c;
inline constexpr auto Int32x4_from_Bool8x4_backend_index = 902u;

/// i32x4 with Bool8
extern Variable Int32x4_splat_Bool8_arg;
extern Function Int32x4_splat_Bool8;
inline constexpr auto Int32x4_splat_Bool8_name = "i32x4"_c;
inline constexpr auto Int32x4_splat_Bool8_backend_index = 903u;

/// i32x4 with Float16x4
extern Variable Int32x4_from_Float16x4_arg;
extern Function Int32x4_from_Float16x4;
inline constexpr auto Int32x4_from_Float16x4_name = "i32x4"_c;
inline constexpr auto Int32x4_from_Float16x4_backend_index = 904u;

/// i32x4 with Float16
extern Variable Int32x4_splat_Float16_arg;
extern Function Int32x4_splat_Float16;
inline constexpr auto Int32x4_splat_Float16_name = "i32x4"_c;
inline constexpr auto Int32x4_splat_Float16_backend_index = 905u;

/// i32x4 with UInt16x4
extern Variable Int32x4_from_UInt16x4_arg;
extern Function Int32x4_from_UInt16x4;
inline constexpr auto Int32x4_from_UInt16x4_name = "i32x4"_c;
inline constexpr auto Int32x4_from_UInt16x4_backend_index = 906u;

/// i32x4 with UInt16
extern Variable Int32x4_splat_UInt16_arg;
extern Function Int32x4_splat_UInt16;
inline constexpr auto Int32x4_splat_UInt16_name = "i32x4"_c;
inline constexpr auto Int32x4_splat_UInt16_backend_index = 907u;

/// i32x4 with Int16x4
extern Variable Int32x4_from_Int16x4_arg;
extern Function Int32x4_from_Int16x4;
inline constexpr auto Int32x4_from_Int16x4_name = "i32x4"_c;
inline constexpr auto Int32x4_from_Int16x4_backend_index = 908u;

/// i32x4 with Int16
extern Variable Int32x4_splat_Int16_arg;
extern Function Int32x4_splat_Int16;
inline constexpr auto Int32x4_splat_Int16_name = "i32x4"_c;
inline constexpr auto Int32x4_splat_Int16_backend_index = 909u;

/// i32x4 with Int32, Int32, Int32, Int32
extern Variable Int32x4_ctor0_arg0_Int32;
extern Variable Int32x4_ctor0_arg1_Int32;
extern Variable Int32x4_ctor0_arg2_Int32;
extern Variable Int32x4_ctor0_arg3_Int32;
extern Function Int32x4_ctor0;
inline constexpr auto Int32x4_ctor0_name = "i32x4"_c;
inline constexpr auto Int32x4_ctor0_backend_index = 910u;

/// i32x4 with Int32x2, Int32, Int32
extern Variable Int32x4_ctor1_arg0_Int32x2;
extern Variable Int32x4_ctor1_arg1_Int32;
extern Variable Int32x4_ctor1_arg2_Int32;
extern Function Int32x4_ctor1;
inline constexpr auto Int32x4_ctor1_name = "i32x4"_c;
inline constexpr auto Int32x4_ctor1_backend_index = 911u;

/// i32x4 with Int32, Int32x2, Int32
extern Variable Int32x4_ctor2_arg0_Int32;
extern Variable Int32x4_ctor2_arg1_Int32x2;
extern Variable Int32x4_ctor2_arg2_Int32;
extern Function Int32x4_ctor2;
inline constexpr auto Int32x4_ctor2_name = "i32x4"_c;
inline constexpr auto Int32x4_ctor2_backend_index = 912u;

/// i32x4 with Int32, Int32, Int32x2
extern Variable Int32x4_ctor3_arg0_Int32;
extern Variable Int32x4_ctor3_arg1_Int32;
extern Variable Int32x4_ctor3_arg2_Int32x2;
extern Function Int32x4_ctor3;
inline constexpr auto Int32x4_ctor3_name = "i32x4"_c;
inline constexpr auto Int32x4_ctor3_backend_index = 913u;

/// i32x4 with Int32x2, Int32x2
extern Variable Int32x4_ctor4_arg0_Int32x2;
extern Variable Int32x4_ctor4_arg1_Int32x2;
extern Function Int32x4_ctor4;
inline constexpr auto Int32x4_ctor4_name = "i32x4"_c;
inline constexpr auto Int32x4_ctor4_backend_index = 914u;

/// i32x4 with Int32x3, Int32
extern Variable Int32x4_ctor5_arg0_Int32x3;
extern Variable Int32x4_ctor5_arg1_Int32;
extern Function Int32x4_ctor5;
inline constexpr auto Int32x4_ctor5_name = "i32x4"_c;
inline constexpr auto Int32x4_ctor5_backend_index = 915u;

/// i32x4 with Int32, Int32x3
extern Variable Int32x4_ctor6_arg0_Int32;
extern Variable Int32x4_ctor6_arg1_Int32x3;
extern Function Int32x4_ctor6;
inline constexpr auto Int32x4_ctor6_name = "i32x4"_c;
inline constexpr auto Int32x4_ctor6_backend_index = 916u;

/// b8x4 with UInt32x4
extern Variable Bool8x4_from_UInt32x4_arg;
extern Function Bool8x4_from_UInt32x4;
inline constexpr auto Bool8x4_from_UInt32x4_name = "b8x4"_c;
inline constexpr auto Bool8x4_from_UInt32x4_backend_index = 949u;

/// b8x4 with UInt32
extern Variable Bool8x4_splat_UInt32_arg;
extern Function Bool8x4_splat_UInt32;
inline constexpr auto Bool8x4_splat_UInt32_name = "b8x4"_c;
inline constexpr auto Bool8x4_splat_UInt32_backend_index = 950u;

/// b8x4 with Int32x4
extern Variable Bool8x4_from_Int32x4_arg;
extern Function Bool8x4_from_Int32x4;
inline constexpr auto Bool8x4_from_Int32x4_name = "b8x4"_c;
inline constexpr auto Bool8x4_from_Int32x4_backend_index = 951u;

/// b8x4 with Int32
extern Variable Bool8x4_splat_Int32_arg;
extern Function Bool8x4_splat_Int32;
inline constexpr auto Bool8x4_splat_Int32_name = "b8x4"_c;
inline constexpr auto Bool8x4_splat_Int32_backend_index = 952u;

/// b8x4 with Bool8x4
extern Variable Bool8x4_from_Bool8x4_arg;
extern Function Bool8x4_from_Bool8x4;
inline constexpr auto Bool8x4_from_Bool8x4_name = "b8x4"_c;
inline constexpr auto Bool8x4_from_Bool8x4_backend_index = 953u;

/// b8x4 with Bool8
extern Variable Bool8x4_splat_Bool8_arg;
extern Function Bool8x4_splat_Bool8;
inline constexpr auto Bool8x4_splat_Bool8_name = "b8x4"_c;
inline constexpr auto Bool8x4_splat_Bool8_backend_index = 954u;

/// b8x4 with UInt16x4
extern Variable Bool8x4_from_UInt16x4_arg;
extern Function Bool8x4_from_UInt16x4;
inline constexpr auto Bool8x4_from_UInt16x4_name = "b8x4"_c;
inline constexpr auto Bool8x4_from_UInt16x4_backend_index = 955u;

/// b8x4 with UInt16
extern Variable Bool8x4_splat_UInt16_arg;
extern Function Bool8x4_splat_UInt16;
inline constexpr auto Bool8x4_splat_UInt16_name = "b8x4"_c;
inline constexpr auto Bool8x4_splat_UInt16_backend_index = 956u;

/// b8x4 with Int16x4
extern Variable Bool8x4_from_Int16x4_arg;
extern Function Bool8x4_from_Int16x4;
inline constexpr auto Bool8x4_from_Int16x4_name = "b8x4"_c;
inline constexpr auto Bool8x4_from_Int16x4_backend_index = 957u;

/// b8x4 with Int16
extern Variable Bool8x4_splat_Int16_arg;
extern Function Bool8x4_splat_Int16;
inline constexpr auto Bool8x4_splat_Int16_name = "b8x4"_c;
inline constexpr auto Bool8x4_splat_Int16_backend_index = 958u;

/// b8x4 with Bool8, Bool8, Bool8, Bool8
extern Variable Bool8x4_ctor0_arg0_Bool8;
extern Variable Bool8x4_ctor0_arg1_Bool8;
extern Variable Bool8x4_ctor0_arg2_Bool8;
extern Variable Bool8x4_ctor0_arg3_Bool8;
extern Function Bool8x4_ctor0;
inline constexpr auto Bool8x4_ctor0_name = "b8x4"_c;
inline constexpr auto Bool8x4_ctor0_backend_index = 959u;

/// b8x4 with Bool8x2, Bool8, Bool8
extern Variable Bool8x4_ctor1_arg0_Bool8x2;
extern Variable Bool8x4_ctor1_arg1_Bool8;
extern Variable Bool8x4_ctor1_arg2_Bool8;
extern Function Bool8x4_ctor1;
inline constexpr auto Bool8x4_ctor1_name = "b8x4"_c;
inline constexpr auto Bool8x4_ctor1_backend_index = 960u;

/// b8x4 with Bool8, Bool8x2, Bool8
extern Variable Bool8x4_ctor2_arg0_Bool8;
extern Variable Bool8x4_ctor2_arg1_Bool8x2;
extern Variable Bool8x4_ctor2_arg2_Bool8;
extern Function Bool8x4_ctor2;
inline constexpr auto Bool8x4_ctor2_name = "b8x4"_c;
inline constexpr auto Bool8x4_ctor2_backend_index = 961u;

/// b8x4 with Bool8, Bool8, Bool8x2
extern Variable Bool8x4_ctor3_arg0_Bool8;
extern Variable Bool8x4_ctor3_arg1_Bool8;
extern Variable Bool8x4_ctor3_arg2_Bool8x2;
extern Function Bool8x4_ctor3;
inline constexpr auto Bool8x4_ctor3_name = "b8x4"_c;
inline constexpr auto Bool8x4_ctor3_backend_index = 962u;

/// b8x4 with Bool8x2, Bool8x2
extern Variable Bool8x4_ctor4_arg0_Bool8x2;
extern Variable Bool8x4_ctor4_arg1_Bool8x2;
extern Function Bool8x4_ctor4;
inline constexpr auto Bool8x4_ctor4_name = "b8x4"_c;
inline constexpr auto Bool8x4_ctor4_backend_index = 963u;

/// b8x4 with Bool8x3, Bool8
extern Variable Bool8x4_ctor5_arg0_Bool8x3;
extern Variable Bool8x4_ctor5_arg1_Bool8;
extern Function Bool8x4_ctor5;
inline constexpr auto Bool8x4_ctor5_name = "b8x4"_c;
inline constexpr auto Bool8x4_ctor5_backend_index = 964u;

/// b8x4 with Bool8, Bool8x3
extern Variable Bool8x4_ctor6_arg0_Bool8;
extern Variable Bool8x4_ctor6_arg1_Bool8x3;
extern Function Bool8x4_ctor6;
inline constexpr auto Bool8x4_ctor6_name = "b8x4"_c;
inline constexpr auto Bool8x4_ctor6_backend_index = 965u;

/// f16x4 with Float32x4
extern Variable Float16x4_from_Float32x4_arg;
extern Function Float16x4_from_Float32x4;
inline constexpr auto Float16x4_from_Float32x4_name = "f16x4"_c;
inline constexpr auto Float16x4_from_Float32x4_backend_index = 974u;

/// f16x4 with Float32
extern Variable Float16x4_splat_Float32_arg;
extern Function Float16x4_splat_Float32;
inline constexpr auto Float16x4_splat_Float32_name = "f16x4"_c;
inline constexpr auto Float16x4_splat_Float32_backend_index = 975u;

/// f16x4 with UInt32x4
extern Variable Float16x4_from_UInt32x4_arg;
extern Function Float16x4_from_UInt32x4;
inline constexpr auto Float16x4_from_UInt32x4_name = "f16x4"_c;
inline constexpr auto Float16x4_from_UInt32x4_backend_index = 976u;

/// f16x4 with UInt32
extern Variable Float16x4_splat_UInt32_arg;
extern Function Float16x4_splat_UInt32;
inline constexpr auto Float16x4_splat_UInt32_name = "f16x4"_c;
inline constexpr auto Float16x4_splat_UInt32_backend_index = 977u;

/// f16x4 with Int32x4
extern Variable Float16x4_from_Int32x4_arg;
extern Function Float16x4_from_Int32x4;
inline constexpr auto Float16x4_from_Int32x4_name = "f16x4"_c;
inline constexpr auto Float16x4_from_Int32x4_backend_index = 978u;

/// f16x4 with Int32
extern Variable Float16x4_splat_Int32_arg;
extern Function Float16x4_splat_Int32;
inline constexpr auto Float16x4_splat_Int32_name = "f16x4"_c;
inline constexpr auto Float16x4_splat_Int32_backend_index = 979u;

/// f16x4 with Bool8x4
extern Variable Float16x4_from_Bool8x4_arg;
extern Function Float16x4_from_Bool8x4;
inline constexpr auto Float16x4_from_Bool8x4_name = "f16x4"_c;
inline constexpr auto Float16x4_from_Bool8x4_backend_index = 980u;

/// f16x4 with Bool8
extern Variable Float16x4_splat_Bool8_arg;
extern Function Float16x4_splat_Bool8;
inline constexpr auto Float16x4_splat_Bool8_name = "f16x4"_c;
inline constexpr auto Float16x4_splat_Bool8_backend_index = 981u;

/// f16x4 with Float16x4
extern Variable Float16x4_from_Float16x4_arg;
extern Function Float16x4_from_Float16x4;
inline constexpr auto Float16x4_from_Float16x4_name = "f16x4"_c;
inline constexpr auto Float16x4_from_Float16x4_backend_index = 982u;

/// f16x4 with Float16
extern Variable Float16x4_splat_Float16_arg;
extern Function Float16x4_splat_Float16;
inline constexpr auto Float16x4_splat_Float16_name = "f16x4"_c;
inline constexpr auto Float16x4_splat_Float16_backend_index = 983u;

/// f16x4 with UInt16x4
extern Variable Float16x4_from_UInt16x4_arg;
extern Function Float16x4_from_UInt16x4;
inline constexpr auto Float16x4_from_UInt16x4_name = "f16x4"_c;
inline constexpr auto Float16x4_from_UInt16x4_backend_index = 984u;

/// f16x4 with UInt16
extern Variable Float16x4_splat_UInt16_arg;
extern Function Float16x4_splat_UInt16;
inline constexpr auto Float16x4_splat_UInt16_name = "f16x4"_c;
inline constexpr auto Float16x4_splat_UInt16_backend_index = 985u;

/// f16x4 with Int16x4
extern Variable Float16x4_from_Int16x4_arg;
extern Function Float16x4_from_Int16x4;
inline constexpr auto Float16x4_from_Int16x4_name = "f16x4"_c;
inline constexpr auto Float16x4_from_Int16x4_backend_index = 986u;

/// f16x4 with Int16
extern Variable Float16x4_splat_Int16_arg;
extern Function Float16x4_splat_Int16;
inline constexpr auto Float16x4_splat_Int16_name = "f16x4"_c;
inline constexpr auto Float16x4_splat_Int16_backend_index = 987u;

/// f16x4 with Float16, Float16, Float16, Float16
extern Variable Float16x4_ctor0_arg0_Float16;
extern Variable Float16x4_ctor0_arg1_Float16;
extern Variable Float16x4_ctor0_arg2_Float16;
extern Variable Float16x4_ctor0_arg3_Float16;
extern Function Float16x4_ctor0;
inline constexpr auto Float16x4_ctor0_name = "f16x4"_c;
inline constexpr auto Float16x4_ctor0_backend_index = 988u;

/// f16x4 with Float16x2, Float16, Float16
extern Variable Float16x4_ctor1_arg0_Float16x2;
extern Variable Float16x4_ctor1_arg1_Float16;
extern Variable Float16x4_ctor1_arg2_Float16;
extern Function Float16x4_ctor1;
inline constexpr auto Float16x4_ctor1_name = "f16x4"_c;
inline constexpr auto Float16x4_ctor1_backend_index = 989u;

/// f16x4 with Float16, Float16x2, Float16
extern Variable Float16x4_ctor2_arg0_Float16;
extern Variable Float16x4_ctor2_arg1_Float16x2;
extern Variable Float16x4_ctor2_arg2_Float16;
extern Function Float16x4_ctor2;
inline constexpr auto Float16x4_ctor2_name = "f16x4"_c;
inline constexpr auto Float16x4_ctor2_backend_index = 990u;

/// f16x4 with Float16, Float16, Float16x2
extern Variable Float16x4_ctor3_arg0_Float16;
extern Variable Float16x4_ctor3_arg1_Float16;
extern Variable Float16x4_ctor3_arg2_Float16x2;
extern Function Float16x4_ctor3;
inline constexpr auto Float16x4_ctor3_name = "f16x4"_c;
inline constexpr auto Float16x4_ctor3_backend_index = 991u;

/// f16x4 with Float16x2, Float16x2
extern Variable Float16x4_ctor4_arg0_Float16x2;
extern Variable Float16x4_ctor4_arg1_Float16x2;
extern Function Float16x4_ctor4;
inline constexpr auto Float16x4_ctor4_name = "f16x4"_c;
inline constexpr auto Float16x4_ctor4_backend_index = 992u;

/// f16x4 with Float16x3, Float16
extern Variable Float16x4_ctor5_arg0_Float16x3;
extern Variable Float16x4_ctor5_arg1_Float16;
extern Function Float16x4_ctor5;
inline constexpr auto Float16x4_ctor5_name = "f16x4"_c;
inline constexpr auto Float16x4_ctor5_backend_index = 993u;

/// f16x4 with Float16, Float16x3
extern Variable Float16x4_ctor6_arg0_Float16;
extern Variable Float16x4_ctor6_arg1_Float16x3;
extern Function Float16x4_ctor6;
inline constexpr auto Float16x4_ctor6_name = "f16x4"_c;
inline constexpr auto Float16x4_ctor6_backend_index = 994u;

/// u16x4 with Float32x4
extern Variable UInt16x4_from_Float32x4_arg;
extern Function UInt16x4_from_Float32x4;
inline constexpr auto UInt16x4_from_Float32x4_name = "u16x4"_c;
inline constexpr auto UInt16x4_from_Float32x4_backend_index = 1020u;

/// u16x4 with Float32
extern Variable UInt16x4_splat_Float32_arg;
extern Function UInt16x4_splat_Float32;
inline constexpr auto UInt16x4_splat_Float32_name = "u16x4"_c;
inline constexpr auto UInt16x4_splat_Float32_backend_index = 1021u;

/// u16x4 with UInt32x4
extern Variable UInt16x4_from_UInt32x4_arg;
extern Function UInt16x4_from_UInt32x4;
inline constexpr auto UInt16x4_from_UInt32x4_name = "u16x4"_c;
inline constexpr auto UInt16x4_from_UInt32x4_backend_index = 1022u;

/// u16x4 with UInt32
extern Variable UInt16x4_splat_UInt32_arg;
extern Function UInt16x4_splat_UInt32;
inline constexpr auto UInt16x4_splat_UInt32_name = "u16x4"_c;
inline constexpr auto UInt16x4_splat_UInt32_backend_index = 1023u;

/// u16x4 with Int32x4
extern Variable UInt16x4_from_Int32x4_arg;
extern Function UInt16x4_from_Int32x4;
inline constexpr auto UInt16x4_from_Int32x4_name = "u16x4"_c;
inline constexpr auto UInt16x4_from_Int32x4_backend_index = 1024u;

/// u16x4 with Int32
extern Variable UInt16x4_splat_Int32_arg;
extern Function UInt16x4_splat_Int32;
inline constexpr auto UInt16x4_splat_Int32_name = "u16x4"_c;
inline constexpr auto UInt16x4_splat_Int32_backend_index = 1025u;

/// u16x4 with Bool8x4
extern Variable UInt16x4_from_Bool8x4_arg;
extern Function UInt16x4_from_Bool8x4;
inline constexpr auto UInt16x4_from_Bool8x4_name = "u16x4"_c;
inline constexpr auto UInt16x4_from_Bool8x4_backend_index = 1026u;

/// u16x4 with Bool8
extern Variable UInt16x4_splat_Bool8_arg;
extern Function UInt16x4_splat_Bool8;
inline constexpr auto UInt16x4_splat_Bool8_name = "u16x4"_c;
inline constexpr auto UInt16x4_splat_Bool8_backend_index = 1027u;

/// u16x4 with Float16x4
extern Variable UInt16x4_from_Float16x4_arg;
extern Function UInt16x4_from_Float16x4;
inline constexpr auto UInt16x4_from_Float16x4_name = "u16x4"_c;
inline constexpr auto UInt16x4_from_Float16x4_backend_index = 1028u;

/// u16x4 with Float16
extern Variable UInt16x4_splat_Float16_arg;
extern Function UInt16x4_splat_Float16;
inline constexpr auto UInt16x4_splat_Float16_name = "u16x4"_c;
inline constexpr auto UInt16x4_splat_Float16_backend_index = 1029u;

/// u16x4 with UInt16x4
extern Variable UInt16x4_from_UInt16x4_arg;
extern Function UInt16x4_from_UInt16x4;
inline constexpr auto UInt16x4_from_UInt16x4_name = "u16x4"_c;
inline constexpr auto UInt16x4_from_UInt16x4_backend_index = 1030u;

/// u16x4 with UInt16
extern Variable UInt16x4_splat_UInt16_arg;
extern Function UInt16x4_splat_UInt16;
inline constexpr auto UInt16x4_splat_UInt16_name = "u16x4"_c;
inline constexpr auto UInt16x4_splat_UInt16_backend_index = 1031u;

/// u16x4 with Int16x4
extern Variable UInt16x4_from_Int16x4_arg;
extern Function UInt16x4_from_Int16x4;
inline constexpr auto UInt16x4_from_Int16x4_name = "u16x4"_c;
inline constexpr auto UInt16x4_from_Int16x4_backend_index = 1032u;

/// u16x4 with Int16
extern Variable UInt16x4_splat_Int16_arg;
extern Function UInt16x4_splat_Int16;
inline constexpr auto UInt16x4_splat_Int16_name = "u16x4"_c;
inline constexpr auto UInt16x4_splat_Int16_backend_index = 1033u;

/// u16x4 with UInt16, UInt16, UInt16, UInt16
extern Variable UInt16x4_ctor0_arg0_UInt16;
extern Variable UInt16x4_ctor0_arg1_UInt16;
extern Variable UInt16x4_ctor0_arg2_UInt16;
extern Variable UInt16x4_ctor0_arg3_UInt16;
extern Function UInt16x4_ctor0;
inline constexpr auto UInt16x4_ctor0_name = "u16x4"_c;
inline constexpr auto UInt16x4_ctor0_backend_index = 1034u;

/// u16x4 with UInt16x2, UInt16, UInt16
extern Variable UInt16x4_ctor1_arg0_UInt16x2;
extern Variable UInt16x4_ctor1_arg1_UInt16;
extern Variable UInt16x4_ctor1_arg2_UInt16;
extern Function UInt16x4_ctor1;
inline constexpr auto UInt16x4_ctor1_name = "u16x4"_c;
inline constexpr auto UInt16x4_ctor1_backend_index = 1035u;

/// u16x4 with UInt16, UInt16x2, UInt16
extern Variable UInt16x4_ctor2_arg0_UInt16;
extern Variable UInt16x4_ctor2_arg1_UInt16x2;
extern Variable UInt16x4_ctor2_arg2_UInt16;
extern Function UInt16x4_ctor2;
inline constexpr auto UInt16x4_ctor2_name = "u16x4"_c;
inline constexpr auto UInt16x4_ctor2_backend_index = 1036u;

/// u16x4 with UInt16, UInt16, UInt16x2
extern Variable UInt16x4_ctor3_arg0_UInt16;
extern Variable UInt16x4_ctor3_arg1_UInt16;
extern Variable UInt16x4_ctor3_arg2_UInt16x2;
extern Function UInt16x4_ctor3;
inline constexpr auto UInt16x4_ctor3_name = "u16x4"_c;
inline constexpr auto UInt16x4_ctor3_backend_index = 1037u;

/// u16x4 with UInt16x2, UInt16x2
extern Variable UInt16x4_ctor4_arg0_UInt16x2;
extern Variable UInt16x4_ctor4_arg1_UInt16x2;
extern Function UInt16x4_ctor4;
inline constexpr auto UInt16x4_ctor4_name = "u16x4"_c;
inline constexpr auto UInt16x4_ctor4_backend_index = 1038u;

/// u16x4 with UInt16x3, UInt16
extern Variable UInt16x4_ctor5_arg0_UInt16x3;
extern Variable UInt16x4_ctor5_arg1_UInt16;
extern Function UInt16x4_ctor5;
inline constexpr auto UInt16x4_ctor5_name = "u16x4"_c;
inline constexpr auto UInt16x4_ctor5_backend_index = 1039u;

/// u16x4 with UInt16, UInt16x3
extern Variable UInt16x4_ctor6_arg0_UInt16;
extern Variable UInt16x4_ctor6_arg1_UInt16x3;
extern Function UInt16x4_ctor6;
inline constexpr auto UInt16x4_ctor6_name = "u16x4"_c;
inline constexpr auto UInt16x4_ctor6_backend_index = 1040u;

/// i16x4 with Float32x4
extern Variable Int16x4_from_Float32x4_arg;
extern Function Int16x4_from_Float32x4;
inline constexpr auto Int16x4_from_Float32x4_name = "i16x4"_c;
inline constexpr auto Int16x4_from_Float32x4_backend_index = 1073u;

/// i16x4 with Float32
extern Variable Int16x4_splat_Float32_arg;
extern Function Int16x4_splat_Float32;
inline constexpr auto Int16x4_splat_Float32_name = "i16x4"_c;
inline constexpr auto Int16x4_splat_Float32_backend_index = 1074u;

/// i16x4 with UInt32x4
extern Variable Int16x4_from_UInt32x4_arg;
extern Function Int16x4_from_UInt32x4;
inline constexpr auto Int16x4_from_UInt32x4_name = "i16x4"_c;
inline constexpr auto Int16x4_from_UInt32x4_backend_index = 1075u;

/// i16x4 with UInt32
extern Variable Int16x4_splat_UInt32_arg;
extern Function Int16x4_splat_UInt32;
inline constexpr auto Int16x4_splat_UInt32_name = "i16x4"_c;
inline constexpr auto Int16x4_splat_UInt32_backend_index = 1076u;

/// i16x4 with Int32x4
extern Variable Int16x4_from_Int32x4_arg;
extern Function Int16x4_from_Int32x4;
inline constexpr auto Int16x4_from_Int32x4_name = "i16x4"_c;
inline constexpr auto Int16x4_from_Int32x4_backend_index = 1077u;

/// i16x4 with Int32
extern Variable Int16x4_splat_Int32_arg;
extern Function Int16x4_splat_Int32;
inline constexpr auto Int16x4_splat_Int32_name = "i16x4"_c;
inline constexpr auto Int16x4_splat_Int32_backend_index = 1078u;

/// i16x4 with Bool8x4
extern Variable Int16x4_from_Bool8x4_arg;
extern Function Int16x4_from_Bool8x4;
inline constexpr auto Int16x4_from_Bool8x4_name = "i16x4"_c;
inline constexpr auto Int16x4_from_Bool8x4_backend_index = 1079u;

/// i16x4 with Bool8
extern Variable Int16x4_splat_Bool8_arg;
extern Function Int16x4_splat_Bool8;
inline constexpr auto Int16x4_splat_Bool8_name = "i16x4"_c;
inline constexpr auto Int16x4_splat_Bool8_backend_index = 1080u;

/// i16x4 with Float16x4
extern Variable Int16x4_from_Float16x4_arg;
extern Function Int16x4_from_Float16x4;
inline constexpr auto Int16x4_from_Float16x4_name = "i16x4"_c;
inline constexpr auto Int16x4_from_Float16x4_backend_index = 1081u;

/// i16x4 with Float16
extern Variable Int16x4_splat_Float16_arg;
extern Function Int16x4_splat_Float16;
inline constexpr auto Int16x4_splat_Float16_name = "i16x4"_c;
inline constexpr auto Int16x4_splat_Float16_backend_index = 1082u;

/// i16x4 with UInt16x4
extern Variable Int16x4_from_UInt16x4_arg;
extern Function Int16x4_from_UInt16x4;
inline constexpr auto Int16x4_from_UInt16x4_name = "i16x4"_c;
inline constexpr auto Int16x4_from_UInt16x4_backend_index = 1083u;

/// i16x4 with UInt16
extern Variable Int16x4_splat_UInt16_arg;
extern Function Int16x4_splat_UInt16;
inline constexpr auto Int16x4_splat_UInt16_name = "i16x4"_c;
inline constexpr auto Int16x4_splat_UInt16_backend_index = 1084u;

/// i16x4 with Int16x4
extern Variable Int16x4_from_Int16x4_arg;
extern Function Int16x4_from_Int16x4;
inline constexpr auto Int16x4_from_Int16x4_name = "i16x4"_c;
inline constexpr auto Int16x4_from_Int16x4_backend_index = 1085u;

/// i16x4 with Int16
extern Variable Int16x4_splat_Int16_arg;
extern Function Int16x4_splat_Int16;
inline constexpr auto Int16x4_splat_Int16_name = "i16x4"_c;
inline constexpr auto Int16x4_splat_Int16_backend_index = 1086u;

/// i16x4 with Int16, Int16, Int16, Int16
extern Variable Int16x4_ctor0_arg0_Int16;
extern Variable Int16x4_ctor0_arg1_Int16;
extern Variable Int16x4_ctor0_arg2_Int16;
extern Variable Int16x4_ctor0_arg3_Int16;
extern Function Int16x4_ctor0;
inline constexpr auto Int16x4_ctor0_name = "i16x4"_c;
inline constexpr auto Int16x4_ctor0_backend_index = 1087u;

/// i16x4 with Int16x2, Int16, Int16
extern Variable Int16x4_ctor1_arg0_Int16x2;
extern Variable Int16x4_ctor1_arg1_Int16;
extern Variable Int16x4_ctor1_arg2_Int16;
extern Function Int16x4_ctor1;
inline constexpr auto Int16x4_ctor1_name = "i16x4"_c;
inline constexpr auto Int16x4_ctor1_backend_index = 1088u;

/// i16x4 with Int16, Int16x2, Int16
extern Variable Int16x4_ctor2_arg0_Int16;
extern Variable Int16x4_ctor2_arg1_Int16x2;
extern Variable Int16x4_ctor2_arg2_Int16;
extern Function Int16x4_ctor2;
inline constexpr auto Int16x4_ctor2_name = "i16x4"_c;
inline constexpr auto Int16x4_ctor2_backend_index = 1089u;

/// i16x4 with Int16, Int16, Int16x2
extern Variable Int16x4_ctor3_arg0_Int16;
extern Variable Int16x4_ctor3_arg1_Int16;
extern Variable Int16x4_ctor3_arg2_Int16x2;
extern Function Int16x4_ctor3;
inline constexpr auto Int16x4_ctor3_name = "i16x4"_c;
inline constexpr auto Int16x4_ctor3_backend_index = 1090u;

/// i16x4 with Int16x2, Int16x2
extern Variable Int16x4_ctor4_arg0_Int16x2;
extern Variable Int16x4_ctor4_arg1_Int16x2;
extern Function Int16x4_ctor4;
inline constexpr auto Int16x4_ctor4_name = "i16x4"_c;
inline constexpr auto Int16x4_ctor4_backend_index = 1091u;

/// i16x4 with Int16x3, Int16
extern Variable Int16x4_ctor5_arg0_Int16x3;
extern Variable Int16x4_ctor5_arg1_Int16;
extern Function Int16x4_ctor5;
inline constexpr auto Int16x4_ctor5_name = "i16x4"_c;
inline constexpr auto Int16x4_ctor5_backend_index = 1092u;

/// i16x4 with Int16, Int16x3
extern Variable Int16x4_ctor6_arg0_Int16;
extern Variable Int16x4_ctor6_arg1_Int16x3;
extern Function Int16x4_ctor6;
inline constexpr auto Int16x4_ctor6_name = "i16x4"_c;
inline constexpr auto Int16x4_ctor6_backend_index = 1093u;

/// f32x2x2 with Float32x2, Float32x2
extern Variable Float32x2x2_Float32_2_ctor_arg0;
extern Variable Float32x2x2_Float32_2_ctor_arg1;
extern Function Float32x2x2_Float32_2_ctor;
inline constexpr auto Float32x2x2_Float32_2_ctor_name = "f32x2x2"_c;
inline constexpr auto Float32x2x2_Float32_2_ctor_backend_index = 1126u;

/// f32x2x2
extern Function Float32x2x2_identity;
inline constexpr auto Float32x2x2_identity_name = "f32x2x2"_c;
inline constexpr auto Float32x2x2_identity_backend_index = 1127u;

/// f32x2x2 with Float32, Float32, Float32, Float32
extern Variable Float32x2x2_raw_list_arg0;
extern Variable Float32x2x2_raw_list_arg1;
extern Variable Float32x2x2_raw_list_arg2;
extern Variable Float32x2x2_raw_list_arg3;
extern Function Float32x2x2_raw_list;
inline constexpr auto Float32x2x2_raw_list_name = "f32x2x2"_c;
inline constexpr auto Float32x2x2_raw_list_backend_index = 1128u;

/// f32x3x2 with Float32x2, Float32x2, Float32x2
extern Variable Float32x3x2_Float32_2_ctor_arg0;
extern Variable Float32x3x2_Float32_2_ctor_arg1;
extern Variable Float32x3x2_Float32_2_ctor_arg2;
extern Function Float32x3x2_Float32_2_ctor;
inline constexpr auto Float32x3x2_Float32_2_ctor_name = "f32x3x2"_c;
inline constexpr auto Float32x3x2_Float32_2_ctor_backend_index = 1141u;

/// f32x3x2 with Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x3x2_raw_list_arg0;
extern Variable Float32x3x2_raw_list_arg1;
extern Variable Float32x3x2_raw_list_arg2;
extern Variable Float32x3x2_raw_list_arg3;
extern Variable Float32x3x2_raw_list_arg4;
extern Variable Float32x3x2_raw_list_arg5;
extern Function Float32x3x2_raw_list;
inline constexpr auto Float32x3x2_raw_list_name = "f32x3x2"_c;
inline constexpr auto Float32x3x2_raw_list_backend_index = 1142u;

/// f32x4x2 with Float32x2, Float32x2, Float32x2, Float32x2
extern Variable Float32x4x2_Float32_2_ctor_arg0;
extern Variable Float32x4x2_Float32_2_ctor_arg1;
extern Variable Float32x4x2_Float32_2_ctor_arg2;
extern Variable Float32x4x2_Float32_2_ctor_arg3;
extern Function Float32x4x2_Float32_2_ctor;
inline constexpr auto Float32x4x2_Float32_2_ctor_name = "f32x4x2"_c;
inline constexpr auto Float32x4x2_Float32_2_ctor_backend_index = 1155u;

/// f32x4x2 with Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x4x2_raw_list_arg0;
extern Variable Float32x4x2_raw_list_arg1;
extern Variable Float32x4x2_raw_list_arg2;
extern Variable Float32x4x2_raw_list_arg3;
extern Variable Float32x4x2_raw_list_arg4;
extern Variable Float32x4x2_raw_list_arg5;
extern Variable Float32x4x2_raw_list_arg6;
extern Variable Float32x4x2_raw_list_arg7;
extern Function Float32x4x2_raw_list;
inline constexpr auto Float32x4x2_raw_list_name = "f32x4x2"_c;
inline constexpr auto Float32x4x2_raw_list_backend_index = 1156u;

/// f32x2x3 with Float32x3, Float32x3
extern Variable Float32x2x3_Float32_3_ctor_arg0;
extern Variable Float32x2x3_Float32_3_ctor_arg1;
extern Function Float32x2x3_Float32_3_ctor;
inline constexpr auto Float32x2x3_Float32_3_ctor_name = "f32x2x3"_c;
inline constexpr auto Float32x2x3_Float32_3_ctor_backend_index = 1169u;

/// f32x2x3 with Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x2x3_raw_list_arg0;
extern Variable Float32x2x3_raw_list_arg1;
extern Variable Float32x2x3_raw_list_arg2;
extern Variable Float32x2x3_raw_list_arg3;
extern Variable Float32x2x3_raw_list_arg4;
extern Variable Float32x2x3_raw_list_arg5;
extern Function Float32x2x3_raw_list;
inline constexpr auto Float32x2x3_raw_list_name = "f32x2x3"_c;
inline constexpr auto Float32x2x3_raw_list_backend_index = 1170u;

/// f32x3x3 with Float32x3, Float32x3, Float32x3
extern Variable Float32x3x3_Float32_3_ctor_arg0;
extern Variable Float32x3x3_Float32_3_ctor_arg1;
extern Variable Float32x3x3_Float32_3_ctor_arg2;
extern Function Float32x3x3_Float32_3_ctor;
inline constexpr auto Float32x3x3_Float32_3_ctor_name = "f32x3x3"_c;
inline constexpr auto Float32x3x3_Float32_3_ctor_backend_index = 1183u;

/// f32x3x3
extern Function Float32x3x3_identity;
inline constexpr auto Float32x3x3_identity_name = "f32x3x3"_c;
inline constexpr auto Float32x3x3_identity_backend_index = 1184u;

/// f32x3x3 with Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x3x3_raw_list_arg0;
extern Variable Float32x3x3_raw_list_arg1;
extern Variable Float32x3x3_raw_list_arg2;
extern Variable Float32x3x3_raw_list_arg3;
extern Variable Float32x3x3_raw_list_arg4;
extern Variable Float32x3x3_raw_list_arg5;
extern Variable Float32x3x3_raw_list_arg6;
extern Variable Float32x3x3_raw_list_arg7;
extern Variable Float32x3x3_raw_list_arg8;
extern Function Float32x3x3_raw_list;
inline constexpr auto Float32x3x3_raw_list_name = "f32x3x3"_c;
inline constexpr auto Float32x3x3_raw_list_backend_index = 1185u;

/// f32x4x3 with Float32x3, Float32x3, Float32x3, Float32x3
extern Variable Float32x4x3_Float32_3_ctor_arg0;
extern Variable Float32x4x3_Float32_3_ctor_arg1;
extern Variable Float32x4x3_Float32_3_ctor_arg2;
extern Variable Float32x4x3_Float32_3_ctor_arg3;
extern Function Float32x4x3_Float32_3_ctor;
inline constexpr auto Float32x4x3_Float32_3_ctor_name = "f32x4x3"_c;
inline constexpr auto Float32x4x3_Float32_3_ctor_backend_index = 1198u;

/// f32x4x3 with Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x4x3_raw_list_arg0;
extern Variable Float32x4x3_raw_list_arg1;
extern Variable Float32x4x3_raw_list_arg2;
extern Variable Float32x4x3_raw_list_arg3;
extern Variable Float32x4x3_raw_list_arg4;
extern Variable Float32x4x3_raw_list_arg5;
extern Variable Float32x4x3_raw_list_arg6;
extern Variable Float32x4x3_raw_list_arg7;
extern Variable Float32x4x3_raw_list_arg8;
extern Variable Float32x4x3_raw_list_arg9;
extern Variable Float32x4x3_raw_list_arg10;
extern Variable Float32x4x3_raw_list_arg11;
extern Function Float32x4x3_raw_list;
inline constexpr auto Float32x4x3_raw_list_name = "f32x4x3"_c;
inline constexpr auto Float32x4x3_raw_list_backend_index = 1199u;

/// f32x2x4 with Float32x4, Float32x4
extern Variable Float32x2x4_Float32_4_ctor_arg0;
extern Variable Float32x2x4_Float32_4_ctor_arg1;
extern Function Float32x2x4_Float32_4_ctor;
inline constexpr auto Float32x2x4_Float32_4_ctor_name = "f32x2x4"_c;
inline constexpr auto Float32x2x4_Float32_4_ctor_backend_index = 1212u;

/// f32x2x4 with Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x2x4_raw_list_arg0;
extern Variable Float32x2x4_raw_list_arg1;
extern Variable Float32x2x4_raw_list_arg2;
extern Variable Float32x2x4_raw_list_arg3;
extern Variable Float32x2x4_raw_list_arg4;
extern Variable Float32x2x4_raw_list_arg5;
extern Variable Float32x2x4_raw_list_arg6;
extern Variable Float32x2x4_raw_list_arg7;
extern Function Float32x2x4_raw_list;
inline constexpr auto Float32x2x4_raw_list_name = "f32x2x4"_c;
inline constexpr auto Float32x2x4_raw_list_backend_index = 1213u;

/// f32x3x4 with Float32x4, Float32x4, Float32x4
extern Variable Float32x3x4_Float32_4_ctor_arg0;
extern Variable Float32x3x4_Float32_4_ctor_arg1;
extern Variable Float32x3x4_Float32_4_ctor_arg2;
extern Function Float32x3x4_Float32_4_ctor;
inline constexpr auto Float32x3x4_Float32_4_ctor_name = "f32x3x4"_c;
inline constexpr auto Float32x3x4_Float32_4_ctor_backend_index = 1226u;

/// f32x3x4 with Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x3x4_raw_list_arg0;
extern Variable Float32x3x4_raw_list_arg1;
extern Variable Float32x3x4_raw_list_arg2;
extern Variable Float32x3x4_raw_list_arg3;
extern Variable Float32x3x4_raw_list_arg4;
extern Variable Float32x3x4_raw_list_arg5;
extern Variable Float32x3x4_raw_list_arg6;
extern Variable Float32x3x4_raw_list_arg7;
extern Variable Float32x3x4_raw_list_arg8;
extern Variable Float32x3x4_raw_list_arg9;
extern Variable Float32x3x4_raw_list_arg10;
extern Variable Float32x3x4_raw_list_arg11;
extern Function Float32x3x4_raw_list;
inline constexpr auto Float32x3x4_raw_list_name = "f32x3x4"_c;
inline constexpr auto Float32x3x4_raw_list_backend_index = 1227u;

/// f32x4x4 with Float32x4, Float32x4, Float32x4, Float32x4
extern Variable Float32x4x4_Float32_4_ctor_arg0;
extern Variable Float32x4x4_Float32_4_ctor_arg1;
extern Variable Float32x4x4_Float32_4_ctor_arg2;
extern Variable Float32x4x4_Float32_4_ctor_arg3;
extern Function Float32x4x4_Float32_4_ctor;
inline constexpr auto Float32x4x4_Float32_4_ctor_name = "f32x4x4"_c;
inline constexpr auto Float32x4x4_Float32_4_ctor_backend_index = 1240u;

/// f32x4x4
extern Function Float32x4x4_identity;
inline constexpr auto Float32x4x4_identity_name = "f32x4x4"_c;
inline constexpr auto Float32x4x4_identity_backend_index = 1241u;

/// f32x4x4 with Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable Float32x4x4_raw_list_arg0;
extern Variable Float32x4x4_raw_list_arg1;
extern Variable Float32x4x4_raw_list_arg2;
extern Variable Float32x4x4_raw_list_arg3;
extern Variable Float32x4x4_raw_list_arg4;
extern Variable Float32x4x4_raw_list_arg5;
extern Variable Float32x4x4_raw_list_arg6;
extern Variable Float32x4x4_raw_list_arg7;
extern Variable Float32x4x4_raw_list_arg8;
extern Variable Float32x4x4_raw_list_arg9;
extern Variable Float32x4x4_raw_list_arg10;
extern Variable Float32x4x4_raw_list_arg11;
extern Variable Float32x4x4_raw_list_arg12;
extern Variable Float32x4x4_raw_list_arg13;
extern Variable Float32x4x4_raw_list_arg14;
extern Variable Float32x4x4_raw_list_arg15;
extern Function Float32x4x4_raw_list;
inline constexpr auto Float32x4x4_raw_list_name = "f32x4x4"_c;
inline constexpr auto Float32x4x4_raw_list_backend_index = 1242u;

/// f16x2x2 with Float16x2, Float16x2
extern Variable Float16x2x2_Float16_2_ctor_arg0;
extern Variable Float16x2x2_Float16_2_ctor_arg1;
extern Function Float16x2x2_Float16_2_ctor;
inline constexpr auto Float16x2x2_Float16_2_ctor_name = "f16x2x2"_c;
inline constexpr auto Float16x2x2_Float16_2_ctor_backend_index = 1255u;

/// f16x2x2
extern Function Float16x2x2_identity;
inline constexpr auto Float16x2x2_identity_name = "f16x2x2"_c;
inline constexpr auto Float16x2x2_identity_backend_index = 1256u;

/// f16x2x2 with Float16, Float16, Float16, Float16
extern Variable Float16x2x2_raw_list_arg0;
extern Variable Float16x2x2_raw_list_arg1;
extern Variable Float16x2x2_raw_list_arg2;
extern Variable Float16x2x2_raw_list_arg3;
extern Function Float16x2x2_raw_list;
inline constexpr auto Float16x2x2_raw_list_name = "f16x2x2"_c;
inline constexpr auto Float16x2x2_raw_list_backend_index = 1257u;

/// f16x3x2 with Float16x2, Float16x2, Float16x2
extern Variable Float16x3x2_Float16_2_ctor_arg0;
extern Variable Float16x3x2_Float16_2_ctor_arg1;
extern Variable Float16x3x2_Float16_2_ctor_arg2;
extern Function Float16x3x2_Float16_2_ctor;
inline constexpr auto Float16x3x2_Float16_2_ctor_name = "f16x3x2"_c;
inline constexpr auto Float16x3x2_Float16_2_ctor_backend_index = 1270u;

/// f16x3x2 with Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x3x2_raw_list_arg0;
extern Variable Float16x3x2_raw_list_arg1;
extern Variable Float16x3x2_raw_list_arg2;
extern Variable Float16x3x2_raw_list_arg3;
extern Variable Float16x3x2_raw_list_arg4;
extern Variable Float16x3x2_raw_list_arg5;
extern Function Float16x3x2_raw_list;
inline constexpr auto Float16x3x2_raw_list_name = "f16x3x2"_c;
inline constexpr auto Float16x3x2_raw_list_backend_index = 1271u;

/// f16x4x2 with Float16x2, Float16x2, Float16x2, Float16x2
extern Variable Float16x4x2_Float16_2_ctor_arg0;
extern Variable Float16x4x2_Float16_2_ctor_arg1;
extern Variable Float16x4x2_Float16_2_ctor_arg2;
extern Variable Float16x4x2_Float16_2_ctor_arg3;
extern Function Float16x4x2_Float16_2_ctor;
inline constexpr auto Float16x4x2_Float16_2_ctor_name = "f16x4x2"_c;
inline constexpr auto Float16x4x2_Float16_2_ctor_backend_index = 1284u;

/// f16x4x2 with Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x4x2_raw_list_arg0;
extern Variable Float16x4x2_raw_list_arg1;
extern Variable Float16x4x2_raw_list_arg2;
extern Variable Float16x4x2_raw_list_arg3;
extern Variable Float16x4x2_raw_list_arg4;
extern Variable Float16x4x2_raw_list_arg5;
extern Variable Float16x4x2_raw_list_arg6;
extern Variable Float16x4x2_raw_list_arg7;
extern Function Float16x4x2_raw_list;
inline constexpr auto Float16x4x2_raw_list_name = "f16x4x2"_c;
inline constexpr auto Float16x4x2_raw_list_backend_index = 1285u;

/// f16x2x3 with Float16x3, Float16x3
extern Variable Float16x2x3_Float16_3_ctor_arg0;
extern Variable Float16x2x3_Float16_3_ctor_arg1;
extern Function Float16x2x3_Float16_3_ctor;
inline constexpr auto Float16x2x3_Float16_3_ctor_name = "f16x2x3"_c;
inline constexpr auto Float16x2x3_Float16_3_ctor_backend_index = 1298u;

/// f16x2x3 with Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x2x3_raw_list_arg0;
extern Variable Float16x2x3_raw_list_arg1;
extern Variable Float16x2x3_raw_list_arg2;
extern Variable Float16x2x3_raw_list_arg3;
extern Variable Float16x2x3_raw_list_arg4;
extern Variable Float16x2x3_raw_list_arg5;
extern Function Float16x2x3_raw_list;
inline constexpr auto Float16x2x3_raw_list_name = "f16x2x3"_c;
inline constexpr auto Float16x2x3_raw_list_backend_index = 1299u;

/// f16x3x3 with Float16x3, Float16x3, Float16x3
extern Variable Float16x3x3_Float16_3_ctor_arg0;
extern Variable Float16x3x3_Float16_3_ctor_arg1;
extern Variable Float16x3x3_Float16_3_ctor_arg2;
extern Function Float16x3x3_Float16_3_ctor;
inline constexpr auto Float16x3x3_Float16_3_ctor_name = "f16x3x3"_c;
inline constexpr auto Float16x3x3_Float16_3_ctor_backend_index = 1312u;

/// f16x3x3
extern Function Float16x3x3_identity;
inline constexpr auto Float16x3x3_identity_name = "f16x3x3"_c;
inline constexpr auto Float16x3x3_identity_backend_index = 1313u;

/// f16x3x3 with Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x3x3_raw_list_arg0;
extern Variable Float16x3x3_raw_list_arg1;
extern Variable Float16x3x3_raw_list_arg2;
extern Variable Float16x3x3_raw_list_arg3;
extern Variable Float16x3x3_raw_list_arg4;
extern Variable Float16x3x3_raw_list_arg5;
extern Variable Float16x3x3_raw_list_arg6;
extern Variable Float16x3x3_raw_list_arg7;
extern Variable Float16x3x3_raw_list_arg8;
extern Function Float16x3x3_raw_list;
inline constexpr auto Float16x3x3_raw_list_name = "f16x3x3"_c;
inline constexpr auto Float16x3x3_raw_list_backend_index = 1314u;

/// f16x4x3 with Float16x3, Float16x3, Float16x3, Float16x3
extern Variable Float16x4x3_Float16_3_ctor_arg0;
extern Variable Float16x4x3_Float16_3_ctor_arg1;
extern Variable Float16x4x3_Float16_3_ctor_arg2;
extern Variable Float16x4x3_Float16_3_ctor_arg3;
extern Function Float16x4x3_Float16_3_ctor;
inline constexpr auto Float16x4x3_Float16_3_ctor_name = "f16x4x3"_c;
inline constexpr auto Float16x4x3_Float16_3_ctor_backend_index = 1327u;

/// f16x4x3 with Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x4x3_raw_list_arg0;
extern Variable Float16x4x3_raw_list_arg1;
extern Variable Float16x4x3_raw_list_arg2;
extern Variable Float16x4x3_raw_list_arg3;
extern Variable Float16x4x3_raw_list_arg4;
extern Variable Float16x4x3_raw_list_arg5;
extern Variable Float16x4x3_raw_list_arg6;
extern Variable Float16x4x3_raw_list_arg7;
extern Variable Float16x4x3_raw_list_arg8;
extern Variable Float16x4x3_raw_list_arg9;
extern Variable Float16x4x3_raw_list_arg10;
extern Variable Float16x4x3_raw_list_arg11;
extern Function Float16x4x3_raw_list;
inline constexpr auto Float16x4x3_raw_list_name = "f16x4x3"_c;
inline constexpr auto Float16x4x3_raw_list_backend_index = 1328u;

/// f16x2x4 with Float16x4, Float16x4
extern Variable Float16x2x4_Float16_4_ctor_arg0;
extern Variable Float16x2x4_Float16_4_ctor_arg1;
extern Function Float16x2x4_Float16_4_ctor;
inline constexpr auto Float16x2x4_Float16_4_ctor_name = "f16x2x4"_c;
inline constexpr auto Float16x2x4_Float16_4_ctor_backend_index = 1341u;

/// f16x2x4 with Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x2x4_raw_list_arg0;
extern Variable Float16x2x4_raw_list_arg1;
extern Variable Float16x2x4_raw_list_arg2;
extern Variable Float16x2x4_raw_list_arg3;
extern Variable Float16x2x4_raw_list_arg4;
extern Variable Float16x2x4_raw_list_arg5;
extern Variable Float16x2x4_raw_list_arg6;
extern Variable Float16x2x4_raw_list_arg7;
extern Function Float16x2x4_raw_list;
inline constexpr auto Float16x2x4_raw_list_name = "f16x2x4"_c;
inline constexpr auto Float16x2x4_raw_list_backend_index = 1342u;

/// f16x3x4 with Float16x4, Float16x4, Float16x4
extern Variable Float16x3x4_Float16_4_ctor_arg0;
extern Variable Float16x3x4_Float16_4_ctor_arg1;
extern Variable Float16x3x4_Float16_4_ctor_arg2;
extern Function Float16x3x4_Float16_4_ctor;
inline constexpr auto Float16x3x4_Float16_4_ctor_name = "f16x3x4"_c;
inline constexpr auto Float16x3x4_Float16_4_ctor_backend_index = 1355u;

/// f16x3x4 with Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x3x4_raw_list_arg0;
extern Variable Float16x3x4_raw_list_arg1;
extern Variable Float16x3x4_raw_list_arg2;
extern Variable Float16x3x4_raw_list_arg3;
extern Variable Float16x3x4_raw_list_arg4;
extern Variable Float16x3x4_raw_list_arg5;
extern Variable Float16x3x4_raw_list_arg6;
extern Variable Float16x3x4_raw_list_arg7;
extern Variable Float16x3x4_raw_list_arg8;
extern Variable Float16x3x4_raw_list_arg9;
extern Variable Float16x3x4_raw_list_arg10;
extern Variable Float16x3x4_raw_list_arg11;
extern Function Float16x3x4_raw_list;
inline constexpr auto Float16x3x4_raw_list_name = "f16x3x4"_c;
inline constexpr auto Float16x3x4_raw_list_backend_index = 1356u;

/// f16x4x4 with Float16x4, Float16x4, Float16x4, Float16x4
extern Variable Float16x4x4_Float16_4_ctor_arg0;
extern Variable Float16x4x4_Float16_4_ctor_arg1;
extern Variable Float16x4x4_Float16_4_ctor_arg2;
extern Variable Float16x4x4_Float16_4_ctor_arg3;
extern Function Float16x4x4_Float16_4_ctor;
inline constexpr auto Float16x4x4_Float16_4_ctor_name = "f16x4x4"_c;
inline constexpr auto Float16x4x4_Float16_4_ctor_backend_index = 1369u;

/// f16x4x4
extern Function Float16x4x4_identity;
inline constexpr auto Float16x4x4_identity_name = "f16x4x4"_c;
inline constexpr auto Float16x4x4_identity_backend_index = 1370u;

/// f16x4x4 with Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16, Float16
extern Variable Float16x4x4_raw_list_arg0;
extern Variable Float16x4x4_raw_list_arg1;
extern Variable Float16x4x4_raw_list_arg2;
extern Variable Float16x4x4_raw_list_arg3;
extern Variable Float16x4x4_raw_list_arg4;
extern Variable Float16x4x4_raw_list_arg5;
extern Variable Float16x4x4_raw_list_arg6;
extern Variable Float16x4x4_raw_list_arg7;
extern Variable Float16x4x4_raw_list_arg8;
extern Variable Float16x4x4_raw_list_arg9;
extern Variable Float16x4x4_raw_list_arg10;
extern Variable Float16x4x4_raw_list_arg11;
extern Variable Float16x4x4_raw_list_arg12;
extern Variable Float16x4x4_raw_list_arg13;
extern Variable Float16x4x4_raw_list_arg14;
extern Variable Float16x4x4_raw_list_arg15;
extern Function Float16x4x4_raw_list;
inline constexpr auto Float16x4x4_raw_list_name = "f16x4x4"_c;
inline constexpr auto Float16x4x4_raw_list_backend_index = 1371u;

/// acos with Float32
extern Variable acos_Float32_arg;
extern Function acos_Float32;
inline constexpr auto acos_Float32_name = "acos"_c;
inline constexpr auto acos_Float32_backend_index = 1384u;

/// acos with Float32x2
extern Variable acos_Float32x2_arg;
extern Function acos_Float32x2;
inline constexpr auto acos_Float32x2_name = "acos"_c;
inline constexpr auto acos_Float32x2_backend_index = 1385u;

/// acos with Float32x3
extern Variable acos_Float32x3_arg;
extern Function acos_Float32x3;
inline constexpr auto acos_Float32x3_name = "acos"_c;
inline constexpr auto acos_Float32x3_backend_index = 1386u;

/// acos with Float32x4
extern Variable acos_Float32x4_arg;
extern Function acos_Float32x4;
inline constexpr auto acos_Float32x4_name = "acos"_c;
inline constexpr auto acos_Float32x4_backend_index = 1387u;

/// acos with Float16
extern Variable acos_Float16_arg;
extern Function acos_Float16;
inline constexpr auto acos_Float16_name = "acos"_c;
inline constexpr auto acos_Float16_backend_index = 1388u;

/// acos with Float16x2
extern Variable acos_Float16x2_arg;
extern Function acos_Float16x2;
inline constexpr auto acos_Float16x2_name = "acos"_c;
inline constexpr auto acos_Float16x2_backend_index = 1389u;

/// acos with Float16x3
extern Variable acos_Float16x3_arg;
extern Function acos_Float16x3;
inline constexpr auto acos_Float16x3_name = "acos"_c;
inline constexpr auto acos_Float16x3_backend_index = 1390u;

/// acos with Float16x4
extern Variable acos_Float16x4_arg;
extern Function acos_Float16x4;
inline constexpr auto acos_Float16x4_name = "acos"_c;
inline constexpr auto acos_Float16x4_backend_index = 1391u;

/// acosh with Float32
extern Variable acosh_Float32_arg;
extern Function acosh_Float32;
inline constexpr auto acosh_Float32_name = "acosh"_c;
inline constexpr auto acosh_Float32_backend_index = 1392u;

/// acosh with Float32x2
extern Variable acosh_Float32x2_arg;
extern Function acosh_Float32x2;
inline constexpr auto acosh_Float32x2_name = "acosh"_c;
inline constexpr auto acosh_Float32x2_backend_index = 1393u;

/// acosh with Float32x3
extern Variable acosh_Float32x3_arg;
extern Function acosh_Float32x3;
inline constexpr auto acosh_Float32x3_name = "acosh"_c;
inline constexpr auto acosh_Float32x3_backend_index = 1394u;

/// acosh with Float32x4
extern Variable acosh_Float32x4_arg;
extern Function acosh_Float32x4;
inline constexpr auto acosh_Float32x4_name = "acosh"_c;
inline constexpr auto acosh_Float32x4_backend_index = 1395u;

/// acosh with Float16
extern Variable acosh_Float16_arg;
extern Function acosh_Float16;
inline constexpr auto acosh_Float16_name = "acosh"_c;
inline constexpr auto acosh_Float16_backend_index = 1396u;

/// acosh with Float16x2
extern Variable acosh_Float16x2_arg;
extern Function acosh_Float16x2;
inline constexpr auto acosh_Float16x2_name = "acosh"_c;
inline constexpr auto acosh_Float16x2_backend_index = 1397u;

/// acosh with Float16x3
extern Variable acosh_Float16x3_arg;
extern Function acosh_Float16x3;
inline constexpr auto acosh_Float16x3_name = "acosh"_c;
inline constexpr auto acosh_Float16x3_backend_index = 1398u;

/// acosh with Float16x4
extern Variable acosh_Float16x4_arg;
extern Function acosh_Float16x4;
inline constexpr auto acosh_Float16x4_name = "acosh"_c;
inline constexpr auto acosh_Float16x4_backend_index = 1399u;

/// asin with Float32
extern Variable asin_Float32_arg;
extern Function asin_Float32;
inline constexpr auto asin_Float32_name = "asin"_c;
inline constexpr auto asin_Float32_backend_index = 1400u;

/// asin with Float32x2
extern Variable asin_Float32x2_arg;
extern Function asin_Float32x2;
inline constexpr auto asin_Float32x2_name = "asin"_c;
inline constexpr auto asin_Float32x2_backend_index = 1401u;

/// asin with Float32x3
extern Variable asin_Float32x3_arg;
extern Function asin_Float32x3;
inline constexpr auto asin_Float32x3_name = "asin"_c;
inline constexpr auto asin_Float32x3_backend_index = 1402u;

/// asin with Float32x4
extern Variable asin_Float32x4_arg;
extern Function asin_Float32x4;
inline constexpr auto asin_Float32x4_name = "asin"_c;
inline constexpr auto asin_Float32x4_backend_index = 1403u;

/// asin with Float16
extern Variable asin_Float16_arg;
extern Function asin_Float16;
inline constexpr auto asin_Float16_name = "asin"_c;
inline constexpr auto asin_Float16_backend_index = 1404u;

/// asin with Float16x2
extern Variable asin_Float16x2_arg;
extern Function asin_Float16x2;
inline constexpr auto asin_Float16x2_name = "asin"_c;
inline constexpr auto asin_Float16x2_backend_index = 1405u;

/// asin with Float16x3
extern Variable asin_Float16x3_arg;
extern Function asin_Float16x3;
inline constexpr auto asin_Float16x3_name = "asin"_c;
inline constexpr auto asin_Float16x3_backend_index = 1406u;

/// asin with Float16x4
extern Variable asin_Float16x4_arg;
extern Function asin_Float16x4;
inline constexpr auto asin_Float16x4_name = "asin"_c;
inline constexpr auto asin_Float16x4_backend_index = 1407u;

/// asinh with Float32
extern Variable asinh_Float32_arg;
extern Function asinh_Float32;
inline constexpr auto asinh_Float32_name = "asinh"_c;
inline constexpr auto asinh_Float32_backend_index = 1408u;

/// asinh with Float32x2
extern Variable asinh_Float32x2_arg;
extern Function asinh_Float32x2;
inline constexpr auto asinh_Float32x2_name = "asinh"_c;
inline constexpr auto asinh_Float32x2_backend_index = 1409u;

/// asinh with Float32x3
extern Variable asinh_Float32x3_arg;
extern Function asinh_Float32x3;
inline constexpr auto asinh_Float32x3_name = "asinh"_c;
inline constexpr auto asinh_Float32x3_backend_index = 1410u;

/// asinh with Float32x4
extern Variable asinh_Float32x4_arg;
extern Function asinh_Float32x4;
inline constexpr auto asinh_Float32x4_name = "asinh"_c;
inline constexpr auto asinh_Float32x4_backend_index = 1411u;

/// asinh with Float16
extern Variable asinh_Float16_arg;
extern Function asinh_Float16;
inline constexpr auto asinh_Float16_name = "asinh"_c;
inline constexpr auto asinh_Float16_backend_index = 1412u;

/// asinh with Float16x2
extern Variable asinh_Float16x2_arg;
extern Function asinh_Float16x2;
inline constexpr auto asinh_Float16x2_name = "asinh"_c;
inline constexpr auto asinh_Float16x2_backend_index = 1413u;

/// asinh with Float16x3
extern Variable asinh_Float16x3_arg;
extern Function asinh_Float16x3;
inline constexpr auto asinh_Float16x3_name = "asinh"_c;
inline constexpr auto asinh_Float16x3_backend_index = 1414u;

/// asinh with Float16x4
extern Variable asinh_Float16x4_arg;
extern Function asinh_Float16x4;
inline constexpr auto asinh_Float16x4_name = "asinh"_c;
inline constexpr auto asinh_Float16x4_backend_index = 1415u;

/// atan with Float32
extern Variable atan_Float32_arg;
extern Function atan_Float32;
inline constexpr auto atan_Float32_name = "atan"_c;
inline constexpr auto atan_Float32_backend_index = 1416u;

/// atan with Float32x2
extern Variable atan_Float32x2_arg;
extern Function atan_Float32x2;
inline constexpr auto atan_Float32x2_name = "atan"_c;
inline constexpr auto atan_Float32x2_backend_index = 1417u;

/// atan with Float32x3
extern Variable atan_Float32x3_arg;
extern Function atan_Float32x3;
inline constexpr auto atan_Float32x3_name = "atan"_c;
inline constexpr auto atan_Float32x3_backend_index = 1418u;

/// atan with Float32x4
extern Variable atan_Float32x4_arg;
extern Function atan_Float32x4;
inline constexpr auto atan_Float32x4_name = "atan"_c;
inline constexpr auto atan_Float32x4_backend_index = 1419u;

/// atan with Float16
extern Variable atan_Float16_arg;
extern Function atan_Float16;
inline constexpr auto atan_Float16_name = "atan"_c;
inline constexpr auto atan_Float16_backend_index = 1420u;

/// atan with Float16x2
extern Variable atan_Float16x2_arg;
extern Function atan_Float16x2;
inline constexpr auto atan_Float16x2_name = "atan"_c;
inline constexpr auto atan_Float16x2_backend_index = 1421u;

/// atan with Float16x3
extern Variable atan_Float16x3_arg;
extern Function atan_Float16x3;
inline constexpr auto atan_Float16x3_name = "atan"_c;
inline constexpr auto atan_Float16x3_backend_index = 1422u;

/// atan with Float16x4
extern Variable atan_Float16x4_arg;
extern Function atan_Float16x4;
inline constexpr auto atan_Float16x4_name = "atan"_c;
inline constexpr auto atan_Float16x4_backend_index = 1423u;

/// atanh with Float32
extern Variable atanh_Float32_arg;
extern Function atanh_Float32;
inline constexpr auto atanh_Float32_name = "atanh"_c;
inline constexpr auto atanh_Float32_backend_index = 1424u;

/// atanh with Float32x2
extern Variable atanh_Float32x2_arg;
extern Function atanh_Float32x2;
inline constexpr auto atanh_Float32x2_name = "atanh"_c;
inline constexpr auto atanh_Float32x2_backend_index = 1425u;

/// atanh with Float32x3
extern Variable atanh_Float32x3_arg;
extern Function atanh_Float32x3;
inline constexpr auto atanh_Float32x3_name = "atanh"_c;
inline constexpr auto atanh_Float32x3_backend_index = 1426u;

/// atanh with Float32x4
extern Variable atanh_Float32x4_arg;
extern Function atanh_Float32x4;
inline constexpr auto atanh_Float32x4_name = "atanh"_c;
inline constexpr auto atanh_Float32x4_backend_index = 1427u;

/// atanh with Float16
extern Variable atanh_Float16_arg;
extern Function atanh_Float16;
inline constexpr auto atanh_Float16_name = "atanh"_c;
inline constexpr auto atanh_Float16_backend_index = 1428u;

/// atanh with Float16x2
extern Variable atanh_Float16x2_arg;
extern Function atanh_Float16x2;
inline constexpr auto atanh_Float16x2_name = "atanh"_c;
inline constexpr auto atanh_Float16x2_backend_index = 1429u;

/// atanh with Float16x3
extern Variable atanh_Float16x3_arg;
extern Function atanh_Float16x3;
inline constexpr auto atanh_Float16x3_name = "atanh"_c;
inline constexpr auto atanh_Float16x3_backend_index = 1430u;

/// atanh with Float16x4
extern Variable atanh_Float16x4_arg;
extern Function atanh_Float16x4;
inline constexpr auto atanh_Float16x4_name = "atanh"_c;
inline constexpr auto atanh_Float16x4_backend_index = 1431u;

/// cos with Float32
extern Variable cos_Float32_arg;
extern Function cos_Float32;
inline constexpr auto cos_Float32_name = "cos"_c;
inline constexpr auto cos_Float32_backend_index = 1432u;

/// cos with Float32x2
extern Variable cos_Float32x2_arg;
extern Function cos_Float32x2;
inline constexpr auto cos_Float32x2_name = "cos"_c;
inline constexpr auto cos_Float32x2_backend_index = 1433u;

/// cos with Float32x3
extern Variable cos_Float32x3_arg;
extern Function cos_Float32x3;
inline constexpr auto cos_Float32x3_name = "cos"_c;
inline constexpr auto cos_Float32x3_backend_index = 1434u;

/// cos with Float32x4
extern Variable cos_Float32x4_arg;
extern Function cos_Float32x4;
inline constexpr auto cos_Float32x4_name = "cos"_c;
inline constexpr auto cos_Float32x4_backend_index = 1435u;

/// cos with Float16
extern Variable cos_Float16_arg;
extern Function cos_Float16;
inline constexpr auto cos_Float16_name = "cos"_c;
inline constexpr auto cos_Float16_backend_index = 1436u;

/// cos with Float16x2
extern Variable cos_Float16x2_arg;
extern Function cos_Float16x2;
inline constexpr auto cos_Float16x2_name = "cos"_c;
inline constexpr auto cos_Float16x2_backend_index = 1437u;

/// cos with Float16x3
extern Variable cos_Float16x3_arg;
extern Function cos_Float16x3;
inline constexpr auto cos_Float16x3_name = "cos"_c;
inline constexpr auto cos_Float16x3_backend_index = 1438u;

/// cos with Float16x4
extern Variable cos_Float16x4_arg;
extern Function cos_Float16x4;
inline constexpr auto cos_Float16x4_name = "cos"_c;
inline constexpr auto cos_Float16x4_backend_index = 1439u;

/// cosh with Float32
extern Variable cosh_Float32_arg;
extern Function cosh_Float32;
inline constexpr auto cosh_Float32_name = "cosh"_c;
inline constexpr auto cosh_Float32_backend_index = 1440u;

/// cosh with Float32x2
extern Variable cosh_Float32x2_arg;
extern Function cosh_Float32x2;
inline constexpr auto cosh_Float32x2_name = "cosh"_c;
inline constexpr auto cosh_Float32x2_backend_index = 1441u;

/// cosh with Float32x3
extern Variable cosh_Float32x3_arg;
extern Function cosh_Float32x3;
inline constexpr auto cosh_Float32x3_name = "cosh"_c;
inline constexpr auto cosh_Float32x3_backend_index = 1442u;

/// cosh with Float32x4
extern Variable cosh_Float32x4_arg;
extern Function cosh_Float32x4;
inline constexpr auto cosh_Float32x4_name = "cosh"_c;
inline constexpr auto cosh_Float32x4_backend_index = 1443u;

/// cosh with Float16
extern Variable cosh_Float16_arg;
extern Function cosh_Float16;
inline constexpr auto cosh_Float16_name = "cosh"_c;
inline constexpr auto cosh_Float16_backend_index = 1444u;

/// cosh with Float16x2
extern Variable cosh_Float16x2_arg;
extern Function cosh_Float16x2;
inline constexpr auto cosh_Float16x2_name = "cosh"_c;
inline constexpr auto cosh_Float16x2_backend_index = 1445u;

/// cosh with Float16x3
extern Variable cosh_Float16x3_arg;
extern Function cosh_Float16x3;
inline constexpr auto cosh_Float16x3_name = "cosh"_c;
inline constexpr auto cosh_Float16x3_backend_index = 1446u;

/// cosh with Float16x4
extern Variable cosh_Float16x4_arg;
extern Function cosh_Float16x4;
inline constexpr auto cosh_Float16x4_name = "cosh"_c;
inline constexpr auto cosh_Float16x4_backend_index = 1447u;

/// exp with Float32
extern Variable exp_Float32_arg;
extern Function exp_Float32;
inline constexpr auto exp_Float32_name = "exp"_c;
inline constexpr auto exp_Float32_backend_index = 1448u;

/// exp with Float32x2
extern Variable exp_Float32x2_arg;
extern Function exp_Float32x2;
inline constexpr auto exp_Float32x2_name = "exp"_c;
inline constexpr auto exp_Float32x2_backend_index = 1449u;

/// exp with Float32x3
extern Variable exp_Float32x3_arg;
extern Function exp_Float32x3;
inline constexpr auto exp_Float32x3_name = "exp"_c;
inline constexpr auto exp_Float32x3_backend_index = 1450u;

/// exp with Float32x4
extern Variable exp_Float32x4_arg;
extern Function exp_Float32x4;
inline constexpr auto exp_Float32x4_name = "exp"_c;
inline constexpr auto exp_Float32x4_backend_index = 1451u;

/// exp with Float16
extern Variable exp_Float16_arg;
extern Function exp_Float16;
inline constexpr auto exp_Float16_name = "exp"_c;
inline constexpr auto exp_Float16_backend_index = 1452u;

/// exp with Float16x2
extern Variable exp_Float16x2_arg;
extern Function exp_Float16x2;
inline constexpr auto exp_Float16x2_name = "exp"_c;
inline constexpr auto exp_Float16x2_backend_index = 1453u;

/// exp with Float16x3
extern Variable exp_Float16x3_arg;
extern Function exp_Float16x3;
inline constexpr auto exp_Float16x3_name = "exp"_c;
inline constexpr auto exp_Float16x3_backend_index = 1454u;

/// exp with Float16x4
extern Variable exp_Float16x4_arg;
extern Function exp_Float16x4;
inline constexpr auto exp_Float16x4_name = "exp"_c;
inline constexpr auto exp_Float16x4_backend_index = 1455u;

/// exp2 with Float32
extern Variable exp2_Float32_arg;
extern Function exp2_Float32;
inline constexpr auto exp2_Float32_name = "exp2"_c;
inline constexpr auto exp2_Float32_backend_index = 1456u;

/// exp2 with Float32x2
extern Variable exp2_Float32x2_arg;
extern Function exp2_Float32x2;
inline constexpr auto exp2_Float32x2_name = "exp2"_c;
inline constexpr auto exp2_Float32x2_backend_index = 1457u;

/// exp2 with Float32x3
extern Variable exp2_Float32x3_arg;
extern Function exp2_Float32x3;
inline constexpr auto exp2_Float32x3_name = "exp2"_c;
inline constexpr auto exp2_Float32x3_backend_index = 1458u;

/// exp2 with Float32x4
extern Variable exp2_Float32x4_arg;
extern Function exp2_Float32x4;
inline constexpr auto exp2_Float32x4_name = "exp2"_c;
inline constexpr auto exp2_Float32x4_backend_index = 1459u;

/// exp2 with Float16
extern Variable exp2_Float16_arg;
extern Function exp2_Float16;
inline constexpr auto exp2_Float16_name = "exp2"_c;
inline constexpr auto exp2_Float16_backend_index = 1460u;

/// exp2 with Float16x2
extern Variable exp2_Float16x2_arg;
extern Function exp2_Float16x2;
inline constexpr auto exp2_Float16x2_name = "exp2"_c;
inline constexpr auto exp2_Float16x2_backend_index = 1461u;

/// exp2 with Float16x3
extern Variable exp2_Float16x3_arg;
extern Function exp2_Float16x3;
inline constexpr auto exp2_Float16x3_name = "exp2"_c;
inline constexpr auto exp2_Float16x3_backend_index = 1462u;

/// exp2 with Float16x4
extern Variable exp2_Float16x4_arg;
extern Function exp2_Float16x4;
inline constexpr auto exp2_Float16x4_name = "exp2"_c;
inline constexpr auto exp2_Float16x4_backend_index = 1463u;

/// invSqrt with Float32
extern Variable invSqrt_Float32_arg;
extern Function invSqrt_Float32;
inline constexpr auto invSqrt_Float32_name = "invSqrt"_c;
inline constexpr auto invSqrt_Float32_backend_index = 1464u;

/// invSqrt with Float32x2
extern Variable invSqrt_Float32x2_arg;
extern Function invSqrt_Float32x2;
inline constexpr auto invSqrt_Float32x2_name = "invSqrt"_c;
inline constexpr auto invSqrt_Float32x2_backend_index = 1465u;

/// invSqrt with Float32x3
extern Variable invSqrt_Float32x3_arg;
extern Function invSqrt_Float32x3;
inline constexpr auto invSqrt_Float32x3_name = "invSqrt"_c;
inline constexpr auto invSqrt_Float32x3_backend_index = 1466u;

/// invSqrt with Float32x4
extern Variable invSqrt_Float32x4_arg;
extern Function invSqrt_Float32x4;
inline constexpr auto invSqrt_Float32x4_name = "invSqrt"_c;
inline constexpr auto invSqrt_Float32x4_backend_index = 1467u;

/// invSqrt with Float16
extern Variable invSqrt_Float16_arg;
extern Function invSqrt_Float16;
inline constexpr auto invSqrt_Float16_name = "invSqrt"_c;
inline constexpr auto invSqrt_Float16_backend_index = 1468u;

/// invSqrt with Float16x2
extern Variable invSqrt_Float16x2_arg;
extern Function invSqrt_Float16x2;
inline constexpr auto invSqrt_Float16x2_name = "invSqrt"_c;
inline constexpr auto invSqrt_Float16x2_backend_index = 1469u;

/// invSqrt with Float16x3
extern Variable invSqrt_Float16x3_arg;
extern Function invSqrt_Float16x3;
inline constexpr auto invSqrt_Float16x3_name = "invSqrt"_c;
inline constexpr auto invSqrt_Float16x3_backend_index = 1470u;

/// invSqrt with Float16x4
extern Variable invSqrt_Float16x4_arg;
extern Function invSqrt_Float16x4;
inline constexpr auto invSqrt_Float16x4_name = "invSqrt"_c;
inline constexpr auto invSqrt_Float16x4_backend_index = 1471u;

/// log with Float32
extern Variable log_Float32_arg;
extern Function log_Float32;
inline constexpr auto log_Float32_name = "log"_c;
inline constexpr auto log_Float32_backend_index = 1472u;

/// log with Float32x2
extern Variable log_Float32x2_arg;
extern Function log_Float32x2;
inline constexpr auto log_Float32x2_name = "log"_c;
inline constexpr auto log_Float32x2_backend_index = 1473u;

/// log with Float32x3
extern Variable log_Float32x3_arg;
extern Function log_Float32x3;
inline constexpr auto log_Float32x3_name = "log"_c;
inline constexpr auto log_Float32x3_backend_index = 1474u;

/// log with Float32x4
extern Variable log_Float32x4_arg;
extern Function log_Float32x4;
inline constexpr auto log_Float32x4_name = "log"_c;
inline constexpr auto log_Float32x4_backend_index = 1475u;

/// log with Float16
extern Variable log_Float16_arg;
extern Function log_Float16;
inline constexpr auto log_Float16_name = "log"_c;
inline constexpr auto log_Float16_backend_index = 1476u;

/// log with Float16x2
extern Variable log_Float16x2_arg;
extern Function log_Float16x2;
inline constexpr auto log_Float16x2_name = "log"_c;
inline constexpr auto log_Float16x2_backend_index = 1477u;

/// log with Float16x3
extern Variable log_Float16x3_arg;
extern Function log_Float16x3;
inline constexpr auto log_Float16x3_name = "log"_c;
inline constexpr auto log_Float16x3_backend_index = 1478u;

/// log with Float16x4
extern Variable log_Float16x4_arg;
extern Function log_Float16x4;
inline constexpr auto log_Float16x4_name = "log"_c;
inline constexpr auto log_Float16x4_backend_index = 1479u;

/// log2 with Float32
extern Variable log2_Float32_arg;
extern Function log2_Float32;
inline constexpr auto log2_Float32_name = "log2"_c;
inline constexpr auto log2_Float32_backend_index = 1480u;

/// log2 with Float32x2
extern Variable log2_Float32x2_arg;
extern Function log2_Float32x2;
inline constexpr auto log2_Float32x2_name = "log2"_c;
inline constexpr auto log2_Float32x2_backend_index = 1481u;

/// log2 with Float32x3
extern Variable log2_Float32x3_arg;
extern Function log2_Float32x3;
inline constexpr auto log2_Float32x3_name = "log2"_c;
inline constexpr auto log2_Float32x3_backend_index = 1482u;

/// log2 with Float32x4
extern Variable log2_Float32x4_arg;
extern Function log2_Float32x4;
inline constexpr auto log2_Float32x4_name = "log2"_c;
inline constexpr auto log2_Float32x4_backend_index = 1483u;

/// log2 with Float16
extern Variable log2_Float16_arg;
extern Function log2_Float16;
inline constexpr auto log2_Float16_name = "log2"_c;
inline constexpr auto log2_Float16_backend_index = 1484u;

/// log2 with Float16x2
extern Variable log2_Float16x2_arg;
extern Function log2_Float16x2;
inline constexpr auto log2_Float16x2_name = "log2"_c;
inline constexpr auto log2_Float16x2_backend_index = 1485u;

/// log2 with Float16x3
extern Variable log2_Float16x3_arg;
extern Function log2_Float16x3;
inline constexpr auto log2_Float16x3_name = "log2"_c;
inline constexpr auto log2_Float16x3_backend_index = 1486u;

/// log2 with Float16x4
extern Variable log2_Float16x4_arg;
extern Function log2_Float16x4;
inline constexpr auto log2_Float16x4_name = "log2"_c;
inline constexpr auto log2_Float16x4_backend_index = 1487u;

/// sin with Float32
extern Variable sin_Float32_arg;
extern Function sin_Float32;
inline constexpr auto sin_Float32_name = "sin"_c;
inline constexpr auto sin_Float32_backend_index = 1488u;

/// sin with Float32x2
extern Variable sin_Float32x2_arg;
extern Function sin_Float32x2;
inline constexpr auto sin_Float32x2_name = "sin"_c;
inline constexpr auto sin_Float32x2_backend_index = 1489u;

/// sin with Float32x3
extern Variable sin_Float32x3_arg;
extern Function sin_Float32x3;
inline constexpr auto sin_Float32x3_name = "sin"_c;
inline constexpr auto sin_Float32x3_backend_index = 1490u;

/// sin with Float32x4
extern Variable sin_Float32x4_arg;
extern Function sin_Float32x4;
inline constexpr auto sin_Float32x4_name = "sin"_c;
inline constexpr auto sin_Float32x4_backend_index = 1491u;

/// sin with Float16
extern Variable sin_Float16_arg;
extern Function sin_Float16;
inline constexpr auto sin_Float16_name = "sin"_c;
inline constexpr auto sin_Float16_backend_index = 1492u;

/// sin with Float16x2
extern Variable sin_Float16x2_arg;
extern Function sin_Float16x2;
inline constexpr auto sin_Float16x2_name = "sin"_c;
inline constexpr auto sin_Float16x2_backend_index = 1493u;

/// sin with Float16x3
extern Variable sin_Float16x3_arg;
extern Function sin_Float16x3;
inline constexpr auto sin_Float16x3_name = "sin"_c;
inline constexpr auto sin_Float16x3_backend_index = 1494u;

/// sin with Float16x4
extern Variable sin_Float16x4_arg;
extern Function sin_Float16x4;
inline constexpr auto sin_Float16x4_name = "sin"_c;
inline constexpr auto sin_Float16x4_backend_index = 1495u;

/// sinh with Float32
extern Variable sinh_Float32_arg;
extern Function sinh_Float32;
inline constexpr auto sinh_Float32_name = "sinh"_c;
inline constexpr auto sinh_Float32_backend_index = 1496u;

/// sinh with Float32x2
extern Variable sinh_Float32x2_arg;
extern Function sinh_Float32x2;
inline constexpr auto sinh_Float32x2_name = "sinh"_c;
inline constexpr auto sinh_Float32x2_backend_index = 1497u;

/// sinh with Float32x3
extern Variable sinh_Float32x3_arg;
extern Function sinh_Float32x3;
inline constexpr auto sinh_Float32x3_name = "sinh"_c;
inline constexpr auto sinh_Float32x3_backend_index = 1498u;

/// sinh with Float32x4
extern Variable sinh_Float32x4_arg;
extern Function sinh_Float32x4;
inline constexpr auto sinh_Float32x4_name = "sinh"_c;
inline constexpr auto sinh_Float32x4_backend_index = 1499u;

/// sinh with Float16
extern Variable sinh_Float16_arg;
extern Function sinh_Float16;
inline constexpr auto sinh_Float16_name = "sinh"_c;
inline constexpr auto sinh_Float16_backend_index = 1500u;

/// sinh with Float16x2
extern Variable sinh_Float16x2_arg;
extern Function sinh_Float16x2;
inline constexpr auto sinh_Float16x2_name = "sinh"_c;
inline constexpr auto sinh_Float16x2_backend_index = 1501u;

/// sinh with Float16x3
extern Variable sinh_Float16x3_arg;
extern Function sinh_Float16x3;
inline constexpr auto sinh_Float16x3_name = "sinh"_c;
inline constexpr auto sinh_Float16x3_backend_index = 1502u;

/// sinh with Float16x4
extern Variable sinh_Float16x4_arg;
extern Function sinh_Float16x4;
inline constexpr auto sinh_Float16x4_name = "sinh"_c;
inline constexpr auto sinh_Float16x4_backend_index = 1503u;

/// sqrt with Float32
extern Variable sqrt_Float32_arg;
extern Function sqrt_Float32;
inline constexpr auto sqrt_Float32_name = "sqrt"_c;
inline constexpr auto sqrt_Float32_backend_index = 1504u;

/// sqrt with Float32x2
extern Variable sqrt_Float32x2_arg;
extern Function sqrt_Float32x2;
inline constexpr auto sqrt_Float32x2_name = "sqrt"_c;
inline constexpr auto sqrt_Float32x2_backend_index = 1505u;

/// sqrt with Float32x3
extern Variable sqrt_Float32x3_arg;
extern Function sqrt_Float32x3;
inline constexpr auto sqrt_Float32x3_name = "sqrt"_c;
inline constexpr auto sqrt_Float32x3_backend_index = 1506u;

/// sqrt with Float32x4
extern Variable sqrt_Float32x4_arg;
extern Function sqrt_Float32x4;
inline constexpr auto sqrt_Float32x4_name = "sqrt"_c;
inline constexpr auto sqrt_Float32x4_backend_index = 1507u;

/// sqrt with Float16
extern Variable sqrt_Float16_arg;
extern Function sqrt_Float16;
inline constexpr auto sqrt_Float16_name = "sqrt"_c;
inline constexpr auto sqrt_Float16_backend_index = 1508u;

/// sqrt with Float16x2
extern Variable sqrt_Float16x2_arg;
extern Function sqrt_Float16x2;
inline constexpr auto sqrt_Float16x2_name = "sqrt"_c;
inline constexpr auto sqrt_Float16x2_backend_index = 1509u;

/// sqrt with Float16x3
extern Variable sqrt_Float16x3_arg;
extern Function sqrt_Float16x3;
inline constexpr auto sqrt_Float16x3_name = "sqrt"_c;
inline constexpr auto sqrt_Float16x3_backend_index = 1510u;

/// sqrt with Float16x4
extern Variable sqrt_Float16x4_arg;
extern Function sqrt_Float16x4;
inline constexpr auto sqrt_Float16x4_name = "sqrt"_c;
inline constexpr auto sqrt_Float16x4_backend_index = 1511u;

/// tan with Float32
extern Variable tan_Float32_arg;
extern Function tan_Float32;
inline constexpr auto tan_Float32_name = "tan"_c;
inline constexpr auto tan_Float32_backend_index = 1512u;

/// tan with Float32x2
extern Variable tan_Float32x2_arg;
extern Function tan_Float32x2;
inline constexpr auto tan_Float32x2_name = "tan"_c;
inline constexpr auto tan_Float32x2_backend_index = 1513u;

/// tan with Float32x3
extern Variable tan_Float32x3_arg;
extern Function tan_Float32x3;
inline constexpr auto tan_Float32x3_name = "tan"_c;
inline constexpr auto tan_Float32x3_backend_index = 1514u;

/// tan with Float32x4
extern Variable tan_Float32x4_arg;
extern Function tan_Float32x4;
inline constexpr auto tan_Float32x4_name = "tan"_c;
inline constexpr auto tan_Float32x4_backend_index = 1515u;

/// tan with Float16
extern Variable tan_Float16_arg;
extern Function tan_Float16;
inline constexpr auto tan_Float16_name = "tan"_c;
inline constexpr auto tan_Float16_backend_index = 1516u;

/// tan with Float16x2
extern Variable tan_Float16x2_arg;
extern Function tan_Float16x2;
inline constexpr auto tan_Float16x2_name = "tan"_c;
inline constexpr auto tan_Float16x2_backend_index = 1517u;

/// tan with Float16x3
extern Variable tan_Float16x3_arg;
extern Function tan_Float16x3;
inline constexpr auto tan_Float16x3_name = "tan"_c;
inline constexpr auto tan_Float16x3_backend_index = 1518u;

/// tan with Float16x4
extern Variable tan_Float16x4_arg;
extern Function tan_Float16x4;
inline constexpr auto tan_Float16x4_name = "tan"_c;
inline constexpr auto tan_Float16x4_backend_index = 1519u;

/// tanh with Float32
extern Variable tanh_Float32_arg;
extern Function tanh_Float32;
inline constexpr auto tanh_Float32_name = "tanh"_c;
inline constexpr auto tanh_Float32_backend_index = 1520u;

/// tanh with Float32x2
extern Variable tanh_Float32x2_arg;
extern Function tanh_Float32x2;
inline constexpr auto tanh_Float32x2_name = "tanh"_c;
inline constexpr auto tanh_Float32x2_backend_index = 1521u;

/// tanh with Float32x3
extern Variable tanh_Float32x3_arg;
extern Function tanh_Float32x3;
inline constexpr auto tanh_Float32x3_name = "tanh"_c;
inline constexpr auto tanh_Float32x3_backend_index = 1522u;

/// tanh with Float32x4
extern Variable tanh_Float32x4_arg;
extern Function tanh_Float32x4;
inline constexpr auto tanh_Float32x4_name = "tanh"_c;
inline constexpr auto tanh_Float32x4_backend_index = 1523u;

/// tanh with Float16
extern Variable tanh_Float16_arg;
extern Function tanh_Float16;
inline constexpr auto tanh_Float16_name = "tanh"_c;
inline constexpr auto tanh_Float16_backend_index = 1524u;

/// tanh with Float16x2
extern Variable tanh_Float16x2_arg;
extern Function tanh_Float16x2;
inline constexpr auto tanh_Float16x2_name = "tanh"_c;
inline constexpr auto tanh_Float16x2_backend_index = 1525u;

/// tanh with Float16x3
extern Variable tanh_Float16x3_arg;
extern Function tanh_Float16x3;
inline constexpr auto tanh_Float16x3_name = "tanh"_c;
inline constexpr auto tanh_Float16x3_backend_index = 1526u;

/// tanh with Float16x4
extern Variable tanh_Float16x4_arg;
extern Function tanh_Float16x4;
inline constexpr auto tanh_Float16x4_name = "tanh"_c;
inline constexpr auto tanh_Float16x4_backend_index = 1527u;

/// atan2 with Float32, Float32
extern Variable atan2_Float32_y;
extern Variable atan2_Float32_x;
extern Function atan2_Float32;
inline constexpr auto atan2_Float32_name = "atan2"_c;
inline constexpr auto atan2_Float32_backend_index = 1528u;

/// atan2 with Float32x2, Float32x2
extern Variable atan2_Float32x2_y;
extern Variable atan2_Float32x2_x;
extern Function atan2_Float32x2;
inline constexpr auto atan2_Float32x2_name = "atan2"_c;
inline constexpr auto atan2_Float32x2_backend_index = 1529u;

/// atan2 with Float32x3, Float32x3
extern Variable atan2_Float32x3_y;
extern Variable atan2_Float32x3_x;
extern Function atan2_Float32x3;
inline constexpr auto atan2_Float32x3_name = "atan2"_c;
inline constexpr auto atan2_Float32x3_backend_index = 1530u;

/// atan2 with Float32x4, Float32x4
extern Variable atan2_Float32x4_y;
extern Variable atan2_Float32x4_x;
extern Function atan2_Float32x4;
inline constexpr auto atan2_Float32x4_name = "atan2"_c;
inline constexpr auto atan2_Float32x4_backend_index = 1531u;

/// atan2 with Float16, Float16
extern Variable atan2_Float16_y;
extern Variable atan2_Float16_x;
extern Function atan2_Float16;
inline constexpr auto atan2_Float16_name = "atan2"_c;
inline constexpr auto atan2_Float16_backend_index = 1532u;

/// atan2 with Float16x2, Float16x2
extern Variable atan2_Float16x2_y;
extern Variable atan2_Float16x2_x;
extern Function atan2_Float16x2;
inline constexpr auto atan2_Float16x2_name = "atan2"_c;
inline constexpr auto atan2_Float16x2_backend_index = 1533u;

/// atan2 with Float16x3, Float16x3
extern Variable atan2_Float16x3_y;
extern Variable atan2_Float16x3_x;
extern Function atan2_Float16x3;
inline constexpr auto atan2_Float16x3_name = "atan2"_c;
inline constexpr auto atan2_Float16x3_backend_index = 1534u;

/// atan2 with Float16x4, Float16x4
extern Variable atan2_Float16x4_y;
extern Variable atan2_Float16x4_x;
extern Function atan2_Float16x4;
inline constexpr auto atan2_Float16x4_name = "atan2"_c;
inline constexpr auto atan2_Float16x4_backend_index = 1535u;

/// pow with Float32, Float32
extern Variable pow_Float32_arg;
extern Variable pow_Float32_exp;
extern Function pow_Float32;
inline constexpr auto pow_Float32_name = "pow"_c;
inline constexpr auto pow_Float32_backend_index = 1536u;

/// pow with Float32x2, Float32x2
extern Variable pow_Float32x2_arg;
extern Variable pow_Float32x2_exp;
extern Function pow_Float32x2;
inline constexpr auto pow_Float32x2_name = "pow"_c;
inline constexpr auto pow_Float32x2_backend_index = 1537u;

/// pow with Float32x3, Float32x3
extern Variable pow_Float32x3_arg;
extern Variable pow_Float32x3_exp;
extern Function pow_Float32x3;
inline constexpr auto pow_Float32x3_name = "pow"_c;
inline constexpr auto pow_Float32x3_backend_index = 1538u;

/// pow with Float32x4, Float32x4
extern Variable pow_Float32x4_arg;
extern Variable pow_Float32x4_exp;
extern Function pow_Float32x4;
inline constexpr auto pow_Float32x4_name = "pow"_c;
inline constexpr auto pow_Float32x4_backend_index = 1539u;

/// pow with Float16, Float16
extern Variable pow_Float16_arg;
extern Variable pow_Float16_exp;
extern Function pow_Float16;
inline constexpr auto pow_Float16_name = "pow"_c;
inline constexpr auto pow_Float16_backend_index = 1540u;

/// pow with Float16x2, Float16x2
extern Variable pow_Float16x2_arg;
extern Variable pow_Float16x2_exp;
extern Function pow_Float16x2;
inline constexpr auto pow_Float16x2_name = "pow"_c;
inline constexpr auto pow_Float16x2_backend_index = 1541u;

/// pow with Float16x3, Float16x3
extern Variable pow_Float16x3_arg;
extern Variable pow_Float16x3_exp;
extern Function pow_Float16x3;
inline constexpr auto pow_Float16x3_name = "pow"_c;
inline constexpr auto pow_Float16x3_backend_index = 1542u;

/// pow with Float16x4, Float16x4
extern Variable pow_Float16x4_arg;
extern Variable pow_Float16x4_exp;
extern Function pow_Float16x4;
inline constexpr auto pow_Float16x4_name = "pow"_c;
inline constexpr auto pow_Float16x4_backend_index = 1543u;

/// mad with Float32, Float32, Float32
extern Variable mad_Float32_arg;
extern Variable mad_Float32_mul;
extern Variable mad_Float32_add;
extern Function mad_Float32;
inline constexpr auto mad_Float32_name = "mad"_c;
inline constexpr auto mad_Float32_backend_index = 1544u;

/// mad with Float32x2, Float32x2, Float32x2
extern Variable mad_Float32x2_arg;
extern Variable mad_Float32x2_mul;
extern Variable mad_Float32x2_add;
extern Function mad_Float32x2;
inline constexpr auto mad_Float32x2_name = "mad"_c;
inline constexpr auto mad_Float32x2_backend_index = 1545u;

/// mad with Float32x3, Float32x3, Float32x3
extern Variable mad_Float32x3_arg;
extern Variable mad_Float32x3_mul;
extern Variable mad_Float32x3_add;
extern Function mad_Float32x3;
inline constexpr auto mad_Float32x3_name = "mad"_c;
inline constexpr auto mad_Float32x3_backend_index = 1546u;

/// mad with Float32x4, Float32x4, Float32x4
extern Variable mad_Float32x4_arg;
extern Variable mad_Float32x4_mul;
extern Variable mad_Float32x4_add;
extern Function mad_Float32x4;
inline constexpr auto mad_Float32x4_name = "mad"_c;
inline constexpr auto mad_Float32x4_backend_index = 1547u;

/// mad with Float16, Float16, Float16
extern Variable mad_Float16_arg;
extern Variable mad_Float16_mul;
extern Variable mad_Float16_add;
extern Function mad_Float16;
inline constexpr auto mad_Float16_name = "mad"_c;
inline constexpr auto mad_Float16_backend_index = 1548u;

/// mad with Float16x2, Float16x2, Float16x2
extern Variable mad_Float16x2_arg;
extern Variable mad_Float16x2_mul;
extern Variable mad_Float16x2_add;
extern Function mad_Float16x2;
inline constexpr auto mad_Float16x2_name = "mad"_c;
inline constexpr auto mad_Float16x2_backend_index = 1549u;

/// mad with Float16x3, Float16x3, Float16x3
extern Variable mad_Float16x3_arg;
extern Variable mad_Float16x3_mul;
extern Variable mad_Float16x3_add;
extern Function mad_Float16x3;
inline constexpr auto mad_Float16x3_name = "mad"_c;
inline constexpr auto mad_Float16x3_backend_index = 1550u;

/// mad with Float16x4, Float16x4, Float16x4
extern Variable mad_Float16x4_arg;
extern Variable mad_Float16x4_mul;
extern Variable mad_Float16x4_add;
extern Function mad_Float16x4;
inline constexpr auto mad_Float16x4_name = "mad"_c;
inline constexpr auto mad_Float16x4_backend_index = 1551u;

/// mad with Int32, Int32, Int32
extern Variable mad_Int32_arg;
extern Variable mad_Int32_mul;
extern Variable mad_Int32_add;
extern Function mad_Int32;
inline constexpr auto mad_Int32_name = "mad"_c;
inline constexpr auto mad_Int32_backend_index = 1552u;

/// mad with Int32x2, Int32x2, Int32x2
extern Variable mad_Int32x2_arg;
extern Variable mad_Int32x2_mul;
extern Variable mad_Int32x2_add;
extern Function mad_Int32x2;
inline constexpr auto mad_Int32x2_name = "mad"_c;
inline constexpr auto mad_Int32x2_backend_index = 1553u;

/// mad with Int32x3, Int32x3, Int32x3
extern Variable mad_Int32x3_arg;
extern Variable mad_Int32x3_mul;
extern Variable mad_Int32x3_add;
extern Function mad_Int32x3;
inline constexpr auto mad_Int32x3_name = "mad"_c;
inline constexpr auto mad_Int32x3_backend_index = 1554u;

/// mad with Int32x4, Int32x4, Int32x4
extern Variable mad_Int32x4_arg;
extern Variable mad_Int32x4_mul;
extern Variable mad_Int32x4_add;
extern Function mad_Int32x4;
inline constexpr auto mad_Int32x4_name = "mad"_c;
inline constexpr auto mad_Int32x4_backend_index = 1555u;

/// mad with Int16, Int16, Int16
extern Variable mad_Int16_arg;
extern Variable mad_Int16_mul;
extern Variable mad_Int16_add;
extern Function mad_Int16;
inline constexpr auto mad_Int16_name = "mad"_c;
inline constexpr auto mad_Int16_backend_index = 1556u;

/// mad with Int16x2, Int16x2, Int16x2
extern Variable mad_Int16x2_arg;
extern Variable mad_Int16x2_mul;
extern Variable mad_Int16x2_add;
extern Function mad_Int16x2;
inline constexpr auto mad_Int16x2_name = "mad"_c;
inline constexpr auto mad_Int16x2_backend_index = 1557u;

/// mad with Int16x3, Int16x3, Int16x3
extern Variable mad_Int16x3_arg;
extern Variable mad_Int16x3_mul;
extern Variable mad_Int16x3_add;
extern Function mad_Int16x3;
inline constexpr auto mad_Int16x3_name = "mad"_c;
inline constexpr auto mad_Int16x3_backend_index = 1558u;

/// mad with Int16x4, Int16x4, Int16x4
extern Variable mad_Int16x4_arg;
extern Variable mad_Int16x4_mul;
extern Variable mad_Int16x4_add;
extern Function mad_Int16x4;
inline constexpr auto mad_Int16x4_name = "mad"_c;
inline constexpr auto mad_Int16x4_backend_index = 1559u;

/// mad with UInt32, UInt32, UInt32
extern Variable mad_UInt32_arg;
extern Variable mad_UInt32_mul;
extern Variable mad_UInt32_add;
extern Function mad_UInt32;
inline constexpr auto mad_UInt32_name = "mad"_c;
inline constexpr auto mad_UInt32_backend_index = 1560u;

/// mad with UInt32x2, UInt32x2, UInt32x2
extern Variable mad_UInt32x2_arg;
extern Variable mad_UInt32x2_mul;
extern Variable mad_UInt32x2_add;
extern Function mad_UInt32x2;
inline constexpr auto mad_UInt32x2_name = "mad"_c;
inline constexpr auto mad_UInt32x2_backend_index = 1561u;

/// mad with UInt32x3, UInt32x3, UInt32x3
extern Variable mad_UInt32x3_arg;
extern Variable mad_UInt32x3_mul;
extern Variable mad_UInt32x3_add;
extern Function mad_UInt32x3;
inline constexpr auto mad_UInt32x3_name = "mad"_c;
inline constexpr auto mad_UInt32x3_backend_index = 1562u;

/// mad with UInt32x4, UInt32x4, UInt32x4
extern Variable mad_UInt32x4_arg;
extern Variable mad_UInt32x4_mul;
extern Variable mad_UInt32x4_add;
extern Function mad_UInt32x4;
inline constexpr auto mad_UInt32x4_name = "mad"_c;
inline constexpr auto mad_UInt32x4_backend_index = 1563u;

/// mad with UInt16, UInt16, UInt16
extern Variable mad_UInt16_arg;
extern Variable mad_UInt16_mul;
extern Variable mad_UInt16_add;
extern Function mad_UInt16;
inline constexpr auto mad_UInt16_name = "mad"_c;
inline constexpr auto mad_UInt16_backend_index = 1564u;

/// mad with UInt16x2, UInt16x2, UInt16x2
extern Variable mad_UInt16x2_arg;
extern Variable mad_UInt16x2_mul;
extern Variable mad_UInt16x2_add;
extern Function mad_UInt16x2;
inline constexpr auto mad_UInt16x2_name = "mad"_c;
inline constexpr auto mad_UInt16x2_backend_index = 1565u;

/// mad with UInt16x3, UInt16x3, UInt16x3
extern Variable mad_UInt16x3_arg;
extern Variable mad_UInt16x3_mul;
extern Variable mad_UInt16x3_add;
extern Function mad_UInt16x3;
inline constexpr auto mad_UInt16x3_name = "mad"_c;
inline constexpr auto mad_UInt16x3_backend_index = 1566u;

/// mad with UInt16x4, UInt16x4, UInt16x4
extern Variable mad_UInt16x4_arg;
extern Variable mad_UInt16x4_mul;
extern Variable mad_UInt16x4_add;
extern Function mad_UInt16x4;
inline constexpr auto mad_UInt16x4_name = "mad"_c;
inline constexpr auto mad_UInt16x4_backend_index = 1567u;

/// dot with Float32x2, Float32x2
extern Variable dot_Float32x2_x;
extern Variable dot_Float32x2_y;
extern Function dot_Float32x2;
inline constexpr auto dot_Float32x2_name = "dot"_c;
inline constexpr auto dot_Float32x2_backend_index = 1568u;

/// dot with Float32x3, Float32x3
extern Variable dot_Float32x3_x;
extern Variable dot_Float32x3_y;
extern Function dot_Float32x3;
inline constexpr auto dot_Float32x3_name = "dot"_c;
inline constexpr auto dot_Float32x3_backend_index = 1569u;

/// dot with Float32x4, Float32x4
extern Variable dot_Float32x4_x;
extern Variable dot_Float32x4_y;
extern Function dot_Float32x4;
inline constexpr auto dot_Float32x4_name = "dot"_c;
inline constexpr auto dot_Float32x4_backend_index = 1570u;

/// dot with Float16x2, Float16x2
extern Variable dot_Float16x2_x;
extern Variable dot_Float16x2_y;
extern Function dot_Float16x2;
inline constexpr auto dot_Float16x2_name = "dot"_c;
inline constexpr auto dot_Float16x2_backend_index = 1571u;

/// dot with Float16x3, Float16x3
extern Variable dot_Float16x3_x;
extern Variable dot_Float16x3_y;
extern Function dot_Float16x3;
inline constexpr auto dot_Float16x3_name = "dot"_c;
inline constexpr auto dot_Float16x3_backend_index = 1572u;

/// dot with Float16x4, Float16x4
extern Variable dot_Float16x4_x;
extern Variable dot_Float16x4_y;
extern Function dot_Float16x4;
inline constexpr auto dot_Float16x4_name = "dot"_c;
inline constexpr auto dot_Float16x4_backend_index = 1573u;

/// reflect with Float32x2, Float32x2
extern Variable reflect_Float32x2_incident;
extern Variable reflect_Float32x2_normal;
extern Function reflect_Float32x2;
inline constexpr auto reflect_Float32x2_name = "reflect"_c;
inline constexpr auto reflect_Float32x2_backend_index = 1574u;

/// reflect with Float32x3, Float32x3
extern Variable reflect_Float32x3_incident;
extern Variable reflect_Float32x3_normal;
extern Function reflect_Float32x3;
inline constexpr auto reflect_Float32x3_name = "reflect"_c;
inline constexpr auto reflect_Float32x3_backend_index = 1575u;

/// reflect with Float32x4, Float32x4
extern Variable reflect_Float32x4_incident;
extern Variable reflect_Float32x4_normal;
extern Function reflect_Float32x4;
inline constexpr auto reflect_Float32x4_name = "reflect"_c;
inline constexpr auto reflect_Float32x4_backend_index = 1576u;

/// reflect with Float16x2, Float16x2
extern Variable reflect_Float16x2_incident;
extern Variable reflect_Float16x2_normal;
extern Function reflect_Float16x2;
inline constexpr auto reflect_Float16x2_name = "reflect"_c;
inline constexpr auto reflect_Float16x2_backend_index = 1577u;

/// reflect with Float16x3, Float16x3
extern Variable reflect_Float16x3_incident;
extern Variable reflect_Float16x3_normal;
extern Function reflect_Float16x3;
inline constexpr auto reflect_Float16x3_name = "reflect"_c;
inline constexpr auto reflect_Float16x3_backend_index = 1578u;

/// reflect with Float16x4, Float16x4
extern Variable reflect_Float16x4_incident;
extern Variable reflect_Float16x4_normal;
extern Function reflect_Float16x4;
inline constexpr auto reflect_Float16x4_name = "reflect"_c;
inline constexpr auto reflect_Float16x4_backend_index = 1579u;

/// refract with Float32x2, Float32x2, Float32x2
extern Variable refract_Float32x2_incident;
extern Variable refract_Float32x2_normal;
extern Variable refract_Float32x2_ior;
extern Function refract_Float32x2;
inline constexpr auto refract_Float32x2_name = "refract"_c;
inline constexpr auto refract_Float32x2_backend_index = 1580u;

/// refract with Float32x3, Float32x3, Float32x3
extern Variable refract_Float32x3_incident;
extern Variable refract_Float32x3_normal;
extern Variable refract_Float32x3_ior;
extern Function refract_Float32x3;
inline constexpr auto refract_Float32x3_name = "refract"_c;
inline constexpr auto refract_Float32x3_backend_index = 1581u;

/// refract with Float32x4, Float32x4, Float32x4
extern Variable refract_Float32x4_incident;
extern Variable refract_Float32x4_normal;
extern Variable refract_Float32x4_ior;
extern Function refract_Float32x4;
inline constexpr auto refract_Float32x4_name = "refract"_c;
inline constexpr auto refract_Float32x4_backend_index = 1582u;

/// refract with Float16x2, Float16x2, Float16x2
extern Variable refract_Float16x2_incident;
extern Variable refract_Float16x2_normal;
extern Variable refract_Float16x2_ior;
extern Function refract_Float16x2;
inline constexpr auto refract_Float16x2_name = "refract"_c;
inline constexpr auto refract_Float16x2_backend_index = 1583u;

/// refract with Float16x3, Float16x3, Float16x3
extern Variable refract_Float16x3_incident;
extern Variable refract_Float16x3_normal;
extern Variable refract_Float16x3_ior;
extern Function refract_Float16x3;
inline constexpr auto refract_Float16x3_name = "refract"_c;
inline constexpr auto refract_Float16x3_backend_index = 1584u;

/// refract with Float16x4, Float16x4, Float16x4
extern Variable refract_Float16x4_incident;
extern Variable refract_Float16x4_normal;
extern Variable refract_Float16x4_ior;
extern Function refract_Float16x4;
inline constexpr auto refract_Float16x4_name = "refract"_c;
inline constexpr auto refract_Float16x4_backend_index = 1585u;

/// cross with Float32x3, Float32x3
extern Variable cross_Float32x3_v0;
extern Variable cross_Float32x3_v1;
extern Function cross_Float32x3;
inline constexpr auto cross_Float32x3_name = "cross"_c;
inline constexpr auto cross_Float32x3_backend_index = 1586u;

/// cross with Float16x3, Float16x3
extern Variable cross_Float16x3_v0;
extern Variable cross_Float16x3_v1;
extern Function cross_Float16x3;
inline constexpr auto cross_Float16x3_name = "cross"_c;
inline constexpr auto cross_Float16x3_backend_index = 1587u;

/// length with Float32x2
extern Variable length_Float32x2_arg;
extern Function length_Float32x2;
inline constexpr auto length_Float32x2_name = "length"_c;
inline constexpr auto length_Float32x2_backend_index = 1588u;

/// length with Float32x3
extern Variable length_Float32x3_arg;
extern Function length_Float32x3;
inline constexpr auto length_Float32x3_name = "length"_c;
inline constexpr auto length_Float32x3_backend_index = 1589u;

/// length with Float32x4
extern Variable length_Float32x4_arg;
extern Function length_Float32x4;
inline constexpr auto length_Float32x4_name = "length"_c;
inline constexpr auto length_Float32x4_backend_index = 1590u;

/// length with Float16x2
extern Variable length_Float16x2_arg;
extern Function length_Float16x2;
inline constexpr auto length_Float16x2_name = "length"_c;
inline constexpr auto length_Float16x2_backend_index = 1591u;

/// length with Float16x3
extern Variable length_Float16x3_arg;
extern Function length_Float16x3;
inline constexpr auto length_Float16x3_name = "length"_c;
inline constexpr auto length_Float16x3_backend_index = 1592u;

/// length with Float16x4
extern Variable length_Float16x4_arg;
extern Function length_Float16x4;
inline constexpr auto length_Float16x4_name = "length"_c;
inline constexpr auto length_Float16x4_backend_index = 1593u;

/// normalize with Float32x2
extern Variable normalize_Float32x2_arg;
extern Function normalize_Float32x2;
inline constexpr auto normalize_Float32x2_name = "normalize"_c;
inline constexpr auto normalize_Float32x2_backend_index = 1594u;

/// normalize with Float32x3
extern Variable normalize_Float32x3_arg;
extern Function normalize_Float32x3;
inline constexpr auto normalize_Float32x3_name = "normalize"_c;
inline constexpr auto normalize_Float32x3_backend_index = 1595u;

/// normalize with Float32x4
extern Variable normalize_Float32x4_arg;
extern Function normalize_Float32x4;
inline constexpr auto normalize_Float32x4_name = "normalize"_c;
inline constexpr auto normalize_Float32x4_backend_index = 1596u;

/// normalize with Float16x2
extern Variable normalize_Float16x2_arg;
extern Function normalize_Float16x2;
inline constexpr auto normalize_Float16x2_name = "normalize"_c;
inline constexpr auto normalize_Float16x2_backend_index = 1597u;

/// normalize with Float16x3
extern Variable normalize_Float16x3_arg;
extern Function normalize_Float16x3;
inline constexpr auto normalize_Float16x3_name = "normalize"_c;
inline constexpr auto normalize_Float16x3_backend_index = 1598u;

/// normalize with Float16x4
extern Variable normalize_Float16x4_arg;
extern Function normalize_Float16x4;
inline constexpr auto normalize_Float16x4_name = "normalize"_c;
inline constexpr auto normalize_Float16x4_backend_index = 1599u;

/// distance with Float32x2, Float32x2
extern Variable distance_Float32x2_p0;
extern Variable distance_Float32x2_p1;
extern Function distance_Float32x2;
inline constexpr auto distance_Float32x2_name = "distance"_c;
inline constexpr auto distance_Float32x2_backend_index = 1600u;

/// distance with Float32x3, Float32x3
extern Variable distance_Float32x3_p0;
extern Variable distance_Float32x3_p1;
extern Function distance_Float32x3;
inline constexpr auto distance_Float32x3_name = "distance"_c;
inline constexpr auto distance_Float32x3_backend_index = 1601u;

/// distance with Float32x4, Float32x4
extern Variable distance_Float32x4_p0;
extern Variable distance_Float32x4_p1;
extern Function distance_Float32x4;
inline constexpr auto distance_Float32x4_name = "distance"_c;
inline constexpr auto distance_Float32x4_backend_index = 1602u;

/// distance with Float16x2, Float16x2
extern Variable distance_Float16x2_p0;
extern Variable distance_Float16x2_p1;
extern Function distance_Float16x2;
inline constexpr auto distance_Float16x2_name = "distance"_c;
inline constexpr auto distance_Float16x2_backend_index = 1603u;

/// distance with Float16x3, Float16x3
extern Variable distance_Float16x3_p0;
extern Variable distance_Float16x3_p1;
extern Function distance_Float16x3;
inline constexpr auto distance_Float16x3_name = "distance"_c;
inline constexpr auto distance_Float16x3_backend_index = 1604u;

/// distance with Float16x4, Float16x4
extern Variable distance_Float16x4_p0;
extern Variable distance_Float16x4_p1;
extern Function distance_Float16x4;
inline constexpr auto distance_Float16x4_name = "distance"_c;
inline constexpr auto distance_Float16x4_backend_index = 1605u;

/// min with Float32, Float32
extern Variable min_Float32_x;
extern Variable min_Float32_y;
extern Function min_Float32;
inline constexpr auto min_Float32_name = "min"_c;
inline constexpr auto min_Float32_backend_index = 1606u;

/// min with Float32x2, Float32x2
extern Variable min_Float32x2_x;
extern Variable min_Float32x2_y;
extern Function min_Float32x2;
inline constexpr auto min_Float32x2_name = "min"_c;
inline constexpr auto min_Float32x2_backend_index = 1607u;

/// min with Float32x3, Float32x3
extern Variable min_Float32x3_x;
extern Variable min_Float32x3_y;
extern Function min_Float32x3;
inline constexpr auto min_Float32x3_name = "min"_c;
inline constexpr auto min_Float32x3_backend_index = 1608u;

/// min with Float32x4, Float32x4
extern Variable min_Float32x4_x;
extern Variable min_Float32x4_y;
extern Function min_Float32x4;
inline constexpr auto min_Float32x4_name = "min"_c;
inline constexpr auto min_Float32x4_backend_index = 1609u;

/// min with Float16, Float16
extern Variable min_Float16_x;
extern Variable min_Float16_y;
extern Function min_Float16;
inline constexpr auto min_Float16_name = "min"_c;
inline constexpr auto min_Float16_backend_index = 1610u;

/// min with Float16x2, Float16x2
extern Variable min_Float16x2_x;
extern Variable min_Float16x2_y;
extern Function min_Float16x2;
inline constexpr auto min_Float16x2_name = "min"_c;
inline constexpr auto min_Float16x2_backend_index = 1611u;

/// min with Float16x3, Float16x3
extern Variable min_Float16x3_x;
extern Variable min_Float16x3_y;
extern Function min_Float16x3;
inline constexpr auto min_Float16x3_name = "min"_c;
inline constexpr auto min_Float16x3_backend_index = 1612u;

/// min with Float16x4, Float16x4
extern Variable min_Float16x4_x;
extern Variable min_Float16x4_y;
extern Function min_Float16x4;
inline constexpr auto min_Float16x4_name = "min"_c;
inline constexpr auto min_Float16x4_backend_index = 1613u;

/// min with Int32, Int32
extern Variable min_Int32_x;
extern Variable min_Int32_y;
extern Function min_Int32;
inline constexpr auto min_Int32_name = "min"_c;
inline constexpr auto min_Int32_backend_index = 1614u;

/// min with Int32x2, Int32x2
extern Variable min_Int32x2_x;
extern Variable min_Int32x2_y;
extern Function min_Int32x2;
inline constexpr auto min_Int32x2_name = "min"_c;
inline constexpr auto min_Int32x2_backend_index = 1615u;

/// min with Int32x3, Int32x3
extern Variable min_Int32x3_x;
extern Variable min_Int32x3_y;
extern Function min_Int32x3;
inline constexpr auto min_Int32x3_name = "min"_c;
inline constexpr auto min_Int32x3_backend_index = 1616u;

/// min with Int32x4, Int32x4
extern Variable min_Int32x4_x;
extern Variable min_Int32x4_y;
extern Function min_Int32x4;
inline constexpr auto min_Int32x4_name = "min"_c;
inline constexpr auto min_Int32x4_backend_index = 1617u;

/// min with Int16, Int16
extern Variable min_Int16_x;
extern Variable min_Int16_y;
extern Function min_Int16;
inline constexpr auto min_Int16_name = "min"_c;
inline constexpr auto min_Int16_backend_index = 1618u;

/// min with Int16x2, Int16x2
extern Variable min_Int16x2_x;
extern Variable min_Int16x2_y;
extern Function min_Int16x2;
inline constexpr auto min_Int16x2_name = "min"_c;
inline constexpr auto min_Int16x2_backend_index = 1619u;

/// min with Int16x3, Int16x3
extern Variable min_Int16x3_x;
extern Variable min_Int16x3_y;
extern Function min_Int16x3;
inline constexpr auto min_Int16x3_name = "min"_c;
inline constexpr auto min_Int16x3_backend_index = 1620u;

/// min with Int16x4, Int16x4
extern Variable min_Int16x4_x;
extern Variable min_Int16x4_y;
extern Function min_Int16x4;
inline constexpr auto min_Int16x4_name = "min"_c;
inline constexpr auto min_Int16x4_backend_index = 1621u;

/// min with UInt32, UInt32
extern Variable min_UInt32_x;
extern Variable min_UInt32_y;
extern Function min_UInt32;
inline constexpr auto min_UInt32_name = "min"_c;
inline constexpr auto min_UInt32_backend_index = 1622u;

/// min with UInt32x2, UInt32x2
extern Variable min_UInt32x2_x;
extern Variable min_UInt32x2_y;
extern Function min_UInt32x2;
inline constexpr auto min_UInt32x2_name = "min"_c;
inline constexpr auto min_UInt32x2_backend_index = 1623u;

/// min with UInt32x3, UInt32x3
extern Variable min_UInt32x3_x;
extern Variable min_UInt32x3_y;
extern Function min_UInt32x3;
inline constexpr auto min_UInt32x3_name = "min"_c;
inline constexpr auto min_UInt32x3_backend_index = 1624u;

/// min with UInt32x4, UInt32x4
extern Variable min_UInt32x4_x;
extern Variable min_UInt32x4_y;
extern Function min_UInt32x4;
inline constexpr auto min_UInt32x4_name = "min"_c;
inline constexpr auto min_UInt32x4_backend_index = 1625u;

/// min with UInt16, UInt16
extern Variable min_UInt16_x;
extern Variable min_UInt16_y;
extern Function min_UInt16;
inline constexpr auto min_UInt16_name = "min"_c;
inline constexpr auto min_UInt16_backend_index = 1626u;

/// min with UInt16x2, UInt16x2
extern Variable min_UInt16x2_x;
extern Variable min_UInt16x2_y;
extern Function min_UInt16x2;
inline constexpr auto min_UInt16x2_name = "min"_c;
inline constexpr auto min_UInt16x2_backend_index = 1627u;

/// min with UInt16x3, UInt16x3
extern Variable min_UInt16x3_x;
extern Variable min_UInt16x3_y;
extern Function min_UInt16x3;
inline constexpr auto min_UInt16x3_name = "min"_c;
inline constexpr auto min_UInt16x3_backend_index = 1628u;

/// min with UInt16x4, UInt16x4
extern Variable min_UInt16x4_x;
extern Variable min_UInt16x4_y;
extern Function min_UInt16x4;
inline constexpr auto min_UInt16x4_name = "min"_c;
inline constexpr auto min_UInt16x4_backend_index = 1629u;

/// max with Float32, Float32
extern Variable max_Float32_x;
extern Variable max_Float32_y;
extern Function max_Float32;
inline constexpr auto max_Float32_name = "max"_c;
inline constexpr auto max_Float32_backend_index = 1630u;

/// max with Float32x2, Float32x2
extern Variable max_Float32x2_x;
extern Variable max_Float32x2_y;
extern Function max_Float32x2;
inline constexpr auto max_Float32x2_name = "max"_c;
inline constexpr auto max_Float32x2_backend_index = 1631u;

/// max with Float32x3, Float32x3
extern Variable max_Float32x3_x;
extern Variable max_Float32x3_y;
extern Function max_Float32x3;
inline constexpr auto max_Float32x3_name = "max"_c;
inline constexpr auto max_Float32x3_backend_index = 1632u;

/// max with Float32x4, Float32x4
extern Variable max_Float32x4_x;
extern Variable max_Float32x4_y;
extern Function max_Float32x4;
inline constexpr auto max_Float32x4_name = "max"_c;
inline constexpr auto max_Float32x4_backend_index = 1633u;

/// max with Float16, Float16
extern Variable max_Float16_x;
extern Variable max_Float16_y;
extern Function max_Float16;
inline constexpr auto max_Float16_name = "max"_c;
inline constexpr auto max_Float16_backend_index = 1634u;

/// max with Float16x2, Float16x2
extern Variable max_Float16x2_x;
extern Variable max_Float16x2_y;
extern Function max_Float16x2;
inline constexpr auto max_Float16x2_name = "max"_c;
inline constexpr auto max_Float16x2_backend_index = 1635u;

/// max with Float16x3, Float16x3
extern Variable max_Float16x3_x;
extern Variable max_Float16x3_y;
extern Function max_Float16x3;
inline constexpr auto max_Float16x3_name = "max"_c;
inline constexpr auto max_Float16x3_backend_index = 1636u;

/// max with Float16x4, Float16x4
extern Variable max_Float16x4_x;
extern Variable max_Float16x4_y;
extern Function max_Float16x4;
inline constexpr auto max_Float16x4_name = "max"_c;
inline constexpr auto max_Float16x4_backend_index = 1637u;

/// max with Int32, Int32
extern Variable max_Int32_x;
extern Variable max_Int32_y;
extern Function max_Int32;
inline constexpr auto max_Int32_name = "max"_c;
inline constexpr auto max_Int32_backend_index = 1638u;

/// max with Int32x2, Int32x2
extern Variable max_Int32x2_x;
extern Variable max_Int32x2_y;
extern Function max_Int32x2;
inline constexpr auto max_Int32x2_name = "max"_c;
inline constexpr auto max_Int32x2_backend_index = 1639u;

/// max with Int32x3, Int32x3
extern Variable max_Int32x3_x;
extern Variable max_Int32x3_y;
extern Function max_Int32x3;
inline constexpr auto max_Int32x3_name = "max"_c;
inline constexpr auto max_Int32x3_backend_index = 1640u;

/// max with Int32x4, Int32x4
extern Variable max_Int32x4_x;
extern Variable max_Int32x4_y;
extern Function max_Int32x4;
inline constexpr auto max_Int32x4_name = "max"_c;
inline constexpr auto max_Int32x4_backend_index = 1641u;

/// max with Int16, Int16
extern Variable max_Int16_x;
extern Variable max_Int16_y;
extern Function max_Int16;
inline constexpr auto max_Int16_name = "max"_c;
inline constexpr auto max_Int16_backend_index = 1642u;

/// max with Int16x2, Int16x2
extern Variable max_Int16x2_x;
extern Variable max_Int16x2_y;
extern Function max_Int16x2;
inline constexpr auto max_Int16x2_name = "max"_c;
inline constexpr auto max_Int16x2_backend_index = 1643u;

/// max with Int16x3, Int16x3
extern Variable max_Int16x3_x;
extern Variable max_Int16x3_y;
extern Function max_Int16x3;
inline constexpr auto max_Int16x3_name = "max"_c;
inline constexpr auto max_Int16x3_backend_index = 1644u;

/// max with Int16x4, Int16x4
extern Variable max_Int16x4_x;
extern Variable max_Int16x4_y;
extern Function max_Int16x4;
inline constexpr auto max_Int16x4_name = "max"_c;
inline constexpr auto max_Int16x4_backend_index = 1645u;

/// max with UInt32, UInt32
extern Variable max_UInt32_x;
extern Variable max_UInt32_y;
extern Function max_UInt32;
inline constexpr auto max_UInt32_name = "max"_c;
inline constexpr auto max_UInt32_backend_index = 1646u;

/// max with UInt32x2, UInt32x2
extern Variable max_UInt32x2_x;
extern Variable max_UInt32x2_y;
extern Function max_UInt32x2;
inline constexpr auto max_UInt32x2_name = "max"_c;
inline constexpr auto max_UInt32x2_backend_index = 1647u;

/// max with UInt32x3, UInt32x3
extern Variable max_UInt32x3_x;
extern Variable max_UInt32x3_y;
extern Function max_UInt32x3;
inline constexpr auto max_UInt32x3_name = "max"_c;
inline constexpr auto max_UInt32x3_backend_index = 1648u;

/// max with UInt32x4, UInt32x4
extern Variable max_UInt32x4_x;
extern Variable max_UInt32x4_y;
extern Function max_UInt32x4;
inline constexpr auto max_UInt32x4_name = "max"_c;
inline constexpr auto max_UInt32x4_backend_index = 1649u;

/// max with UInt16, UInt16
extern Variable max_UInt16_x;
extern Variable max_UInt16_y;
extern Function max_UInt16;
inline constexpr auto max_UInt16_name = "max"_c;
inline constexpr auto max_UInt16_backend_index = 1650u;

/// max with UInt16x2, UInt16x2
extern Variable max_UInt16x2_x;
extern Variable max_UInt16x2_y;
extern Function max_UInt16x2;
inline constexpr auto max_UInt16x2_name = "max"_c;
inline constexpr auto max_UInt16x2_backend_index = 1651u;

/// max with UInt16x3, UInt16x3
extern Variable max_UInt16x3_x;
extern Variable max_UInt16x3_y;
extern Function max_UInt16x3;
inline constexpr auto max_UInt16x3_name = "max"_c;
inline constexpr auto max_UInt16x3_backend_index = 1652u;

/// max with UInt16x4, UInt16x4
extern Variable max_UInt16x4_x;
extern Variable max_UInt16x4_y;
extern Function max_UInt16x4;
inline constexpr auto max_UInt16x4_name = "max"_c;
inline constexpr auto max_UInt16x4_backend_index = 1653u;

/// clamp with Float32, Float32, Float32
extern Variable clamp_Float32_val;
extern Variable clamp_Float32_min;
extern Variable clamp_Float32_max;
extern Function clamp_Float32;
inline constexpr auto clamp_Float32_name = "clamp"_c;
inline constexpr auto clamp_Float32_backend_index = 1654u;

/// clamp with Float32x2, Float32x2, Float32x2
extern Variable clamp_Float32x2_val;
extern Variable clamp_Float32x2_min;
extern Variable clamp_Float32x2_max;
extern Function clamp_Float32x2;
inline constexpr auto clamp_Float32x2_name = "clamp"_c;
inline constexpr auto clamp_Float32x2_backend_index = 1655u;

/// clamp with Float32x3, Float32x3, Float32x3
extern Variable clamp_Float32x3_val;
extern Variable clamp_Float32x3_min;
extern Variable clamp_Float32x3_max;
extern Function clamp_Float32x3;
inline constexpr auto clamp_Float32x3_name = "clamp"_c;
inline constexpr auto clamp_Float32x3_backend_index = 1656u;

/// clamp with Float32x4, Float32x4, Float32x4
extern Variable clamp_Float32x4_val;
extern Variable clamp_Float32x4_min;
extern Variable clamp_Float32x4_max;
extern Function clamp_Float32x4;
inline constexpr auto clamp_Float32x4_name = "clamp"_c;
inline constexpr auto clamp_Float32x4_backend_index = 1657u;

/// clamp with Float16, Float16, Float16
extern Variable clamp_Float16_val;
extern Variable clamp_Float16_min;
extern Variable clamp_Float16_max;
extern Function clamp_Float16;
inline constexpr auto clamp_Float16_name = "clamp"_c;
inline constexpr auto clamp_Float16_backend_index = 1658u;

/// clamp with Float16x2, Float16x2, Float16x2
extern Variable clamp_Float16x2_val;
extern Variable clamp_Float16x2_min;
extern Variable clamp_Float16x2_max;
extern Function clamp_Float16x2;
inline constexpr auto clamp_Float16x2_name = "clamp"_c;
inline constexpr auto clamp_Float16x2_backend_index = 1659u;

/// clamp with Float16x3, Float16x3, Float16x3
extern Variable clamp_Float16x3_val;
extern Variable clamp_Float16x3_min;
extern Variable clamp_Float16x3_max;
extern Function clamp_Float16x3;
inline constexpr auto clamp_Float16x3_name = "clamp"_c;
inline constexpr auto clamp_Float16x3_backend_index = 1660u;

/// clamp with Float16x4, Float16x4, Float16x4
extern Variable clamp_Float16x4_val;
extern Variable clamp_Float16x4_min;
extern Variable clamp_Float16x4_max;
extern Function clamp_Float16x4;
inline constexpr auto clamp_Float16x4_name = "clamp"_c;
inline constexpr auto clamp_Float16x4_backend_index = 1661u;

/// clamp with Int32, Int32, Int32
extern Variable clamp_Int32_val;
extern Variable clamp_Int32_min;
extern Variable clamp_Int32_max;
extern Function clamp_Int32;
inline constexpr auto clamp_Int32_name = "clamp"_c;
inline constexpr auto clamp_Int32_backend_index = 1662u;

/// clamp with Int32x2, Int32x2, Int32x2
extern Variable clamp_Int32x2_val;
extern Variable clamp_Int32x2_min;
extern Variable clamp_Int32x2_max;
extern Function clamp_Int32x2;
inline constexpr auto clamp_Int32x2_name = "clamp"_c;
inline constexpr auto clamp_Int32x2_backend_index = 1663u;

/// clamp with Int32x3, Int32x3, Int32x3
extern Variable clamp_Int32x3_val;
extern Variable clamp_Int32x3_min;
extern Variable clamp_Int32x3_max;
extern Function clamp_Int32x3;
inline constexpr auto clamp_Int32x3_name = "clamp"_c;
inline constexpr auto clamp_Int32x3_backend_index = 1664u;

/// clamp with Int32x4, Int32x4, Int32x4
extern Variable clamp_Int32x4_val;
extern Variable clamp_Int32x4_min;
extern Variable clamp_Int32x4_max;
extern Function clamp_Int32x4;
inline constexpr auto clamp_Int32x4_name = "clamp"_c;
inline constexpr auto clamp_Int32x4_backend_index = 1665u;

/// clamp with Int16, Int16, Int16
extern Variable clamp_Int16_val;
extern Variable clamp_Int16_min;
extern Variable clamp_Int16_max;
extern Function clamp_Int16;
inline constexpr auto clamp_Int16_name = "clamp"_c;
inline constexpr auto clamp_Int16_backend_index = 1666u;

/// clamp with Int16x2, Int16x2, Int16x2
extern Variable clamp_Int16x2_val;
extern Variable clamp_Int16x2_min;
extern Variable clamp_Int16x2_max;
extern Function clamp_Int16x2;
inline constexpr auto clamp_Int16x2_name = "clamp"_c;
inline constexpr auto clamp_Int16x2_backend_index = 1667u;

/// clamp with Int16x3, Int16x3, Int16x3
extern Variable clamp_Int16x3_val;
extern Variable clamp_Int16x3_min;
extern Variable clamp_Int16x3_max;
extern Function clamp_Int16x3;
inline constexpr auto clamp_Int16x3_name = "clamp"_c;
inline constexpr auto clamp_Int16x3_backend_index = 1668u;

/// clamp with Int16x4, Int16x4, Int16x4
extern Variable clamp_Int16x4_val;
extern Variable clamp_Int16x4_min;
extern Variable clamp_Int16x4_max;
extern Function clamp_Int16x4;
inline constexpr auto clamp_Int16x4_name = "clamp"_c;
inline constexpr auto clamp_Int16x4_backend_index = 1669u;

/// clamp with UInt32, UInt32, UInt32
extern Variable clamp_UInt32_val;
extern Variable clamp_UInt32_min;
extern Variable clamp_UInt32_max;
extern Function clamp_UInt32;
inline constexpr auto clamp_UInt32_name = "clamp"_c;
inline constexpr auto clamp_UInt32_backend_index = 1670u;

/// clamp with UInt32x2, UInt32x2, UInt32x2
extern Variable clamp_UInt32x2_val;
extern Variable clamp_UInt32x2_min;
extern Variable clamp_UInt32x2_max;
extern Function clamp_UInt32x2;
inline constexpr auto clamp_UInt32x2_name = "clamp"_c;
inline constexpr auto clamp_UInt32x2_backend_index = 1671u;

/// clamp with UInt32x3, UInt32x3, UInt32x3
extern Variable clamp_UInt32x3_val;
extern Variable clamp_UInt32x3_min;
extern Variable clamp_UInt32x3_max;
extern Function clamp_UInt32x3;
inline constexpr auto clamp_UInt32x3_name = "clamp"_c;
inline constexpr auto clamp_UInt32x3_backend_index = 1672u;

/// clamp with UInt32x4, UInt32x4, UInt32x4
extern Variable clamp_UInt32x4_val;
extern Variable clamp_UInt32x4_min;
extern Variable clamp_UInt32x4_max;
extern Function clamp_UInt32x4;
inline constexpr auto clamp_UInt32x4_name = "clamp"_c;
inline constexpr auto clamp_UInt32x4_backend_index = 1673u;

/// clamp with UInt16, UInt16, UInt16
extern Variable clamp_UInt16_val;
extern Variable clamp_UInt16_min;
extern Variable clamp_UInt16_max;
extern Function clamp_UInt16;
inline constexpr auto clamp_UInt16_name = "clamp"_c;
inline constexpr auto clamp_UInt16_backend_index = 1674u;

/// clamp with UInt16x2, UInt16x2, UInt16x2
extern Variable clamp_UInt16x2_val;
extern Variable clamp_UInt16x2_min;
extern Variable clamp_UInt16x2_max;
extern Function clamp_UInt16x2;
inline constexpr auto clamp_UInt16x2_name = "clamp"_c;
inline constexpr auto clamp_UInt16x2_backend_index = 1675u;

/// clamp with UInt16x3, UInt16x3, UInt16x3
extern Variable clamp_UInt16x3_val;
extern Variable clamp_UInt16x3_min;
extern Variable clamp_UInt16x3_max;
extern Function clamp_UInt16x3;
inline constexpr auto clamp_UInt16x3_name = "clamp"_c;
inline constexpr auto clamp_UInt16x3_backend_index = 1676u;

/// clamp with UInt16x4, UInt16x4, UInt16x4
extern Variable clamp_UInt16x4_val;
extern Variable clamp_UInt16x4_min;
extern Variable clamp_UInt16x4_max;
extern Function clamp_UInt16x4;
inline constexpr auto clamp_UInt16x4_name = "clamp"_c;
inline constexpr auto clamp_UInt16x4_backend_index = 1677u;

/// lerp with Float32, Float32, Float32
extern Variable lerp_Float32_a;
extern Variable lerp_Float32_b;
extern Variable lerp_Float32_t;
extern Function lerp_Float32;
inline constexpr auto lerp_Float32_name = "lerp"_c;
inline constexpr auto lerp_Float32_backend_index = 1678u;

/// lerp with Float32x2, Float32x2, Float32x2
extern Variable lerp_Float32x2_a;
extern Variable lerp_Float32x2_b;
extern Variable lerp_Float32x2_t;
extern Function lerp_Float32x2;
inline constexpr auto lerp_Float32x2_name = "lerp"_c;
inline constexpr auto lerp_Float32x2_backend_index = 1679u;

/// lerp with Float32x3, Float32x3, Float32x3
extern Variable lerp_Float32x3_a;
extern Variable lerp_Float32x3_b;
extern Variable lerp_Float32x3_t;
extern Function lerp_Float32x3;
inline constexpr auto lerp_Float32x3_name = "lerp"_c;
inline constexpr auto lerp_Float32x3_backend_index = 1680u;

/// lerp with Float32x4, Float32x4, Float32x4
extern Variable lerp_Float32x4_a;
extern Variable lerp_Float32x4_b;
extern Variable lerp_Float32x4_t;
extern Function lerp_Float32x4;
inline constexpr auto lerp_Float32x4_name = "lerp"_c;
inline constexpr auto lerp_Float32x4_backend_index = 1681u;

/// lerp with Float16, Float16, Float16
extern Variable lerp_Float16_a;
extern Variable lerp_Float16_b;
extern Variable lerp_Float16_t;
extern Function lerp_Float16;
inline constexpr auto lerp_Float16_name = "lerp"_c;
inline constexpr auto lerp_Float16_backend_index = 1682u;

/// lerp with Float16x2, Float16x2, Float16x2
extern Variable lerp_Float16x2_a;
extern Variable lerp_Float16x2_b;
extern Variable lerp_Float16x2_t;
extern Function lerp_Float16x2;
inline constexpr auto lerp_Float16x2_name = "lerp"_c;
inline constexpr auto lerp_Float16x2_backend_index = 1683u;

/// lerp with Float16x3, Float16x3, Float16x3
extern Variable lerp_Float16x3_a;
extern Variable lerp_Float16x3_b;
extern Variable lerp_Float16x3_t;
extern Function lerp_Float16x3;
inline constexpr auto lerp_Float16x3_name = "lerp"_c;
inline constexpr auto lerp_Float16x3_backend_index = 1684u;

/// lerp with Float16x4, Float16x4, Float16x4
extern Variable lerp_Float16x4_a;
extern Variable lerp_Float16x4_b;
extern Variable lerp_Float16x4_t;
extern Function lerp_Float16x4;
inline constexpr auto lerp_Float16x4_name = "lerp"_c;
inline constexpr auto lerp_Float16x4_backend_index = 1685u;

/// step with Float32, Float32
extern Variable step_Float32_edge;
extern Variable step_Float32_x;
extern Function step_Float32;
inline constexpr auto step_Float32_name = "step"_c;
inline constexpr auto step_Float32_backend_index = 1686u;

/// step with Float32x2, Float32x2
extern Variable step_Float32x2_edge;
extern Variable step_Float32x2_x;
extern Function step_Float32x2;
inline constexpr auto step_Float32x2_name = "step"_c;
inline constexpr auto step_Float32x2_backend_index = 1687u;

/// step with Float32x3, Float32x3
extern Variable step_Float32x3_edge;
extern Variable step_Float32x3_x;
extern Function step_Float32x3;
inline constexpr auto step_Float32x3_name = "step"_c;
inline constexpr auto step_Float32x3_backend_index = 1688u;

/// step with Float32x4, Float32x4
extern Variable step_Float32x4_edge;
extern Variable step_Float32x4_x;
extern Function step_Float32x4;
inline constexpr auto step_Float32x4_name = "step"_c;
inline constexpr auto step_Float32x4_backend_index = 1689u;

/// step with Float16, Float16
extern Variable step_Float16_edge;
extern Variable step_Float16_x;
extern Function step_Float16;
inline constexpr auto step_Float16_name = "step"_c;
inline constexpr auto step_Float16_backend_index = 1690u;

/// step with Float16x2, Float16x2
extern Variable step_Float16x2_edge;
extern Variable step_Float16x2_x;
extern Function step_Float16x2;
inline constexpr auto step_Float16x2_name = "step"_c;
inline constexpr auto step_Float16x2_backend_index = 1691u;

/// step with Float16x3, Float16x3
extern Variable step_Float16x3_edge;
extern Variable step_Float16x3_x;
extern Function step_Float16x3;
inline constexpr auto step_Float16x3_name = "step"_c;
inline constexpr auto step_Float16x3_backend_index = 1692u;

/// step with Float16x4, Float16x4
extern Variable step_Float16x4_edge;
extern Variable step_Float16x4_x;
extern Function step_Float16x4;
inline constexpr auto step_Float16x4_name = "step"_c;
inline constexpr auto step_Float16x4_backend_index = 1693u;

/// smoothstep with Float32, Float32, Float32
extern Variable smoothstep_Float32_edge0;
extern Variable smoothstep_Float32_edge1;
extern Variable smoothstep_Float32_x;
extern Function smoothstep_Float32;
inline constexpr auto smoothstep_Float32_name = "smoothstep"_c;
inline constexpr auto smoothstep_Float32_backend_index = 1694u;

/// smoothstep with Float32x2, Float32x2, Float32x2
extern Variable smoothstep_Float32x2_edge0;
extern Variable smoothstep_Float32x2_edge1;
extern Variable smoothstep_Float32x2_x;
extern Function smoothstep_Float32x2;
inline constexpr auto smoothstep_Float32x2_name = "smoothstep"_c;
inline constexpr auto smoothstep_Float32x2_backend_index = 1695u;

/// smoothstep with Float32x3, Float32x3, Float32x3
extern Variable smoothstep_Float32x3_edge0;
extern Variable smoothstep_Float32x3_edge1;
extern Variable smoothstep_Float32x3_x;
extern Function smoothstep_Float32x3;
inline constexpr auto smoothstep_Float32x3_name = "smoothstep"_c;
inline constexpr auto smoothstep_Float32x3_backend_index = 1696u;

/// smoothstep with Float32x4, Float32x4, Float32x4
extern Variable smoothstep_Float32x4_edge0;
extern Variable smoothstep_Float32x4_edge1;
extern Variable smoothstep_Float32x4_x;
extern Function smoothstep_Float32x4;
inline constexpr auto smoothstep_Float32x4_name = "smoothstep"_c;
inline constexpr auto smoothstep_Float32x4_backend_index = 1697u;

/// smoothstep with Float16, Float16, Float16
extern Variable smoothstep_Float16_edge0;
extern Variable smoothstep_Float16_edge1;
extern Variable smoothstep_Float16_x;
extern Function smoothstep_Float16;
inline constexpr auto smoothstep_Float16_name = "smoothstep"_c;
inline constexpr auto smoothstep_Float16_backend_index = 1698u;

/// smoothstep with Float16x2, Float16x2, Float16x2
extern Variable smoothstep_Float16x2_edge0;
extern Variable smoothstep_Float16x2_edge1;
extern Variable smoothstep_Float16x2_x;
extern Function smoothstep_Float16x2;
inline constexpr auto smoothstep_Float16x2_name = "smoothstep"_c;
inline constexpr auto smoothstep_Float16x2_backend_index = 1699u;

/// smoothstep with Float16x3, Float16x3, Float16x3
extern Variable smoothstep_Float16x3_edge0;
extern Variable smoothstep_Float16x3_edge1;
extern Variable smoothstep_Float16x3_x;
extern Function smoothstep_Float16x3;
inline constexpr auto smoothstep_Float16x3_name = "smoothstep"_c;
inline constexpr auto smoothstep_Float16x3_backend_index = 1700u;

/// smoothstep with Float16x4, Float16x4, Float16x4
extern Variable smoothstep_Float16x4_edge0;
extern Variable smoothstep_Float16x4_edge1;
extern Variable smoothstep_Float16x4_x;
extern Function smoothstep_Float16x4;
inline constexpr auto smoothstep_Float16x4_name = "smoothstep"_c;
inline constexpr auto smoothstep_Float16x4_backend_index = 1701u;

/// ceil with Float32
extern Variable ceil_Float32_arg;
extern Function ceil_Float32;
inline constexpr auto ceil_Float32_name = "ceil"_c;
inline constexpr auto ceil_Float32_backend_index = 1702u;

/// ceil with Float32x2
extern Variable ceil_Float32x2_arg;
extern Function ceil_Float32x2;
inline constexpr auto ceil_Float32x2_name = "ceil"_c;
inline constexpr auto ceil_Float32x2_backend_index = 1703u;

/// ceil with Float32x3
extern Variable ceil_Float32x3_arg;
extern Function ceil_Float32x3;
inline constexpr auto ceil_Float32x3_name = "ceil"_c;
inline constexpr auto ceil_Float32x3_backend_index = 1704u;

/// ceil with Float32x4
extern Variable ceil_Float32x4_arg;
extern Function ceil_Float32x4;
inline constexpr auto ceil_Float32x4_name = "ceil"_c;
inline constexpr auto ceil_Float32x4_backend_index = 1705u;

/// ceil with Float16
extern Variable ceil_Float16_arg;
extern Function ceil_Float16;
inline constexpr auto ceil_Float16_name = "ceil"_c;
inline constexpr auto ceil_Float16_backend_index = 1706u;

/// ceil with Float16x2
extern Variable ceil_Float16x2_arg;
extern Function ceil_Float16x2;
inline constexpr auto ceil_Float16x2_name = "ceil"_c;
inline constexpr auto ceil_Float16x2_backend_index = 1707u;

/// ceil with Float16x3
extern Variable ceil_Float16x3_arg;
extern Function ceil_Float16x3;
inline constexpr auto ceil_Float16x3_name = "ceil"_c;
inline constexpr auto ceil_Float16x3_backend_index = 1708u;

/// ceil with Float16x4
extern Variable ceil_Float16x4_arg;
extern Function ceil_Float16x4;
inline constexpr auto ceil_Float16x4_name = "ceil"_c;
inline constexpr auto ceil_Float16x4_backend_index = 1709u;

/// floor with Float32
extern Variable floor_Float32_arg;
extern Function floor_Float32;
inline constexpr auto floor_Float32_name = "floor"_c;
inline constexpr auto floor_Float32_backend_index = 1710u;

/// floor with Float32x2
extern Variable floor_Float32x2_arg;
extern Function floor_Float32x2;
inline constexpr auto floor_Float32x2_name = "floor"_c;
inline constexpr auto floor_Float32x2_backend_index = 1711u;

/// floor with Float32x3
extern Variable floor_Float32x3_arg;
extern Function floor_Float32x3;
inline constexpr auto floor_Float32x3_name = "floor"_c;
inline constexpr auto floor_Float32x3_backend_index = 1712u;

/// floor with Float32x4
extern Variable floor_Float32x4_arg;
extern Function floor_Float32x4;
inline constexpr auto floor_Float32x4_name = "floor"_c;
inline constexpr auto floor_Float32x4_backend_index = 1713u;

/// floor with Float16
extern Variable floor_Float16_arg;
extern Function floor_Float16;
inline constexpr auto floor_Float16_name = "floor"_c;
inline constexpr auto floor_Float16_backend_index = 1714u;

/// floor with Float16x2
extern Variable floor_Float16x2_arg;
extern Function floor_Float16x2;
inline constexpr auto floor_Float16x2_name = "floor"_c;
inline constexpr auto floor_Float16x2_backend_index = 1715u;

/// floor with Float16x3
extern Variable floor_Float16x3_arg;
extern Function floor_Float16x3;
inline constexpr auto floor_Float16x3_name = "floor"_c;
inline constexpr auto floor_Float16x3_backend_index = 1716u;

/// floor with Float16x4
extern Variable floor_Float16x4_arg;
extern Function floor_Float16x4;
inline constexpr auto floor_Float16x4_name = "floor"_c;
inline constexpr auto floor_Float16x4_backend_index = 1717u;

/// fract with Float32
extern Variable fract_Float32_arg;
extern Function fract_Float32;
inline constexpr auto fract_Float32_name = "fract"_c;
inline constexpr auto fract_Float32_backend_index = 1718u;

/// fract with Float32x2
extern Variable fract_Float32x2_arg;
extern Function fract_Float32x2;
inline constexpr auto fract_Float32x2_name = "fract"_c;
inline constexpr auto fract_Float32x2_backend_index = 1719u;

/// fract with Float32x3
extern Variable fract_Float32x3_arg;
extern Function fract_Float32x3;
inline constexpr auto fract_Float32x3_name = "fract"_c;
inline constexpr auto fract_Float32x3_backend_index = 1720u;

/// fract with Float32x4
extern Variable fract_Float32x4_arg;
extern Function fract_Float32x4;
inline constexpr auto fract_Float32x4_name = "fract"_c;
inline constexpr auto fract_Float32x4_backend_index = 1721u;

/// fract with Float16
extern Variable fract_Float16_arg;
extern Function fract_Float16;
inline constexpr auto fract_Float16_name = "fract"_c;
inline constexpr auto fract_Float16_backend_index = 1722u;

/// fract with Float16x2
extern Variable fract_Float16x2_arg;
extern Function fract_Float16x2;
inline constexpr auto fract_Float16x2_name = "fract"_c;
inline constexpr auto fract_Float16x2_backend_index = 1723u;

/// fract with Float16x3
extern Variable fract_Float16x3_arg;
extern Function fract_Float16x3;
inline constexpr auto fract_Float16x3_name = "fract"_c;
inline constexpr auto fract_Float16x3_backend_index = 1724u;

/// fract with Float16x4
extern Variable fract_Float16x4_arg;
extern Function fract_Float16x4;
inline constexpr auto fract_Float16x4_name = "fract"_c;
inline constexpr auto fract_Float16x4_backend_index = 1725u;

/// saturate with Float32
extern Variable saturate_Float32_arg;
extern Function saturate_Float32;
inline constexpr auto saturate_Float32_name = "saturate"_c;
inline constexpr auto saturate_Float32_backend_index = 1726u;

/// saturate with Float32x2
extern Variable saturate_Float32x2_arg;
extern Function saturate_Float32x2;
inline constexpr auto saturate_Float32x2_name = "saturate"_c;
inline constexpr auto saturate_Float32x2_backend_index = 1727u;

/// saturate with Float32x3
extern Variable saturate_Float32x3_arg;
extern Function saturate_Float32x3;
inline constexpr auto saturate_Float32x3_name = "saturate"_c;
inline constexpr auto saturate_Float32x3_backend_index = 1728u;

/// saturate with Float32x4
extern Variable saturate_Float32x4_arg;
extern Function saturate_Float32x4;
inline constexpr auto saturate_Float32x4_name = "saturate"_c;
inline constexpr auto saturate_Float32x4_backend_index = 1729u;

/// saturate with Float16
extern Variable saturate_Float16_arg;
extern Function saturate_Float16;
inline constexpr auto saturate_Float16_name = "saturate"_c;
inline constexpr auto saturate_Float16_backend_index = 1730u;

/// saturate with Float16x2
extern Variable saturate_Float16x2_arg;
extern Function saturate_Float16x2;
inline constexpr auto saturate_Float16x2_name = "saturate"_c;
inline constexpr auto saturate_Float16x2_backend_index = 1731u;

/// saturate with Float16x3
extern Variable saturate_Float16x3_arg;
extern Function saturate_Float16x3;
inline constexpr auto saturate_Float16x3_name = "saturate"_c;
inline constexpr auto saturate_Float16x3_backend_index = 1732u;

/// saturate with Float16x4
extern Variable saturate_Float16x4_arg;
extern Function saturate_Float16x4;
inline constexpr auto saturate_Float16x4_name = "saturate"_c;
inline constexpr auto saturate_Float16x4_backend_index = 1733u;

/// trunc with Float32
extern Variable trunc_Float32_arg;
extern Function trunc_Float32;
inline constexpr auto trunc_Float32_name = "trunc"_c;
inline constexpr auto trunc_Float32_backend_index = 1734u;

/// trunc with Float32x2
extern Variable trunc_Float32x2_arg;
extern Function trunc_Float32x2;
inline constexpr auto trunc_Float32x2_name = "trunc"_c;
inline constexpr auto trunc_Float32x2_backend_index = 1735u;

/// trunc with Float32x3
extern Variable trunc_Float32x3_arg;
extern Function trunc_Float32x3;
inline constexpr auto trunc_Float32x3_name = "trunc"_c;
inline constexpr auto trunc_Float32x3_backend_index = 1736u;

/// trunc with Float32x4
extern Variable trunc_Float32x4_arg;
extern Function trunc_Float32x4;
inline constexpr auto trunc_Float32x4_name = "trunc"_c;
inline constexpr auto trunc_Float32x4_backend_index = 1737u;

/// trunc with Float16
extern Variable trunc_Float16_arg;
extern Function trunc_Float16;
inline constexpr auto trunc_Float16_name = "trunc"_c;
inline constexpr auto trunc_Float16_backend_index = 1738u;

/// trunc with Float16x2
extern Variable trunc_Float16x2_arg;
extern Function trunc_Float16x2;
inline constexpr auto trunc_Float16x2_name = "trunc"_c;
inline constexpr auto trunc_Float16x2_backend_index = 1739u;

/// trunc with Float16x3
extern Variable trunc_Float16x3_arg;
extern Function trunc_Float16x3;
inline constexpr auto trunc_Float16x3_name = "trunc"_c;
inline constexpr auto trunc_Float16x3_backend_index = 1740u;

/// trunc with Float16x4
extern Variable trunc_Float16x4_arg;
extern Function trunc_Float16x4;
inline constexpr auto trunc_Float16x4_name = "trunc"_c;
inline constexpr auto trunc_Float16x4_backend_index = 1741u;

/// ddx with Float32
extern Variable ddx_Float32_arg;
extern Function ddx_Float32;
inline constexpr auto ddx_Float32_name = "ddx"_c;
inline constexpr auto ddx_Float32_backend_index = 1742u;

/// ddx with Float32x2
extern Variable ddx_Float32x2_arg;
extern Function ddx_Float32x2;
inline constexpr auto ddx_Float32x2_name = "ddx"_c;
inline constexpr auto ddx_Float32x2_backend_index = 1743u;

/// ddx with Float32x3
extern Variable ddx_Float32x3_arg;
extern Function ddx_Float32x3;
inline constexpr auto ddx_Float32x3_name = "ddx"_c;
inline constexpr auto ddx_Float32x3_backend_index = 1744u;

/// ddx with Float32x4
extern Variable ddx_Float32x4_arg;
extern Function ddx_Float32x4;
inline constexpr auto ddx_Float32x4_name = "ddx"_c;
inline constexpr auto ddx_Float32x4_backend_index = 1745u;

/// ddx with Float16
extern Variable ddx_Float16_arg;
extern Function ddx_Float16;
inline constexpr auto ddx_Float16_name = "ddx"_c;
inline constexpr auto ddx_Float16_backend_index = 1746u;

/// ddx with Float16x2
extern Variable ddx_Float16x2_arg;
extern Function ddx_Float16x2;
inline constexpr auto ddx_Float16x2_name = "ddx"_c;
inline constexpr auto ddx_Float16x2_backend_index = 1747u;

/// ddx with Float16x3
extern Variable ddx_Float16x3_arg;
extern Function ddx_Float16x3;
inline constexpr auto ddx_Float16x3_name = "ddx"_c;
inline constexpr auto ddx_Float16x3_backend_index = 1748u;

/// ddx with Float16x4
extern Variable ddx_Float16x4_arg;
extern Function ddx_Float16x4;
inline constexpr auto ddx_Float16x4_name = "ddx"_c;
inline constexpr auto ddx_Float16x4_backend_index = 1749u;

/// ddy with Float32
extern Variable ddy_Float32_arg;
extern Function ddy_Float32;
inline constexpr auto ddy_Float32_name = "ddy"_c;
inline constexpr auto ddy_Float32_backend_index = 1750u;

/// ddy with Float32x2
extern Variable ddy_Float32x2_arg;
extern Function ddy_Float32x2;
inline constexpr auto ddy_Float32x2_name = "ddy"_c;
inline constexpr auto ddy_Float32x2_backend_index = 1751u;

/// ddy with Float32x3
extern Variable ddy_Float32x3_arg;
extern Function ddy_Float32x3;
inline constexpr auto ddy_Float32x3_name = "ddy"_c;
inline constexpr auto ddy_Float32x3_backend_index = 1752u;

/// ddy with Float32x4
extern Variable ddy_Float32x4_arg;
extern Function ddy_Float32x4;
inline constexpr auto ddy_Float32x4_name = "ddy"_c;
inline constexpr auto ddy_Float32x4_backend_index = 1753u;

/// ddy with Float16
extern Variable ddy_Float16_arg;
extern Function ddy_Float16;
inline constexpr auto ddy_Float16_name = "ddy"_c;
inline constexpr auto ddy_Float16_backend_index = 1754u;

/// ddy with Float16x2
extern Variable ddy_Float16x2_arg;
extern Function ddy_Float16x2;
inline constexpr auto ddy_Float16x2_name = "ddy"_c;
inline constexpr auto ddy_Float16x2_backend_index = 1755u;

/// ddy with Float16x3
extern Variable ddy_Float16x3_arg;
extern Function ddy_Float16x3;
inline constexpr auto ddy_Float16x3_name = "ddy"_c;
inline constexpr auto ddy_Float16x3_backend_index = 1756u;

/// ddy with Float16x4
extern Variable ddy_Float16x4_arg;
extern Function ddy_Float16x4;
inline constexpr auto ddy_Float16x4_name = "ddy"_c;
inline constexpr auto ddy_Float16x4_backend_index = 1757u;

/// fwidth with Float32
extern Variable fwidth_Float32_arg;
extern Function fwidth_Float32;
inline constexpr auto fwidth_Float32_name = "fwidth"_c;
inline constexpr auto fwidth_Float32_backend_index = 1758u;

/// fwidth with Float32x2
extern Variable fwidth_Float32x2_arg;
extern Function fwidth_Float32x2;
inline constexpr auto fwidth_Float32x2_name = "fwidth"_c;
inline constexpr auto fwidth_Float32x2_backend_index = 1759u;

/// fwidth with Float32x3
extern Variable fwidth_Float32x3_arg;
extern Function fwidth_Float32x3;
inline constexpr auto fwidth_Float32x3_name = "fwidth"_c;
inline constexpr auto fwidth_Float32x3_backend_index = 1760u;

/// fwidth with Float32x4
extern Variable fwidth_Float32x4_arg;
extern Function fwidth_Float32x4;
inline constexpr auto fwidth_Float32x4_name = "fwidth"_c;
inline constexpr auto fwidth_Float32x4_backend_index = 1761u;

/// fwidth with Float16
extern Variable fwidth_Float16_arg;
extern Function fwidth_Float16;
inline constexpr auto fwidth_Float16_name = "fwidth"_c;
inline constexpr auto fwidth_Float16_backend_index = 1762u;

/// fwidth with Float16x2
extern Variable fwidth_Float16x2_arg;
extern Function fwidth_Float16x2;
inline constexpr auto fwidth_Float16x2_name = "fwidth"_c;
inline constexpr auto fwidth_Float16x2_backend_index = 1763u;

/// fwidth with Float16x3
extern Variable fwidth_Float16x3_arg;
extern Function fwidth_Float16x3;
inline constexpr auto fwidth_Float16x3_name = "fwidth"_c;
inline constexpr auto fwidth_Float16x3_backend_index = 1764u;

/// fwidth with Float16x4
extern Variable fwidth_Float16x4_arg;
extern Function fwidth_Float16x4;
inline constexpr auto fwidth_Float16x4_name = "fwidth"_c;
inline constexpr auto fwidth_Float16x4_backend_index = 1765u;

/// sign with Int32
extern Variable sign_Int32_arg;
extern Function sign_Int32;
inline constexpr auto sign_Int32_name = "sign"_c;
inline constexpr auto sign_Int32_backend_index = 1766u;

/// sign with Int32x2
extern Variable sign_Int32x2_arg;
extern Function sign_Int32x2;
inline constexpr auto sign_Int32x2_name = "sign"_c;
inline constexpr auto sign_Int32x2_backend_index = 1767u;

/// sign with Int32x3
extern Variable sign_Int32x3_arg;
extern Function sign_Int32x3;
inline constexpr auto sign_Int32x3_name = "sign"_c;
inline constexpr auto sign_Int32x3_backend_index = 1768u;

/// sign with Int32x4
extern Variable sign_Int32x4_arg;
extern Function sign_Int32x4;
inline constexpr auto sign_Int32x4_name = "sign"_c;
inline constexpr auto sign_Int32x4_backend_index = 1769u;

/// sign with Int16
extern Variable sign_Int16_arg;
extern Function sign_Int16;
inline constexpr auto sign_Int16_name = "sign"_c;
inline constexpr auto sign_Int16_backend_index = 1770u;

/// sign with Int16x2
extern Variable sign_Int16x2_arg;
extern Function sign_Int16x2;
inline constexpr auto sign_Int16x2_name = "sign"_c;
inline constexpr auto sign_Int16x2_backend_index = 1771u;

/// sign with Int16x3
extern Variable sign_Int16x3_arg;
extern Function sign_Int16x3;
inline constexpr auto sign_Int16x3_name = "sign"_c;
inline constexpr auto sign_Int16x3_backend_index = 1772u;

/// sign with Int16x4
extern Variable sign_Int16x4_arg;
extern Function sign_Int16x4;
inline constexpr auto sign_Int16x4_name = "sign"_c;
inline constexpr auto sign_Int16x4_backend_index = 1773u;

/// sign with Float32
extern Variable sign_Float32_arg;
extern Function sign_Float32;
inline constexpr auto sign_Float32_name = "sign"_c;
inline constexpr auto sign_Float32_backend_index = 1774u;

/// sign with Float32x2
extern Variable sign_Float32x2_arg;
extern Function sign_Float32x2;
inline constexpr auto sign_Float32x2_name = "sign"_c;
inline constexpr auto sign_Float32x2_backend_index = 1775u;

/// sign with Float32x3
extern Variable sign_Float32x3_arg;
extern Function sign_Float32x3;
inline constexpr auto sign_Float32x3_name = "sign"_c;
inline constexpr auto sign_Float32x3_backend_index = 1776u;

/// sign with Float32x4
extern Variable sign_Float32x4_arg;
extern Function sign_Float32x4;
inline constexpr auto sign_Float32x4_name = "sign"_c;
inline constexpr auto sign_Float32x4_backend_index = 1777u;

/// sign with Float16
extern Variable sign_Float16_arg;
extern Function sign_Float16;
inline constexpr auto sign_Float16_name = "sign"_c;
inline constexpr auto sign_Float16_backend_index = 1778u;

/// sign with Float16x2
extern Variable sign_Float16x2_arg;
extern Function sign_Float16x2;
inline constexpr auto sign_Float16x2_name = "sign"_c;
inline constexpr auto sign_Float16x2_backend_index = 1779u;

/// sign with Float16x3
extern Variable sign_Float16x3_arg;
extern Function sign_Float16x3;
inline constexpr auto sign_Float16x3_name = "sign"_c;
inline constexpr auto sign_Float16x3_backend_index = 1780u;

/// sign with Float16x4
extern Variable sign_Float16x4_arg;
extern Function sign_Float16x4;
inline constexpr auto sign_Float16x4_name = "sign"_c;
inline constexpr auto sign_Float16x4_backend_index = 1781u;

/// abs with Int32
extern Variable abs_Int32_arg;
extern Function abs_Int32;
inline constexpr auto abs_Int32_name = "abs"_c;
inline constexpr auto abs_Int32_backend_index = 1782u;

/// abs with Int32x2
extern Variable abs_Int32x2_arg;
extern Function abs_Int32x2;
inline constexpr auto abs_Int32x2_name = "abs"_c;
inline constexpr auto abs_Int32x2_backend_index = 1783u;

/// abs with Int32x3
extern Variable abs_Int32x3_arg;
extern Function abs_Int32x3;
inline constexpr auto abs_Int32x3_name = "abs"_c;
inline constexpr auto abs_Int32x3_backend_index = 1784u;

/// abs with Int32x4
extern Variable abs_Int32x4_arg;
extern Function abs_Int32x4;
inline constexpr auto abs_Int32x4_name = "abs"_c;
inline constexpr auto abs_Int32x4_backend_index = 1785u;

/// abs with Int16
extern Variable abs_Int16_arg;
extern Function abs_Int16;
inline constexpr auto abs_Int16_name = "abs"_c;
inline constexpr auto abs_Int16_backend_index = 1786u;

/// abs with Int16x2
extern Variable abs_Int16x2_arg;
extern Function abs_Int16x2;
inline constexpr auto abs_Int16x2_name = "abs"_c;
inline constexpr auto abs_Int16x2_backend_index = 1787u;

/// abs with Int16x3
extern Variable abs_Int16x3_arg;
extern Function abs_Int16x3;
inline constexpr auto abs_Int16x3_name = "abs"_c;
inline constexpr auto abs_Int16x3_backend_index = 1788u;

/// abs with Int16x4
extern Variable abs_Int16x4_arg;
extern Function abs_Int16x4;
inline constexpr auto abs_Int16x4_name = "abs"_c;
inline constexpr auto abs_Int16x4_backend_index = 1789u;

/// abs with Float32
extern Variable abs_Float32_arg;
extern Function abs_Float32;
inline constexpr auto abs_Float32_name = "abs"_c;
inline constexpr auto abs_Float32_backend_index = 1790u;

/// abs with Float32x2
extern Variable abs_Float32x2_arg;
extern Function abs_Float32x2;
inline constexpr auto abs_Float32x2_name = "abs"_c;
inline constexpr auto abs_Float32x2_backend_index = 1791u;

/// abs with Float32x3
extern Variable abs_Float32x3_arg;
extern Function abs_Float32x3;
inline constexpr auto abs_Float32x3_name = "abs"_c;
inline constexpr auto abs_Float32x3_backend_index = 1792u;

/// abs with Float32x4
extern Variable abs_Float32x4_arg;
extern Function abs_Float32x4;
inline constexpr auto abs_Float32x4_name = "abs"_c;
inline constexpr auto abs_Float32x4_backend_index = 1793u;

/// abs with Float16
extern Variable abs_Float16_arg;
extern Function abs_Float16;
inline constexpr auto abs_Float16_name = "abs"_c;
inline constexpr auto abs_Float16_backend_index = 1794u;

/// abs with Float16x2
extern Variable abs_Float16x2_arg;
extern Function abs_Float16x2;
inline constexpr auto abs_Float16x2_name = "abs"_c;
inline constexpr auto abs_Float16x2_backend_index = 1795u;

/// abs with Float16x3
extern Variable abs_Float16x3_arg;
extern Function abs_Float16x3;
inline constexpr auto abs_Float16x3_name = "abs"_c;
inline constexpr auto abs_Float16x3_backend_index = 1796u;

/// abs with Float16x4
extern Variable abs_Float16x4_arg;
extern Function abs_Float16x4;
inline constexpr auto abs_Float16x4_name = "abs"_c;
inline constexpr auto abs_Float16x4_backend_index = 1797u;

/// castToF16 with UInt16
extern Variable castToF16_UInt16_arg;
extern Function castToF16_UInt16;
inline constexpr auto castToF16_UInt16_name = "castToF16"_c;
inline constexpr auto castToF16_UInt16_backend_index = 1798u;

/// castToF16 with Int16
extern Variable castToF16_Int16_arg;
extern Function castToF16_Int16;
inline constexpr auto castToF16_Int16_name = "castToF16"_c;
inline constexpr auto castToF16_Int16_backend_index = 1799u;

/// castToU16 with Float16
extern Variable castToU16_Float16_arg;
extern Function castToU16_Float16;
inline constexpr auto castToU16_Float16_name = "castToU16"_c;
inline constexpr auto castToU16_Float16_backend_index = 1800u;

/// castToU16 with Int16
extern Variable castToU16_Int16_arg;
extern Function castToU16_Int16;
inline constexpr auto castToU16_Int16_name = "castToU16"_c;
inline constexpr auto castToU16_Int16_backend_index = 1801u;

/// castToI16 with Float16
extern Variable castToI16_Float16_arg;
extern Function castToI16_Float16;
inline constexpr auto castToI16_Float16_name = "castToI16"_c;
inline constexpr auto castToI16_Float16_backend_index = 1802u;

/// castToI16 with UInt16
extern Variable castToI16_UInt16_arg;
extern Function castToI16_UInt16;
inline constexpr auto castToI16_UInt16_name = "castToI16"_c;
inline constexpr auto castToI16_UInt16_backend_index = 1803u;

/// castToF32 with UInt32
extern Variable castToF32_UInt32_arg;
extern Function castToF32_UInt32;
inline constexpr auto castToF32_UInt32_name = "castToF32"_c;
inline constexpr auto castToF32_UInt32_backend_index = 1804u;

/// castToF32 with Int32
extern Variable castToF32_Int32_arg;
extern Function castToF32_Int32;
inline constexpr auto castToF32_Int32_name = "castToF32"_c;
inline constexpr auto castToF32_Int32_backend_index = 1805u;

/// castToU32 with Float32
extern Variable castToU32_Float32_arg;
extern Function castToU32_Float32;
inline constexpr auto castToU32_Float32_name = "castToU32"_c;
inline constexpr auto castToU32_Float32_backend_index = 1806u;

/// castToU32 with Int32
extern Variable castToU32_Int32_arg;
extern Function castToU32_Int32;
inline constexpr auto castToU32_Int32_name = "castToU32"_c;
inline constexpr auto castToU32_Int32_backend_index = 1807u;

/// castToI32 with Float32
extern Variable castToI32_Float32_arg;
extern Function castToI32_Float32;
inline constexpr auto castToI32_Float32_name = "castToI32"_c;
inline constexpr auto castToI32_Float32_backend_index = 1808u;

/// castToI32 with UInt32
extern Variable castToI32_UInt32_arg;
extern Function castToI32_UInt32;
inline constexpr auto castToI32_UInt32_name = "castToI32"_c;
inline constexpr auto castToI32_UInt32_backend_index = 1809u;

/// any with Bool8
extern Variable any_Bool8_arg;
extern Function any_Bool8;
inline constexpr auto any_Bool8_name = "any"_c;
inline constexpr auto any_Bool8_backend_index = 1810u;

/// any with Bool8x2
extern Variable any_Bool8x2_arg;
extern Function any_Bool8x2;
inline constexpr auto any_Bool8x2_name = "any"_c;
inline constexpr auto any_Bool8x2_backend_index = 1811u;

/// any with Bool8x3
extern Variable any_Bool8x3_arg;
extern Function any_Bool8x3;
inline constexpr auto any_Bool8x3_name = "any"_c;
inline constexpr auto any_Bool8x3_backend_index = 1812u;

/// any with Bool8x4
extern Variable any_Bool8x4_arg;
extern Function any_Bool8x4;
inline constexpr auto any_Bool8x4_name = "any"_c;
inline constexpr auto any_Bool8x4_backend_index = 1813u;

/// all with Bool8
extern Variable all_Bool8_arg;
extern Function all_Bool8;
inline constexpr auto all_Bool8_name = "all"_c;
inline constexpr auto all_Bool8_backend_index = 1814u;

/// all with Bool8x2
extern Variable all_Bool8x2_arg;
extern Function all_Bool8x2;
inline constexpr auto all_Bool8x2_name = "all"_c;
inline constexpr auto all_Bool8x2_backend_index = 1815u;

/// all with Bool8x3
extern Variable all_Bool8x3_arg;
extern Function all_Bool8x3;
inline constexpr auto all_Bool8x3_name = "all"_c;
inline constexpr auto all_Bool8x3_backend_index = 1816u;

/// all with Bool8x4
extern Variable all_Bool8x4_arg;
extern Function all_Bool8x4;
inline constexpr auto all_Bool8x4_name = "all"_c;
inline constexpr auto all_Bool8x4_backend_index = 1817u;

/// transpose with Float32x2x2
extern Variable transpose_Float32x2x2_arg;
extern Function transpose_Float32x2x2;
inline constexpr auto transpose_Float32x2x2_name = "transpose"_c;
inline constexpr auto transpose_Float32x2x2_backend_index = 1818u;

/// transpose with Float16x2x2
extern Variable transpose_Float16x2x2_arg;
extern Function transpose_Float16x2x2;
inline constexpr auto transpose_Float16x2x2_name = "transpose"_c;
inline constexpr auto transpose_Float16x2x2_backend_index = 1819u;

/// transpose with Float32x2x3
extern Variable transpose_Float32x2x3_arg;
extern Function transpose_Float32x2x3;
inline constexpr auto transpose_Float32x2x3_name = "transpose"_c;
inline constexpr auto transpose_Float32x2x3_backend_index = 1820u;

/// transpose with Float16x2x3
extern Variable transpose_Float16x2x3_arg;
extern Function transpose_Float16x2x3;
inline constexpr auto transpose_Float16x2x3_name = "transpose"_c;
inline constexpr auto transpose_Float16x2x3_backend_index = 1821u;

/// transpose with Float32x2x4
extern Variable transpose_Float32x2x4_arg;
extern Function transpose_Float32x2x4;
inline constexpr auto transpose_Float32x2x4_name = "transpose"_c;
inline constexpr auto transpose_Float32x2x4_backend_index = 1822u;

/// transpose with Float16x2x4
extern Variable transpose_Float16x2x4_arg;
extern Function transpose_Float16x2x4;
inline constexpr auto transpose_Float16x2x4_name = "transpose"_c;
inline constexpr auto transpose_Float16x2x4_backend_index = 1823u;

/// transpose with Float32x3x2
extern Variable transpose_Float32x3x2_arg;
extern Function transpose_Float32x3x2;
inline constexpr auto transpose_Float32x3x2_name = "transpose"_c;
inline constexpr auto transpose_Float32x3x2_backend_index = 1824u;

/// transpose with Float16x3x2
extern Variable transpose_Float16x3x2_arg;
extern Function transpose_Float16x3x2;
inline constexpr auto transpose_Float16x3x2_name = "transpose"_c;
inline constexpr auto transpose_Float16x3x2_backend_index = 1825u;

/// transpose with Float32x3x3
extern Variable transpose_Float32x3x3_arg;
extern Function transpose_Float32x3x3;
inline constexpr auto transpose_Float32x3x3_name = "transpose"_c;
inline constexpr auto transpose_Float32x3x3_backend_index = 1826u;

/// transpose with Float16x3x3
extern Variable transpose_Float16x3x3_arg;
extern Function transpose_Float16x3x3;
inline constexpr auto transpose_Float16x3x3_name = "transpose"_c;
inline constexpr auto transpose_Float16x3x3_backend_index = 1827u;

/// transpose with Float32x3x4
extern Variable transpose_Float32x3x4_arg;
extern Function transpose_Float32x3x4;
inline constexpr auto transpose_Float32x3x4_name = "transpose"_c;
inline constexpr auto transpose_Float32x3x4_backend_index = 1828u;

/// transpose with Float16x3x4
extern Variable transpose_Float16x3x4_arg;
extern Function transpose_Float16x3x4;
inline constexpr auto transpose_Float16x3x4_name = "transpose"_c;
inline constexpr auto transpose_Float16x3x4_backend_index = 1829u;

/// transpose with Float32x4x2
extern Variable transpose_Float32x4x2_arg;
extern Function transpose_Float32x4x2;
inline constexpr auto transpose_Float32x4x2_name = "transpose"_c;
inline constexpr auto transpose_Float32x4x2_backend_index = 1830u;

/// transpose with Float16x4x2
extern Variable transpose_Float16x4x2_arg;
extern Function transpose_Float16x4x2;
inline constexpr auto transpose_Float16x4x2_name = "transpose"_c;
inline constexpr auto transpose_Float16x4x2_backend_index = 1831u;

/// transpose with Float32x4x3
extern Variable transpose_Float32x4x3_arg;
extern Function transpose_Float32x4x3;
inline constexpr auto transpose_Float32x4x3_name = "transpose"_c;
inline constexpr auto transpose_Float32x4x3_backend_index = 1832u;

/// transpose with Float16x4x3
extern Variable transpose_Float16x4x3_arg;
extern Function transpose_Float16x4x3;
inline constexpr auto transpose_Float16x4x3_name = "transpose"_c;
inline constexpr auto transpose_Float16x4x3_backend_index = 1833u;

/// transpose with Float32x4x4
extern Variable transpose_Float32x4x4_arg;
extern Function transpose_Float32x4x4;
inline constexpr auto transpose_Float32x4x4_name = "transpose"_c;
inline constexpr auto transpose_Float32x4x4_backend_index = 1834u;

/// transpose with Float16x4x4
extern Variable transpose_Float16x4x4_arg;
extern Function transpose_Float16x4x4;
inline constexpr auto transpose_Float16x4x4_name = "transpose"_c;
inline constexpr auto transpose_Float16x4x4_backend_index = 1835u;

/// inverse with Float32x2x2
extern Variable inverse_Float32x2x2_arg;
extern Function inverse_Float32x2x2;
inline constexpr auto inverse_Float32x2x2_name = "inverse"_c;
inline constexpr auto inverse_Float32x2x2_backend_index = 1836u;

/// inverse with Float16x2x2
extern Variable inverse_Float16x2x2_arg;
extern Function inverse_Float16x2x2;
inline constexpr auto inverse_Float16x2x2_name = "inverse"_c;
inline constexpr auto inverse_Float16x2x2_backend_index = 1837u;

/// inverse with Float32x2x3
extern Variable inverse_Float32x2x3_arg;
extern Function inverse_Float32x2x3;
inline constexpr auto inverse_Float32x2x3_name = "inverse"_c;
inline constexpr auto inverse_Float32x2x3_backend_index = 1838u;

/// inverse with Float16x2x3
extern Variable inverse_Float16x2x3_arg;
extern Function inverse_Float16x2x3;
inline constexpr auto inverse_Float16x2x3_name = "inverse"_c;
inline constexpr auto inverse_Float16x2x3_backend_index = 1839u;

/// inverse with Float32x2x4
extern Variable inverse_Float32x2x4_arg;
extern Function inverse_Float32x2x4;
inline constexpr auto inverse_Float32x2x4_name = "inverse"_c;
inline constexpr auto inverse_Float32x2x4_backend_index = 1840u;

/// inverse with Float16x2x4
extern Variable inverse_Float16x2x4_arg;
extern Function inverse_Float16x2x4;
inline constexpr auto inverse_Float16x2x4_name = "inverse"_c;
inline constexpr auto inverse_Float16x2x4_backend_index = 1841u;

/// inverse with Float32x3x2
extern Variable inverse_Float32x3x2_arg;
extern Function inverse_Float32x3x2;
inline constexpr auto inverse_Float32x3x2_name = "inverse"_c;
inline constexpr auto inverse_Float32x3x2_backend_index = 1842u;

/// inverse with Float16x3x2
extern Variable inverse_Float16x3x2_arg;
extern Function inverse_Float16x3x2;
inline constexpr auto inverse_Float16x3x2_name = "inverse"_c;
inline constexpr auto inverse_Float16x3x2_backend_index = 1843u;

/// inverse with Float32x3x3
extern Variable inverse_Float32x3x3_arg;
extern Function inverse_Float32x3x3;
inline constexpr auto inverse_Float32x3x3_name = "inverse"_c;
inline constexpr auto inverse_Float32x3x3_backend_index = 1844u;

/// inverse with Float16x3x3
extern Variable inverse_Float16x3x3_arg;
extern Function inverse_Float16x3x3;
inline constexpr auto inverse_Float16x3x3_name = "inverse"_c;
inline constexpr auto inverse_Float16x3x3_backend_index = 1845u;

/// inverse with Float32x3x4
extern Variable inverse_Float32x3x4_arg;
extern Function inverse_Float32x3x4;
inline constexpr auto inverse_Float32x3x4_name = "inverse"_c;
inline constexpr auto inverse_Float32x3x4_backend_index = 1846u;

/// inverse with Float16x3x4
extern Variable inverse_Float16x3x4_arg;
extern Function inverse_Float16x3x4;
inline constexpr auto inverse_Float16x3x4_name = "inverse"_c;
inline constexpr auto inverse_Float16x3x4_backend_index = 1847u;

/// inverse with Float32x4x2
extern Variable inverse_Float32x4x2_arg;
extern Function inverse_Float32x4x2;
inline constexpr auto inverse_Float32x4x2_name = "inverse"_c;
inline constexpr auto inverse_Float32x4x2_backend_index = 1848u;

/// inverse with Float16x4x2
extern Variable inverse_Float16x4x2_arg;
extern Function inverse_Float16x4x2;
inline constexpr auto inverse_Float16x4x2_name = "inverse"_c;
inline constexpr auto inverse_Float16x4x2_backend_index = 1849u;

/// inverse with Float32x4x3
extern Variable inverse_Float32x4x3_arg;
extern Function inverse_Float32x4x3;
inline constexpr auto inverse_Float32x4x3_name = "inverse"_c;
inline constexpr auto inverse_Float32x4x3_backend_index = 1850u;

/// inverse with Float16x4x3
extern Variable inverse_Float16x4x3_arg;
extern Function inverse_Float16x4x3;
inline constexpr auto inverse_Float16x4x3_name = "inverse"_c;
inline constexpr auto inverse_Float16x4x3_backend_index = 1851u;

/// inverse with Float32x4x4
extern Variable inverse_Float32x4x4_arg;
extern Function inverse_Float32x4x4;
inline constexpr auto inverse_Float32x4x4_name = "inverse"_c;
inline constexpr auto inverse_Float32x4x4_backend_index = 1852u;

/// inverse with Float16x4x4
extern Variable inverse_Float16x4x4_arg;
extern Function inverse_Float16x4x4;
inline constexpr auto inverse_Float16x4x4_name = "inverse"_c;
inline constexpr auto inverse_Float16x4x4_backend_index = 1853u;

/// vertexGetOutputLayer
extern Function VertexGetOutputLayer;
inline constexpr auto VertexGetOutputLayer_name = "vertexGetOutputLayer"_c;
inline constexpr auto VertexGetOutputLayer_backend_index = 1854u;

/// vertexGetOutputViewport
extern Function VertexGetOutputViewport;
inline constexpr auto VertexGetOutputViewport_name = "vertexGetOutputViewport"_c;
inline constexpr auto VertexGetOutputViewport_backend_index = 1855u;

/// vertexGetIndex
extern Function VertexGetIndex;
inline constexpr auto VertexGetIndex_name = "vertexGetIndex"_c;
inline constexpr auto VertexGetIndex_backend_index = 1856u;

/// vertexGetInstanceIndex
extern Function VertexGetInstanceIndex;
inline constexpr auto VertexGetInstanceIndex_name = "vertexGetInstanceIndex"_c;
inline constexpr auto VertexGetInstanceIndex_backend_index = 1857u;

/// vertexGetBaseIndex
extern Function VertexGetBaseIndex;
inline constexpr auto VertexGetBaseIndex_name = "vertexGetBaseIndex"_c;
inline constexpr auto VertexGetBaseIndex_backend_index = 1858u;

/// vertexGetBaseInstanceIndex
extern Function VertexGetBaseInstanceIndex;
inline constexpr auto VertexGetBaseInstanceIndex_name = "vertexGetBaseInstanceIndex"_c;
inline constexpr auto VertexGetBaseInstanceIndex_backend_index = 1859u;

/// vertexGetDrawIndex
extern Function VertexGetDrawIndex;
inline constexpr auto VertexGetDrawIndex_name = "vertexGetDrawIndex"_c;
inline constexpr auto VertexGetDrawIndex_backend_index = 1860u;

/// vertexSetOutputLayer with UInt16
extern Variable VertexSetOutputLayer_UInt16_arg;
extern Function VertexSetOutputLayer_UInt16;
inline constexpr auto VertexSetOutputLayer_UInt16_name = "vertexSetOutputLayer"_c;
inline constexpr auto VertexSetOutputLayer_UInt16_backend_index = 1861u;

/// vertexSetOutputLayer with UInt32
extern Variable VertexSetOutputLayer_UInt32_arg;
extern Function VertexSetOutputLayer_UInt32;
inline constexpr auto VertexSetOutputLayer_UInt32_name = "vertexSetOutputLayer"_c;
inline constexpr auto VertexSetOutputLayer_UInt32_backend_index = 1862u;

/// vertexSetOutputViewport with UInt16
extern Variable VertexSetOutputViewport_UInt16_arg;
extern Function VertexSetOutputViewport_UInt16;
inline constexpr auto VertexSetOutputViewport_UInt16_name = "vertexSetOutputViewport"_c;
inline constexpr auto VertexSetOutputViewport_UInt16_backend_index = 1863u;

/// vertexSetOutputViewport with UInt32
extern Variable VertexSetOutputViewport_UInt32_arg;
extern Function VertexSetOutputViewport_UInt32;
inline constexpr auto VertexSetOutputViewport_UInt32_name = "vertexSetOutputViewport"_c;
inline constexpr auto VertexSetOutputViewport_UInt32_backend_index = 1864u;

/// vertexExportCoordinates with Float32x4
extern Variable VertexExportCoordinates_Float32x4_arg;
extern Function VertexExportCoordinates_Float32x4;
inline constexpr auto VertexExportCoordinates_Float32x4_name = "vertexExportCoordinates"_c;
inline constexpr auto VertexExportCoordinates_Float32x4_backend_index = 1865u;

/// vertexExportCoordinates with Float16x4
extern Variable VertexExportCoordinates_Float16x4_arg;
extern Function VertexExportCoordinates_Float16x4;
inline constexpr auto VertexExportCoordinates_Float16x4_name = "vertexExportCoordinates"_c;
inline constexpr auto VertexExportCoordinates_Float16x4_backend_index = 1866u;

/// geometryExportPrimitiveIndex with UInt32
extern Variable GeometryExportPrimitiveIndex_arg;
extern Function GeometryExportPrimitiveIndex;
inline constexpr auto GeometryExportPrimitiveIndex_name = "geometryExportPrimitiveIndex"_c;
inline constexpr auto GeometryExportPrimitiveIndex_backend_index = 1867u;

/// hullGetPrimitiveIndex with UInt32
extern Variable HullGetPrimitiveIndex_arg;
extern Function HullGetPrimitiveIndex;
inline constexpr auto HullGetPrimitiveIndex_name = "hullGetPrimitiveIndex"_c;
inline constexpr auto HullGetPrimitiveIndex_backend_index = 1868u;

/// domainGetPrimitiveIndex with UInt32
extern Variable DomainGetPrimitiveIndex_arg;
extern Function DomainGetPrimitiveIndex;
inline constexpr auto DomainGetPrimitiveIndex_name = "domainGetPrimitiveIndex"_c;
inline constexpr auto DomainGetPrimitiveIndex_backend_index = 1869u;

/// pixelGetPrimitiveIndex with UInt32
extern Variable PixelGetPrimitiveIndex_arg;
extern Function PixelGetPrimitiveIndex;
inline constexpr auto PixelGetPrimitiveIndex_name = "pixelGetPrimitiveIndex"_c;
inline constexpr auto PixelGetPrimitiveIndex_backend_index = 1870u;

/// geometryGetInvocationIndex
extern Function GeometryGetInvocationIndex;
inline constexpr auto GeometryGetInvocationIndex_name = "geometryGetInvocationIndex"_c;
inline constexpr auto GeometryGetInvocationIndex_backend_index = 1871u;

/// geometryExportVertex with Float32x4
extern Variable GeometryExportVertex_Float32x4_arg;
extern Function GeometryExportVertex_Float32x4;
inline constexpr auto GeometryExportVertex_Float32x4_name = "geometryExportVertex"_c;
inline constexpr auto GeometryExportVertex_Float32x4_backend_index = 1872u;

/// geometryExportVertex with Float16x4
extern Variable GeometryExportVertex_Float16x4_arg;
extern Function GeometryExportVertex_Float16x4;
inline constexpr auto GeometryExportVertex_Float16x4_name = "geometryExportVertex"_c;
inline constexpr auto GeometryExportVertex_Float16x4_backend_index = 1873u;

/// geometryExportPrimitive
extern Function GeometryExportPrimitive;
inline constexpr auto GeometryExportPrimitive_name = "geometryExportPrimitive"_c;
inline constexpr auto GeometryExportPrimitive_backend_index = 1874u;

/// hullExportOuterTessellationLevel with Float32x4
extern Variable HullExportOuterTessellationLevel_arg;
extern Function HullExportOuterTessellationLevel;
inline constexpr auto HullExportOuterTessellationLevel_name = "hullExportOuterTessellationLevel"_c;
inline constexpr auto HullExportOuterTessellationLevel_backend_index = 1875u;

/// hullExportInnerTessellationLevel with Float32x2
extern Variable HullExportInnerTessellationLevel_arg;
extern Function HullExportInnerTessellationLevel;
inline constexpr auto HullExportInnerTessellationLevel_name = "hullExportInnerTessellationLevel"_c;
inline constexpr auto HullExportInnerTessellationLevel_backend_index = 1876u;

/// domainGetTessellationCoordinates
extern Function DomainGetTessellationCoordinates;
inline constexpr auto DomainGetTessellationCoordinates_name = "domainGetTessellationCoordinates"_c;
inline constexpr auto DomainGetTessellationCoordinates_backend_index = 1877u;

/// domainGetInvocationIndex
extern Function DomainGetInvocationIndex;
inline constexpr auto DomainGetInvocationIndex_name = "domainGetInvocationIndex"_c;
inline constexpr auto DomainGetInvocationIndex_backend_index = 1878u;

/// geometryGetPoint
extern Function GeometryGetPoint;
inline constexpr auto GeometryGetPoint_name = "geometryGetPoint"_c;
inline constexpr auto GeometryGetPoint_backend_index = 1879u;

/// geometryGetLine
extern Function GeometryGetLine;
inline constexpr auto GeometryGetLine_name = "geometryGetLine"_c;
inline constexpr auto GeometryGetLine_backend_index = 1880u;

/// geometryGetTriangle
extern Function GeometryGetTriangle;
inline constexpr auto GeometryGetTriangle_name = "geometryGetTriangle"_c;
inline constexpr auto GeometryGetTriangle_backend_index = 1881u;

/// pixelGetCoordinates
extern Function PixelGetCoordinates_Float32x4;
inline constexpr auto PixelGetCoordinates_Float32x4_name = "pixelGetCoordinates"_c;
inline constexpr auto PixelGetCoordinates_Float32x4_backend_index = 1882u;

/// pixelGetCoordinates
extern Function PixelGetCoordinates_Float16x4;
inline constexpr auto PixelGetCoordinates_Float16x4_name = "pixelGetCoordinates"_c;
inline constexpr auto PixelGetCoordinates_Float16x4_backend_index = 1883u;

/// pixelGetFrontFacing
extern Function PixelGetFrontFacing;
inline constexpr auto PixelGetFrontFacing_name = "pixelGetFrontFacing"_c;
inline constexpr auto PixelGetFrontFacing_backend_index = 1884u;

/// pixelGetDepth
extern Function PixelGetDepth;
inline constexpr auto PixelGetDepth_name = "pixelGetDepth"_c;
inline constexpr auto PixelGetDepth_backend_index = 1885u;

/// pixelSetDepth with Float32
extern Variable PixelSetDepth_val;
extern Function PixelSetDepth;
inline constexpr auto PixelSetDepth_name = "pixelSetDepth"_c;
inline constexpr auto PixelSetDepth_backend_index = 1886u;

/// pixelExportColor with Float32, Int32
extern Variable PixelExportColor_Float32_Int32_color;
extern Variable PixelExportColor_Float32_Int32_index;
extern Function PixelExportColor_Float32_Int32;
inline constexpr auto PixelExportColor_Float32_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32_Int32_backend_index = 1887u;

/// pixelExportColor with Float32, UInt32
extern Variable PixelExportColor_Float32_UInt32_color;
extern Variable PixelExportColor_Float32_UInt32_index;
extern Function PixelExportColor_Float32_UInt32;
inline constexpr auto PixelExportColor_Float32_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32_UInt32_backend_index = 1888u;

/// pixelExportColor with Float32, Int16
extern Variable PixelExportColor_Float32_Int16_color;
extern Variable PixelExportColor_Float32_Int16_index;
extern Function PixelExportColor_Float32_Int16;
inline constexpr auto PixelExportColor_Float32_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32_Int16_backend_index = 1889u;

/// pixelExportColor with Float32, UInt16
extern Variable PixelExportColor_Float32_UInt16_color;
extern Variable PixelExportColor_Float32_UInt16_index;
extern Function PixelExportColor_Float32_UInt16;
inline constexpr auto PixelExportColor_Float32_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32_UInt16_backend_index = 1890u;

/// pixelExportColor with Float32x2, Int32
extern Variable PixelExportColor_Float32x2_Int32_color;
extern Variable PixelExportColor_Float32x2_Int32_index;
extern Function PixelExportColor_Float32x2_Int32;
inline constexpr auto PixelExportColor_Float32x2_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32x2_Int32_backend_index = 1891u;

/// pixelExportColor with Float32x2, UInt32
extern Variable PixelExportColor_Float32x2_UInt32_color;
extern Variable PixelExportColor_Float32x2_UInt32_index;
extern Function PixelExportColor_Float32x2_UInt32;
inline constexpr auto PixelExportColor_Float32x2_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32x2_UInt32_backend_index = 1892u;

/// pixelExportColor with Float32x2, Int16
extern Variable PixelExportColor_Float32x2_Int16_color;
extern Variable PixelExportColor_Float32x2_Int16_index;
extern Function PixelExportColor_Float32x2_Int16;
inline constexpr auto PixelExportColor_Float32x2_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32x2_Int16_backend_index = 1893u;

/// pixelExportColor with Float32x2, UInt16
extern Variable PixelExportColor_Float32x2_UInt16_color;
extern Variable PixelExportColor_Float32x2_UInt16_index;
extern Function PixelExportColor_Float32x2_UInt16;
inline constexpr auto PixelExportColor_Float32x2_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32x2_UInt16_backend_index = 1894u;

/// pixelExportColor with Float32x3, Int32
extern Variable PixelExportColor_Float32x3_Int32_color;
extern Variable PixelExportColor_Float32x3_Int32_index;
extern Function PixelExportColor_Float32x3_Int32;
inline constexpr auto PixelExportColor_Float32x3_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32x3_Int32_backend_index = 1895u;

/// pixelExportColor with Float32x3, UInt32
extern Variable PixelExportColor_Float32x3_UInt32_color;
extern Variable PixelExportColor_Float32x3_UInt32_index;
extern Function PixelExportColor_Float32x3_UInt32;
inline constexpr auto PixelExportColor_Float32x3_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32x3_UInt32_backend_index = 1896u;

/// pixelExportColor with Float32x3, Int16
extern Variable PixelExportColor_Float32x3_Int16_color;
extern Variable PixelExportColor_Float32x3_Int16_index;
extern Function PixelExportColor_Float32x3_Int16;
inline constexpr auto PixelExportColor_Float32x3_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32x3_Int16_backend_index = 1897u;

/// pixelExportColor with Float32x3, UInt16
extern Variable PixelExportColor_Float32x3_UInt16_color;
extern Variable PixelExportColor_Float32x3_UInt16_index;
extern Function PixelExportColor_Float32x3_UInt16;
inline constexpr auto PixelExportColor_Float32x3_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32x3_UInt16_backend_index = 1898u;

/// pixelExportColor with Float32x4, Int32
extern Variable PixelExportColor_Float32x4_Int32_color;
extern Variable PixelExportColor_Float32x4_Int32_index;
extern Function PixelExportColor_Float32x4_Int32;
inline constexpr auto PixelExportColor_Float32x4_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32x4_Int32_backend_index = 1899u;

/// pixelExportColor with Float32x4, UInt32
extern Variable PixelExportColor_Float32x4_UInt32_color;
extern Variable PixelExportColor_Float32x4_UInt32_index;
extern Function PixelExportColor_Float32x4_UInt32;
inline constexpr auto PixelExportColor_Float32x4_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32x4_UInt32_backend_index = 1900u;

/// pixelExportColor with Float32x4, Int16
extern Variable PixelExportColor_Float32x4_Int16_color;
extern Variable PixelExportColor_Float32x4_Int16_index;
extern Function PixelExportColor_Float32x4_Int16;
inline constexpr auto PixelExportColor_Float32x4_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32x4_Int16_backend_index = 1901u;

/// pixelExportColor with Float32x4, UInt16
extern Variable PixelExportColor_Float32x4_UInt16_color;
extern Variable PixelExportColor_Float32x4_UInt16_index;
extern Function PixelExportColor_Float32x4_UInt16;
inline constexpr auto PixelExportColor_Float32x4_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float32x4_UInt16_backend_index = 1902u;

/// pixelExportColor with Float16, Int32
extern Variable PixelExportColor_Float16_Int32_color;
extern Variable PixelExportColor_Float16_Int32_index;
extern Function PixelExportColor_Float16_Int32;
inline constexpr auto PixelExportColor_Float16_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16_Int32_backend_index = 1903u;

/// pixelExportColor with Float16, UInt32
extern Variable PixelExportColor_Float16_UInt32_color;
extern Variable PixelExportColor_Float16_UInt32_index;
extern Function PixelExportColor_Float16_UInt32;
inline constexpr auto PixelExportColor_Float16_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16_UInt32_backend_index = 1904u;

/// pixelExportColor with Float16, Int16
extern Variable PixelExportColor_Float16_Int16_color;
extern Variable PixelExportColor_Float16_Int16_index;
extern Function PixelExportColor_Float16_Int16;
inline constexpr auto PixelExportColor_Float16_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16_Int16_backend_index = 1905u;

/// pixelExportColor with Float16, UInt16
extern Variable PixelExportColor_Float16_UInt16_color;
extern Variable PixelExportColor_Float16_UInt16_index;
extern Function PixelExportColor_Float16_UInt16;
inline constexpr auto PixelExportColor_Float16_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16_UInt16_backend_index = 1906u;

/// pixelExportColor with Float16x2, Int32
extern Variable PixelExportColor_Float16x2_Int32_color;
extern Variable PixelExportColor_Float16x2_Int32_index;
extern Function PixelExportColor_Float16x2_Int32;
inline constexpr auto PixelExportColor_Float16x2_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16x2_Int32_backend_index = 1907u;

/// pixelExportColor with Float16x2, UInt32
extern Variable PixelExportColor_Float16x2_UInt32_color;
extern Variable PixelExportColor_Float16x2_UInt32_index;
extern Function PixelExportColor_Float16x2_UInt32;
inline constexpr auto PixelExportColor_Float16x2_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16x2_UInt32_backend_index = 1908u;

/// pixelExportColor with Float16x2, Int16
extern Variable PixelExportColor_Float16x2_Int16_color;
extern Variable PixelExportColor_Float16x2_Int16_index;
extern Function PixelExportColor_Float16x2_Int16;
inline constexpr auto PixelExportColor_Float16x2_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16x2_Int16_backend_index = 1909u;

/// pixelExportColor with Float16x2, UInt16
extern Variable PixelExportColor_Float16x2_UInt16_color;
extern Variable PixelExportColor_Float16x2_UInt16_index;
extern Function PixelExportColor_Float16x2_UInt16;
inline constexpr auto PixelExportColor_Float16x2_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16x2_UInt16_backend_index = 1910u;

/// pixelExportColor with Float16x3, Int32
extern Variable PixelExportColor_Float16x3_Int32_color;
extern Variable PixelExportColor_Float16x3_Int32_index;
extern Function PixelExportColor_Float16x3_Int32;
inline constexpr auto PixelExportColor_Float16x3_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16x3_Int32_backend_index = 1911u;

/// pixelExportColor with Float16x3, UInt32
extern Variable PixelExportColor_Float16x3_UInt32_color;
extern Variable PixelExportColor_Float16x3_UInt32_index;
extern Function PixelExportColor_Float16x3_UInt32;
inline constexpr auto PixelExportColor_Float16x3_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16x3_UInt32_backend_index = 1912u;

/// pixelExportColor with Float16x3, Int16
extern Variable PixelExportColor_Float16x3_Int16_color;
extern Variable PixelExportColor_Float16x3_Int16_index;
extern Function PixelExportColor_Float16x3_Int16;
inline constexpr auto PixelExportColor_Float16x3_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16x3_Int16_backend_index = 1913u;

/// pixelExportColor with Float16x3, UInt16
extern Variable PixelExportColor_Float16x3_UInt16_color;
extern Variable PixelExportColor_Float16x3_UInt16_index;
extern Function PixelExportColor_Float16x3_UInt16;
inline constexpr auto PixelExportColor_Float16x3_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16x3_UInt16_backend_index = 1914u;

/// pixelExportColor with Float16x4, Int32
extern Variable PixelExportColor_Float16x4_Int32_color;
extern Variable PixelExportColor_Float16x4_Int32_index;
extern Function PixelExportColor_Float16x4_Int32;
inline constexpr auto PixelExportColor_Float16x4_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16x4_Int32_backend_index = 1915u;

/// pixelExportColor with Float16x4, UInt32
extern Variable PixelExportColor_Float16x4_UInt32_color;
extern Variable PixelExportColor_Float16x4_UInt32_index;
extern Function PixelExportColor_Float16x4_UInt32;
inline constexpr auto PixelExportColor_Float16x4_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16x4_UInt32_backend_index = 1916u;

/// pixelExportColor with Float16x4, Int16
extern Variable PixelExportColor_Float16x4_Int16_color;
extern Variable PixelExportColor_Float16x4_Int16_index;
extern Function PixelExportColor_Float16x4_Int16;
inline constexpr auto PixelExportColor_Float16x4_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16x4_Int16_backend_index = 1917u;

/// pixelExportColor with Float16x4, UInt16
extern Variable PixelExportColor_Float16x4_UInt16_color;
extern Variable PixelExportColor_Float16x4_UInt16_index;
extern Function PixelExportColor_Float16x4_UInt16;
inline constexpr auto PixelExportColor_Float16x4_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Float16x4_UInt16_backend_index = 1918u;

/// pixelExportColor with Int32, Int32
extern Variable PixelExportColor_Int32_Int32_color;
extern Variable PixelExportColor_Int32_Int32_index;
extern Function PixelExportColor_Int32_Int32;
inline constexpr auto PixelExportColor_Int32_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32_Int32_backend_index = 1919u;

/// pixelExportColor with Int32, UInt32
extern Variable PixelExportColor_Int32_UInt32_color;
extern Variable PixelExportColor_Int32_UInt32_index;
extern Function PixelExportColor_Int32_UInt32;
inline constexpr auto PixelExportColor_Int32_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32_UInt32_backend_index = 1920u;

/// pixelExportColor with Int32, Int16
extern Variable PixelExportColor_Int32_Int16_color;
extern Variable PixelExportColor_Int32_Int16_index;
extern Function PixelExportColor_Int32_Int16;
inline constexpr auto PixelExportColor_Int32_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32_Int16_backend_index = 1921u;

/// pixelExportColor with Int32, UInt16
extern Variable PixelExportColor_Int32_UInt16_color;
extern Variable PixelExportColor_Int32_UInt16_index;
extern Function PixelExportColor_Int32_UInt16;
inline constexpr auto PixelExportColor_Int32_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32_UInt16_backend_index = 1922u;

/// pixelExportColor with Int32x2, Int32
extern Variable PixelExportColor_Int32x2_Int32_color;
extern Variable PixelExportColor_Int32x2_Int32_index;
extern Function PixelExportColor_Int32x2_Int32;
inline constexpr auto PixelExportColor_Int32x2_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32x2_Int32_backend_index = 1923u;

/// pixelExportColor with Int32x2, UInt32
extern Variable PixelExportColor_Int32x2_UInt32_color;
extern Variable PixelExportColor_Int32x2_UInt32_index;
extern Function PixelExportColor_Int32x2_UInt32;
inline constexpr auto PixelExportColor_Int32x2_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32x2_UInt32_backend_index = 1924u;

/// pixelExportColor with Int32x2, Int16
extern Variable PixelExportColor_Int32x2_Int16_color;
extern Variable PixelExportColor_Int32x2_Int16_index;
extern Function PixelExportColor_Int32x2_Int16;
inline constexpr auto PixelExportColor_Int32x2_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32x2_Int16_backend_index = 1925u;

/// pixelExportColor with Int32x2, UInt16
extern Variable PixelExportColor_Int32x2_UInt16_color;
extern Variable PixelExportColor_Int32x2_UInt16_index;
extern Function PixelExportColor_Int32x2_UInt16;
inline constexpr auto PixelExportColor_Int32x2_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32x2_UInt16_backend_index = 1926u;

/// pixelExportColor with Int32x3, Int32
extern Variable PixelExportColor_Int32x3_Int32_color;
extern Variable PixelExportColor_Int32x3_Int32_index;
extern Function PixelExportColor_Int32x3_Int32;
inline constexpr auto PixelExportColor_Int32x3_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32x3_Int32_backend_index = 1927u;

/// pixelExportColor with Int32x3, UInt32
extern Variable PixelExportColor_Int32x3_UInt32_color;
extern Variable PixelExportColor_Int32x3_UInt32_index;
extern Function PixelExportColor_Int32x3_UInt32;
inline constexpr auto PixelExportColor_Int32x3_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32x3_UInt32_backend_index = 1928u;

/// pixelExportColor with Int32x3, Int16
extern Variable PixelExportColor_Int32x3_Int16_color;
extern Variable PixelExportColor_Int32x3_Int16_index;
extern Function PixelExportColor_Int32x3_Int16;
inline constexpr auto PixelExportColor_Int32x3_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32x3_Int16_backend_index = 1929u;

/// pixelExportColor with Int32x3, UInt16
extern Variable PixelExportColor_Int32x3_UInt16_color;
extern Variable PixelExportColor_Int32x3_UInt16_index;
extern Function PixelExportColor_Int32x3_UInt16;
inline constexpr auto PixelExportColor_Int32x3_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32x3_UInt16_backend_index = 1930u;

/// pixelExportColor with Int32x4, Int32
extern Variable PixelExportColor_Int32x4_Int32_color;
extern Variable PixelExportColor_Int32x4_Int32_index;
extern Function PixelExportColor_Int32x4_Int32;
inline constexpr auto PixelExportColor_Int32x4_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32x4_Int32_backend_index = 1931u;

/// pixelExportColor with Int32x4, UInt32
extern Variable PixelExportColor_Int32x4_UInt32_color;
extern Variable PixelExportColor_Int32x4_UInt32_index;
extern Function PixelExportColor_Int32x4_UInt32;
inline constexpr auto PixelExportColor_Int32x4_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32x4_UInt32_backend_index = 1932u;

/// pixelExportColor with Int32x4, Int16
extern Variable PixelExportColor_Int32x4_Int16_color;
extern Variable PixelExportColor_Int32x4_Int16_index;
extern Function PixelExportColor_Int32x4_Int16;
inline constexpr auto PixelExportColor_Int32x4_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32x4_Int16_backend_index = 1933u;

/// pixelExportColor with Int32x4, UInt16
extern Variable PixelExportColor_Int32x4_UInt16_color;
extern Variable PixelExportColor_Int32x4_UInt16_index;
extern Function PixelExportColor_Int32x4_UInt16;
inline constexpr auto PixelExportColor_Int32x4_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int32x4_UInt16_backend_index = 1934u;

/// pixelExportColor with Int16, Int32
extern Variable PixelExportColor_Int16_Int32_color;
extern Variable PixelExportColor_Int16_Int32_index;
extern Function PixelExportColor_Int16_Int32;
inline constexpr auto PixelExportColor_Int16_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16_Int32_backend_index = 1935u;

/// pixelExportColor with Int16, UInt32
extern Variable PixelExportColor_Int16_UInt32_color;
extern Variable PixelExportColor_Int16_UInt32_index;
extern Function PixelExportColor_Int16_UInt32;
inline constexpr auto PixelExportColor_Int16_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16_UInt32_backend_index = 1936u;

/// pixelExportColor with Int16, Int16
extern Variable PixelExportColor_Int16_Int16_color;
extern Variable PixelExportColor_Int16_Int16_index;
extern Function PixelExportColor_Int16_Int16;
inline constexpr auto PixelExportColor_Int16_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16_Int16_backend_index = 1937u;

/// pixelExportColor with Int16, UInt16
extern Variable PixelExportColor_Int16_UInt16_color;
extern Variable PixelExportColor_Int16_UInt16_index;
extern Function PixelExportColor_Int16_UInt16;
inline constexpr auto PixelExportColor_Int16_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16_UInt16_backend_index = 1938u;

/// pixelExportColor with Int16x2, Int32
extern Variable PixelExportColor_Int16x2_Int32_color;
extern Variable PixelExportColor_Int16x2_Int32_index;
extern Function PixelExportColor_Int16x2_Int32;
inline constexpr auto PixelExportColor_Int16x2_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16x2_Int32_backend_index = 1939u;

/// pixelExportColor with Int16x2, UInt32
extern Variable PixelExportColor_Int16x2_UInt32_color;
extern Variable PixelExportColor_Int16x2_UInt32_index;
extern Function PixelExportColor_Int16x2_UInt32;
inline constexpr auto PixelExportColor_Int16x2_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16x2_UInt32_backend_index = 1940u;

/// pixelExportColor with Int16x2, Int16
extern Variable PixelExportColor_Int16x2_Int16_color;
extern Variable PixelExportColor_Int16x2_Int16_index;
extern Function PixelExportColor_Int16x2_Int16;
inline constexpr auto PixelExportColor_Int16x2_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16x2_Int16_backend_index = 1941u;

/// pixelExportColor with Int16x2, UInt16
extern Variable PixelExportColor_Int16x2_UInt16_color;
extern Variable PixelExportColor_Int16x2_UInt16_index;
extern Function PixelExportColor_Int16x2_UInt16;
inline constexpr auto PixelExportColor_Int16x2_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16x2_UInt16_backend_index = 1942u;

/// pixelExportColor with Int16x3, Int32
extern Variable PixelExportColor_Int16x3_Int32_color;
extern Variable PixelExportColor_Int16x3_Int32_index;
extern Function PixelExportColor_Int16x3_Int32;
inline constexpr auto PixelExportColor_Int16x3_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16x3_Int32_backend_index = 1943u;

/// pixelExportColor with Int16x3, UInt32
extern Variable PixelExportColor_Int16x3_UInt32_color;
extern Variable PixelExportColor_Int16x3_UInt32_index;
extern Function PixelExportColor_Int16x3_UInt32;
inline constexpr auto PixelExportColor_Int16x3_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16x3_UInt32_backend_index = 1944u;

/// pixelExportColor with Int16x3, Int16
extern Variable PixelExportColor_Int16x3_Int16_color;
extern Variable PixelExportColor_Int16x3_Int16_index;
extern Function PixelExportColor_Int16x3_Int16;
inline constexpr auto PixelExportColor_Int16x3_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16x3_Int16_backend_index = 1945u;

/// pixelExportColor with Int16x3, UInt16
extern Variable PixelExportColor_Int16x3_UInt16_color;
extern Variable PixelExportColor_Int16x3_UInt16_index;
extern Function PixelExportColor_Int16x3_UInt16;
inline constexpr auto PixelExportColor_Int16x3_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16x3_UInt16_backend_index = 1946u;

/// pixelExportColor with Int16x4, Int32
extern Variable PixelExportColor_Int16x4_Int32_color;
extern Variable PixelExportColor_Int16x4_Int32_index;
extern Function PixelExportColor_Int16x4_Int32;
inline constexpr auto PixelExportColor_Int16x4_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16x4_Int32_backend_index = 1947u;

/// pixelExportColor with Int16x4, UInt32
extern Variable PixelExportColor_Int16x4_UInt32_color;
extern Variable PixelExportColor_Int16x4_UInt32_index;
extern Function PixelExportColor_Int16x4_UInt32;
inline constexpr auto PixelExportColor_Int16x4_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16x4_UInt32_backend_index = 1948u;

/// pixelExportColor with Int16x4, Int16
extern Variable PixelExportColor_Int16x4_Int16_color;
extern Variable PixelExportColor_Int16x4_Int16_index;
extern Function PixelExportColor_Int16x4_Int16;
inline constexpr auto PixelExportColor_Int16x4_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16x4_Int16_backend_index = 1949u;

/// pixelExportColor with Int16x4, UInt16
extern Variable PixelExportColor_Int16x4_UInt16_color;
extern Variable PixelExportColor_Int16x4_UInt16_index;
extern Function PixelExportColor_Int16x4_UInt16;
inline constexpr auto PixelExportColor_Int16x4_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_Int16x4_UInt16_backend_index = 1950u;

/// pixelExportColor with UInt32, Int32
extern Variable PixelExportColor_UInt32_Int32_color;
extern Variable PixelExportColor_UInt32_Int32_index;
extern Function PixelExportColor_UInt32_Int32;
inline constexpr auto PixelExportColor_UInt32_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32_Int32_backend_index = 1951u;

/// pixelExportColor with UInt32, UInt32
extern Variable PixelExportColor_UInt32_UInt32_color;
extern Variable PixelExportColor_UInt32_UInt32_index;
extern Function PixelExportColor_UInt32_UInt32;
inline constexpr auto PixelExportColor_UInt32_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32_UInt32_backend_index = 1952u;

/// pixelExportColor with UInt32, Int16
extern Variable PixelExportColor_UInt32_Int16_color;
extern Variable PixelExportColor_UInt32_Int16_index;
extern Function PixelExportColor_UInt32_Int16;
inline constexpr auto PixelExportColor_UInt32_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32_Int16_backend_index = 1953u;

/// pixelExportColor with UInt32, UInt16
extern Variable PixelExportColor_UInt32_UInt16_color;
extern Variable PixelExportColor_UInt32_UInt16_index;
extern Function PixelExportColor_UInt32_UInt16;
inline constexpr auto PixelExportColor_UInt32_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32_UInt16_backend_index = 1954u;

/// pixelExportColor with UInt32x2, Int32
extern Variable PixelExportColor_UInt32x2_Int32_color;
extern Variable PixelExportColor_UInt32x2_Int32_index;
extern Function PixelExportColor_UInt32x2_Int32;
inline constexpr auto PixelExportColor_UInt32x2_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32x2_Int32_backend_index = 1955u;

/// pixelExportColor with UInt32x2, UInt32
extern Variable PixelExportColor_UInt32x2_UInt32_color;
extern Variable PixelExportColor_UInt32x2_UInt32_index;
extern Function PixelExportColor_UInt32x2_UInt32;
inline constexpr auto PixelExportColor_UInt32x2_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32x2_UInt32_backend_index = 1956u;

/// pixelExportColor with UInt32x2, Int16
extern Variable PixelExportColor_UInt32x2_Int16_color;
extern Variable PixelExportColor_UInt32x2_Int16_index;
extern Function PixelExportColor_UInt32x2_Int16;
inline constexpr auto PixelExportColor_UInt32x2_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32x2_Int16_backend_index = 1957u;

/// pixelExportColor with UInt32x2, UInt16
extern Variable PixelExportColor_UInt32x2_UInt16_color;
extern Variable PixelExportColor_UInt32x2_UInt16_index;
extern Function PixelExportColor_UInt32x2_UInt16;
inline constexpr auto PixelExportColor_UInt32x2_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32x2_UInt16_backend_index = 1958u;

/// pixelExportColor with UInt32x3, Int32
extern Variable PixelExportColor_UInt32x3_Int32_color;
extern Variable PixelExportColor_UInt32x3_Int32_index;
extern Function PixelExportColor_UInt32x3_Int32;
inline constexpr auto PixelExportColor_UInt32x3_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32x3_Int32_backend_index = 1959u;

/// pixelExportColor with UInt32x3, UInt32
extern Variable PixelExportColor_UInt32x3_UInt32_color;
extern Variable PixelExportColor_UInt32x3_UInt32_index;
extern Function PixelExportColor_UInt32x3_UInt32;
inline constexpr auto PixelExportColor_UInt32x3_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32x3_UInt32_backend_index = 1960u;

/// pixelExportColor with UInt32x3, Int16
extern Variable PixelExportColor_UInt32x3_Int16_color;
extern Variable PixelExportColor_UInt32x3_Int16_index;
extern Function PixelExportColor_UInt32x3_Int16;
inline constexpr auto PixelExportColor_UInt32x3_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32x3_Int16_backend_index = 1961u;

/// pixelExportColor with UInt32x3, UInt16
extern Variable PixelExportColor_UInt32x3_UInt16_color;
extern Variable PixelExportColor_UInt32x3_UInt16_index;
extern Function PixelExportColor_UInt32x3_UInt16;
inline constexpr auto PixelExportColor_UInt32x3_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32x3_UInt16_backend_index = 1962u;

/// pixelExportColor with UInt32x4, Int32
extern Variable PixelExportColor_UInt32x4_Int32_color;
extern Variable PixelExportColor_UInt32x4_Int32_index;
extern Function PixelExportColor_UInt32x4_Int32;
inline constexpr auto PixelExportColor_UInt32x4_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32x4_Int32_backend_index = 1963u;

/// pixelExportColor with UInt32x4, UInt32
extern Variable PixelExportColor_UInt32x4_UInt32_color;
extern Variable PixelExportColor_UInt32x4_UInt32_index;
extern Function PixelExportColor_UInt32x4_UInt32;
inline constexpr auto PixelExportColor_UInt32x4_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32x4_UInt32_backend_index = 1964u;

/// pixelExportColor with UInt32x4, Int16
extern Variable PixelExportColor_UInt32x4_Int16_color;
extern Variable PixelExportColor_UInt32x4_Int16_index;
extern Function PixelExportColor_UInt32x4_Int16;
inline constexpr auto PixelExportColor_UInt32x4_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32x4_Int16_backend_index = 1965u;

/// pixelExportColor with UInt32x4, UInt16
extern Variable PixelExportColor_UInt32x4_UInt16_color;
extern Variable PixelExportColor_UInt32x4_UInt16_index;
extern Function PixelExportColor_UInt32x4_UInt16;
inline constexpr auto PixelExportColor_UInt32x4_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt32x4_UInt16_backend_index = 1966u;

/// pixelExportColor with UInt16, Int32
extern Variable PixelExportColor_UInt16_Int32_color;
extern Variable PixelExportColor_UInt16_Int32_index;
extern Function PixelExportColor_UInt16_Int32;
inline constexpr auto PixelExportColor_UInt16_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16_Int32_backend_index = 1967u;

/// pixelExportColor with UInt16, UInt32
extern Variable PixelExportColor_UInt16_UInt32_color;
extern Variable PixelExportColor_UInt16_UInt32_index;
extern Function PixelExportColor_UInt16_UInt32;
inline constexpr auto PixelExportColor_UInt16_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16_UInt32_backend_index = 1968u;

/// pixelExportColor with UInt16, Int16
extern Variable PixelExportColor_UInt16_Int16_color;
extern Variable PixelExportColor_UInt16_Int16_index;
extern Function PixelExportColor_UInt16_Int16;
inline constexpr auto PixelExportColor_UInt16_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16_Int16_backend_index = 1969u;

/// pixelExportColor with UInt16, UInt16
extern Variable PixelExportColor_UInt16_UInt16_color;
extern Variable PixelExportColor_UInt16_UInt16_index;
extern Function PixelExportColor_UInt16_UInt16;
inline constexpr auto PixelExportColor_UInt16_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16_UInt16_backend_index = 1970u;

/// pixelExportColor with UInt16x2, Int32
extern Variable PixelExportColor_UInt16x2_Int32_color;
extern Variable PixelExportColor_UInt16x2_Int32_index;
extern Function PixelExportColor_UInt16x2_Int32;
inline constexpr auto PixelExportColor_UInt16x2_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16x2_Int32_backend_index = 1971u;

/// pixelExportColor with UInt16x2, UInt32
extern Variable PixelExportColor_UInt16x2_UInt32_color;
extern Variable PixelExportColor_UInt16x2_UInt32_index;
extern Function PixelExportColor_UInt16x2_UInt32;
inline constexpr auto PixelExportColor_UInt16x2_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16x2_UInt32_backend_index = 1972u;

/// pixelExportColor with UInt16x2, Int16
extern Variable PixelExportColor_UInt16x2_Int16_color;
extern Variable PixelExportColor_UInt16x2_Int16_index;
extern Function PixelExportColor_UInt16x2_Int16;
inline constexpr auto PixelExportColor_UInt16x2_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16x2_Int16_backend_index = 1973u;

/// pixelExportColor with UInt16x2, UInt16
extern Variable PixelExportColor_UInt16x2_UInt16_color;
extern Variable PixelExportColor_UInt16x2_UInt16_index;
extern Function PixelExportColor_UInt16x2_UInt16;
inline constexpr auto PixelExportColor_UInt16x2_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16x2_UInt16_backend_index = 1974u;

/// pixelExportColor with UInt16x3, Int32
extern Variable PixelExportColor_UInt16x3_Int32_color;
extern Variable PixelExportColor_UInt16x3_Int32_index;
extern Function PixelExportColor_UInt16x3_Int32;
inline constexpr auto PixelExportColor_UInt16x3_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16x3_Int32_backend_index = 1975u;

/// pixelExportColor with UInt16x3, UInt32
extern Variable PixelExportColor_UInt16x3_UInt32_color;
extern Variable PixelExportColor_UInt16x3_UInt32_index;
extern Function PixelExportColor_UInt16x3_UInt32;
inline constexpr auto PixelExportColor_UInt16x3_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16x3_UInt32_backend_index = 1976u;

/// pixelExportColor with UInt16x3, Int16
extern Variable PixelExportColor_UInt16x3_Int16_color;
extern Variable PixelExportColor_UInt16x3_Int16_index;
extern Function PixelExportColor_UInt16x3_Int16;
inline constexpr auto PixelExportColor_UInt16x3_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16x3_Int16_backend_index = 1977u;

/// pixelExportColor with UInt16x3, UInt16
extern Variable PixelExportColor_UInt16x3_UInt16_color;
extern Variable PixelExportColor_UInt16x3_UInt16_index;
extern Function PixelExportColor_UInt16x3_UInt16;
inline constexpr auto PixelExportColor_UInt16x3_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16x3_UInt16_backend_index = 1978u;

/// pixelExportColor with UInt16x4, Int32
extern Variable PixelExportColor_UInt16x4_Int32_color;
extern Variable PixelExportColor_UInt16x4_Int32_index;
extern Function PixelExportColor_UInt16x4_Int32;
inline constexpr auto PixelExportColor_UInt16x4_Int32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16x4_Int32_backend_index = 1979u;

/// pixelExportColor with UInt16x4, UInt32
extern Variable PixelExportColor_UInt16x4_UInt32_color;
extern Variable PixelExportColor_UInt16x4_UInt32_index;
extern Function PixelExportColor_UInt16x4_UInt32;
inline constexpr auto PixelExportColor_UInt16x4_UInt32_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16x4_UInt32_backend_index = 1980u;

/// pixelExportColor with UInt16x4, Int16
extern Variable PixelExportColor_UInt16x4_Int16_color;
extern Variable PixelExportColor_UInt16x4_Int16_index;
extern Function PixelExportColor_UInt16x4_Int16;
inline constexpr auto PixelExportColor_UInt16x4_Int16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16x4_Int16_backend_index = 1981u;

/// pixelExportColor with UInt16x4, UInt16
extern Variable PixelExportColor_UInt16x4_UInt16_color;
extern Variable PixelExportColor_UInt16x4_UInt16_index;
extern Function PixelExportColor_UInt16x4_UInt16;
inline constexpr auto PixelExportColor_UInt16x4_UInt16_name = "pixelExportColor"_c;
inline constexpr auto PixelExportColor_UInt16x4_UInt16_backend_index = 1982u;

/// computeGetLocalThreadIndices
extern Function ComputeGetLocalThreadIndices;
inline constexpr auto ComputeGetLocalThreadIndices_name = "computeGetLocalThreadIndices"_c;
inline constexpr auto ComputeGetLocalThreadIndices_backend_index = 1983u;

/// computeGetGlobalThreadIndices
extern Function ComputeGetGlobalThreadIndices;
inline constexpr auto ComputeGetGlobalThreadIndices_name = "computeGetGlobalThreadIndices"_c;
inline constexpr auto ComputeGetGlobalThreadIndices_backend_index = 1984u;

/// computeGetWorkgroupIndices
extern Function ComputeGetWorkgroupIndices;
inline constexpr auto ComputeGetWorkgroupIndices_name = "computeGetWorkgroupIndices"_c;
inline constexpr auto ComputeGetWorkgroupIndices_backend_index = 1985u;

/// computeGetWorkGroupDimensions
extern Function ComputeGetWorkGroupDimensions;
inline constexpr auto ComputeGetWorkGroupDimensions_name = "computeGetWorkGroupDimensions"_c;
inline constexpr auto ComputeGetWorkGroupDimensions_backend_index = 1986u;

/// computeGetIndexInWorkgroup
extern Function ComputeGetIndexInWorkgroup;
inline constexpr auto ComputeGetIndexInWorkgroup_name = "computeGetIndexInWorkgroup"_c;
inline constexpr auto ComputeGetIndexInWorkgroup_backend_index = 1987u;

/// subgroupGetId
extern Function SubgroupGetId;
inline constexpr auto SubgroupGetId_name = "subgroupGetId"_c;
inline constexpr auto SubgroupGetId_backend_index = 1988u;

/// subgroupGetSize
extern Function SubgroupGetSize;
inline constexpr auto SubgroupGetSize_name = "subgroupGetSize"_c;
inline constexpr auto SubgroupGetSize_backend_index = 1989u;

/// subgroupGetNum
extern Function SubgroupGetNum;
inline constexpr auto SubgroupGetNum_name = "subgroupGetNum"_c;
inline constexpr auto SubgroupGetNum_backend_index = 1990u;

/// subgroupGetThreadMask
extern Function SubgroupGetThreadMask;
inline constexpr auto SubgroupGetThreadMask_name = "subgroupGetThreadMask"_c;
inline constexpr auto SubgroupGetThreadMask_backend_index = 1991u;

/// subgroupGetThreadAndLowerMask
extern Function SubgroupGetThreadAndLowerMask;
inline constexpr auto SubgroupGetThreadAndLowerMask_name = "subgroupGetThreadAndLowerMask"_c;
inline constexpr auto SubgroupGetThreadAndLowerMask_backend_index = 1992u;

/// subgroupGetLowerMask
extern Function SubgroupGetLowerMask;
inline constexpr auto SubgroupGetLowerMask_name = "subgroupGetLowerMask"_c;
inline constexpr auto SubgroupGetLowerMask_backend_index = 1993u;

/// subgroupGetThreadAndGreaterMask
extern Function SubgroupGetThreadAndGreaterMask;
inline constexpr auto SubgroupGetThreadAndGreaterMask_name = "subgroupGetThreadAndGreaterMask"_c;
inline constexpr auto SubgroupGetThreadAndGreaterMask_backend_index = 1994u;

/// subgroupGetGreaterMask
extern Function SubgroupGetGreaterMask;
inline constexpr auto SubgroupGetGreaterMask_name = "subgroupGetGreaterMask"_c;
inline constexpr auto SubgroupGetGreaterMask_backend_index = 1995u;

/// subgroupGetFirstActiveThread
extern Function SubgroupGetFirstActiveThread;
inline constexpr auto SubgroupGetFirstActiveThread_name = "subgroupGetFirstActiveThread"_c;
inline constexpr auto SubgroupGetFirstActiveThread_backend_index = 1996u;

/// subgroupBroadcastFirstActiveThread with Float32
extern Variable SubgroupBroadcastFirstActiveThread_Float32_value;
extern Function SubgroupBroadcastFirstActiveThread_Float32;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float32_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float32_backend_index = 1997u;

/// subgroupBroadcastFirstActiveThread with Float32x2
extern Variable SubgroupBroadcastFirstActiveThread_Float32x2_value;
extern Function SubgroupBroadcastFirstActiveThread_Float32x2;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float32x2_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float32x2_backend_index = 1998u;

/// subgroupBroadcastFirstActiveThread with Float32x3
extern Variable SubgroupBroadcastFirstActiveThread_Float32x3_value;
extern Function SubgroupBroadcastFirstActiveThread_Float32x3;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float32x3_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float32x3_backend_index = 1999u;

/// subgroupBroadcastFirstActiveThread with Float32x4
extern Variable SubgroupBroadcastFirstActiveThread_Float32x4_value;
extern Function SubgroupBroadcastFirstActiveThread_Float32x4;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float32x4_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float32x4_backend_index = 2000u;

/// subgroupBroadcastFirstActiveThread with Float16
extern Variable SubgroupBroadcastFirstActiveThread_Float16_value;
extern Function SubgroupBroadcastFirstActiveThread_Float16;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float16_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float16_backend_index = 2001u;

/// subgroupBroadcastFirstActiveThread with Float16x2
extern Variable SubgroupBroadcastFirstActiveThread_Float16x2_value;
extern Function SubgroupBroadcastFirstActiveThread_Float16x2;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float16x2_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float16x2_backend_index = 2002u;

/// subgroupBroadcastFirstActiveThread with Float16x3
extern Variable SubgroupBroadcastFirstActiveThread_Float16x3_value;
extern Function SubgroupBroadcastFirstActiveThread_Float16x3;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float16x3_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float16x3_backend_index = 2003u;

/// subgroupBroadcastFirstActiveThread with Float16x4
extern Variable SubgroupBroadcastFirstActiveThread_Float16x4_value;
extern Function SubgroupBroadcastFirstActiveThread_Float16x4;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float16x4_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Float16x4_backend_index = 2004u;

/// subgroupBroadcastFirstActiveThread with Int32
extern Variable SubgroupBroadcastFirstActiveThread_Int32_value;
extern Function SubgroupBroadcastFirstActiveThread_Int32;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int32_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int32_backend_index = 2005u;

/// subgroupBroadcastFirstActiveThread with Int32x2
extern Variable SubgroupBroadcastFirstActiveThread_Int32x2_value;
extern Function SubgroupBroadcastFirstActiveThread_Int32x2;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int32x2_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int32x2_backend_index = 2006u;

/// subgroupBroadcastFirstActiveThread with Int32x3
extern Variable SubgroupBroadcastFirstActiveThread_Int32x3_value;
extern Function SubgroupBroadcastFirstActiveThread_Int32x3;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int32x3_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int32x3_backend_index = 2007u;

/// subgroupBroadcastFirstActiveThread with Int32x4
extern Variable SubgroupBroadcastFirstActiveThread_Int32x4_value;
extern Function SubgroupBroadcastFirstActiveThread_Int32x4;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int32x4_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int32x4_backend_index = 2008u;

/// subgroupBroadcastFirstActiveThread with Int16
extern Variable SubgroupBroadcastFirstActiveThread_Int16_value;
extern Function SubgroupBroadcastFirstActiveThread_Int16;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int16_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int16_backend_index = 2009u;

/// subgroupBroadcastFirstActiveThread with Int16x2
extern Variable SubgroupBroadcastFirstActiveThread_Int16x2_value;
extern Function SubgroupBroadcastFirstActiveThread_Int16x2;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int16x2_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int16x2_backend_index = 2010u;

/// subgroupBroadcastFirstActiveThread with Int16x3
extern Variable SubgroupBroadcastFirstActiveThread_Int16x3_value;
extern Function SubgroupBroadcastFirstActiveThread_Int16x3;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int16x3_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int16x3_backend_index = 2011u;

/// subgroupBroadcastFirstActiveThread with Int16x4
extern Variable SubgroupBroadcastFirstActiveThread_Int16x4_value;
extern Function SubgroupBroadcastFirstActiveThread_Int16x4;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int16x4_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_Int16x4_backend_index = 2012u;

/// subgroupBroadcastFirstActiveThread with UInt32
extern Variable SubgroupBroadcastFirstActiveThread_UInt32_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt32;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt32_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt32_backend_index = 2013u;

/// subgroupBroadcastFirstActiveThread with UInt32x2
extern Variable SubgroupBroadcastFirstActiveThread_UInt32x2_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt32x2;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt32x2_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt32x2_backend_index = 2014u;

/// subgroupBroadcastFirstActiveThread with UInt32x3
extern Variable SubgroupBroadcastFirstActiveThread_UInt32x3_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt32x3;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt32x3_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt32x3_backend_index = 2015u;

/// subgroupBroadcastFirstActiveThread with UInt32x4
extern Variable SubgroupBroadcastFirstActiveThread_UInt32x4_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt32x4;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt32x4_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt32x4_backend_index = 2016u;

/// subgroupBroadcastFirstActiveThread with UInt16
extern Variable SubgroupBroadcastFirstActiveThread_UInt16_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt16;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt16_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt16_backend_index = 2017u;

/// subgroupBroadcastFirstActiveThread with UInt16x2
extern Variable SubgroupBroadcastFirstActiveThread_UInt16x2_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt16x2;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt16x2_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt16x2_backend_index = 2018u;

/// subgroupBroadcastFirstActiveThread with UInt16x3
extern Variable SubgroupBroadcastFirstActiveThread_UInt16x3_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt16x3;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt16x3_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt16x3_backend_index = 2019u;

/// subgroupBroadcastFirstActiveThread with UInt16x4
extern Variable SubgroupBroadcastFirstActiveThread_UInt16x4_value;
extern Function SubgroupBroadcastFirstActiveThread_UInt16x4;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt16x4_name = "subgroupBroadcastFirstActiveThread"_c;
inline constexpr auto SubgroupBroadcastFirstActiveThread_UInt16x4_backend_index = 2020u;

/// subgroupBallot with Bool8
extern Variable SubgroupBallot_predicate;
extern Function SubgroupBallot;
inline constexpr auto SubgroupBallot_name = "subgroupBallot"_c;
inline constexpr auto SubgroupBallot_backend_index = 2021u;

/// subgroupInverseBallot with Bool8
extern Variable SubgroupInverseBallot_predicate;
extern Function SubgroupInverseBallot;
inline constexpr auto SubgroupInverseBallot_name = "subgroupInverseBallot"_c;
inline constexpr auto SubgroupInverseBallot_backend_index = 2022u;

/// subgroupBallotBitCount with UInt32x4
extern Variable SubgroupBallotBitCount_mask;
extern Function SubgroupBallotBitCount;
inline constexpr auto SubgroupBallotBitCount_name = "subgroupBallotBitCount"_c;
inline constexpr auto SubgroupBallotBitCount_backend_index = 2023u;

/// subgroupBallotFirstOne with UInt32x4
extern Variable SubgroupBallotFirstOne_mask;
extern Function SubgroupBallotFirstOne;
inline constexpr auto SubgroupBallotFirstOne_name = "subgroupBallotFirstOne"_c;
inline constexpr auto SubgroupBallotFirstOne_backend_index = 2024u;

/// subgroupBallotLastOne with UInt32x4
extern Variable SubgroupBallotLastOne_mask;
extern Function SubgroupBallotLastOne;
inline constexpr auto SubgroupBallotLastOne_name = "subgroupBallotLastOne"_c;
inline constexpr auto SubgroupBallotLastOne_backend_index = 2025u;

/// subgroupBallotBit with UInt32x4, UInt32
extern Variable SubgroupBallotBit_mask;
extern Variable SubgroupBallotBit_index;
extern Function SubgroupBallotBit;
inline constexpr auto SubgroupBallotBit_name = "subgroupBallotBit"_c;
inline constexpr auto SubgroupBallotBit_backend_index = 2026u;

/// subgroupSwapDiagonal with Float32
extern Variable SubgroupSwapDiagonal_Float32_value;
extern Function SubgroupSwapDiagonal_Float32;
inline constexpr auto SubgroupSwapDiagonal_Float32_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Float32_backend_index = 2027u;

/// subgroupSwapDiagonal with Float32x2
extern Variable SubgroupSwapDiagonal_Float32x2_value;
extern Function SubgroupSwapDiagonal_Float32x2;
inline constexpr auto SubgroupSwapDiagonal_Float32x2_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Float32x2_backend_index = 2028u;

/// subgroupSwapDiagonal with Float32x3
extern Variable SubgroupSwapDiagonal_Float32x3_value;
extern Function SubgroupSwapDiagonal_Float32x3;
inline constexpr auto SubgroupSwapDiagonal_Float32x3_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Float32x3_backend_index = 2029u;

/// subgroupSwapDiagonal with Float32x4
extern Variable SubgroupSwapDiagonal_Float32x4_value;
extern Function SubgroupSwapDiagonal_Float32x4;
inline constexpr auto SubgroupSwapDiagonal_Float32x4_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Float32x4_backend_index = 2030u;

/// subgroupSwapDiagonal with Float16
extern Variable SubgroupSwapDiagonal_Float16_value;
extern Function SubgroupSwapDiagonal_Float16;
inline constexpr auto SubgroupSwapDiagonal_Float16_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Float16_backend_index = 2031u;

/// subgroupSwapDiagonal with Float16x2
extern Variable SubgroupSwapDiagonal_Float16x2_value;
extern Function SubgroupSwapDiagonal_Float16x2;
inline constexpr auto SubgroupSwapDiagonal_Float16x2_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Float16x2_backend_index = 2032u;

/// subgroupSwapDiagonal with Float16x3
extern Variable SubgroupSwapDiagonal_Float16x3_value;
extern Function SubgroupSwapDiagonal_Float16x3;
inline constexpr auto SubgroupSwapDiagonal_Float16x3_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Float16x3_backend_index = 2033u;

/// subgroupSwapDiagonal with Float16x4
extern Variable SubgroupSwapDiagonal_Float16x4_value;
extern Function SubgroupSwapDiagonal_Float16x4;
inline constexpr auto SubgroupSwapDiagonal_Float16x4_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Float16x4_backend_index = 2034u;

/// subgroupSwapDiagonal with Int32
extern Variable SubgroupSwapDiagonal_Int32_value;
extern Function SubgroupSwapDiagonal_Int32;
inline constexpr auto SubgroupSwapDiagonal_Int32_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Int32_backend_index = 2035u;

/// subgroupSwapDiagonal with Int32x2
extern Variable SubgroupSwapDiagonal_Int32x2_value;
extern Function SubgroupSwapDiagonal_Int32x2;
inline constexpr auto SubgroupSwapDiagonal_Int32x2_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Int32x2_backend_index = 2036u;

/// subgroupSwapDiagonal with Int32x3
extern Variable SubgroupSwapDiagonal_Int32x3_value;
extern Function SubgroupSwapDiagonal_Int32x3;
inline constexpr auto SubgroupSwapDiagonal_Int32x3_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Int32x3_backend_index = 2037u;

/// subgroupSwapDiagonal with Int32x4
extern Variable SubgroupSwapDiagonal_Int32x4_value;
extern Function SubgroupSwapDiagonal_Int32x4;
inline constexpr auto SubgroupSwapDiagonal_Int32x4_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Int32x4_backend_index = 2038u;

/// subgroupSwapDiagonal with Int16
extern Variable SubgroupSwapDiagonal_Int16_value;
extern Function SubgroupSwapDiagonal_Int16;
inline constexpr auto SubgroupSwapDiagonal_Int16_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Int16_backend_index = 2039u;

/// subgroupSwapDiagonal with Int16x2
extern Variable SubgroupSwapDiagonal_Int16x2_value;
extern Function SubgroupSwapDiagonal_Int16x2;
inline constexpr auto SubgroupSwapDiagonal_Int16x2_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Int16x2_backend_index = 2040u;

/// subgroupSwapDiagonal with Int16x3
extern Variable SubgroupSwapDiagonal_Int16x3_value;
extern Function SubgroupSwapDiagonal_Int16x3;
inline constexpr auto SubgroupSwapDiagonal_Int16x3_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Int16x3_backend_index = 2041u;

/// subgroupSwapDiagonal with Int16x4
extern Variable SubgroupSwapDiagonal_Int16x4_value;
extern Function SubgroupSwapDiagonal_Int16x4;
inline constexpr auto SubgroupSwapDiagonal_Int16x4_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_Int16x4_backend_index = 2042u;

/// subgroupSwapDiagonal with UInt32
extern Variable SubgroupSwapDiagonal_UInt32_value;
extern Function SubgroupSwapDiagonal_UInt32;
inline constexpr auto SubgroupSwapDiagonal_UInt32_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_UInt32_backend_index = 2043u;

/// subgroupSwapDiagonal with UInt32x2
extern Variable SubgroupSwapDiagonal_UInt32x2_value;
extern Function SubgroupSwapDiagonal_UInt32x2;
inline constexpr auto SubgroupSwapDiagonal_UInt32x2_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_UInt32x2_backend_index = 2044u;

/// subgroupSwapDiagonal with UInt32x3
extern Variable SubgroupSwapDiagonal_UInt32x3_value;
extern Function SubgroupSwapDiagonal_UInt32x3;
inline constexpr auto SubgroupSwapDiagonal_UInt32x3_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_UInt32x3_backend_index = 2045u;

/// subgroupSwapDiagonal with UInt32x4
extern Variable SubgroupSwapDiagonal_UInt32x4_value;
extern Function SubgroupSwapDiagonal_UInt32x4;
inline constexpr auto SubgroupSwapDiagonal_UInt32x4_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_UInt32x4_backend_index = 2046u;

/// subgroupSwapDiagonal with UInt16
extern Variable SubgroupSwapDiagonal_UInt16_value;
extern Function SubgroupSwapDiagonal_UInt16;
inline constexpr auto SubgroupSwapDiagonal_UInt16_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_UInt16_backend_index = 2047u;

/// subgroupSwapDiagonal with UInt16x2
extern Variable SubgroupSwapDiagonal_UInt16x2_value;
extern Function SubgroupSwapDiagonal_UInt16x2;
inline constexpr auto SubgroupSwapDiagonal_UInt16x2_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_UInt16x2_backend_index = 2048u;

/// subgroupSwapDiagonal with UInt16x3
extern Variable SubgroupSwapDiagonal_UInt16x3_value;
extern Function SubgroupSwapDiagonal_UInt16x3;
inline constexpr auto SubgroupSwapDiagonal_UInt16x3_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_UInt16x3_backend_index = 2049u;

/// subgroupSwapDiagonal with UInt16x4
extern Variable SubgroupSwapDiagonal_UInt16x4_value;
extern Function SubgroupSwapDiagonal_UInt16x4;
inline constexpr auto SubgroupSwapDiagonal_UInt16x4_name = "subgroupSwapDiagonal"_c;
inline constexpr auto SubgroupSwapDiagonal_UInt16x4_backend_index = 2050u;

/// subgroupSwapVertical with Float32
extern Variable SubgroupSwapVertical_Float32_value;
extern Function SubgroupSwapVertical_Float32;
inline constexpr auto SubgroupSwapVertical_Float32_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Float32_backend_index = 2051u;

/// subgroupSwapVertical with Float32x2
extern Variable SubgroupSwapVertical_Float32x2_value;
extern Function SubgroupSwapVertical_Float32x2;
inline constexpr auto SubgroupSwapVertical_Float32x2_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Float32x2_backend_index = 2052u;

/// subgroupSwapVertical with Float32x3
extern Variable SubgroupSwapVertical_Float32x3_value;
extern Function SubgroupSwapVertical_Float32x3;
inline constexpr auto SubgroupSwapVertical_Float32x3_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Float32x3_backend_index = 2053u;

/// subgroupSwapVertical with Float32x4
extern Variable SubgroupSwapVertical_Float32x4_value;
extern Function SubgroupSwapVertical_Float32x4;
inline constexpr auto SubgroupSwapVertical_Float32x4_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Float32x4_backend_index = 2054u;

/// subgroupSwapVertical with Float16
extern Variable SubgroupSwapVertical_Float16_value;
extern Function SubgroupSwapVertical_Float16;
inline constexpr auto SubgroupSwapVertical_Float16_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Float16_backend_index = 2055u;

/// subgroupSwapVertical with Float16x2
extern Variable SubgroupSwapVertical_Float16x2_value;
extern Function SubgroupSwapVertical_Float16x2;
inline constexpr auto SubgroupSwapVertical_Float16x2_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Float16x2_backend_index = 2056u;

/// subgroupSwapVertical with Float16x3
extern Variable SubgroupSwapVertical_Float16x3_value;
extern Function SubgroupSwapVertical_Float16x3;
inline constexpr auto SubgroupSwapVertical_Float16x3_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Float16x3_backend_index = 2057u;

/// subgroupSwapVertical with Float16x4
extern Variable SubgroupSwapVertical_Float16x4_value;
extern Function SubgroupSwapVertical_Float16x4;
inline constexpr auto SubgroupSwapVertical_Float16x4_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Float16x4_backend_index = 2058u;

/// subgroupSwapVertical with Int32
extern Variable SubgroupSwapVertical_Int32_value;
extern Function SubgroupSwapVertical_Int32;
inline constexpr auto SubgroupSwapVertical_Int32_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Int32_backend_index = 2059u;

/// subgroupSwapVertical with Int32x2
extern Variable SubgroupSwapVertical_Int32x2_value;
extern Function SubgroupSwapVertical_Int32x2;
inline constexpr auto SubgroupSwapVertical_Int32x2_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Int32x2_backend_index = 2060u;

/// subgroupSwapVertical with Int32x3
extern Variable SubgroupSwapVertical_Int32x3_value;
extern Function SubgroupSwapVertical_Int32x3;
inline constexpr auto SubgroupSwapVertical_Int32x3_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Int32x3_backend_index = 2061u;

/// subgroupSwapVertical with Int32x4
extern Variable SubgroupSwapVertical_Int32x4_value;
extern Function SubgroupSwapVertical_Int32x4;
inline constexpr auto SubgroupSwapVertical_Int32x4_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Int32x4_backend_index = 2062u;

/// subgroupSwapVertical with Int16
extern Variable SubgroupSwapVertical_Int16_value;
extern Function SubgroupSwapVertical_Int16;
inline constexpr auto SubgroupSwapVertical_Int16_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Int16_backend_index = 2063u;

/// subgroupSwapVertical with Int16x2
extern Variable SubgroupSwapVertical_Int16x2_value;
extern Function SubgroupSwapVertical_Int16x2;
inline constexpr auto SubgroupSwapVertical_Int16x2_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Int16x2_backend_index = 2064u;

/// subgroupSwapVertical with Int16x3
extern Variable SubgroupSwapVertical_Int16x3_value;
extern Function SubgroupSwapVertical_Int16x3;
inline constexpr auto SubgroupSwapVertical_Int16x3_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Int16x3_backend_index = 2065u;

/// subgroupSwapVertical with Int16x4
extern Variable SubgroupSwapVertical_Int16x4_value;
extern Function SubgroupSwapVertical_Int16x4;
inline constexpr auto SubgroupSwapVertical_Int16x4_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_Int16x4_backend_index = 2066u;

/// subgroupSwapVertical with UInt32
extern Variable SubgroupSwapVertical_UInt32_value;
extern Function SubgroupSwapVertical_UInt32;
inline constexpr auto SubgroupSwapVertical_UInt32_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_UInt32_backend_index = 2067u;

/// subgroupSwapVertical with UInt32x2
extern Variable SubgroupSwapVertical_UInt32x2_value;
extern Function SubgroupSwapVertical_UInt32x2;
inline constexpr auto SubgroupSwapVertical_UInt32x2_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_UInt32x2_backend_index = 2068u;

/// subgroupSwapVertical with UInt32x3
extern Variable SubgroupSwapVertical_UInt32x3_value;
extern Function SubgroupSwapVertical_UInt32x3;
inline constexpr auto SubgroupSwapVertical_UInt32x3_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_UInt32x3_backend_index = 2069u;

/// subgroupSwapVertical with UInt32x4
extern Variable SubgroupSwapVertical_UInt32x4_value;
extern Function SubgroupSwapVertical_UInt32x4;
inline constexpr auto SubgroupSwapVertical_UInt32x4_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_UInt32x4_backend_index = 2070u;

/// subgroupSwapVertical with UInt16
extern Variable SubgroupSwapVertical_UInt16_value;
extern Function SubgroupSwapVertical_UInt16;
inline constexpr auto SubgroupSwapVertical_UInt16_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_UInt16_backend_index = 2071u;

/// subgroupSwapVertical with UInt16x2
extern Variable SubgroupSwapVertical_UInt16x2_value;
extern Function SubgroupSwapVertical_UInt16x2;
inline constexpr auto SubgroupSwapVertical_UInt16x2_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_UInt16x2_backend_index = 2072u;

/// subgroupSwapVertical with UInt16x3
extern Variable SubgroupSwapVertical_UInt16x3_value;
extern Function SubgroupSwapVertical_UInt16x3;
inline constexpr auto SubgroupSwapVertical_UInt16x3_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_UInt16x3_backend_index = 2073u;

/// subgroupSwapVertical with UInt16x4
extern Variable SubgroupSwapVertical_UInt16x4_value;
extern Function SubgroupSwapVertical_UInt16x4;
inline constexpr auto SubgroupSwapVertical_UInt16x4_name = "subgroupSwapVertical"_c;
inline constexpr auto SubgroupSwapVertical_UInt16x4_backend_index = 2074u;

/// subgroupSwapHorizontal with Float32
extern Variable SubgroupSwapHorizontal_Float32_value;
extern Function SubgroupSwapHorizontal_Float32;
inline constexpr auto SubgroupSwapHorizontal_Float32_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Float32_backend_index = 2075u;

/// subgroupSwapHorizontal with Float32x2
extern Variable SubgroupSwapHorizontal_Float32x2_value;
extern Function SubgroupSwapHorizontal_Float32x2;
inline constexpr auto SubgroupSwapHorizontal_Float32x2_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Float32x2_backend_index = 2076u;

/// subgroupSwapHorizontal with Float32x3
extern Variable SubgroupSwapHorizontal_Float32x3_value;
extern Function SubgroupSwapHorizontal_Float32x3;
inline constexpr auto SubgroupSwapHorizontal_Float32x3_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Float32x3_backend_index = 2077u;

/// subgroupSwapHorizontal with Float32x4
extern Variable SubgroupSwapHorizontal_Float32x4_value;
extern Function SubgroupSwapHorizontal_Float32x4;
inline constexpr auto SubgroupSwapHorizontal_Float32x4_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Float32x4_backend_index = 2078u;

/// subgroupSwapHorizontal with Float16
extern Variable SubgroupSwapHorizontal_Float16_value;
extern Function SubgroupSwapHorizontal_Float16;
inline constexpr auto SubgroupSwapHorizontal_Float16_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Float16_backend_index = 2079u;

/// subgroupSwapHorizontal with Float16x2
extern Variable SubgroupSwapHorizontal_Float16x2_value;
extern Function SubgroupSwapHorizontal_Float16x2;
inline constexpr auto SubgroupSwapHorizontal_Float16x2_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Float16x2_backend_index = 2080u;

/// subgroupSwapHorizontal with Float16x3
extern Variable SubgroupSwapHorizontal_Float16x3_value;
extern Function SubgroupSwapHorizontal_Float16x3;
inline constexpr auto SubgroupSwapHorizontal_Float16x3_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Float16x3_backend_index = 2081u;

/// subgroupSwapHorizontal with Float16x4
extern Variable SubgroupSwapHorizontal_Float16x4_value;
extern Function SubgroupSwapHorizontal_Float16x4;
inline constexpr auto SubgroupSwapHorizontal_Float16x4_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Float16x4_backend_index = 2082u;

/// subgroupSwapHorizontal with Int32
extern Variable SubgroupSwapHorizontal_Int32_value;
extern Function SubgroupSwapHorizontal_Int32;
inline constexpr auto SubgroupSwapHorizontal_Int32_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Int32_backend_index = 2083u;

/// subgroupSwapHorizontal with Int32x2
extern Variable SubgroupSwapHorizontal_Int32x2_value;
extern Function SubgroupSwapHorizontal_Int32x2;
inline constexpr auto SubgroupSwapHorizontal_Int32x2_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Int32x2_backend_index = 2084u;

/// subgroupSwapHorizontal with Int32x3
extern Variable SubgroupSwapHorizontal_Int32x3_value;
extern Function SubgroupSwapHorizontal_Int32x3;
inline constexpr auto SubgroupSwapHorizontal_Int32x3_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Int32x3_backend_index = 2085u;

/// subgroupSwapHorizontal with Int32x4
extern Variable SubgroupSwapHorizontal_Int32x4_value;
extern Function SubgroupSwapHorizontal_Int32x4;
inline constexpr auto SubgroupSwapHorizontal_Int32x4_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Int32x4_backend_index = 2086u;

/// subgroupSwapHorizontal with Int16
extern Variable SubgroupSwapHorizontal_Int16_value;
extern Function SubgroupSwapHorizontal_Int16;
inline constexpr auto SubgroupSwapHorizontal_Int16_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Int16_backend_index = 2087u;

/// subgroupSwapHorizontal with Int16x2
extern Variable SubgroupSwapHorizontal_Int16x2_value;
extern Function SubgroupSwapHorizontal_Int16x2;
inline constexpr auto SubgroupSwapHorizontal_Int16x2_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Int16x2_backend_index = 2088u;

/// subgroupSwapHorizontal with Int16x3
extern Variable SubgroupSwapHorizontal_Int16x3_value;
extern Function SubgroupSwapHorizontal_Int16x3;
inline constexpr auto SubgroupSwapHorizontal_Int16x3_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Int16x3_backend_index = 2089u;

/// subgroupSwapHorizontal with Int16x4
extern Variable SubgroupSwapHorizontal_Int16x4_value;
extern Function SubgroupSwapHorizontal_Int16x4;
inline constexpr auto SubgroupSwapHorizontal_Int16x4_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_Int16x4_backend_index = 2090u;

/// subgroupSwapHorizontal with UInt32
extern Variable SubgroupSwapHorizontal_UInt32_value;
extern Function SubgroupSwapHorizontal_UInt32;
inline constexpr auto SubgroupSwapHorizontal_UInt32_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_UInt32_backend_index = 2091u;

/// subgroupSwapHorizontal with UInt32x2
extern Variable SubgroupSwapHorizontal_UInt32x2_value;
extern Function SubgroupSwapHorizontal_UInt32x2;
inline constexpr auto SubgroupSwapHorizontal_UInt32x2_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_UInt32x2_backend_index = 2092u;

/// subgroupSwapHorizontal with UInt32x3
extern Variable SubgroupSwapHorizontal_UInt32x3_value;
extern Function SubgroupSwapHorizontal_UInt32x3;
inline constexpr auto SubgroupSwapHorizontal_UInt32x3_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_UInt32x3_backend_index = 2093u;

/// subgroupSwapHorizontal with UInt32x4
extern Variable SubgroupSwapHorizontal_UInt32x4_value;
extern Function SubgroupSwapHorizontal_UInt32x4;
inline constexpr auto SubgroupSwapHorizontal_UInt32x4_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_UInt32x4_backend_index = 2094u;

/// subgroupSwapHorizontal with UInt16
extern Variable SubgroupSwapHorizontal_UInt16_value;
extern Function SubgroupSwapHorizontal_UInt16;
inline constexpr auto SubgroupSwapHorizontal_UInt16_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_UInt16_backend_index = 2095u;

/// subgroupSwapHorizontal with UInt16x2
extern Variable SubgroupSwapHorizontal_UInt16x2_value;
extern Function SubgroupSwapHorizontal_UInt16x2;
inline constexpr auto SubgroupSwapHorizontal_UInt16x2_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_UInt16x2_backend_index = 2096u;

/// subgroupSwapHorizontal with UInt16x3
extern Variable SubgroupSwapHorizontal_UInt16x3_value;
extern Function SubgroupSwapHorizontal_UInt16x3;
inline constexpr auto SubgroupSwapHorizontal_UInt16x3_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_UInt16x3_backend_index = 2097u;

/// subgroupSwapHorizontal with UInt16x4
extern Variable SubgroupSwapHorizontal_UInt16x4_value;
extern Function SubgroupSwapHorizontal_UInt16x4;
inline constexpr auto SubgroupSwapHorizontal_UInt16x4_name = "subgroupSwapHorizontal"_c;
inline constexpr auto SubgroupSwapHorizontal_UInt16x4_backend_index = 2098u;

/// atomicLoad with UInt32, MemorySemantics
extern Variable AtomicLoad_UInt32_ptr;
extern Variable AtomicLoad_UInt32_semantics;
extern Function AtomicLoad_UInt32;
inline constexpr auto AtomicLoad_UInt32_name = "atomicLoad"_c;
inline constexpr auto AtomicLoad_UInt32_backend_index = 2099u;

/// atomicIncrement with UInt32, MemorySemantics
extern Variable AtomicIncrement_UInt32_ptr;
extern Variable AtomicIncrement_UInt32_semantics;
extern Function AtomicIncrement_UInt32;
inline constexpr auto AtomicIncrement_UInt32_name = "atomicIncrement"_c;
inline constexpr auto AtomicIncrement_UInt32_backend_index = 2100u;

/// atomicDecrement with UInt32, MemorySemantics
extern Variable AtomicDecrement_UInt32_ptr;
extern Variable AtomicDecrement_UInt32_semantics;
extern Function AtomicDecrement_UInt32;
inline constexpr auto AtomicDecrement_UInt32_name = "atomicDecrement"_c;
inline constexpr auto AtomicDecrement_UInt32_backend_index = 2101u;

/// atomicLoad with Int32, MemorySemantics
extern Variable AtomicLoad_Int32_ptr;
extern Variable AtomicLoad_Int32_semantics;
extern Function AtomicLoad_Int32;
inline constexpr auto AtomicLoad_Int32_name = "atomicLoad"_c;
inline constexpr auto AtomicLoad_Int32_backend_index = 2102u;

/// atomicIncrement with Int32, MemorySemantics
extern Variable AtomicIncrement_Int32_ptr;
extern Variable AtomicIncrement_Int32_semantics;
extern Function AtomicIncrement_Int32;
inline constexpr auto AtomicIncrement_Int32_name = "atomicIncrement"_c;
inline constexpr auto AtomicIncrement_Int32_backend_index = 2103u;

/// atomicDecrement with Int32, MemorySemantics
extern Variable AtomicDecrement_Int32_ptr;
extern Variable AtomicDecrement_Int32_semantics;
extern Function AtomicDecrement_Int32;
inline constexpr auto AtomicDecrement_Int32_name = "atomicDecrement"_c;
inline constexpr auto AtomicDecrement_Int32_backend_index = 2104u;

/// atomicLoad with UInt16, MemorySemantics
extern Variable AtomicLoad_UInt16_ptr;
extern Variable AtomicLoad_UInt16_semantics;
extern Function AtomicLoad_UInt16;
inline constexpr auto AtomicLoad_UInt16_name = "atomicLoad"_c;
inline constexpr auto AtomicLoad_UInt16_backend_index = 2105u;

/// atomicIncrement with UInt16, MemorySemantics
extern Variable AtomicIncrement_UInt16_ptr;
extern Variable AtomicIncrement_UInt16_semantics;
extern Function AtomicIncrement_UInt16;
inline constexpr auto AtomicIncrement_UInt16_name = "atomicIncrement"_c;
inline constexpr auto AtomicIncrement_UInt16_backend_index = 2106u;

/// atomicDecrement with UInt16, MemorySemantics
extern Variable AtomicDecrement_UInt16_ptr;
extern Variable AtomicDecrement_UInt16_semantics;
extern Function AtomicDecrement_UInt16;
inline constexpr auto AtomicDecrement_UInt16_name = "atomicDecrement"_c;
inline constexpr auto AtomicDecrement_UInt16_backend_index = 2107u;

/// atomicLoad with Int16, MemorySemantics
extern Variable AtomicLoad_Int16_ptr;
extern Variable AtomicLoad_Int16_semantics;
extern Function AtomicLoad_Int16;
inline constexpr auto AtomicLoad_Int16_name = "atomicLoad"_c;
inline constexpr auto AtomicLoad_Int16_backend_index = 2108u;

/// atomicIncrement with Int16, MemorySemantics
extern Variable AtomicIncrement_Int16_ptr;
extern Variable AtomicIncrement_Int16_semantics;
extern Function AtomicIncrement_Int16;
inline constexpr auto AtomicIncrement_Int16_name = "atomicIncrement"_c;
inline constexpr auto AtomicIncrement_Int16_backend_index = 2109u;

/// atomicDecrement with Int16, MemorySemantics
extern Variable AtomicDecrement_Int16_ptr;
extern Variable AtomicDecrement_Int16_semantics;
extern Function AtomicDecrement_Int16;
inline constexpr auto AtomicDecrement_Int16_name = "atomicDecrement"_c;
inline constexpr auto AtomicDecrement_Int16_backend_index = 2110u;

/// atomicLoad with Float32, MemorySemantics
extern Variable AtomicLoad_Float32_ptr;
extern Variable AtomicLoad_Float32_semantics;
extern Function AtomicLoad_Float32;
inline constexpr auto AtomicLoad_Float32_name = "atomicLoad"_c;
inline constexpr auto AtomicLoad_Float32_backend_index = 2111u;

/// atomicLoad with Float16, MemorySemantics
extern Variable AtomicLoad_Float16_ptr;
extern Variable AtomicLoad_Float16_semantics;
extern Function AtomicLoad_Float16;
inline constexpr auto AtomicLoad_Float16_name = "atomicLoad"_c;
inline constexpr auto AtomicLoad_Float16_backend_index = 2112u;

/// atomicStore with UInt32, UInt32, MemorySemantics
extern Variable AtomicStore_UInt32_ptr;
extern Variable AtomicStore_UInt32_value;
extern Variable AtomicStore_UInt32_semantics;
extern Function AtomicStore_UInt32;
inline constexpr auto AtomicStore_UInt32_name = "atomicStore"_c;
inline constexpr auto AtomicStore_UInt32_backend_index = 2113u;

/// atomicExchange with UInt32, UInt32, MemorySemantics
extern Variable AtomicExchange_UInt32_ptr;
extern Variable AtomicExchange_UInt32_value;
extern Variable AtomicExchange_UInt32_semantics;
extern Function AtomicExchange_UInt32;
inline constexpr auto AtomicExchange_UInt32_name = "atomicExchange"_c;
inline constexpr auto AtomicExchange_UInt32_backend_index = 2114u;

/// atomicAdd with UInt32, UInt32, MemorySemantics
extern Variable AtomicAdd_UInt32_ptr;
extern Variable AtomicAdd_UInt32_value;
extern Variable AtomicAdd_UInt32_semantics;
extern Function AtomicAdd_UInt32;
inline constexpr auto AtomicAdd_UInt32_name = "atomicAdd"_c;
inline constexpr auto AtomicAdd_UInt32_backend_index = 2115u;

/// atomicSubtract with UInt32, UInt32, MemorySemantics
extern Variable AtomicSubtract_UInt32_ptr;
extern Variable AtomicSubtract_UInt32_value;
extern Variable AtomicSubtract_UInt32_semantics;
extern Function AtomicSubtract_UInt32;
inline constexpr auto AtomicSubtract_UInt32_name = "atomicSubtract"_c;
inline constexpr auto AtomicSubtract_UInt32_backend_index = 2116u;

/// atomicAnd with UInt32, UInt32, MemorySemantics
extern Variable AtomicAnd_UInt32_ptr;
extern Variable AtomicAnd_UInt32_value;
extern Variable AtomicAnd_UInt32_semantics;
extern Function AtomicAnd_UInt32;
inline constexpr auto AtomicAnd_UInt32_name = "atomicAnd"_c;
inline constexpr auto AtomicAnd_UInt32_backend_index = 2117u;

/// atomicOr with UInt32, UInt32, MemorySemantics
extern Variable AtomicOr_UInt32_ptr;
extern Variable AtomicOr_UInt32_value;
extern Variable AtomicOr_UInt32_semantics;
extern Function AtomicOr_UInt32;
inline constexpr auto AtomicOr_UInt32_name = "atomicOr"_c;
inline constexpr auto AtomicOr_UInt32_backend_index = 2118u;

/// atomicXor with UInt32, UInt32, MemorySemantics
extern Variable AtomicXor_UInt32_ptr;
extern Variable AtomicXor_UInt32_value;
extern Variable AtomicXor_UInt32_semantics;
extern Function AtomicXor_UInt32;
inline constexpr auto AtomicXor_UInt32_name = "atomicXor"_c;
inline constexpr auto AtomicXor_UInt32_backend_index = 2119u;

/// atomicStore with Int32, Int32, MemorySemantics
extern Variable AtomicStore_Int32_ptr;
extern Variable AtomicStore_Int32_value;
extern Variable AtomicStore_Int32_semantics;
extern Function AtomicStore_Int32;
inline constexpr auto AtomicStore_Int32_name = "atomicStore"_c;
inline constexpr auto AtomicStore_Int32_backend_index = 2120u;

/// atomicExchange with Int32, Int32, MemorySemantics
extern Variable AtomicExchange_Int32_ptr;
extern Variable AtomicExchange_Int32_value;
extern Variable AtomicExchange_Int32_semantics;
extern Function AtomicExchange_Int32;
inline constexpr auto AtomicExchange_Int32_name = "atomicExchange"_c;
inline constexpr auto AtomicExchange_Int32_backend_index = 2121u;

/// atomicAdd with Int32, Int32, MemorySemantics
extern Variable AtomicAdd_Int32_ptr;
extern Variable AtomicAdd_Int32_value;
extern Variable AtomicAdd_Int32_semantics;
extern Function AtomicAdd_Int32;
inline constexpr auto AtomicAdd_Int32_name = "atomicAdd"_c;
inline constexpr auto AtomicAdd_Int32_backend_index = 2122u;

/// atomicSubtract with Int32, Int32, MemorySemantics
extern Variable AtomicSubtract_Int32_ptr;
extern Variable AtomicSubtract_Int32_value;
extern Variable AtomicSubtract_Int32_semantics;
extern Function AtomicSubtract_Int32;
inline constexpr auto AtomicSubtract_Int32_name = "atomicSubtract"_c;
inline constexpr auto AtomicSubtract_Int32_backend_index = 2123u;

/// atomicAnd with Int32, Int32, MemorySemantics
extern Variable AtomicAnd_Int32_ptr;
extern Variable AtomicAnd_Int32_value;
extern Variable AtomicAnd_Int32_semantics;
extern Function AtomicAnd_Int32;
inline constexpr auto AtomicAnd_Int32_name = "atomicAnd"_c;
inline constexpr auto AtomicAnd_Int32_backend_index = 2124u;

/// atomicOr with Int32, Int32, MemorySemantics
extern Variable AtomicOr_Int32_ptr;
extern Variable AtomicOr_Int32_value;
extern Variable AtomicOr_Int32_semantics;
extern Function AtomicOr_Int32;
inline constexpr auto AtomicOr_Int32_name = "atomicOr"_c;
inline constexpr auto AtomicOr_Int32_backend_index = 2125u;

/// atomicXor with Int32, Int32, MemorySemantics
extern Variable AtomicXor_Int32_ptr;
extern Variable AtomicXor_Int32_value;
extern Variable AtomicXor_Int32_semantics;
extern Function AtomicXor_Int32;
inline constexpr auto AtomicXor_Int32_name = "atomicXor"_c;
inline constexpr auto AtomicXor_Int32_backend_index = 2126u;

/// atomicStore with UInt16, UInt16, MemorySemantics
extern Variable AtomicStore_UInt16_ptr;
extern Variable AtomicStore_UInt16_value;
extern Variable AtomicStore_UInt16_semantics;
extern Function AtomicStore_UInt16;
inline constexpr auto AtomicStore_UInt16_name = "atomicStore"_c;
inline constexpr auto AtomicStore_UInt16_backend_index = 2127u;

/// atomicExchange with UInt16, UInt16, MemorySemantics
extern Variable AtomicExchange_UInt16_ptr;
extern Variable AtomicExchange_UInt16_value;
extern Variable AtomicExchange_UInt16_semantics;
extern Function AtomicExchange_UInt16;
inline constexpr auto AtomicExchange_UInt16_name = "atomicExchange"_c;
inline constexpr auto AtomicExchange_UInt16_backend_index = 2128u;

/// atomicAdd with UInt16, UInt16, MemorySemantics
extern Variable AtomicAdd_UInt16_ptr;
extern Variable AtomicAdd_UInt16_value;
extern Variable AtomicAdd_UInt16_semantics;
extern Function AtomicAdd_UInt16;
inline constexpr auto AtomicAdd_UInt16_name = "atomicAdd"_c;
inline constexpr auto AtomicAdd_UInt16_backend_index = 2129u;

/// atomicSubtract with UInt16, UInt16, MemorySemantics
extern Variable AtomicSubtract_UInt16_ptr;
extern Variable AtomicSubtract_UInt16_value;
extern Variable AtomicSubtract_UInt16_semantics;
extern Function AtomicSubtract_UInt16;
inline constexpr auto AtomicSubtract_UInt16_name = "atomicSubtract"_c;
inline constexpr auto AtomicSubtract_UInt16_backend_index = 2130u;

/// atomicAnd with UInt16, UInt16, MemorySemantics
extern Variable AtomicAnd_UInt16_ptr;
extern Variable AtomicAnd_UInt16_value;
extern Variable AtomicAnd_UInt16_semantics;
extern Function AtomicAnd_UInt16;
inline constexpr auto AtomicAnd_UInt16_name = "atomicAnd"_c;
inline constexpr auto AtomicAnd_UInt16_backend_index = 2131u;

/// atomicOr with UInt16, UInt16, MemorySemantics
extern Variable AtomicOr_UInt16_ptr;
extern Variable AtomicOr_UInt16_value;
extern Variable AtomicOr_UInt16_semantics;
extern Function AtomicOr_UInt16;
inline constexpr auto AtomicOr_UInt16_name = "atomicOr"_c;
inline constexpr auto AtomicOr_UInt16_backend_index = 2132u;

/// atomicXor with UInt16, UInt16, MemorySemantics
extern Variable AtomicXor_UInt16_ptr;
extern Variable AtomicXor_UInt16_value;
extern Variable AtomicXor_UInt16_semantics;
extern Function AtomicXor_UInt16;
inline constexpr auto AtomicXor_UInt16_name = "atomicXor"_c;
inline constexpr auto AtomicXor_UInt16_backend_index = 2133u;

/// atomicStore with Int16, Int16, MemorySemantics
extern Variable AtomicStore_Int16_ptr;
extern Variable AtomicStore_Int16_value;
extern Variable AtomicStore_Int16_semantics;
extern Function AtomicStore_Int16;
inline constexpr auto AtomicStore_Int16_name = "atomicStore"_c;
inline constexpr auto AtomicStore_Int16_backend_index = 2134u;

/// atomicExchange with Int16, Int16, MemorySemantics
extern Variable AtomicExchange_Int16_ptr;
extern Variable AtomicExchange_Int16_value;
extern Variable AtomicExchange_Int16_semantics;
extern Function AtomicExchange_Int16;
inline constexpr auto AtomicExchange_Int16_name = "atomicExchange"_c;
inline constexpr auto AtomicExchange_Int16_backend_index = 2135u;

/// atomicAdd with Int16, Int16, MemorySemantics
extern Variable AtomicAdd_Int16_ptr;
extern Variable AtomicAdd_Int16_value;
extern Variable AtomicAdd_Int16_semantics;
extern Function AtomicAdd_Int16;
inline constexpr auto AtomicAdd_Int16_name = "atomicAdd"_c;
inline constexpr auto AtomicAdd_Int16_backend_index = 2136u;

/// atomicSubtract with Int16, Int16, MemorySemantics
extern Variable AtomicSubtract_Int16_ptr;
extern Variable AtomicSubtract_Int16_value;
extern Variable AtomicSubtract_Int16_semantics;
extern Function AtomicSubtract_Int16;
inline constexpr auto AtomicSubtract_Int16_name = "atomicSubtract"_c;
inline constexpr auto AtomicSubtract_Int16_backend_index = 2137u;

/// atomicAnd with Int16, Int16, MemorySemantics
extern Variable AtomicAnd_Int16_ptr;
extern Variable AtomicAnd_Int16_value;
extern Variable AtomicAnd_Int16_semantics;
extern Function AtomicAnd_Int16;
inline constexpr auto AtomicAnd_Int16_name = "atomicAnd"_c;
inline constexpr auto AtomicAnd_Int16_backend_index = 2138u;

/// atomicOr with Int16, Int16, MemorySemantics
extern Variable AtomicOr_Int16_ptr;
extern Variable AtomicOr_Int16_value;
extern Variable AtomicOr_Int16_semantics;
extern Function AtomicOr_Int16;
inline constexpr auto AtomicOr_Int16_name = "atomicOr"_c;
inline constexpr auto AtomicOr_Int16_backend_index = 2139u;

/// atomicXor with Int16, Int16, MemorySemantics
extern Variable AtomicXor_Int16_ptr;
extern Variable AtomicXor_Int16_value;
extern Variable AtomicXor_Int16_semantics;
extern Function AtomicXor_Int16;
inline constexpr auto AtomicXor_Int16_name = "atomicXor"_c;
inline constexpr auto AtomicXor_Int16_backend_index = 2140u;

/// atomicStore with Float32, Float32, MemorySemantics
extern Variable AtomicStore_Float32_ptr;
extern Variable AtomicStore_Float32_value;
extern Variable AtomicStore_Float32_semantics;
extern Function AtomicStore_Float32;
inline constexpr auto AtomicStore_Float32_name = "atomicStore"_c;
inline constexpr auto AtomicStore_Float32_backend_index = 2141u;

/// atomicExchange with Float32, Float32, MemorySemantics
extern Variable AtomicExchange_Float32_ptr;
extern Variable AtomicExchange_Float32_value;
extern Variable AtomicExchange_Float32_semantics;
extern Function AtomicExchange_Float32;
inline constexpr auto AtomicExchange_Float32_name = "atomicExchange"_c;
inline constexpr auto AtomicExchange_Float32_backend_index = 2142u;

/// atomicStore with Float16, Float16, MemorySemantics
extern Variable AtomicStore_Float16_ptr;
extern Variable AtomicStore_Float16_value;
extern Variable AtomicStore_Float16_semantics;
extern Function AtomicStore_Float16;
inline constexpr auto AtomicStore_Float16_name = "atomicStore"_c;
inline constexpr auto AtomicStore_Float16_backend_index = 2143u;

/// atomicExchange with Float16, Float16, MemorySemantics
extern Variable AtomicExchange_Float16_ptr;
extern Variable AtomicExchange_Float16_value;
extern Variable AtomicExchange_Float16_semantics;
extern Function AtomicExchange_Float16;
inline constexpr auto AtomicExchange_Float16_name = "atomicExchange"_c;
inline constexpr auto AtomicExchange_Float16_backend_index = 2144u;

/// atomicMin with Float16, Float16, MemorySemantics
extern Variable AtomicMin_UInt32_ptr;
extern Variable AtomicMin_UInt32_compare;
extern Variable AtomicMin_UInt32_semantics;
extern Function AtomicMin_UInt32;
inline constexpr auto AtomicMin_UInt32_name = "atomicMin"_c;
inline constexpr auto AtomicMin_UInt32_backend_index = 2145u;

/// atomicMax with Float16, Float16, MemorySemantics
extern Variable AtomicMax_UInt32_ptr;
extern Variable AtomicMax_UInt32_compare;
extern Variable AtomicMax_UInt32_semantics;
extern Function AtomicMax_UInt32;
inline constexpr auto AtomicMax_UInt32_name = "atomicMax"_c;
inline constexpr auto AtomicMax_UInt32_backend_index = 2146u;

/// atomicMin with Float16, Float16, MemorySemantics
extern Variable AtomicMin_Int32_ptr;
extern Variable AtomicMin_Int32_compare;
extern Variable AtomicMin_Int32_semantics;
extern Function AtomicMin_Int32;
inline constexpr auto AtomicMin_Int32_name = "atomicMin"_c;
inline constexpr auto AtomicMin_Int32_backend_index = 2147u;

/// atomicMax with Float16, Float16, MemorySemantics
extern Variable AtomicMax_Int32_ptr;
extern Variable AtomicMax_Int32_compare;
extern Variable AtomicMax_Int32_semantics;
extern Function AtomicMax_Int32;
inline constexpr auto AtomicMax_Int32_name = "atomicMax"_c;
inline constexpr auto AtomicMax_Int32_backend_index = 2148u;

/// atomicMin with Float16, Float16, MemorySemantics
extern Variable AtomicMin_UInt16_ptr;
extern Variable AtomicMin_UInt16_compare;
extern Variable AtomicMin_UInt16_semantics;
extern Function AtomicMin_UInt16;
inline constexpr auto AtomicMin_UInt16_name = "atomicMin"_c;
inline constexpr auto AtomicMin_UInt16_backend_index = 2149u;

/// atomicMax with Float16, Float16, MemorySemantics
extern Variable AtomicMax_UInt16_ptr;
extern Variable AtomicMax_UInt16_compare;
extern Variable AtomicMax_UInt16_semantics;
extern Function AtomicMax_UInt16;
inline constexpr auto AtomicMax_UInt16_name = "atomicMax"_c;
inline constexpr auto AtomicMax_UInt16_backend_index = 2150u;

/// atomicMin with Float16, Float16, MemorySemantics
extern Variable AtomicMin_Int16_ptr;
extern Variable AtomicMin_Int16_compare;
extern Variable AtomicMin_Int16_semantics;
extern Function AtomicMin_Int16;
inline constexpr auto AtomicMin_Int16_name = "atomicMin"_c;
inline constexpr auto AtomicMin_Int16_backend_index = 2151u;

/// atomicMax with Float16, Float16, MemorySemantics
extern Variable AtomicMax_Int16_ptr;
extern Variable AtomicMax_Int16_compare;
extern Variable AtomicMax_Int16_semantics;
extern Function AtomicMax_Int16;
inline constexpr auto AtomicMax_Int16_name = "atomicMax"_c;
inline constexpr auto AtomicMax_Int16_backend_index = 2152u;

/// atomicCompareExchange with Float16, Float16, Float16, MemorySemantics
extern Variable AtomicCompareExchange_UInt32_ptr;
extern Variable AtomicCompareExchange_UInt32_value;
extern Variable AtomicCompareExchange_UInt32_compare;
extern Variable AtomicCompareExchange_UInt32_semantics;
extern Function AtomicCompareExchange_UInt32;
inline constexpr auto AtomicCompareExchange_UInt32_name = "atomicCompareExchange"_c;
inline constexpr auto AtomicCompareExchange_UInt32_backend_index = 2153u;

/// atomicCompareExchange with Float16, Float16, Float16, MemorySemantics
extern Variable AtomicCompareExchange_Int32_ptr;
extern Variable AtomicCompareExchange_Int32_value;
extern Variable AtomicCompareExchange_Int32_compare;
extern Variable AtomicCompareExchange_Int32_semantics;
extern Function AtomicCompareExchange_Int32;
inline constexpr auto AtomicCompareExchange_Int32_name = "atomicCompareExchange"_c;
inline constexpr auto AtomicCompareExchange_Int32_backend_index = 2154u;

/// atomicCompareExchange with Float16, Float16, Float16, MemorySemantics
extern Variable AtomicCompareExchange_UInt16_ptr;
extern Variable AtomicCompareExchange_UInt16_value;
extern Variable AtomicCompareExchange_UInt16_compare;
extern Variable AtomicCompareExchange_UInt16_semantics;
extern Function AtomicCompareExchange_UInt16;
inline constexpr auto AtomicCompareExchange_UInt16_name = "atomicCompareExchange"_c;
inline constexpr auto AtomicCompareExchange_UInt16_backend_index = 2155u;

/// atomicCompareExchange with Float16, Float16, Float16, MemorySemantics
extern Variable AtomicCompareExchange_Int16_ptr;
extern Variable AtomicCompareExchange_Int16_value;
extern Variable AtomicCompareExchange_Int16_compare;
extern Variable AtomicCompareExchange_Int16_semantics;
extern Function AtomicCompareExchange_Int16;
inline constexpr auto AtomicCompareExchange_Int16_name = "atomicCompareExchange"_c;
inline constexpr auto AtomicCompareExchange_Int16_backend_index = 2156u;

/// bitInsert with UInt16, UInt16, UInt16, UInt16
extern Variable BitInsert_UInt16_base;
extern Variable BitInsert_UInt16_value;
extern Variable BitInsert_UInt16_offset;
extern Variable BitInsert_UInt16_count;
extern Function BitInsert_UInt16;
inline constexpr auto BitInsert_UInt16_name = "bitInsert"_c;
inline constexpr auto BitInsert_UInt16_backend_index = 2157u;

/// bitInsert with UInt32, UInt32, UInt32, UInt32
extern Variable BitInsert_UInt32_base;
extern Variable BitInsert_UInt32_value;
extern Variable BitInsert_UInt32_offset;
extern Variable BitInsert_UInt32_count;
extern Function BitInsert_UInt32;
inline constexpr auto BitInsert_UInt32_name = "bitInsert"_c;
inline constexpr auto BitInsert_UInt32_backend_index = 2158u;

/// bitExtract with UInt32, UInt32, UInt32
extern Variable BitExtract_UInt32_base;
extern Variable BitExtract_UInt32_offset;
extern Variable BitExtract_UInt32_count;
extern Function BitExtract_UInt32;
inline constexpr auto BitExtract_UInt32_name = "bitExtract"_c;
inline constexpr auto BitExtract_UInt32_backend_index = 2159u;

/// bitExtract with Int32, Int32, Int32
extern Variable BitExtract_Int32_base;
extern Variable BitExtract_Int32_offset;
extern Variable BitExtract_Int32_count;
extern Function BitExtract_Int32;
inline constexpr auto BitExtract_Int32_name = "bitExtract"_c;
inline constexpr auto BitExtract_Int32_backend_index = 2160u;

/// bitExtract with UInt16, UInt16, UInt16
extern Variable BitExtract_UInt16_base;
extern Variable BitExtract_UInt16_offset;
extern Variable BitExtract_UInt16_count;
extern Function BitExtract_UInt16;
inline constexpr auto BitExtract_UInt16_name = "bitExtract"_c;
inline constexpr auto BitExtract_UInt16_backend_index = 2161u;

/// bitExtract with Int16, Int16, Int16
extern Variable BitExtract_Int16_base;
extern Variable BitExtract_Int16_offset;
extern Variable BitExtract_Int16_count;
extern Function BitExtract_Int16;
inline constexpr auto BitExtract_Int16_name = "bitExtract"_c;
inline constexpr auto BitExtract_Int16_backend_index = 2162u;

/// bitReverse with UInt32
extern Variable BitReverse_UInt32_base;
extern Function BitReverse_UInt32;
inline constexpr auto BitReverse_UInt32_name = "bitReverse"_c;
inline constexpr auto BitReverse_UInt32_backend_index = 2163u;

/// bitReverse with Int32
extern Variable BitReverse_Int32_base;
extern Function BitReverse_Int32;
inline constexpr auto BitReverse_Int32_name = "bitReverse"_c;
inline constexpr auto BitReverse_Int32_backend_index = 2164u;

/// bitReverse with UInt16
extern Variable BitReverse_UInt16_base;
extern Function BitReverse_UInt16;
inline constexpr auto BitReverse_UInt16_name = "bitReverse"_c;
inline constexpr auto BitReverse_UInt16_backend_index = 2165u;

/// bitReverse with Int16
extern Variable BitReverse_Int16_base;
extern Function BitReverse_Int16;
inline constexpr auto BitReverse_Int16_name = "bitReverse"_c;
inline constexpr auto BitReverse_Int16_backend_index = 2166u;

/// bitCount with UInt32
extern Variable BitCount_UInt32_base;
extern Function BitCount_UInt32;
inline constexpr auto BitCount_UInt32_name = "bitCount"_c;
inline constexpr auto BitCount_UInt32_backend_index = 2167u;

/// bitCount with Int32
extern Variable BitCount_Int32_base;
extern Function BitCount_Int32;
inline constexpr auto BitCount_Int32_name = "bitCount"_c;
inline constexpr auto BitCount_Int32_backend_index = 2168u;

/// bitCount with UInt16
extern Variable BitCount_UInt16_base;
extern Function BitCount_UInt16;
inline constexpr auto BitCount_UInt16_name = "bitCount"_c;
inline constexpr auto BitCount_UInt16_backend_index = 2169u;

/// bitCount with Int16
extern Variable BitCount_Int16_base;
extern Function BitCount_Int16;
inline constexpr auto BitCount_Int16_name = "bitCount"_c;
inline constexpr auto BitCount_Int16_backend_index = 2170u;

/// executionBarrier
extern Function ExecutionBarrier;
inline constexpr auto ExecutionBarrier_name = "executionBarrier"_c;
inline constexpr auto ExecutionBarrier_backend_index = 2171u;

/// executionBarrierSubgroup
extern Function ExecutionBarrierSubgroup;
inline constexpr auto ExecutionBarrierSubgroup_name = "executionBarrierSubgroup"_c;
inline constexpr auto ExecutionBarrierSubgroup_backend_index = 2172u;

/// executionBarrierWorkgroup
extern Function ExecutionBarrierWorkgroup;
inline constexpr auto ExecutionBarrierWorkgroup_name = "executionBarrierWorkgroup"_c;
inline constexpr auto ExecutionBarrierWorkgroup_backend_index = 2173u;

/// memoryBarrier
extern Function MemoryBarrier;
inline constexpr auto MemoryBarrier_name = "memoryBarrier"_c;
inline constexpr auto MemoryBarrier_backend_index = 2174u;

/// memoryBarrierBuffer
extern Function MemoryBarrierBuffer;
inline constexpr auto MemoryBarrierBuffer_name = "memoryBarrierBuffer"_c;
inline constexpr auto MemoryBarrierBuffer_backend_index = 2175u;

/// memoryBarrierTexture
extern Function MemoryBarrierTexture;
inline constexpr auto MemoryBarrierTexture_name = "memoryBarrierTexture"_c;
inline constexpr auto MemoryBarrierTexture_backend_index = 2176u;

/// memoryBarrierAtomic
extern Function MemoryBarrierAtomic;
inline constexpr auto MemoryBarrierAtomic_name = "memoryBarrierAtomic"_c;
inline constexpr auto MemoryBarrierAtomic_backend_index = 2177u;

/// memoryBarrierSubgroup
extern Function MemoryBarrierSubgroup;
inline constexpr auto MemoryBarrierSubgroup_name = "memoryBarrierSubgroup"_c;
inline constexpr auto MemoryBarrierSubgroup_backend_index = 2178u;

/// memoryBarrierWorkgroup
extern Function MemoryBarrierWorkgroup;
inline constexpr auto MemoryBarrierWorkgroup_name = "memoryBarrierWorkgroup"_c;
inline constexpr auto MemoryBarrierWorkgroup_backend_index = 2179u;

/// textureGetSize with Texture1D
extern Variable TextureGetSize_Texture1D_texture;
extern Function TextureGetSize_Texture1D;
inline constexpr auto TextureGetSize_Texture1D_name = "textureGetSize"_c;
inline constexpr auto TextureGetSize_Texture1D_backend_index = 2180u;

/// textureGetSize with Texture2D
extern Variable TextureGetSize_Texture2D_texture;
extern Function TextureGetSize_Texture2D;
inline constexpr auto TextureGetSize_Texture2D_name = "textureGetSize"_c;
inline constexpr auto TextureGetSize_Texture2D_backend_index = 2181u;

/// textureGetSize with Texture3D
extern Variable TextureGetSize_Texture3D_texture;
extern Function TextureGetSize_Texture3D;
inline constexpr auto TextureGetSize_Texture3D_name = "textureGetSize"_c;
inline constexpr auto TextureGetSize_Texture3D_backend_index = 2182u;

/// textureGetSize with TextureCube
extern Variable TextureGetSize_TextureCube_texture;
extern Function TextureGetSize_TextureCube;
inline constexpr auto TextureGetSize_TextureCube_name = "textureGetSize"_c;
inline constexpr auto TextureGetSize_TextureCube_backend_index = 2183u;

/// textureGetSize with Texture1DArray
extern Variable TextureGetSize_Texture1DArray_texture;
extern Function TextureGetSize_Texture1DArray;
inline constexpr auto TextureGetSize_Texture1DArray_name = "textureGetSize"_c;
inline constexpr auto TextureGetSize_Texture1DArray_backend_index = 2184u;

/// textureGetSize with Texture2DArray
extern Variable TextureGetSize_Texture2DArray_texture;
extern Function TextureGetSize_Texture2DArray;
inline constexpr auto TextureGetSize_Texture2DArray_name = "textureGetSize"_c;
inline constexpr auto TextureGetSize_Texture2DArray_backend_index = 2185u;

/// textureGetSize with TextureCubeArray
extern Variable TextureGetSize_TextureCubeArray_texture;
extern Function TextureGetSize_TextureCubeArray;
inline constexpr auto TextureGetSize_TextureCubeArray_name = "textureGetSize"_c;
inline constexpr auto TextureGetSize_TextureCubeArray_backend_index = 2186u;

/// textureGetSizeMip with Texture1D, UInt32
extern Variable TextureGetSizeMip_Texture1D_texture;
extern Variable TextureGetSizeMip_Texture1D_mip;
extern Function TextureGetSizeMip_Texture1D;
inline constexpr auto TextureGetSizeMip_Texture1D_name = "textureGetSizeMip"_c;
inline constexpr auto TextureGetSizeMip_Texture1D_backend_index = 2187u;

/// textureGetSizeMip with Texture2D, UInt32
extern Variable TextureGetSizeMip_Texture2D_texture;
extern Variable TextureGetSizeMip_Texture2D_mip;
extern Function TextureGetSizeMip_Texture2D;
inline constexpr auto TextureGetSizeMip_Texture2D_name = "textureGetSizeMip"_c;
inline constexpr auto TextureGetSizeMip_Texture2D_backend_index = 2188u;

/// textureGetSizeMip with Texture3D, UInt32
extern Variable TextureGetSizeMip_Texture3D_texture;
extern Variable TextureGetSizeMip_Texture3D_mip;
extern Function TextureGetSizeMip_Texture3D;
inline constexpr auto TextureGetSizeMip_Texture3D_name = "textureGetSizeMip"_c;
inline constexpr auto TextureGetSizeMip_Texture3D_backend_index = 2189u;

/// textureGetSizeMip with TextureCube, UInt32
extern Variable TextureGetSizeMip_TextureCube_texture;
extern Variable TextureGetSizeMip_TextureCube_mip;
extern Function TextureGetSizeMip_TextureCube;
inline constexpr auto TextureGetSizeMip_TextureCube_name = "textureGetSizeMip"_c;
inline constexpr auto TextureGetSizeMip_TextureCube_backend_index = 2190u;

/// textureGetSizeMip with Texture1DArray, UInt32
extern Variable TextureGetSizeMip_Texture1DArray_texture;
extern Variable TextureGetSizeMip_Texture1DArray_mip;
extern Function TextureGetSizeMip_Texture1DArray;
inline constexpr auto TextureGetSizeMip_Texture1DArray_name = "textureGetSizeMip"_c;
inline constexpr auto TextureGetSizeMip_Texture1DArray_backend_index = 2191u;

/// textureGetSizeMip with Texture2DArray, UInt32
extern Variable TextureGetSizeMip_Texture2DArray_texture;
extern Variable TextureGetSizeMip_Texture2DArray_mip;
extern Function TextureGetSizeMip_Texture2DArray;
inline constexpr auto TextureGetSizeMip_Texture2DArray_name = "textureGetSizeMip"_c;
inline constexpr auto TextureGetSizeMip_Texture2DArray_backend_index = 2192u;

/// textureGetSizeMip with TextureCubeArray, UInt32
extern Variable TextureGetSizeMip_TextureCubeArray_texture;
extern Variable TextureGetSizeMip_TextureCubeArray_mip;
extern Function TextureGetSizeMip_TextureCubeArray;
inline constexpr auto TextureGetSizeMip_TextureCubeArray_name = "textureGetSizeMip"_c;
inline constexpr auto TextureGetSizeMip_TextureCubeArray_backend_index = 2193u;

/// textureGetMips with Texture1D
extern Variable TextureGetMips_Texture1D_texture;
extern Function TextureGetMips_Texture1D;
inline constexpr auto TextureGetMips_Texture1D_name = "textureGetMips"_c;
inline constexpr auto TextureGetMips_Texture1D_backend_index = 2194u;

/// textureGetMips with Texture2D
extern Variable TextureGetMips_Texture2D_texture;
extern Function TextureGetMips_Texture2D;
inline constexpr auto TextureGetMips_Texture2D_name = "textureGetMips"_c;
inline constexpr auto TextureGetMips_Texture2D_backend_index = 2195u;

/// textureGetMips with Texture3D
extern Variable TextureGetMips_Texture3D_texture;
extern Function TextureGetMips_Texture3D;
inline constexpr auto TextureGetMips_Texture3D_name = "textureGetMips"_c;
inline constexpr auto TextureGetMips_Texture3D_backend_index = 2196u;

/// textureGetMips with TextureCube
extern Variable TextureGetMips_TextureCube_texture;
extern Function TextureGetMips_TextureCube;
inline constexpr auto TextureGetMips_TextureCube_name = "textureGetMips"_c;
inline constexpr auto TextureGetMips_TextureCube_backend_index = 2197u;

/// textureGetMips with Texture1DArray
extern Variable TextureGetMips_Texture1DArray_texture;
extern Function TextureGetMips_Texture1DArray;
inline constexpr auto TextureGetMips_Texture1DArray_name = "textureGetMips"_c;
inline constexpr auto TextureGetMips_Texture1DArray_backend_index = 2198u;

/// textureGetMips with Texture2DArray
extern Variable TextureGetMips_Texture2DArray_texture;
extern Function TextureGetMips_Texture2DArray;
inline constexpr auto TextureGetMips_Texture2DArray_name = "textureGetMips"_c;
inline constexpr auto TextureGetMips_Texture2DArray_backend_index = 2199u;

/// textureGetMips with TextureCubeArray
extern Variable TextureGetMips_TextureCubeArray_texture;
extern Function TextureGetMips_TextureCubeArray;
inline constexpr auto TextureGetMips_TextureCubeArray_name = "textureGetMips"_c;
inline constexpr auto TextureGetMips_TextureCubeArray_backend_index = 2200u;

/// textureGetSamples with Texture2DMS
extern Variable TextureGetSamples_Texture2DMS_texture;
extern Function TextureGetSamples_Texture2DMS;
inline constexpr auto TextureGetSamples_Texture2DMS_name = "textureGetSamples"_c;
inline constexpr auto TextureGetSamples_Texture2DMS_backend_index = 2201u;

/// textureGetSamples with Texture2DMSArray
extern Variable TextureGetSamples_Texture2DMSArray_texture;
extern Function TextureGetSamples_Texture2DMSArray;
inline constexpr auto TextureGetSamples_Texture2DMSArray_name = "textureGetSamples"_c;
inline constexpr auto TextureGetSamples_Texture2DMSArray_backend_index = 2202u;

/// textureGetSampledMip with Texture1D, Sampler, Float32
extern Variable TextureGetSampledMip_Texture1D_texture;
extern Variable TextureGetSampledMip_Texture1D_sampler;
extern Variable TextureGetSampledMip_Texture1D_coordinate;
extern Function TextureGetSampledMip_Texture1D;
inline constexpr auto TextureGetSampledMip_Texture1D_name = "textureGetSampledMip"_c;
inline constexpr auto TextureGetSampledMip_Texture1D_backend_index = 2203u;

/// textureGetSampledMip with SampledTexture1D, Float32
extern Variable SampledTextureGetSampledMip_Texture1D_texture;
extern Variable SampledTextureGetSampledMip_Texture1D_coordinate;
extern Function SampledTextureGetSampledMip_Texture1D;
inline constexpr auto SampledTextureGetSampledMip_Texture1D_name = "textureGetSampledMip"_c;
inline constexpr auto SampledTextureGetSampledMip_Texture1D_backend_index = 2204u;

/// textureGetSampledMip with Texture2D, Sampler, Float32x2
extern Variable TextureGetSampledMip_Texture2D_texture;
extern Variable TextureGetSampledMip_Texture2D_sampler;
extern Variable TextureGetSampledMip_Texture2D_coordinate;
extern Function TextureGetSampledMip_Texture2D;
inline constexpr auto TextureGetSampledMip_Texture2D_name = "textureGetSampledMip"_c;
inline constexpr auto TextureGetSampledMip_Texture2D_backend_index = 2205u;

/// textureGetSampledMip with SampledTexture2D, Float32x2
extern Variable SampledTextureGetSampledMip_Texture2D_texture;
extern Variable SampledTextureGetSampledMip_Texture2D_coordinate;
extern Function SampledTextureGetSampledMip_Texture2D;
inline constexpr auto SampledTextureGetSampledMip_Texture2D_name = "textureGetSampledMip"_c;
inline constexpr auto SampledTextureGetSampledMip_Texture2D_backend_index = 2206u;

/// textureGetSampledMip with Texture3D, Sampler, Float32x3
extern Variable TextureGetSampledMip_Texture3D_texture;
extern Variable TextureGetSampledMip_Texture3D_sampler;
extern Variable TextureGetSampledMip_Texture3D_coordinate;
extern Function TextureGetSampledMip_Texture3D;
inline constexpr auto TextureGetSampledMip_Texture3D_name = "textureGetSampledMip"_c;
inline constexpr auto TextureGetSampledMip_Texture3D_backend_index = 2207u;

/// textureGetSampledMip with SampledTexture3D, Float32x3
extern Variable SampledTextureGetSampledMip_Texture3D_texture;
extern Variable SampledTextureGetSampledMip_Texture3D_coordinate;
extern Function SampledTextureGetSampledMip_Texture3D;
inline constexpr auto SampledTextureGetSampledMip_Texture3D_name = "textureGetSampledMip"_c;
inline constexpr auto SampledTextureGetSampledMip_Texture3D_backend_index = 2208u;

/// textureGetSampledMip with TextureCube, Sampler, Float32x3
extern Variable TextureGetSampledMip_TextureCube_texture;
extern Variable TextureGetSampledMip_TextureCube_sampler;
extern Variable TextureGetSampledMip_TextureCube_coordinate;
extern Function TextureGetSampledMip_TextureCube;
inline constexpr auto TextureGetSampledMip_TextureCube_name = "textureGetSampledMip"_c;
inline constexpr auto TextureGetSampledMip_TextureCube_backend_index = 2209u;

/// textureGetSampledMip with SampledTextureCube, Float32x3
extern Variable SampledTextureGetSampledMip_TextureCube_texture;
extern Variable SampledTextureGetSampledMip_TextureCube_coordinate;
extern Function SampledTextureGetSampledMip_TextureCube;
inline constexpr auto SampledTextureGetSampledMip_TextureCube_name = "textureGetSampledMip"_c;
inline constexpr auto SampledTextureGetSampledMip_TextureCube_backend_index = 2210u;

/// textureGetSampledMip with Texture1DArray, Sampler, Float32x2
extern Variable TextureGetSampledMip_Texture1DArray_texture;
extern Variable TextureGetSampledMip_Texture1DArray_sampler;
extern Variable TextureGetSampledMip_Texture1DArray_coordinate;
extern Function TextureGetSampledMip_Texture1DArray;
inline constexpr auto TextureGetSampledMip_Texture1DArray_name = "textureGetSampledMip"_c;
inline constexpr auto TextureGetSampledMip_Texture1DArray_backend_index = 2211u;

/// textureGetSampledMip with SampledTexture1DArray, Float32x2
extern Variable SampledTextureGetSampledMip_Texture1DArray_texture;
extern Variable SampledTextureGetSampledMip_Texture1DArray_coordinate;
extern Function SampledTextureGetSampledMip_Texture1DArray;
inline constexpr auto SampledTextureGetSampledMip_Texture1DArray_name = "textureGetSampledMip"_c;
inline constexpr auto SampledTextureGetSampledMip_Texture1DArray_backend_index = 2212u;

/// textureGetSampledMip with Texture2DArray, Sampler, Float32x3
extern Variable TextureGetSampledMip_Texture2DArray_texture;
extern Variable TextureGetSampledMip_Texture2DArray_sampler;
extern Variable TextureGetSampledMip_Texture2DArray_coordinate;
extern Function TextureGetSampledMip_Texture2DArray;
inline constexpr auto TextureGetSampledMip_Texture2DArray_name = "textureGetSampledMip"_c;
inline constexpr auto TextureGetSampledMip_Texture2DArray_backend_index = 2213u;

/// textureGetSampledMip with SampledTexture2DArray, Float32x3
extern Variable SampledTextureGetSampledMip_Texture2DArray_texture;
extern Variable SampledTextureGetSampledMip_Texture2DArray_coordinate;
extern Function SampledTextureGetSampledMip_Texture2DArray;
inline constexpr auto SampledTextureGetSampledMip_Texture2DArray_name = "textureGetSampledMip"_c;
inline constexpr auto SampledTextureGetSampledMip_Texture2DArray_backend_index = 2214u;

/// textureGetSampledMip with TextureCubeArray, Sampler, Float32x4
extern Variable TextureGetSampledMip_TextureCubeArray_texture;
extern Variable TextureGetSampledMip_TextureCubeArray_sampler;
extern Variable TextureGetSampledMip_TextureCubeArray_coordinate;
extern Function TextureGetSampledMip_TextureCubeArray;
inline constexpr auto TextureGetSampledMip_TextureCubeArray_name = "textureGetSampledMip"_c;
inline constexpr auto TextureGetSampledMip_TextureCubeArray_backend_index = 2215u;

/// textureGetSampledMip with SampledTextureCubeArray, Float32x4
extern Variable SampledTextureGetSampledMip_TextureCubeArray_texture;
extern Variable SampledTextureGetSampledMip_TextureCubeArray_coordinate;
extern Function SampledTextureGetSampledMip_TextureCubeArray;
inline constexpr auto SampledTextureGetSampledMip_TextureCubeArray_name = "textureGetSampledMip"_c;
inline constexpr auto SampledTextureGetSampledMip_TextureCubeArray_backend_index = 2216u;

/// textureLoad with Texture1D, Int32
extern Variable TextureLoad_Texture1D_texture;
extern Variable TextureLoad_Texture1D_coordinate;
extern Function TextureLoad_Texture1D;
inline constexpr auto TextureLoad_Texture1D_name = "textureLoad"_c;
inline constexpr auto TextureLoad_Texture1D_backend_index = 2217u;

/// textureLoadMip with Texture1D, Int32, Int32
extern Variable TextureLoadMip_Texture1D_texture;
extern Variable TextureLoadMip_Texture1D_coordinate;
extern Variable TextureLoadMip_Texture1D_mip;
extern Function TextureLoadMip_Texture1D;
inline constexpr auto TextureLoadMip_Texture1D_name = "textureLoadMip"_c;
inline constexpr auto TextureLoadMip_Texture1D_backend_index = 2218u;

/// textureStore with Texture1D, Int32, Float32x4
extern Variable TextureStore_Texture1D_texture;
extern Variable TextureStore_Texture1D_coordinate;
extern Variable TextureStore_Texture1D_value;
extern Function TextureStore_Texture1D;
inline constexpr auto TextureStore_Texture1D_name = "textureStore"_c;
inline constexpr auto TextureStore_Texture1D_backend_index = 2219u;

/// textureStoreMip with Texture1D, Int32, Int32, Float32x4
extern Variable TextureStoreMip_Texture1D_texture;
extern Variable TextureStoreMip_Texture1D_coordinate;
extern Variable TextureStoreMip_Texture1D_mip;
extern Variable TextureStoreMip_Texture1D_value;
extern Function TextureStoreMip_Texture1D;
inline constexpr auto TextureStoreMip_Texture1D_name = "textureStoreMip"_c;
inline constexpr auto TextureStoreMip_Texture1D_backend_index = 2220u;

/// textureLoad with Texture2D, Int32x2
extern Variable TextureLoad_Texture2D_texture;
extern Variable TextureLoad_Texture2D_coordinate;
extern Function TextureLoad_Texture2D;
inline constexpr auto TextureLoad_Texture2D_name = "textureLoad"_c;
inline constexpr auto TextureLoad_Texture2D_backend_index = 2221u;

/// textureLoadMip with Texture2D, Int32x2, Int32
extern Variable TextureLoadMip_Texture2D_texture;
extern Variable TextureLoadMip_Texture2D_coordinate;
extern Variable TextureLoadMip_Texture2D_mip;
extern Function TextureLoadMip_Texture2D;
inline constexpr auto TextureLoadMip_Texture2D_name = "textureLoadMip"_c;
inline constexpr auto TextureLoadMip_Texture2D_backend_index = 2222u;

/// textureStore with Texture2D, Int32x2, Float32x4
extern Variable TextureStore_Texture2D_texture;
extern Variable TextureStore_Texture2D_coordinate;
extern Variable TextureStore_Texture2D_value;
extern Function TextureStore_Texture2D;
inline constexpr auto TextureStore_Texture2D_name = "textureStore"_c;
inline constexpr auto TextureStore_Texture2D_backend_index = 2223u;

/// textureStoreMip with Texture2D, Int32x2, Int32, Float32x4
extern Variable TextureStoreMip_Texture2D_texture;
extern Variable TextureStoreMip_Texture2D_coordinate;
extern Variable TextureStoreMip_Texture2D_mip;
extern Variable TextureStoreMip_Texture2D_value;
extern Function TextureStoreMip_Texture2D;
inline constexpr auto TextureStoreMip_Texture2D_name = "textureStoreMip"_c;
inline constexpr auto TextureStoreMip_Texture2D_backend_index = 2224u;

/// textureLoad with Texture3D, Int32x3
extern Variable TextureLoad_Texture3D_texture;
extern Variable TextureLoad_Texture3D_coordinate;
extern Function TextureLoad_Texture3D;
inline constexpr auto TextureLoad_Texture3D_name = "textureLoad"_c;
inline constexpr auto TextureLoad_Texture3D_backend_index = 2225u;

/// textureLoadMip with Texture3D, Int32x3, Int32
extern Variable TextureLoadMip_Texture3D_texture;
extern Variable TextureLoadMip_Texture3D_coordinate;
extern Variable TextureLoadMip_Texture3D_mip;
extern Function TextureLoadMip_Texture3D;
inline constexpr auto TextureLoadMip_Texture3D_name = "textureLoadMip"_c;
inline constexpr auto TextureLoadMip_Texture3D_backend_index = 2226u;

/// textureStore with Texture3D, Int32x3, Float32x4
extern Variable TextureStore_Texture3D_texture;
extern Variable TextureStore_Texture3D_coordinate;
extern Variable TextureStore_Texture3D_value;
extern Function TextureStore_Texture3D;
inline constexpr auto TextureStore_Texture3D_name = "textureStore"_c;
inline constexpr auto TextureStore_Texture3D_backend_index = 2227u;

/// textureStoreMip with Texture3D, Int32x3, Int32, Float32x4
extern Variable TextureStoreMip_Texture3D_texture;
extern Variable TextureStoreMip_Texture3D_coordinate;
extern Variable TextureStoreMip_Texture3D_mip;
extern Variable TextureStoreMip_Texture3D_value;
extern Function TextureStoreMip_Texture3D;
inline constexpr auto TextureStoreMip_Texture3D_name = "textureStoreMip"_c;
inline constexpr auto TextureStoreMip_Texture3D_backend_index = 2228u;

/// textureLoad with TextureCube, Int32x3
extern Variable TextureLoad_TextureCube_texture;
extern Variable TextureLoad_TextureCube_coordinate;
extern Function TextureLoad_TextureCube;
inline constexpr auto TextureLoad_TextureCube_name = "textureLoad"_c;
inline constexpr auto TextureLoad_TextureCube_backend_index = 2229u;

/// textureLoadMip with TextureCube, Int32x3, Int32
extern Variable TextureLoadMip_TextureCube_texture;
extern Variable TextureLoadMip_TextureCube_coordinate;
extern Variable TextureLoadMip_TextureCube_mip;
extern Function TextureLoadMip_TextureCube;
inline constexpr auto TextureLoadMip_TextureCube_name = "textureLoadMip"_c;
inline constexpr auto TextureLoadMip_TextureCube_backend_index = 2230u;

/// textureStore with TextureCube, Int32x3, Float32x4
extern Variable TextureStore_TextureCube_texture;
extern Variable TextureStore_TextureCube_coordinate;
extern Variable TextureStore_TextureCube_value;
extern Function TextureStore_TextureCube;
inline constexpr auto TextureStore_TextureCube_name = "textureStore"_c;
inline constexpr auto TextureStore_TextureCube_backend_index = 2231u;

/// textureStoreMip with TextureCube, Int32x3, Int32, Float32x4
extern Variable TextureStoreMip_TextureCube_texture;
extern Variable TextureStoreMip_TextureCube_coordinate;
extern Variable TextureStoreMip_TextureCube_mip;
extern Variable TextureStoreMip_TextureCube_value;
extern Function TextureStoreMip_TextureCube;
inline constexpr auto TextureStoreMip_TextureCube_name = "textureStoreMip"_c;
inline constexpr auto TextureStoreMip_TextureCube_backend_index = 2232u;

/// textureLoad with Texture1DArray, Int32x2
extern Variable TextureLoad_Texture1DArray_texture;
extern Variable TextureLoad_Texture1DArray_coordinate;
extern Function TextureLoad_Texture1DArray;
inline constexpr auto TextureLoad_Texture1DArray_name = "textureLoad"_c;
inline constexpr auto TextureLoad_Texture1DArray_backend_index = 2233u;

/// textureLoadMip with Texture1DArray, Int32x2, Int32
extern Variable TextureLoadMip_Texture1DArray_texture;
extern Variable TextureLoadMip_Texture1DArray_coordinate;
extern Variable TextureLoadMip_Texture1DArray_mip;
extern Function TextureLoadMip_Texture1DArray;
inline constexpr auto TextureLoadMip_Texture1DArray_name = "textureLoadMip"_c;
inline constexpr auto TextureLoadMip_Texture1DArray_backend_index = 2234u;

/// textureStore with Texture1DArray, Int32x2, Float32x4
extern Variable TextureStore_Texture1DArray_texture;
extern Variable TextureStore_Texture1DArray_coordinate;
extern Variable TextureStore_Texture1DArray_value;
extern Function TextureStore_Texture1DArray;
inline constexpr auto TextureStore_Texture1DArray_name = "textureStore"_c;
inline constexpr auto TextureStore_Texture1DArray_backend_index = 2235u;

/// textureStoreMip with Texture1DArray, Int32x2, Int32, Float32x4
extern Variable TextureStoreMip_Texture1DArray_texture;
extern Variable TextureStoreMip_Texture1DArray_coordinate;
extern Variable TextureStoreMip_Texture1DArray_mip;
extern Variable TextureStoreMip_Texture1DArray_value;
extern Function TextureStoreMip_Texture1DArray;
inline constexpr auto TextureStoreMip_Texture1DArray_name = "textureStoreMip"_c;
inline constexpr auto TextureStoreMip_Texture1DArray_backend_index = 2236u;

/// textureLoad with Texture2DArray, Int32x3
extern Variable TextureLoad_Texture2DArray_texture;
extern Variable TextureLoad_Texture2DArray_coordinate;
extern Function TextureLoad_Texture2DArray;
inline constexpr auto TextureLoad_Texture2DArray_name = "textureLoad"_c;
inline constexpr auto TextureLoad_Texture2DArray_backend_index = 2237u;

/// textureLoadMip with Texture2DArray, Int32x3, Int32
extern Variable TextureLoadMip_Texture2DArray_texture;
extern Variable TextureLoadMip_Texture2DArray_coordinate;
extern Variable TextureLoadMip_Texture2DArray_mip;
extern Function TextureLoadMip_Texture2DArray;
inline constexpr auto TextureLoadMip_Texture2DArray_name = "textureLoadMip"_c;
inline constexpr auto TextureLoadMip_Texture2DArray_backend_index = 2238u;

/// textureStore with Texture2DArray, Int32x3, Float32x4
extern Variable TextureStore_Texture2DArray_texture;
extern Variable TextureStore_Texture2DArray_coordinate;
extern Variable TextureStore_Texture2DArray_value;
extern Function TextureStore_Texture2DArray;
inline constexpr auto TextureStore_Texture2DArray_name = "textureStore"_c;
inline constexpr auto TextureStore_Texture2DArray_backend_index = 2239u;

/// textureStoreMip with Texture2DArray, Int32x3, Int32, Float32x4
extern Variable TextureStoreMip_Texture2DArray_texture;
extern Variable TextureStoreMip_Texture2DArray_coordinate;
extern Variable TextureStoreMip_Texture2DArray_mip;
extern Variable TextureStoreMip_Texture2DArray_value;
extern Function TextureStoreMip_Texture2DArray;
inline constexpr auto TextureStoreMip_Texture2DArray_name = "textureStoreMip"_c;
inline constexpr auto TextureStoreMip_Texture2DArray_backend_index = 2240u;

/// textureLoad with TextureCubeArray, Int32x4
extern Variable TextureLoad_TextureCubeArray_texture;
extern Variable TextureLoad_TextureCubeArray_coordinate;
extern Function TextureLoad_TextureCubeArray;
inline constexpr auto TextureLoad_TextureCubeArray_name = "textureLoad"_c;
inline constexpr auto TextureLoad_TextureCubeArray_backend_index = 2241u;

/// textureLoadMip with TextureCubeArray, Int32x4, Int32
extern Variable TextureLoadMip_TextureCubeArray_texture;
extern Variable TextureLoadMip_TextureCubeArray_coordinate;
extern Variable TextureLoadMip_TextureCubeArray_mip;
extern Function TextureLoadMip_TextureCubeArray;
inline constexpr auto TextureLoadMip_TextureCubeArray_name = "textureLoadMip"_c;
inline constexpr auto TextureLoadMip_TextureCubeArray_backend_index = 2242u;

/// textureStore with TextureCubeArray, Int32x4, Float32x4
extern Variable TextureStore_TextureCubeArray_texture;
extern Variable TextureStore_TextureCubeArray_coordinate;
extern Variable TextureStore_TextureCubeArray_value;
extern Function TextureStore_TextureCubeArray;
inline constexpr auto TextureStore_TextureCubeArray_name = "textureStore"_c;
inline constexpr auto TextureStore_TextureCubeArray_backend_index = 2243u;

/// textureStoreMip with TextureCubeArray, Int32x4, Int32, Float32x4
extern Variable TextureStoreMip_TextureCubeArray_texture;
extern Variable TextureStoreMip_TextureCubeArray_coordinate;
extern Variable TextureStoreMip_TextureCubeArray_mip;
extern Variable TextureStoreMip_TextureCubeArray_value;
extern Function TextureStoreMip_TextureCubeArray;
inline constexpr auto TextureStoreMip_TextureCubeArray_name = "textureStoreMip"_c;
inline constexpr auto TextureStoreMip_TextureCubeArray_backend_index = 2244u;

/// textureLoad with Texture2DMS, Int32x2
extern Variable TextureLoad_Texture2DMS_texture;
extern Variable TextureLoad_Texture2DMS_coordinate;
extern Function TextureLoad_Texture2DMS;
inline constexpr auto TextureLoad_Texture2DMS_name = "textureLoad"_c;
inline constexpr auto TextureLoad_Texture2DMS_backend_index = 2245u;

/// textureLoadMip with Texture2DMS, Int32x2, Int32
extern Variable TextureLoadMip_Texture2DMS_texture;
extern Variable TextureLoadMip_Texture2DMS_coordinate;
extern Variable TextureLoadMip_Texture2DMS_mip;
extern Function TextureLoadMip_Texture2DMS;
inline constexpr auto TextureLoadMip_Texture2DMS_name = "textureLoadMip"_c;
inline constexpr auto TextureLoadMip_Texture2DMS_backend_index = 2246u;

/// textureStore with Texture2DMS, Int32x2, Float32x4
extern Variable TextureStore_Texture2DMS_texture;
extern Variable TextureStore_Texture2DMS_coordinate;
extern Variable TextureStore_Texture2DMS_value;
extern Function TextureStore_Texture2DMS;
inline constexpr auto TextureStore_Texture2DMS_name = "textureStore"_c;
inline constexpr auto TextureStore_Texture2DMS_backend_index = 2247u;

/// textureStoreMip with Texture2DMS, Int32x2, Int32, Float32x4
extern Variable TextureStoreMip_Texture2DMS_texture;
extern Variable TextureStoreMip_Texture2DMS_coordinate;
extern Variable TextureStoreMip_Texture2DMS_mip;
extern Variable TextureStoreMip_Texture2DMS_value;
extern Function TextureStoreMip_Texture2DMS;
inline constexpr auto TextureStoreMip_Texture2DMS_name = "textureStoreMip"_c;
inline constexpr auto TextureStoreMip_Texture2DMS_backend_index = 2248u;

/// textureLoad with Texture2DMSArray, Int32x3
extern Variable TextureLoad_Texture2DMSArray_texture;
extern Variable TextureLoad_Texture2DMSArray_coordinate;
extern Function TextureLoad_Texture2DMSArray;
inline constexpr auto TextureLoad_Texture2DMSArray_name = "textureLoad"_c;
inline constexpr auto TextureLoad_Texture2DMSArray_backend_index = 2249u;

/// textureLoadMip with Texture2DMSArray, Int32x3, Int32
extern Variable TextureLoadMip_Texture2DMSArray_texture;
extern Variable TextureLoadMip_Texture2DMSArray_coordinate;
extern Variable TextureLoadMip_Texture2DMSArray_mip;
extern Function TextureLoadMip_Texture2DMSArray;
inline constexpr auto TextureLoadMip_Texture2DMSArray_name = "textureLoadMip"_c;
inline constexpr auto TextureLoadMip_Texture2DMSArray_backend_index = 2250u;

/// textureStore with Texture2DMSArray, Int32x3, Float32x4
extern Variable TextureStore_Texture2DMSArray_texture;
extern Variable TextureStore_Texture2DMSArray_coordinate;
extern Variable TextureStore_Texture2DMSArray_value;
extern Function TextureStore_Texture2DMSArray;
inline constexpr auto TextureStore_Texture2DMSArray_name = "textureStore"_c;
inline constexpr auto TextureStore_Texture2DMSArray_backend_index = 2251u;

/// textureStoreMip with Texture2DMSArray, Int32x3, Int32, Float32x4
extern Variable TextureStoreMip_Texture2DMSArray_texture;
extern Variable TextureStoreMip_Texture2DMSArray_coordinate;
extern Variable TextureStoreMip_Texture2DMSArray_mip;
extern Variable TextureStoreMip_Texture2DMSArray_value;
extern Function TextureStoreMip_Texture2DMSArray;
inline constexpr auto TextureStoreMip_Texture2DMSArray_name = "textureStoreMip"_c;
inline constexpr auto TextureStoreMip_Texture2DMSArray_backend_index = 2252u;

/// textureFetch with Texture1D, Int32, UInt32
extern Variable TextureFetch_Texture1D_texture;
extern Variable TextureFetch_Texture1D_coordinate;
extern Variable TextureFetch_Texture1D_lod;
extern Function TextureFetch_Texture1D;
inline constexpr auto TextureFetch_Texture1D_name = "textureFetch"_c;
inline constexpr auto TextureFetch_Texture1D_backend_index = 2253u;

/// textureFetchSample with Texture1D, Int32, UInt32, UInt32
extern Variable TextureFetchSample_Texture1D_texture;
extern Variable TextureFetchSample_Texture1D_coordinate;
extern Variable TextureFetchSample_Texture1D_lod;
extern Variable TextureFetchSample_Texture1D_sample;
extern Function TextureFetchSample_Texture1D;
inline constexpr auto TextureFetchSample_Texture1D_name = "textureFetchSample"_c;
inline constexpr auto TextureFetchSample_Texture1D_backend_index = 2254u;

/// textureFetch with Texture2D, Int32x2, UInt32
extern Variable TextureFetch_Texture2D_texture;
extern Variable TextureFetch_Texture2D_coordinate;
extern Variable TextureFetch_Texture2D_lod;
extern Function TextureFetch_Texture2D;
inline constexpr auto TextureFetch_Texture2D_name = "textureFetch"_c;
inline constexpr auto TextureFetch_Texture2D_backend_index = 2255u;

/// textureFetchSample with Texture2D, Int32x2, UInt32, UInt32
extern Variable TextureFetchSample_Texture2D_texture;
extern Variable TextureFetchSample_Texture2D_coordinate;
extern Variable TextureFetchSample_Texture2D_lod;
extern Variable TextureFetchSample_Texture2D_sample;
extern Function TextureFetchSample_Texture2D;
inline constexpr auto TextureFetchSample_Texture2D_name = "textureFetchSample"_c;
inline constexpr auto TextureFetchSample_Texture2D_backend_index = 2256u;

/// textureFetch with Texture3D, Int32x3, UInt32
extern Variable TextureFetch_Texture3D_texture;
extern Variable TextureFetch_Texture3D_coordinate;
extern Variable TextureFetch_Texture3D_lod;
extern Function TextureFetch_Texture3D;
inline constexpr auto TextureFetch_Texture3D_name = "textureFetch"_c;
inline constexpr auto TextureFetch_Texture3D_backend_index = 2257u;

/// textureFetchSample with Texture3D, Int32x3, UInt32, UInt32
extern Variable TextureFetchSample_Texture3D_texture;
extern Variable TextureFetchSample_Texture3D_coordinate;
extern Variable TextureFetchSample_Texture3D_lod;
extern Variable TextureFetchSample_Texture3D_sample;
extern Function TextureFetchSample_Texture3D;
inline constexpr auto TextureFetchSample_Texture3D_name = "textureFetchSample"_c;
inline constexpr auto TextureFetchSample_Texture3D_backend_index = 2258u;

/// textureFetch with Texture1DArray, Int32x2, UInt32
extern Variable TextureFetch_Texture1DArray_texture;
extern Variable TextureFetch_Texture1DArray_coordinate;
extern Variable TextureFetch_Texture1DArray_lod;
extern Function TextureFetch_Texture1DArray;
inline constexpr auto TextureFetch_Texture1DArray_name = "textureFetch"_c;
inline constexpr auto TextureFetch_Texture1DArray_backend_index = 2259u;

/// textureFetchSample with Texture1DArray, Int32x2, UInt32, UInt32
extern Variable TextureFetchSample_Texture1DArray_texture;
extern Variable TextureFetchSample_Texture1DArray_coordinate;
extern Variable TextureFetchSample_Texture1DArray_lod;
extern Variable TextureFetchSample_Texture1DArray_sample;
extern Function TextureFetchSample_Texture1DArray;
inline constexpr auto TextureFetchSample_Texture1DArray_name = "textureFetchSample"_c;
inline constexpr auto TextureFetchSample_Texture1DArray_backend_index = 2260u;

/// textureFetch with Texture2DArray, Int32x3, UInt32
extern Variable TextureFetch_Texture2DArray_texture;
extern Variable TextureFetch_Texture2DArray_coordinate;
extern Variable TextureFetch_Texture2DArray_lod;
extern Function TextureFetch_Texture2DArray;
inline constexpr auto TextureFetch_Texture2DArray_name = "textureFetch"_c;
inline constexpr auto TextureFetch_Texture2DArray_backend_index = 2261u;

/// textureFetchSample with Texture2DArray, Int32x3, UInt32, UInt32
extern Variable TextureFetchSample_Texture2DArray_texture;
extern Variable TextureFetchSample_Texture2DArray_coordinate;
extern Variable TextureFetchSample_Texture2DArray_lod;
extern Variable TextureFetchSample_Texture2DArray_sample;
extern Function TextureFetchSample_Texture2DArray;
inline constexpr auto TextureFetchSample_Texture2DArray_name = "textureFetchSample"_c;
inline constexpr auto TextureFetchSample_Texture2DArray_backend_index = 2262u;

/// textureFetch with Texture2DMS, Int32x2, UInt32
extern Variable TextureFetch_Texture2DMS_texture;
extern Variable TextureFetch_Texture2DMS_coordinate;
extern Variable TextureFetch_Texture2DMS_lod;
extern Function TextureFetch_Texture2DMS;
inline constexpr auto TextureFetch_Texture2DMS_name = "textureFetch"_c;
inline constexpr auto TextureFetch_Texture2DMS_backend_index = 2263u;

/// textureFetchSample with Texture2DMS, Int32x2, UInt32, UInt32
extern Variable TextureFetchSample_Texture2DMS_texture;
extern Variable TextureFetchSample_Texture2DMS_coordinate;
extern Variable TextureFetchSample_Texture2DMS_lod;
extern Variable TextureFetchSample_Texture2DMS_sample;
extern Function TextureFetchSample_Texture2DMS;
inline constexpr auto TextureFetchSample_Texture2DMS_name = "textureFetchSample"_c;
inline constexpr auto TextureFetchSample_Texture2DMS_backend_index = 2264u;

/// textureFetch with Texture2DMSArray, Int32x3, UInt32
extern Variable TextureFetch_Texture2DMSArray_texture;
extern Variable TextureFetch_Texture2DMSArray_coordinate;
extern Variable TextureFetch_Texture2DMSArray_lod;
extern Function TextureFetch_Texture2DMSArray;
inline constexpr auto TextureFetch_Texture2DMSArray_name = "textureFetch"_c;
inline constexpr auto TextureFetch_Texture2DMSArray_backend_index = 2265u;

/// textureFetchSample with Texture2DMSArray, Int32x3, UInt32, UInt32
extern Variable TextureFetchSample_Texture2DMSArray_texture;
extern Variable TextureFetchSample_Texture2DMSArray_coordinate;
extern Variable TextureFetchSample_Texture2DMSArray_lod;
extern Variable TextureFetchSample_Texture2DMSArray_sample;
extern Function TextureFetchSample_Texture2DMSArray;
inline constexpr auto TextureFetchSample_Texture2DMSArray_name = "textureFetchSample"_c;
inline constexpr auto TextureFetchSample_Texture2DMSArray_backend_index = 2266u;

/// textureGather with Texture2D, Sampler, Int32x2, Int32
extern Variable TextureGather_Texture2D_texture;
extern Variable TextureGather_Texture2D_sampler;
extern Variable TextureGather_Texture2D_coordinate;
extern Variable TextureGather_Texture2D_component;
extern Function TextureGather_Texture2D;
inline constexpr auto TextureGather_Texture2D_name = "textureGather"_c;
inline constexpr auto TextureGather_Texture2D_backend_index = 2267u;

/// textureGather with SampledTexture2D, Int32x2, Int32
extern Variable SampledTextureGather_Texture2D_texture;
extern Variable SampledTextureGather_Texture2D_coordinate;
extern Variable SampledTextureGather_Texture2D_component;
extern Function SampledTextureGather_Texture2D;
inline constexpr auto SampledTextureGather_Texture2D_name = "textureGather"_c;
inline constexpr auto SampledTextureGather_Texture2D_backend_index = 2268u;

/// textureGatherOffset with Texture2D, Sampler, Int32x2, Int32, UInt32
extern Variable TextureGatherOffset_Texture2D_texture;
extern Variable TextureGatherOffset_Texture2D_sampler;
extern Variable TextureGatherOffset_Texture2D_coordinate;
extern Variable TextureGatherOffset_Texture2D_component;
extern Variable TextureGatherOffset_Texture2D_offset;
extern Function TextureGatherOffset_Texture2D;
inline constexpr auto TextureGatherOffset_Texture2D_name = "textureGatherOffset"_c;
inline constexpr auto TextureGatherOffset_Texture2D_backend_index = 2269u;

/// textureGatherOffset with SampledTexture2D, Int32x2, Int32, UInt32
extern Variable SampledTextureGatherOffset_Texture2D_texture;
extern Variable SampledTextureGatherOffset_Texture2D_coordinate;
extern Variable SampledTextureGatherOffset_Texture2D_component;
extern Variable SampledTextureGatherOffset_Texture2D_offset;
extern Function SampledTextureGatherOffset_Texture2D;
inline constexpr auto SampledTextureGatherOffset_Texture2D_name = "textureGatherOffset"_c;
inline constexpr auto SampledTextureGatherOffset_Texture2D_backend_index = 2270u;

/// textureGather with TextureCube, Sampler, Int32x3, Int32
extern Variable TextureGather_TextureCube_texture;
extern Variable TextureGather_TextureCube_sampler;
extern Variable TextureGather_TextureCube_coordinate;
extern Variable TextureGather_TextureCube_component;
extern Function TextureGather_TextureCube;
inline constexpr auto TextureGather_TextureCube_name = "textureGather"_c;
inline constexpr auto TextureGather_TextureCube_backend_index = 2271u;

/// textureGather with SampledTextureCube, Int32x3, Int32
extern Variable SampledTextureGather_TextureCube_texture;
extern Variable SampledTextureGather_TextureCube_coordinate;
extern Variable SampledTextureGather_TextureCube_component;
extern Function SampledTextureGather_TextureCube;
inline constexpr auto SampledTextureGather_TextureCube_name = "textureGather"_c;
inline constexpr auto SampledTextureGather_TextureCube_backend_index = 2272u;

/// textureGatherOffset with TextureCube, Sampler, Int32x3, Int32, UInt32
extern Variable TextureGatherOffset_TextureCube_texture;
extern Variable TextureGatherOffset_TextureCube_sampler;
extern Variable TextureGatherOffset_TextureCube_coordinate;
extern Variable TextureGatherOffset_TextureCube_component;
extern Variable TextureGatherOffset_TextureCube_offset;
extern Function TextureGatherOffset_TextureCube;
inline constexpr auto TextureGatherOffset_TextureCube_name = "textureGatherOffset"_c;
inline constexpr auto TextureGatherOffset_TextureCube_backend_index = 2273u;

/// textureGatherOffset with SampledTextureCube, Int32x3, Int32, UInt32
extern Variable SampledTextureGatherOffset_TextureCube_texture;
extern Variable SampledTextureGatherOffset_TextureCube_coordinate;
extern Variable SampledTextureGatherOffset_TextureCube_component;
extern Variable SampledTextureGatherOffset_TextureCube_offset;
extern Function SampledTextureGatherOffset_TextureCube;
inline constexpr auto SampledTextureGatherOffset_TextureCube_name = "textureGatherOffset"_c;
inline constexpr auto SampledTextureGatherOffset_TextureCube_backend_index = 2274u;

/// textureGather with Texture2DArray, Sampler, Int32x3, Int32
extern Variable TextureGather_Texture2DArray_texture;
extern Variable TextureGather_Texture2DArray_sampler;
extern Variable TextureGather_Texture2DArray_coordinate;
extern Variable TextureGather_Texture2DArray_component;
extern Function TextureGather_Texture2DArray;
inline constexpr auto TextureGather_Texture2DArray_name = "textureGather"_c;
inline constexpr auto TextureGather_Texture2DArray_backend_index = 2275u;

/// textureGather with SampledTexture2DArray, Int32x3, Int32
extern Variable SampledTextureGather_Texture2DArray_texture;
extern Variable SampledTextureGather_Texture2DArray_coordinate;
extern Variable SampledTextureGather_Texture2DArray_component;
extern Function SampledTextureGather_Texture2DArray;
inline constexpr auto SampledTextureGather_Texture2DArray_name = "textureGather"_c;
inline constexpr auto SampledTextureGather_Texture2DArray_backend_index = 2276u;

/// textureGatherOffset with Texture2DArray, Sampler, Int32x3, Int32, UInt32
extern Variable TextureGatherOffset_Texture2DArray_texture;
extern Variable TextureGatherOffset_Texture2DArray_sampler;
extern Variable TextureGatherOffset_Texture2DArray_coordinate;
extern Variable TextureGatherOffset_Texture2DArray_component;
extern Variable TextureGatherOffset_Texture2DArray_offset;
extern Function TextureGatherOffset_Texture2DArray;
inline constexpr auto TextureGatherOffset_Texture2DArray_name = "textureGatherOffset"_c;
inline constexpr auto TextureGatherOffset_Texture2DArray_backend_index = 2277u;

/// textureGatherOffset with SampledTexture2DArray, Int32x3, Int32, UInt32
extern Variable SampledTextureGatherOffset_Texture2DArray_texture;
extern Variable SampledTextureGatherOffset_Texture2DArray_coordinate;
extern Variable SampledTextureGatherOffset_Texture2DArray_component;
extern Variable SampledTextureGatherOffset_Texture2DArray_offset;
extern Function SampledTextureGatherOffset_Texture2DArray;
inline constexpr auto SampledTextureGatherOffset_Texture2DArray_name = "textureGatherOffset"_c;
inline constexpr auto SampledTextureGatherOffset_Texture2DArray_backend_index = 2278u;

/// textureGather with TextureCubeArray, Sampler, Int32x4, Int32
extern Variable TextureGather_TextureCubeArray_texture;
extern Variable TextureGather_TextureCubeArray_sampler;
extern Variable TextureGather_TextureCubeArray_coordinate;
extern Variable TextureGather_TextureCubeArray_component;
extern Function TextureGather_TextureCubeArray;
inline constexpr auto TextureGather_TextureCubeArray_name = "textureGather"_c;
inline constexpr auto TextureGather_TextureCubeArray_backend_index = 2279u;

/// textureGather with SampledTextureCubeArray, Int32x4, Int32
extern Variable SampledTextureGather_TextureCubeArray_texture;
extern Variable SampledTextureGather_TextureCubeArray_coordinate;
extern Variable SampledTextureGather_TextureCubeArray_component;
extern Function SampledTextureGather_TextureCubeArray;
inline constexpr auto SampledTextureGather_TextureCubeArray_name = "textureGather"_c;
inline constexpr auto SampledTextureGather_TextureCubeArray_backend_index = 2280u;

/// textureGatherOffset with TextureCubeArray, Sampler, Int32x4, Int32, UInt32
extern Variable TextureGatherOffset_TextureCubeArray_texture;
extern Variable TextureGatherOffset_TextureCubeArray_sampler;
extern Variable TextureGatherOffset_TextureCubeArray_coordinate;
extern Variable TextureGatherOffset_TextureCubeArray_component;
extern Variable TextureGatherOffset_TextureCubeArray_offset;
extern Function TextureGatherOffset_TextureCubeArray;
inline constexpr auto TextureGatherOffset_TextureCubeArray_name = "textureGatherOffset"_c;
inline constexpr auto TextureGatherOffset_TextureCubeArray_backend_index = 2281u;

/// textureGatherOffset with SampledTextureCubeArray, Int32x4, Int32, UInt32
extern Variable SampledTextureGatherOffset_TextureCubeArray_texture;
extern Variable SampledTextureGatherOffset_TextureCubeArray_coordinate;
extern Variable SampledTextureGatherOffset_TextureCubeArray_component;
extern Variable SampledTextureGatherOffset_TextureCubeArray_offset;
extern Function SampledTextureGatherOffset_TextureCubeArray;
inline constexpr auto SampledTextureGatherOffset_TextureCubeArray_name = "textureGatherOffset"_c;
inline constexpr auto SampledTextureGatherOffset_TextureCubeArray_backend_index = 2282u;

/// texturePixelCacheLoad with PixelCache
extern Variable TexturePixelCacheLoad_PixelCache_texture;
extern Function TexturePixelCacheLoad_PixelCache;
inline constexpr auto TexturePixelCacheLoad_PixelCache_name = "texturePixelCacheLoad"_c;
inline constexpr auto TexturePixelCacheLoad_PixelCache_backend_index = 2283u;

/// texturePixelCacheLoad with PixelCacheMS, UInt32
extern Variable TexturePixelCacheLoad_PixelCacheMS_texture;
extern Variable TexturePixelCacheLoad_PixelCacheMS_sample;
extern Function TexturePixelCacheLoad_PixelCacheMS;
inline constexpr auto TexturePixelCacheLoad_PixelCacheMS_name = "texturePixelCacheLoad"_c;
inline constexpr auto TexturePixelCacheLoad_PixelCacheMS_backend_index = 2284u;

/// textureSample with Texture1D, Sampler, Float32
extern Variable TextureSample_Texture1D_texture;
extern Variable TextureSample_Texture1D_sampler;
extern Variable TextureSample_Texture1D_coordinate;
extern Function TextureSample_Texture1D;
inline constexpr auto TextureSample_Texture1D_name = "textureSample"_c;
inline constexpr auto TextureSample_Texture1D_backend_index = 2285u;

/// textureSample with SampledTexture1D, Float32
extern Variable SampledTextureSample_Texture1D_texture;
extern Variable SampledTextureSample_Texture1D_coordinate;
extern Function SampledTextureSample_Texture1D;
inline constexpr auto SampledTextureSample_Texture1D_name = "textureSample"_c;
inline constexpr auto SampledTextureSample_Texture1D_backend_index = 2286u;

/// textureSample with Texture2D, Sampler, Float32x2
extern Variable TextureSample_Texture2D_texture;
extern Variable TextureSample_Texture2D_sampler;
extern Variable TextureSample_Texture2D_coordinate;
extern Function TextureSample_Texture2D;
inline constexpr auto TextureSample_Texture2D_name = "textureSample"_c;
inline constexpr auto TextureSample_Texture2D_backend_index = 2287u;

/// textureSample with SampledTexture2D, Float32x2
extern Variable SampledTextureSample_Texture2D_texture;
extern Variable SampledTextureSample_Texture2D_coordinate;
extern Function SampledTextureSample_Texture2D;
inline constexpr auto SampledTextureSample_Texture2D_name = "textureSample"_c;
inline constexpr auto SampledTextureSample_Texture2D_backend_index = 2288u;

/// textureSample with Texture3D, Sampler, Float32x3
extern Variable TextureSample_Texture3D_texture;
extern Variable TextureSample_Texture3D_sampler;
extern Variable TextureSample_Texture3D_coordinate;
extern Function TextureSample_Texture3D;
inline constexpr auto TextureSample_Texture3D_name = "textureSample"_c;
inline constexpr auto TextureSample_Texture3D_backend_index = 2289u;

/// textureSample with SampledTexture3D, Float32x3
extern Variable SampledTextureSample_Texture3D_texture;
extern Variable SampledTextureSample_Texture3D_coordinate;
extern Function SampledTextureSample_Texture3D;
inline constexpr auto SampledTextureSample_Texture3D_name = "textureSample"_c;
inline constexpr auto SampledTextureSample_Texture3D_backend_index = 2290u;

/// textureSample with TextureCube, Sampler, Float32x3
extern Variable TextureSample_TextureCube_texture;
extern Variable TextureSample_TextureCube_sampler;
extern Variable TextureSample_TextureCube_coordinate;
extern Function TextureSample_TextureCube;
inline constexpr auto TextureSample_TextureCube_name = "textureSample"_c;
inline constexpr auto TextureSample_TextureCube_backend_index = 2291u;

/// textureSample with SampledTextureCube, Float32x3
extern Variable SampledTextureSample_TextureCube_texture;
extern Variable SampledTextureSample_TextureCube_coordinate;
extern Function SampledTextureSample_TextureCube;
inline constexpr auto SampledTextureSample_TextureCube_name = "textureSample"_c;
inline constexpr auto SampledTextureSample_TextureCube_backend_index = 2292u;

/// textureSample with Texture1DArray, Sampler, Float32x2
extern Variable TextureSample_Texture1DArray_texture;
extern Variable TextureSample_Texture1DArray_sampler;
extern Variable TextureSample_Texture1DArray_coordinate;
extern Function TextureSample_Texture1DArray;
inline constexpr auto TextureSample_Texture1DArray_name = "textureSample"_c;
inline constexpr auto TextureSample_Texture1DArray_backend_index = 2293u;

/// textureSample with SampledTexture1DArray, Float32x2
extern Variable SampledTextureSample_Texture1DArray_texture;
extern Variable SampledTextureSample_Texture1DArray_coordinate;
extern Function SampledTextureSample_Texture1DArray;
inline constexpr auto SampledTextureSample_Texture1DArray_name = "textureSample"_c;
inline constexpr auto SampledTextureSample_Texture1DArray_backend_index = 2294u;

/// textureSample with Texture2DArray, Sampler, Float32x3
extern Variable TextureSample_Texture2DArray_texture;
extern Variable TextureSample_Texture2DArray_sampler;
extern Variable TextureSample_Texture2DArray_coordinate;
extern Function TextureSample_Texture2DArray;
inline constexpr auto TextureSample_Texture2DArray_name = "textureSample"_c;
inline constexpr auto TextureSample_Texture2DArray_backend_index = 2295u;

/// textureSample with SampledTexture2DArray, Float32x3
extern Variable SampledTextureSample_Texture2DArray_texture;
extern Variable SampledTextureSample_Texture2DArray_coordinate;
extern Function SampledTextureSample_Texture2DArray;
inline constexpr auto SampledTextureSample_Texture2DArray_name = "textureSample"_c;
inline constexpr auto SampledTextureSample_Texture2DArray_backend_index = 2296u;

/// textureSample with TextureCubeArray, Sampler, Float32x4
extern Variable TextureSample_TextureCubeArray_texture;
extern Variable TextureSample_TextureCubeArray_sampler;
extern Variable TextureSample_TextureCubeArray_coordinate;
extern Function TextureSample_TextureCubeArray;
inline constexpr auto TextureSample_TextureCubeArray_name = "textureSample"_c;
inline constexpr auto TextureSample_TextureCubeArray_backend_index = 2297u;

/// textureSample with SampledTextureCubeArray, Float32x4
extern Variable SampledTextureSample_TextureCubeArray_texture;
extern Variable SampledTextureSample_TextureCubeArray_coordinate;
extern Function SampledTextureSample_TextureCubeArray;
inline constexpr auto SampledTextureSample_TextureCubeArray_name = "textureSample"_c;
inline constexpr auto SampledTextureSample_TextureCubeArray_backend_index = 2298u;

/// textureSampleOffset with Texture1D, Sampler, Float32, Float32
extern Variable TextureSampleOffset_Texture1D_texture;
extern Variable TextureSampleOffset_Texture1D_sampler;
extern Variable TextureSampleOffset_Texture1D_coordinate;
extern Variable TextureSampleOffset_Texture1D_offset;
extern Function TextureSampleOffset_Texture1D;
inline constexpr auto TextureSampleOffset_Texture1D_name = "textureSampleOffset"_c;
inline constexpr auto TextureSampleOffset_Texture1D_backend_index = 2299u;

/// textureSampleOffset with SampledTexture1D, Float32, Float32
extern Variable SampledTextureSampleOffset_Texture1D_texture;
extern Variable SampledTextureSampleOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleOffset_Texture1D_offset;
extern Function SampledTextureSampleOffset_Texture1D;
inline constexpr auto SampledTextureSampleOffset_Texture1D_name = "textureSampleOffset"_c;
inline constexpr auto SampledTextureSampleOffset_Texture1D_backend_index = 2300u;

/// textureSampleOffset with Texture2D, Sampler, Float32x2, Float32x2
extern Variable TextureSampleOffset_Texture2D_texture;
extern Variable TextureSampleOffset_Texture2D_sampler;
extern Variable TextureSampleOffset_Texture2D_coordinate;
extern Variable TextureSampleOffset_Texture2D_offset;
extern Function TextureSampleOffset_Texture2D;
inline constexpr auto TextureSampleOffset_Texture2D_name = "textureSampleOffset"_c;
inline constexpr auto TextureSampleOffset_Texture2D_backend_index = 2301u;

/// textureSampleOffset with SampledTexture2D, Float32x2, Float32x2
extern Variable SampledTextureSampleOffset_Texture2D_texture;
extern Variable SampledTextureSampleOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleOffset_Texture2D_offset;
extern Function SampledTextureSampleOffset_Texture2D;
inline constexpr auto SampledTextureSampleOffset_Texture2D_name = "textureSampleOffset"_c;
inline constexpr auto SampledTextureSampleOffset_Texture2D_backend_index = 2302u;

/// textureSampleOffset with Texture3D, Sampler, Float32x3, Float32x3
extern Variable TextureSampleOffset_Texture3D_texture;
extern Variable TextureSampleOffset_Texture3D_sampler;
extern Variable TextureSampleOffset_Texture3D_coordinate;
extern Variable TextureSampleOffset_Texture3D_offset;
extern Function TextureSampleOffset_Texture3D;
inline constexpr auto TextureSampleOffset_Texture3D_name = "textureSampleOffset"_c;
inline constexpr auto TextureSampleOffset_Texture3D_backend_index = 2303u;

/// textureSampleOffset with SampledTexture3D, Float32x3, Float32x3
extern Variable SampledTextureSampleOffset_Texture3D_texture;
extern Variable SampledTextureSampleOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleOffset_Texture3D_offset;
extern Function SampledTextureSampleOffset_Texture3D;
inline constexpr auto SampledTextureSampleOffset_Texture3D_name = "textureSampleOffset"_c;
inline constexpr auto SampledTextureSampleOffset_Texture3D_backend_index = 2304u;

/// textureSampleOffset with Texture1DArray, Sampler, Float32x2, Float32x2
extern Variable TextureSampleOffset_Texture1DArray_texture;
extern Variable TextureSampleOffset_Texture1DArray_sampler;
extern Variable TextureSampleOffset_Texture1DArray_coordinate;
extern Variable TextureSampleOffset_Texture1DArray_offset;
extern Function TextureSampleOffset_Texture1DArray;
inline constexpr auto TextureSampleOffset_Texture1DArray_name = "textureSampleOffset"_c;
inline constexpr auto TextureSampleOffset_Texture1DArray_backend_index = 2305u;

/// textureSampleOffset with SampledTexture1DArray, Float32x2, Float32x2
extern Variable SampledTextureSampleOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleOffset_Texture1DArray_offset;
extern Function SampledTextureSampleOffset_Texture1DArray;
inline constexpr auto SampledTextureSampleOffset_Texture1DArray_name = "textureSampleOffset"_c;
inline constexpr auto SampledTextureSampleOffset_Texture1DArray_backend_index = 2306u;

/// textureSampleOffset with Texture2DArray, Sampler, Float32x3, Float32x3
extern Variable TextureSampleOffset_Texture2DArray_texture;
extern Variable TextureSampleOffset_Texture2DArray_sampler;
extern Variable TextureSampleOffset_Texture2DArray_coordinate;
extern Variable TextureSampleOffset_Texture2DArray_offset;
extern Function TextureSampleOffset_Texture2DArray;
inline constexpr auto TextureSampleOffset_Texture2DArray_name = "textureSampleOffset"_c;
inline constexpr auto TextureSampleOffset_Texture2DArray_backend_index = 2307u;

/// textureSampleOffset with SampledTexture2DArray, Float32x3, Float32x3
extern Variable SampledTextureSampleOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleOffset_Texture2DArray_offset;
extern Function SampledTextureSampleOffset_Texture2DArray;
inline constexpr auto SampledTextureSampleOffset_Texture2DArray_name = "textureSampleOffset"_c;
inline constexpr auto SampledTextureSampleOffset_Texture2DArray_backend_index = 2308u;

/// textureSampleProj with Texture1D, Sampler, Float32, Float32
extern Variable TextureSampleProj_Texture1D_texture;
extern Variable TextureSampleProj_Texture1D_sampler;
extern Variable TextureSampleProj_Texture1D_coordinate;
extern Variable TextureSampleProj_Texture1D_proj;
extern Function TextureSampleProj_Texture1D;
inline constexpr auto TextureSampleProj_Texture1D_name = "textureSampleProj"_c;
inline constexpr auto TextureSampleProj_Texture1D_backend_index = 2309u;

/// textureSampleProj with SampledTexture1D, Float32, Float32
extern Variable SampledTextureSampleProj_Texture1D_texture;
extern Variable SampledTextureSampleProj_Texture1D_coordinate;
extern Variable SampledTextureSampleProj_Texture1D_proj;
extern Function SampledTextureSampleProj_Texture1D;
inline constexpr auto SampledTextureSampleProj_Texture1D_name = "textureSampleProj"_c;
inline constexpr auto SampledTextureSampleProj_Texture1D_backend_index = 2310u;

/// textureSampleProj with Texture2D, Sampler, Float32x2, Float32
extern Variable TextureSampleProj_Texture2D_texture;
extern Variable TextureSampleProj_Texture2D_sampler;
extern Variable TextureSampleProj_Texture2D_coordinate;
extern Variable TextureSampleProj_Texture2D_proj;
extern Function TextureSampleProj_Texture2D;
inline constexpr auto TextureSampleProj_Texture2D_name = "textureSampleProj"_c;
inline constexpr auto TextureSampleProj_Texture2D_backend_index = 2311u;

/// textureSampleProj with SampledTexture2D, Float32x2, Float32
extern Variable SampledTextureSampleProj_Texture2D_texture;
extern Variable SampledTextureSampleProj_Texture2D_coordinate;
extern Variable SampledTextureSampleProj_Texture2D_proj;
extern Function SampledTextureSampleProj_Texture2D;
inline constexpr auto SampledTextureSampleProj_Texture2D_name = "textureSampleProj"_c;
inline constexpr auto SampledTextureSampleProj_Texture2D_backend_index = 2312u;

/// textureSampleProj with Texture3D, Sampler, Float32x3, Float32
extern Variable TextureSampleProj_Texture3D_texture;
extern Variable TextureSampleProj_Texture3D_sampler;
extern Variable TextureSampleProj_Texture3D_coordinate;
extern Variable TextureSampleProj_Texture3D_proj;
extern Function TextureSampleProj_Texture3D;
inline constexpr auto TextureSampleProj_Texture3D_name = "textureSampleProj"_c;
inline constexpr auto TextureSampleProj_Texture3D_backend_index = 2313u;

/// textureSampleProj with SampledTexture3D, Float32x3, Float32
extern Variable SampledTextureSampleProj_Texture3D_texture;
extern Variable SampledTextureSampleProj_Texture3D_coordinate;
extern Variable SampledTextureSampleProj_Texture3D_proj;
extern Function SampledTextureSampleProj_Texture3D;
inline constexpr auto SampledTextureSampleProj_Texture3D_name = "textureSampleProj"_c;
inline constexpr auto SampledTextureSampleProj_Texture3D_backend_index = 2314u;

/// textureSampleProjOffset with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleProjOffset_Texture1D_texture;
extern Variable TextureSampleProjOffset_Texture1D_sampler;
extern Variable TextureSampleProjOffset_Texture1D_coordinate;
extern Variable TextureSampleProjOffset_Texture1D_proj;
extern Variable TextureSampleProjOffset_Texture1D_offset;
extern Function TextureSampleProjOffset_Texture1D;
inline constexpr auto TextureSampleProjOffset_Texture1D_name = "textureSampleProjOffset"_c;
inline constexpr auto TextureSampleProjOffset_Texture1D_backend_index = 2315u;

/// textureSampleProjOffset with SampledTexture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleProjOffset_Texture1D_texture;
extern Variable SampledTextureSampleProjOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleProjOffset_Texture1D_proj;
extern Variable SampledTextureSampleProjOffset_Texture1D_offset;
extern Function SampledTextureSampleProjOffset_Texture1D;
inline constexpr auto SampledTextureSampleProjOffset_Texture1D_name = "textureSampleProjOffset"_c;
inline constexpr auto SampledTextureSampleProjOffset_Texture1D_backend_index = 2316u;

/// textureSampleProjOffset with Texture2D, Sampler, Float32x2, Float32, Float32x2
extern Variable TextureSampleProjOffset_Texture2D_texture;
extern Variable TextureSampleProjOffset_Texture2D_sampler;
extern Variable TextureSampleProjOffset_Texture2D_coordinate;
extern Variable TextureSampleProjOffset_Texture2D_proj;
extern Variable TextureSampleProjOffset_Texture2D_offset;
extern Function TextureSampleProjOffset_Texture2D;
inline constexpr auto TextureSampleProjOffset_Texture2D_name = "textureSampleProjOffset"_c;
inline constexpr auto TextureSampleProjOffset_Texture2D_backend_index = 2317u;

/// textureSampleProjOffset with SampledTexture2D, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleProjOffset_Texture2D_texture;
extern Variable SampledTextureSampleProjOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleProjOffset_Texture2D_proj;
extern Variable SampledTextureSampleProjOffset_Texture2D_offset;
extern Function SampledTextureSampleProjOffset_Texture2D;
inline constexpr auto SampledTextureSampleProjOffset_Texture2D_name = "textureSampleProjOffset"_c;
inline constexpr auto SampledTextureSampleProjOffset_Texture2D_backend_index = 2318u;

/// textureSampleProjOffset with Texture3D, Sampler, Float32x3, Float32, Float32x3
extern Variable TextureSampleProjOffset_Texture3D_texture;
extern Variable TextureSampleProjOffset_Texture3D_sampler;
extern Variable TextureSampleProjOffset_Texture3D_coordinate;
extern Variable TextureSampleProjOffset_Texture3D_proj;
extern Variable TextureSampleProjOffset_Texture3D_offset;
extern Function TextureSampleProjOffset_Texture3D;
inline constexpr auto TextureSampleProjOffset_Texture3D_name = "textureSampleProjOffset"_c;
inline constexpr auto TextureSampleProjOffset_Texture3D_backend_index = 2319u;

/// textureSampleProjOffset with SampledTexture3D, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleProjOffset_Texture3D_texture;
extern Variable SampledTextureSampleProjOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleProjOffset_Texture3D_proj;
extern Variable SampledTextureSampleProjOffset_Texture3D_offset;
extern Function SampledTextureSampleProjOffset_Texture3D;
inline constexpr auto SampledTextureSampleProjOffset_Texture3D_name = "textureSampleProjOffset"_c;
inline constexpr auto SampledTextureSampleProjOffset_Texture3D_backend_index = 2320u;

/// textureSampleCompare with Texture1D, Sampler, Float32, Float32
extern Variable TextureSampleCompare_Texture1D_texture;
extern Variable TextureSampleCompare_Texture1D_sampler;
extern Variable TextureSampleCompare_Texture1D_coordinate;
extern Variable TextureSampleCompare_Texture1D_compare;
extern Function TextureSampleCompare_Texture1D;
inline constexpr auto TextureSampleCompare_Texture1D_name = "textureSampleCompare"_c;
inline constexpr auto TextureSampleCompare_Texture1D_backend_index = 2321u;

/// textureSampleCompare with SampledTexture1D, Float32, Float32
extern Variable SampledTextureSampleCompare_Texture1D_texture;
extern Variable SampledTextureSampleCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleCompare_Texture1D_compare;
extern Function SampledTextureSampleCompare_Texture1D;
inline constexpr auto SampledTextureSampleCompare_Texture1D_name = "textureSampleCompare"_c;
inline constexpr auto SampledTextureSampleCompare_Texture1D_backend_index = 2322u;

/// textureSampleCompare with Texture2D, Sampler, Float32x2, Float32
extern Variable TextureSampleCompare_Texture2D_texture;
extern Variable TextureSampleCompare_Texture2D_sampler;
extern Variable TextureSampleCompare_Texture2D_coordinate;
extern Variable TextureSampleCompare_Texture2D_compare;
extern Function TextureSampleCompare_Texture2D;
inline constexpr auto TextureSampleCompare_Texture2D_name = "textureSampleCompare"_c;
inline constexpr auto TextureSampleCompare_Texture2D_backend_index = 2323u;

/// textureSampleCompare with SampledTexture2D, Float32x2, Float32
extern Variable SampledTextureSampleCompare_Texture2D_texture;
extern Variable SampledTextureSampleCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleCompare_Texture2D_compare;
extern Function SampledTextureSampleCompare_Texture2D;
inline constexpr auto SampledTextureSampleCompare_Texture2D_name = "textureSampleCompare"_c;
inline constexpr auto SampledTextureSampleCompare_Texture2D_backend_index = 2324u;

/// textureSampleCompare with Texture3D, Sampler, Float32x3, Float32
extern Variable TextureSampleCompare_Texture3D_texture;
extern Variable TextureSampleCompare_Texture3D_sampler;
extern Variable TextureSampleCompare_Texture3D_coordinate;
extern Variable TextureSampleCompare_Texture3D_compare;
extern Function TextureSampleCompare_Texture3D;
inline constexpr auto TextureSampleCompare_Texture3D_name = "textureSampleCompare"_c;
inline constexpr auto TextureSampleCompare_Texture3D_backend_index = 2325u;

/// textureSampleCompare with SampledTexture3D, Float32x3, Float32
extern Variable SampledTextureSampleCompare_Texture3D_texture;
extern Variable SampledTextureSampleCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleCompare_Texture3D_compare;
extern Function SampledTextureSampleCompare_Texture3D;
inline constexpr auto SampledTextureSampleCompare_Texture3D_name = "textureSampleCompare"_c;
inline constexpr auto SampledTextureSampleCompare_Texture3D_backend_index = 2326u;

/// textureSampleCompare with Texture1DArray, Sampler, Float32x2, Float32
extern Variable TextureSampleCompare_Texture1DArray_texture;
extern Variable TextureSampleCompare_Texture1DArray_sampler;
extern Variable TextureSampleCompare_Texture1DArray_coordinate;
extern Variable TextureSampleCompare_Texture1DArray_compare;
extern Function TextureSampleCompare_Texture1DArray;
inline constexpr auto TextureSampleCompare_Texture1DArray_name = "textureSampleCompare"_c;
inline constexpr auto TextureSampleCompare_Texture1DArray_backend_index = 2327u;

/// textureSampleCompare with SampledTexture1DArray, Float32x2, Float32
extern Variable SampledTextureSampleCompare_Texture1DArray_texture;
extern Variable SampledTextureSampleCompare_Texture1DArray_coordinate;
extern Variable SampledTextureSampleCompare_Texture1DArray_compare;
extern Function SampledTextureSampleCompare_Texture1DArray;
inline constexpr auto SampledTextureSampleCompare_Texture1DArray_name = "textureSampleCompare"_c;
inline constexpr auto SampledTextureSampleCompare_Texture1DArray_backend_index = 2328u;

/// textureSampleCompare with Texture2DArray, Sampler, Float32x3, Float32
extern Variable TextureSampleCompare_Texture2DArray_texture;
extern Variable TextureSampleCompare_Texture2DArray_sampler;
extern Variable TextureSampleCompare_Texture2DArray_coordinate;
extern Variable TextureSampleCompare_Texture2DArray_compare;
extern Function TextureSampleCompare_Texture2DArray;
inline constexpr auto TextureSampleCompare_Texture2DArray_name = "textureSampleCompare"_c;
inline constexpr auto TextureSampleCompare_Texture2DArray_backend_index = 2329u;

/// textureSampleCompare with SampledTexture2DArray, Float32x3, Float32
extern Variable SampledTextureSampleCompare_Texture2DArray_texture;
extern Variable SampledTextureSampleCompare_Texture2DArray_coordinate;
extern Variable SampledTextureSampleCompare_Texture2DArray_compare;
extern Function SampledTextureSampleCompare_Texture2DArray;
inline constexpr auto SampledTextureSampleCompare_Texture2DArray_name = "textureSampleCompare"_c;
inline constexpr auto SampledTextureSampleCompare_Texture2DArray_backend_index = 2330u;

/// textureSampleCompareOffset with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleCompareOffset_Texture1D_texture;
extern Variable TextureSampleCompareOffset_Texture1D_sampler;
extern Variable TextureSampleCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleCompareOffset_Texture1D_compare;
extern Variable TextureSampleCompareOffset_Texture1D_offset;
extern Function TextureSampleCompareOffset_Texture1D;
inline constexpr auto TextureSampleCompareOffset_Texture1D_name = "textureSampleCompareOffset"_c;
inline constexpr auto TextureSampleCompareOffset_Texture1D_backend_index = 2331u;

/// textureSampleCompareOffset with SampledTexture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleCompareOffset_Texture1D;
inline constexpr auto SampledTextureSampleCompareOffset_Texture1D_name = "textureSampleCompareOffset"_c;
inline constexpr auto SampledTextureSampleCompareOffset_Texture1D_backend_index = 2332u;

/// textureSampleCompareOffset with Texture2D, Sampler, Float32x2, Float32, Float32x2
extern Variable TextureSampleCompareOffset_Texture2D_texture;
extern Variable TextureSampleCompareOffset_Texture2D_sampler;
extern Variable TextureSampleCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleCompareOffset_Texture2D_compare;
extern Variable TextureSampleCompareOffset_Texture2D_offset;
extern Function TextureSampleCompareOffset_Texture2D;
inline constexpr auto TextureSampleCompareOffset_Texture2D_name = "textureSampleCompareOffset"_c;
inline constexpr auto TextureSampleCompareOffset_Texture2D_backend_index = 2333u;

/// textureSampleCompareOffset with SampledTexture2D, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleCompareOffset_Texture2D;
inline constexpr auto SampledTextureSampleCompareOffset_Texture2D_name = "textureSampleCompareOffset"_c;
inline constexpr auto SampledTextureSampleCompareOffset_Texture2D_backend_index = 2334u;

/// textureSampleCompareOffset with Texture3D, Sampler, Float32x3, Float32, Float32x3
extern Variable TextureSampleCompareOffset_Texture3D_texture;
extern Variable TextureSampleCompareOffset_Texture3D_sampler;
extern Variable TextureSampleCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleCompareOffset_Texture3D_compare;
extern Variable TextureSampleCompareOffset_Texture3D_offset;
extern Function TextureSampleCompareOffset_Texture3D;
inline constexpr auto TextureSampleCompareOffset_Texture3D_name = "textureSampleCompareOffset"_c;
inline constexpr auto TextureSampleCompareOffset_Texture3D_backend_index = 2335u;

/// textureSampleCompareOffset with SampledTexture3D, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleCompareOffset_Texture3D;
inline constexpr auto SampledTextureSampleCompareOffset_Texture3D_name = "textureSampleCompareOffset"_c;
inline constexpr auto SampledTextureSampleCompareOffset_Texture3D_backend_index = 2336u;

/// textureSampleCompareOffset with Texture1DArray, Sampler, Float32x2, Float32, Float32x2
extern Variable TextureSampleCompareOffset_Texture1DArray_texture;
extern Variable TextureSampleCompareOffset_Texture1DArray_sampler;
extern Variable TextureSampleCompareOffset_Texture1DArray_coordinate;
extern Variable TextureSampleCompareOffset_Texture1DArray_compare;
extern Variable TextureSampleCompareOffset_Texture1DArray_offset;
extern Function TextureSampleCompareOffset_Texture1DArray;
inline constexpr auto TextureSampleCompareOffset_Texture1DArray_name = "textureSampleCompareOffset"_c;
inline constexpr auto TextureSampleCompareOffset_Texture1DArray_backend_index = 2337u;

/// textureSampleCompareOffset with SampledTexture1DArray, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleCompareOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleCompareOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleCompareOffset_Texture1DArray_compare;
extern Variable SampledTextureSampleCompareOffset_Texture1DArray_offset;
extern Function SampledTextureSampleCompareOffset_Texture1DArray;
inline constexpr auto SampledTextureSampleCompareOffset_Texture1DArray_name = "textureSampleCompareOffset"_c;
inline constexpr auto SampledTextureSampleCompareOffset_Texture1DArray_backend_index = 2338u;

/// textureSampleCompareOffset with Texture2DArray, Sampler, Float32x3, Float32, Float32x3
extern Variable TextureSampleCompareOffset_Texture2DArray_texture;
extern Variable TextureSampleCompareOffset_Texture2DArray_sampler;
extern Variable TextureSampleCompareOffset_Texture2DArray_coordinate;
extern Variable TextureSampleCompareOffset_Texture2DArray_compare;
extern Variable TextureSampleCompareOffset_Texture2DArray_offset;
extern Function TextureSampleCompareOffset_Texture2DArray;
inline constexpr auto TextureSampleCompareOffset_Texture2DArray_name = "textureSampleCompareOffset"_c;
inline constexpr auto TextureSampleCompareOffset_Texture2DArray_backend_index = 2339u;

/// textureSampleCompareOffset with SampledTexture2DArray, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleCompareOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleCompareOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleCompareOffset_Texture2DArray_compare;
extern Variable SampledTextureSampleCompareOffset_Texture2DArray_offset;
extern Function SampledTextureSampleCompareOffset_Texture2DArray;
inline constexpr auto SampledTextureSampleCompareOffset_Texture2DArray_name = "textureSampleCompareOffset"_c;
inline constexpr auto SampledTextureSampleCompareOffset_Texture2DArray_backend_index = 2340u;

/// textureSampleProjCompare with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleProjCompare_Texture1D_texture;
extern Variable TextureSampleProjCompare_Texture1D_sampler;
extern Variable TextureSampleProjCompare_Texture1D_coordinate;
extern Variable TextureSampleProjCompare_Texture1D_proj;
extern Variable TextureSampleProjCompare_Texture1D_compare;
extern Function TextureSampleProjCompare_Texture1D;
inline constexpr auto TextureSampleProjCompare_Texture1D_name = "textureSampleProjCompare"_c;
inline constexpr auto TextureSampleProjCompare_Texture1D_backend_index = 2341u;

/// textureSampleProjCompare with SampledTexture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleProjCompare_Texture1D_texture;
extern Variable SampledTextureSampleProjCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleProjCompare_Texture1D_proj;
extern Variable SampledTextureSampleProjCompare_Texture1D_compare;
extern Function SampledTextureSampleProjCompare_Texture1D;
inline constexpr auto SampledTextureSampleProjCompare_Texture1D_name = "textureSampleProjCompare"_c;
inline constexpr auto SampledTextureSampleProjCompare_Texture1D_backend_index = 2342u;

/// textureSampleProjCompare with Texture2D, Sampler, Float32x2, Float32, Float32
extern Variable TextureSampleProjCompare_Texture2D_texture;
extern Variable TextureSampleProjCompare_Texture2D_sampler;
extern Variable TextureSampleProjCompare_Texture2D_coordinate;
extern Variable TextureSampleProjCompare_Texture2D_proj;
extern Variable TextureSampleProjCompare_Texture2D_compare;
extern Function TextureSampleProjCompare_Texture2D;
inline constexpr auto TextureSampleProjCompare_Texture2D_name = "textureSampleProjCompare"_c;
inline constexpr auto TextureSampleProjCompare_Texture2D_backend_index = 2343u;

/// textureSampleProjCompare with SampledTexture2D, Float32x2, Float32, Float32
extern Variable SampledTextureSampleProjCompare_Texture2D_texture;
extern Variable SampledTextureSampleProjCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleProjCompare_Texture2D_proj;
extern Variable SampledTextureSampleProjCompare_Texture2D_compare;
extern Function SampledTextureSampleProjCompare_Texture2D;
inline constexpr auto SampledTextureSampleProjCompare_Texture2D_name = "textureSampleProjCompare"_c;
inline constexpr auto SampledTextureSampleProjCompare_Texture2D_backend_index = 2344u;

/// textureSampleProjCompare with Texture3D, Sampler, Float32x3, Float32, Float32
extern Variable TextureSampleProjCompare_Texture3D_texture;
extern Variable TextureSampleProjCompare_Texture3D_sampler;
extern Variable TextureSampleProjCompare_Texture3D_coordinate;
extern Variable TextureSampleProjCompare_Texture3D_proj;
extern Variable TextureSampleProjCompare_Texture3D_compare;
extern Function TextureSampleProjCompare_Texture3D;
inline constexpr auto TextureSampleProjCompare_Texture3D_name = "textureSampleProjCompare"_c;
inline constexpr auto TextureSampleProjCompare_Texture3D_backend_index = 2345u;

/// textureSampleProjCompare with SampledTexture3D, Float32x3, Float32, Float32
extern Variable SampledTextureSampleProjCompare_Texture3D_texture;
extern Variable SampledTextureSampleProjCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleProjCompare_Texture3D_proj;
extern Variable SampledTextureSampleProjCompare_Texture3D_compare;
extern Function SampledTextureSampleProjCompare_Texture3D;
inline constexpr auto SampledTextureSampleProjCompare_Texture3D_name = "textureSampleProjCompare"_c;
inline constexpr auto SampledTextureSampleProjCompare_Texture3D_backend_index = 2346u;

/// textureSampleProjCompareOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleProjCompareOffset_Texture1D_texture;
extern Variable TextureSampleProjCompareOffset_Texture1D_sampler;
extern Variable TextureSampleProjCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleProjCompareOffset_Texture1D_proj;
extern Variable TextureSampleProjCompareOffset_Texture1D_compare;
extern Variable TextureSampleProjCompareOffset_Texture1D_offset;
extern Function TextureSampleProjCompareOffset_Texture1D;
inline constexpr auto TextureSampleProjCompareOffset_Texture1D_name = "textureSampleProjCompareOffset"_c;
inline constexpr auto TextureSampleProjCompareOffset_Texture1D_backend_index = 2347u;

/// textureSampleProjCompareOffset with SampledTexture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleProjCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleProjCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleProjCompareOffset_Texture1D_proj;
extern Variable SampledTextureSampleProjCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleProjCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleProjCompareOffset_Texture1D;
inline constexpr auto SampledTextureSampleProjCompareOffset_Texture1D_name = "textureSampleProjCompareOffset"_c;
inline constexpr auto SampledTextureSampleProjCompareOffset_Texture1D_backend_index = 2348u;

/// textureSampleProjCompareOffset with Texture2D, Sampler, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleProjCompareOffset_Texture2D_texture;
extern Variable TextureSampleProjCompareOffset_Texture2D_sampler;
extern Variable TextureSampleProjCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleProjCompareOffset_Texture2D_proj;
extern Variable TextureSampleProjCompareOffset_Texture2D_compare;
extern Variable TextureSampleProjCompareOffset_Texture2D_offset;
extern Function TextureSampleProjCompareOffset_Texture2D;
inline constexpr auto TextureSampleProjCompareOffset_Texture2D_name = "textureSampleProjCompareOffset"_c;
inline constexpr auto TextureSampleProjCompareOffset_Texture2D_backend_index = 2349u;

/// textureSampleProjCompareOffset with SampledTexture2D, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleProjCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleProjCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleProjCompareOffset_Texture2D_proj;
extern Variable SampledTextureSampleProjCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleProjCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleProjCompareOffset_Texture2D;
inline constexpr auto SampledTextureSampleProjCompareOffset_Texture2D_name = "textureSampleProjCompareOffset"_c;
inline constexpr auto SampledTextureSampleProjCompareOffset_Texture2D_backend_index = 2350u;

/// textureSampleProjCompareOffset with Texture3D, Sampler, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleProjCompareOffset_Texture3D_texture;
extern Variable TextureSampleProjCompareOffset_Texture3D_sampler;
extern Variable TextureSampleProjCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleProjCompareOffset_Texture3D_proj;
extern Variable TextureSampleProjCompareOffset_Texture3D_compare;
extern Variable TextureSampleProjCompareOffset_Texture3D_offset;
extern Function TextureSampleProjCompareOffset_Texture3D;
inline constexpr auto TextureSampleProjCompareOffset_Texture3D_name = "textureSampleProjCompareOffset"_c;
inline constexpr auto TextureSampleProjCompareOffset_Texture3D_backend_index = 2351u;

/// textureSampleProjCompareOffset with SampledTexture3D, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleProjCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleProjCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleProjCompareOffset_Texture3D_proj;
extern Variable SampledTextureSampleProjCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleProjCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleProjCompareOffset_Texture3D;
inline constexpr auto SampledTextureSampleProjCompareOffset_Texture3D_name = "textureSampleProjCompareOffset"_c;
inline constexpr auto SampledTextureSampleProjCompareOffset_Texture3D_backend_index = 2352u;

/// textureSampleLod with Texture1D, Sampler, Float32, Float32
extern Variable TextureSampleLod_Texture1D_texture;
extern Variable TextureSampleLod_Texture1D_sampler;
extern Variable TextureSampleLod_Texture1D_coordinate;
extern Variable TextureSampleLod_Texture1D_lod;
extern Function TextureSampleLod_Texture1D;
inline constexpr auto TextureSampleLod_Texture1D_name = "textureSampleLod"_c;
inline constexpr auto TextureSampleLod_Texture1D_backend_index = 2353u;

/// textureSampleLod with SampledTexture1D, Float32, Float32
extern Variable SampledTextureSampleLod_Texture1D_texture;
extern Variable SampledTextureSampleLod_Texture1D_coordinate;
extern Variable SampledTextureSampleLod_Texture1D_lod;
extern Function SampledTextureSampleLod_Texture1D;
inline constexpr auto SampledTextureSampleLod_Texture1D_name = "textureSampleLod"_c;
inline constexpr auto SampledTextureSampleLod_Texture1D_backend_index = 2354u;

/// textureSampleLod with Texture2D, Sampler, Float32x2, Float32
extern Variable TextureSampleLod_Texture2D_texture;
extern Variable TextureSampleLod_Texture2D_sampler;
extern Variable TextureSampleLod_Texture2D_coordinate;
extern Variable TextureSampleLod_Texture2D_lod;
extern Function TextureSampleLod_Texture2D;
inline constexpr auto TextureSampleLod_Texture2D_name = "textureSampleLod"_c;
inline constexpr auto TextureSampleLod_Texture2D_backend_index = 2355u;

/// textureSampleLod with SampledTexture2D, Float32x2, Float32
extern Variable SampledTextureSampleLod_Texture2D_texture;
extern Variable SampledTextureSampleLod_Texture2D_coordinate;
extern Variable SampledTextureSampleLod_Texture2D_lod;
extern Function SampledTextureSampleLod_Texture2D;
inline constexpr auto SampledTextureSampleLod_Texture2D_name = "textureSampleLod"_c;
inline constexpr auto SampledTextureSampleLod_Texture2D_backend_index = 2356u;

/// textureSampleLod with Texture3D, Sampler, Float32x3, Float32
extern Variable TextureSampleLod_Texture3D_texture;
extern Variable TextureSampleLod_Texture3D_sampler;
extern Variable TextureSampleLod_Texture3D_coordinate;
extern Variable TextureSampleLod_Texture3D_lod;
extern Function TextureSampleLod_Texture3D;
inline constexpr auto TextureSampleLod_Texture3D_name = "textureSampleLod"_c;
inline constexpr auto TextureSampleLod_Texture3D_backend_index = 2357u;

/// textureSampleLod with SampledTexture3D, Float32x3, Float32
extern Variable SampledTextureSampleLod_Texture3D_texture;
extern Variable SampledTextureSampleLod_Texture3D_coordinate;
extern Variable SampledTextureSampleLod_Texture3D_lod;
extern Function SampledTextureSampleLod_Texture3D;
inline constexpr auto SampledTextureSampleLod_Texture3D_name = "textureSampleLod"_c;
inline constexpr auto SampledTextureSampleLod_Texture3D_backend_index = 2358u;

/// textureSampleLod with TextureCube, Sampler, Float32x3, Float32
extern Variable TextureSampleLod_TextureCube_texture;
extern Variable TextureSampleLod_TextureCube_sampler;
extern Variable TextureSampleLod_TextureCube_coordinate;
extern Variable TextureSampleLod_TextureCube_lod;
extern Function TextureSampleLod_TextureCube;
inline constexpr auto TextureSampleLod_TextureCube_name = "textureSampleLod"_c;
inline constexpr auto TextureSampleLod_TextureCube_backend_index = 2359u;

/// textureSampleLod with SampledTextureCube, Float32x3, Float32
extern Variable SampledTextureSampleLod_TextureCube_texture;
extern Variable SampledTextureSampleLod_TextureCube_coordinate;
extern Variable SampledTextureSampleLod_TextureCube_lod;
extern Function SampledTextureSampleLod_TextureCube;
inline constexpr auto SampledTextureSampleLod_TextureCube_name = "textureSampleLod"_c;
inline constexpr auto SampledTextureSampleLod_TextureCube_backend_index = 2360u;

/// textureSampleLod with Texture1DArray, Sampler, Float32x2, Float32
extern Variable TextureSampleLod_Texture1DArray_texture;
extern Variable TextureSampleLod_Texture1DArray_sampler;
extern Variable TextureSampleLod_Texture1DArray_coordinate;
extern Variable TextureSampleLod_Texture1DArray_lod;
extern Function TextureSampleLod_Texture1DArray;
inline constexpr auto TextureSampleLod_Texture1DArray_name = "textureSampleLod"_c;
inline constexpr auto TextureSampleLod_Texture1DArray_backend_index = 2361u;

/// textureSampleLod with SampledTexture1DArray, Float32x2, Float32
extern Variable SampledTextureSampleLod_Texture1DArray_texture;
extern Variable SampledTextureSampleLod_Texture1DArray_coordinate;
extern Variable SampledTextureSampleLod_Texture1DArray_lod;
extern Function SampledTextureSampleLod_Texture1DArray;
inline constexpr auto SampledTextureSampleLod_Texture1DArray_name = "textureSampleLod"_c;
inline constexpr auto SampledTextureSampleLod_Texture1DArray_backend_index = 2362u;

/// textureSampleLod with Texture2DArray, Sampler, Float32x3, Float32
extern Variable TextureSampleLod_Texture2DArray_texture;
extern Variable TextureSampleLod_Texture2DArray_sampler;
extern Variable TextureSampleLod_Texture2DArray_coordinate;
extern Variable TextureSampleLod_Texture2DArray_lod;
extern Function TextureSampleLod_Texture2DArray;
inline constexpr auto TextureSampleLod_Texture2DArray_name = "textureSampleLod"_c;
inline constexpr auto TextureSampleLod_Texture2DArray_backend_index = 2363u;

/// textureSampleLod with SampledTexture2DArray, Float32x3, Float32
extern Variable SampledTextureSampleLod_Texture2DArray_texture;
extern Variable SampledTextureSampleLod_Texture2DArray_coordinate;
extern Variable SampledTextureSampleLod_Texture2DArray_lod;
extern Function SampledTextureSampleLod_Texture2DArray;
inline constexpr auto SampledTextureSampleLod_Texture2DArray_name = "textureSampleLod"_c;
inline constexpr auto SampledTextureSampleLod_Texture2DArray_backend_index = 2364u;

/// textureSampleLod with TextureCubeArray, Sampler, Float32x4, Float32
extern Variable TextureSampleLod_TextureCubeArray_texture;
extern Variable TextureSampleLod_TextureCubeArray_sampler;
extern Variable TextureSampleLod_TextureCubeArray_coordinate;
extern Variable TextureSampleLod_TextureCubeArray_lod;
extern Function TextureSampleLod_TextureCubeArray;
inline constexpr auto TextureSampleLod_TextureCubeArray_name = "textureSampleLod"_c;
inline constexpr auto TextureSampleLod_TextureCubeArray_backend_index = 2365u;

/// textureSampleLod with SampledTextureCubeArray, Float32x4, Float32
extern Variable SampledTextureSampleLod_TextureCubeArray_texture;
extern Variable SampledTextureSampleLod_TextureCubeArray_coordinate;
extern Variable SampledTextureSampleLod_TextureCubeArray_lod;
extern Function SampledTextureSampleLod_TextureCubeArray;
inline constexpr auto SampledTextureSampleLod_TextureCubeArray_name = "textureSampleLod"_c;
inline constexpr auto SampledTextureSampleLod_TextureCubeArray_backend_index = 2366u;

/// textureSampleLodOffset with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleLodOffset_Texture1D_texture;
extern Variable TextureSampleLodOffset_Texture1D_sampler;
extern Variable TextureSampleLodOffset_Texture1D_coordinate;
extern Variable TextureSampleLodOffset_Texture1D_lod;
extern Variable TextureSampleLodOffset_Texture1D_offset;
extern Function TextureSampleLodOffset_Texture1D;
inline constexpr auto TextureSampleLodOffset_Texture1D_name = "textureSampleLodOffset"_c;
inline constexpr auto TextureSampleLodOffset_Texture1D_backend_index = 2367u;

/// textureSampleLodOffset with SampledTexture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleLodOffset_Texture1D_texture;
extern Variable SampledTextureSampleLodOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleLodOffset_Texture1D_lod;
extern Variable SampledTextureSampleLodOffset_Texture1D_offset;
extern Function SampledTextureSampleLodOffset_Texture1D;
inline constexpr auto SampledTextureSampleLodOffset_Texture1D_name = "textureSampleLodOffset"_c;
inline constexpr auto SampledTextureSampleLodOffset_Texture1D_backend_index = 2368u;

/// textureSampleLodOffset with Texture2D, Sampler, Float32x2, Float32, Float32x2
extern Variable TextureSampleLodOffset_Texture2D_texture;
extern Variable TextureSampleLodOffset_Texture2D_sampler;
extern Variable TextureSampleLodOffset_Texture2D_coordinate;
extern Variable TextureSampleLodOffset_Texture2D_lod;
extern Variable TextureSampleLodOffset_Texture2D_offset;
extern Function TextureSampleLodOffset_Texture2D;
inline constexpr auto TextureSampleLodOffset_Texture2D_name = "textureSampleLodOffset"_c;
inline constexpr auto TextureSampleLodOffset_Texture2D_backend_index = 2369u;

/// textureSampleLodOffset with SampledTexture2D, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleLodOffset_Texture2D_texture;
extern Variable SampledTextureSampleLodOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleLodOffset_Texture2D_lod;
extern Variable SampledTextureSampleLodOffset_Texture2D_offset;
extern Function SampledTextureSampleLodOffset_Texture2D;
inline constexpr auto SampledTextureSampleLodOffset_Texture2D_name = "textureSampleLodOffset"_c;
inline constexpr auto SampledTextureSampleLodOffset_Texture2D_backend_index = 2370u;

/// textureSampleLodOffset with Texture3D, Sampler, Float32x3, Float32, Float32x3
extern Variable TextureSampleLodOffset_Texture3D_texture;
extern Variable TextureSampleLodOffset_Texture3D_sampler;
extern Variable TextureSampleLodOffset_Texture3D_coordinate;
extern Variable TextureSampleLodOffset_Texture3D_lod;
extern Variable TextureSampleLodOffset_Texture3D_offset;
extern Function TextureSampleLodOffset_Texture3D;
inline constexpr auto TextureSampleLodOffset_Texture3D_name = "textureSampleLodOffset"_c;
inline constexpr auto TextureSampleLodOffset_Texture3D_backend_index = 2371u;

/// textureSampleLodOffset with SampledTexture3D, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleLodOffset_Texture3D_texture;
extern Variable SampledTextureSampleLodOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleLodOffset_Texture3D_lod;
extern Variable SampledTextureSampleLodOffset_Texture3D_offset;
extern Function SampledTextureSampleLodOffset_Texture3D;
inline constexpr auto SampledTextureSampleLodOffset_Texture3D_name = "textureSampleLodOffset"_c;
inline constexpr auto SampledTextureSampleLodOffset_Texture3D_backend_index = 2372u;

/// textureSampleLodOffset with Texture1DArray, Sampler, Float32x2, Float32, Float32x2
extern Variable TextureSampleLodOffset_Texture1DArray_texture;
extern Variable TextureSampleLodOffset_Texture1DArray_sampler;
extern Variable TextureSampleLodOffset_Texture1DArray_coordinate;
extern Variable TextureSampleLodOffset_Texture1DArray_lod;
extern Variable TextureSampleLodOffset_Texture1DArray_offset;
extern Function TextureSampleLodOffset_Texture1DArray;
inline constexpr auto TextureSampleLodOffset_Texture1DArray_name = "textureSampleLodOffset"_c;
inline constexpr auto TextureSampleLodOffset_Texture1DArray_backend_index = 2373u;

/// textureSampleLodOffset with SampledTexture1DArray, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleLodOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleLodOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleLodOffset_Texture1DArray_lod;
extern Variable SampledTextureSampleLodOffset_Texture1DArray_offset;
extern Function SampledTextureSampleLodOffset_Texture1DArray;
inline constexpr auto SampledTextureSampleLodOffset_Texture1DArray_name = "textureSampleLodOffset"_c;
inline constexpr auto SampledTextureSampleLodOffset_Texture1DArray_backend_index = 2374u;

/// textureSampleLodOffset with Texture2DArray, Sampler, Float32x3, Float32, Float32x3
extern Variable TextureSampleLodOffset_Texture2DArray_texture;
extern Variable TextureSampleLodOffset_Texture2DArray_sampler;
extern Variable TextureSampleLodOffset_Texture2DArray_coordinate;
extern Variable TextureSampleLodOffset_Texture2DArray_lod;
extern Variable TextureSampleLodOffset_Texture2DArray_offset;
extern Function TextureSampleLodOffset_Texture2DArray;
inline constexpr auto TextureSampleLodOffset_Texture2DArray_name = "textureSampleLodOffset"_c;
inline constexpr auto TextureSampleLodOffset_Texture2DArray_backend_index = 2375u;

/// textureSampleLodOffset with SampledTexture2DArray, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleLodOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleLodOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleLodOffset_Texture2DArray_lod;
extern Variable SampledTextureSampleLodOffset_Texture2DArray_offset;
extern Function SampledTextureSampleLodOffset_Texture2DArray;
inline constexpr auto SampledTextureSampleLodOffset_Texture2DArray_name = "textureSampleLodOffset"_c;
inline constexpr auto SampledTextureSampleLodOffset_Texture2DArray_backend_index = 2376u;

/// textureSampleLodProj with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleLodProj_Texture1D_texture;
extern Variable TextureSampleLodProj_Texture1D_sampler;
extern Variable TextureSampleLodProj_Texture1D_coordinate;
extern Variable TextureSampleLodProj_Texture1D_lod;
extern Variable TextureSampleLodProj_Texture1D_proj;
extern Function TextureSampleLodProj_Texture1D;
inline constexpr auto TextureSampleLodProj_Texture1D_name = "textureSampleLodProj"_c;
inline constexpr auto TextureSampleLodProj_Texture1D_backend_index = 2377u;

/// textureSampleLodProj with SampledTexture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleLodProj_Texture1D_texture;
extern Variable SampledTextureSampleLodProj_Texture1D_coordinate;
extern Variable SampledTextureSampleLodProj_Texture1D_lod;
extern Variable SampledTextureSampleLodProj_Texture1D_proj;
extern Function SampledTextureSampleLodProj_Texture1D;
inline constexpr auto SampledTextureSampleLodProj_Texture1D_name = "textureSampleLodProj"_c;
inline constexpr auto SampledTextureSampleLodProj_Texture1D_backend_index = 2378u;

/// textureSampleLodProj with Texture2D, Sampler, Float32x2, Float32, Float32
extern Variable TextureSampleLodProj_Texture2D_texture;
extern Variable TextureSampleLodProj_Texture2D_sampler;
extern Variable TextureSampleLodProj_Texture2D_coordinate;
extern Variable TextureSampleLodProj_Texture2D_lod;
extern Variable TextureSampleLodProj_Texture2D_proj;
extern Function TextureSampleLodProj_Texture2D;
inline constexpr auto TextureSampleLodProj_Texture2D_name = "textureSampleLodProj"_c;
inline constexpr auto TextureSampleLodProj_Texture2D_backend_index = 2379u;

/// textureSampleLodProj with SampledTexture2D, Float32x2, Float32, Float32
extern Variable SampledTextureSampleLodProj_Texture2D_texture;
extern Variable SampledTextureSampleLodProj_Texture2D_coordinate;
extern Variable SampledTextureSampleLodProj_Texture2D_lod;
extern Variable SampledTextureSampleLodProj_Texture2D_proj;
extern Function SampledTextureSampleLodProj_Texture2D;
inline constexpr auto SampledTextureSampleLodProj_Texture2D_name = "textureSampleLodProj"_c;
inline constexpr auto SampledTextureSampleLodProj_Texture2D_backend_index = 2380u;

/// textureSampleLodProj with Texture3D, Sampler, Float32x3, Float32, Float32
extern Variable TextureSampleLodProj_Texture3D_texture;
extern Variable TextureSampleLodProj_Texture3D_sampler;
extern Variable TextureSampleLodProj_Texture3D_coordinate;
extern Variable TextureSampleLodProj_Texture3D_lod;
extern Variable TextureSampleLodProj_Texture3D_proj;
extern Function TextureSampleLodProj_Texture3D;
inline constexpr auto TextureSampleLodProj_Texture3D_name = "textureSampleLodProj"_c;
inline constexpr auto TextureSampleLodProj_Texture3D_backend_index = 2381u;

/// textureSampleLodProj with SampledTexture3D, Float32x3, Float32, Float32
extern Variable SampledTextureSampleLodProj_Texture3D_texture;
extern Variable SampledTextureSampleLodProj_Texture3D_coordinate;
extern Variable SampledTextureSampleLodProj_Texture3D_lod;
extern Variable SampledTextureSampleLodProj_Texture3D_proj;
extern Function SampledTextureSampleLodProj_Texture3D;
inline constexpr auto SampledTextureSampleLodProj_Texture3D_name = "textureSampleLodProj"_c;
inline constexpr auto SampledTextureSampleLodProj_Texture3D_backend_index = 2382u;

/// textureSampleLodProjOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleLodProjOffset_Texture1D_texture;
extern Variable TextureSampleLodProjOffset_Texture1D_sampler;
extern Variable TextureSampleLodProjOffset_Texture1D_coordinate;
extern Variable TextureSampleLodProjOffset_Texture1D_lod;
extern Variable TextureSampleLodProjOffset_Texture1D_proj;
extern Variable TextureSampleLodProjOffset_Texture1D_offset;
extern Function TextureSampleLodProjOffset_Texture1D;
inline constexpr auto TextureSampleLodProjOffset_Texture1D_name = "textureSampleLodProjOffset"_c;
inline constexpr auto TextureSampleLodProjOffset_Texture1D_backend_index = 2383u;

/// textureSampleLodProjOffset with SampledTexture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleLodProjOffset_Texture1D_texture;
extern Variable SampledTextureSampleLodProjOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleLodProjOffset_Texture1D_lod;
extern Variable SampledTextureSampleLodProjOffset_Texture1D_proj;
extern Variable SampledTextureSampleLodProjOffset_Texture1D_offset;
extern Function SampledTextureSampleLodProjOffset_Texture1D;
inline constexpr auto SampledTextureSampleLodProjOffset_Texture1D_name = "textureSampleLodProjOffset"_c;
inline constexpr auto SampledTextureSampleLodProjOffset_Texture1D_backend_index = 2384u;

/// textureSampleLodProjOffset with Texture2D, Sampler, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleLodProjOffset_Texture2D_texture;
extern Variable TextureSampleLodProjOffset_Texture2D_sampler;
extern Variable TextureSampleLodProjOffset_Texture2D_coordinate;
extern Variable TextureSampleLodProjOffset_Texture2D_lod;
extern Variable TextureSampleLodProjOffset_Texture2D_proj;
extern Variable TextureSampleLodProjOffset_Texture2D_offset;
extern Function TextureSampleLodProjOffset_Texture2D;
inline constexpr auto TextureSampleLodProjOffset_Texture2D_name = "textureSampleLodProjOffset"_c;
inline constexpr auto TextureSampleLodProjOffset_Texture2D_backend_index = 2385u;

/// textureSampleLodProjOffset with SampledTexture2D, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleLodProjOffset_Texture2D_texture;
extern Variable SampledTextureSampleLodProjOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleLodProjOffset_Texture2D_lod;
extern Variable SampledTextureSampleLodProjOffset_Texture2D_proj;
extern Variable SampledTextureSampleLodProjOffset_Texture2D_offset;
extern Function SampledTextureSampleLodProjOffset_Texture2D;
inline constexpr auto SampledTextureSampleLodProjOffset_Texture2D_name = "textureSampleLodProjOffset"_c;
inline constexpr auto SampledTextureSampleLodProjOffset_Texture2D_backend_index = 2386u;

/// textureSampleLodProjOffset with Texture3D, Sampler, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleLodProjOffset_Texture3D_texture;
extern Variable TextureSampleLodProjOffset_Texture3D_sampler;
extern Variable TextureSampleLodProjOffset_Texture3D_coordinate;
extern Variable TextureSampleLodProjOffset_Texture3D_lod;
extern Variable TextureSampleLodProjOffset_Texture3D_proj;
extern Variable TextureSampleLodProjOffset_Texture3D_offset;
extern Function TextureSampleLodProjOffset_Texture3D;
inline constexpr auto TextureSampleLodProjOffset_Texture3D_name = "textureSampleLodProjOffset"_c;
inline constexpr auto TextureSampleLodProjOffset_Texture3D_backend_index = 2387u;

/// textureSampleLodProjOffset with SampledTexture3D, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleLodProjOffset_Texture3D_texture;
extern Variable SampledTextureSampleLodProjOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleLodProjOffset_Texture3D_lod;
extern Variable SampledTextureSampleLodProjOffset_Texture3D_proj;
extern Variable SampledTextureSampleLodProjOffset_Texture3D_offset;
extern Function SampledTextureSampleLodProjOffset_Texture3D;
inline constexpr auto SampledTextureSampleLodProjOffset_Texture3D_name = "textureSampleLodProjOffset"_c;
inline constexpr auto SampledTextureSampleLodProjOffset_Texture3D_backend_index = 2388u;

/// textureSampleLodCompare with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleLodCompare_Texture1D_texture;
extern Variable TextureSampleLodCompare_Texture1D_sampler;
extern Variable TextureSampleLodCompare_Texture1D_coordinate;
extern Variable TextureSampleLodCompare_Texture1D_lod;
extern Variable TextureSampleLodCompare_Texture1D_compare;
extern Function TextureSampleLodCompare_Texture1D;
inline constexpr auto TextureSampleLodCompare_Texture1D_name = "textureSampleLodCompare"_c;
inline constexpr auto TextureSampleLodCompare_Texture1D_backend_index = 2389u;

/// textureSampleLodCompare with SampledTexture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleLodCompare_Texture1D_texture;
extern Variable SampledTextureSampleLodCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleLodCompare_Texture1D_lod;
extern Variable SampledTextureSampleLodCompare_Texture1D_compare;
extern Function SampledTextureSampleLodCompare_Texture1D;
inline constexpr auto SampledTextureSampleLodCompare_Texture1D_name = "textureSampleLodCompare"_c;
inline constexpr auto SampledTextureSampleLodCompare_Texture1D_backend_index = 2390u;

/// textureSampleLodCompare with Texture2D, Sampler, Float32x2, Float32, Float32
extern Variable TextureSampleLodCompare_Texture2D_texture;
extern Variable TextureSampleLodCompare_Texture2D_sampler;
extern Variable TextureSampleLodCompare_Texture2D_coordinate;
extern Variable TextureSampleLodCompare_Texture2D_lod;
extern Variable TextureSampleLodCompare_Texture2D_compare;
extern Function TextureSampleLodCompare_Texture2D;
inline constexpr auto TextureSampleLodCompare_Texture2D_name = "textureSampleLodCompare"_c;
inline constexpr auto TextureSampleLodCompare_Texture2D_backend_index = 2391u;

/// textureSampleLodCompare with SampledTexture2D, Float32x2, Float32, Float32
extern Variable SampledTextureSampleLodCompare_Texture2D_texture;
extern Variable SampledTextureSampleLodCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleLodCompare_Texture2D_lod;
extern Variable SampledTextureSampleLodCompare_Texture2D_compare;
extern Function SampledTextureSampleLodCompare_Texture2D;
inline constexpr auto SampledTextureSampleLodCompare_Texture2D_name = "textureSampleLodCompare"_c;
inline constexpr auto SampledTextureSampleLodCompare_Texture2D_backend_index = 2392u;

/// textureSampleLodCompare with Texture3D, Sampler, Float32x3, Float32, Float32
extern Variable TextureSampleLodCompare_Texture3D_texture;
extern Variable TextureSampleLodCompare_Texture3D_sampler;
extern Variable TextureSampleLodCompare_Texture3D_coordinate;
extern Variable TextureSampleLodCompare_Texture3D_lod;
extern Variable TextureSampleLodCompare_Texture3D_compare;
extern Function TextureSampleLodCompare_Texture3D;
inline constexpr auto TextureSampleLodCompare_Texture3D_name = "textureSampleLodCompare"_c;
inline constexpr auto TextureSampleLodCompare_Texture3D_backend_index = 2393u;

/// textureSampleLodCompare with SampledTexture3D, Float32x3, Float32, Float32
extern Variable SampledTextureSampleLodCompare_Texture3D_texture;
extern Variable SampledTextureSampleLodCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleLodCompare_Texture3D_lod;
extern Variable SampledTextureSampleLodCompare_Texture3D_compare;
extern Function SampledTextureSampleLodCompare_Texture3D;
inline constexpr auto SampledTextureSampleLodCompare_Texture3D_name = "textureSampleLodCompare"_c;
inline constexpr auto SampledTextureSampleLodCompare_Texture3D_backend_index = 2394u;

/// textureSampleLodCompare with Texture1DArray, Sampler, Float32x2, Float32, Float32
extern Variable TextureSampleLodCompare_Texture1DArray_texture;
extern Variable TextureSampleLodCompare_Texture1DArray_sampler;
extern Variable TextureSampleLodCompare_Texture1DArray_coordinate;
extern Variable TextureSampleLodCompare_Texture1DArray_lod;
extern Variable TextureSampleLodCompare_Texture1DArray_compare;
extern Function TextureSampleLodCompare_Texture1DArray;
inline constexpr auto TextureSampleLodCompare_Texture1DArray_name = "textureSampleLodCompare"_c;
inline constexpr auto TextureSampleLodCompare_Texture1DArray_backend_index = 2395u;

/// textureSampleLodCompare with SampledTexture1DArray, Float32x2, Float32, Float32
extern Variable SampledTextureSampleLodCompare_Texture1DArray_texture;
extern Variable SampledTextureSampleLodCompare_Texture1DArray_coordinate;
extern Variable SampledTextureSampleLodCompare_Texture1DArray_lod;
extern Variable SampledTextureSampleLodCompare_Texture1DArray_compare;
extern Function SampledTextureSampleLodCompare_Texture1DArray;
inline constexpr auto SampledTextureSampleLodCompare_Texture1DArray_name = "textureSampleLodCompare"_c;
inline constexpr auto SampledTextureSampleLodCompare_Texture1DArray_backend_index = 2396u;

/// textureSampleLodCompare with Texture2DArray, Sampler, Float32x3, Float32, Float32
extern Variable TextureSampleLodCompare_Texture2DArray_texture;
extern Variable TextureSampleLodCompare_Texture2DArray_sampler;
extern Variable TextureSampleLodCompare_Texture2DArray_coordinate;
extern Variable TextureSampleLodCompare_Texture2DArray_lod;
extern Variable TextureSampleLodCompare_Texture2DArray_compare;
extern Function TextureSampleLodCompare_Texture2DArray;
inline constexpr auto TextureSampleLodCompare_Texture2DArray_name = "textureSampleLodCompare"_c;
inline constexpr auto TextureSampleLodCompare_Texture2DArray_backend_index = 2397u;

/// textureSampleLodCompare with SampledTexture2DArray, Float32x3, Float32, Float32
extern Variable SampledTextureSampleLodCompare_Texture2DArray_texture;
extern Variable SampledTextureSampleLodCompare_Texture2DArray_coordinate;
extern Variable SampledTextureSampleLodCompare_Texture2DArray_lod;
extern Variable SampledTextureSampleLodCompare_Texture2DArray_compare;
extern Function SampledTextureSampleLodCompare_Texture2DArray;
inline constexpr auto SampledTextureSampleLodCompare_Texture2DArray_name = "textureSampleLodCompare"_c;
inline constexpr auto SampledTextureSampleLodCompare_Texture2DArray_backend_index = 2398u;

/// textureSampleLodCompareOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleLodCompareOffset_Texture1D_texture;
extern Variable TextureSampleLodCompareOffset_Texture1D_sampler;
extern Variable TextureSampleLodCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleLodCompareOffset_Texture1D_lod;
extern Variable TextureSampleLodCompareOffset_Texture1D_compare;
extern Variable TextureSampleLodCompareOffset_Texture1D_offset;
extern Function TextureSampleLodCompareOffset_Texture1D;
inline constexpr auto TextureSampleLodCompareOffset_Texture1D_name = "textureSampleLodCompareOffset"_c;
inline constexpr auto TextureSampleLodCompareOffset_Texture1D_backend_index = 2399u;

/// textureSampleLodCompareOffset with SampledTexture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleLodCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleLodCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleLodCompareOffset_Texture1D_lod;
extern Variable SampledTextureSampleLodCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleLodCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleLodCompareOffset_Texture1D;
inline constexpr auto SampledTextureSampleLodCompareOffset_Texture1D_name = "textureSampleLodCompareOffset"_c;
inline constexpr auto SampledTextureSampleLodCompareOffset_Texture1D_backend_index = 2400u;

/// textureSampleLodCompareOffset with Texture2D, Sampler, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleLodCompareOffset_Texture2D_texture;
extern Variable TextureSampleLodCompareOffset_Texture2D_sampler;
extern Variable TextureSampleLodCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleLodCompareOffset_Texture2D_lod;
extern Variable TextureSampleLodCompareOffset_Texture2D_compare;
extern Variable TextureSampleLodCompareOffset_Texture2D_offset;
extern Function TextureSampleLodCompareOffset_Texture2D;
inline constexpr auto TextureSampleLodCompareOffset_Texture2D_name = "textureSampleLodCompareOffset"_c;
inline constexpr auto TextureSampleLodCompareOffset_Texture2D_backend_index = 2401u;

/// textureSampleLodCompareOffset with SampledTexture2D, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleLodCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleLodCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleLodCompareOffset_Texture2D_lod;
extern Variable SampledTextureSampleLodCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleLodCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleLodCompareOffset_Texture2D;
inline constexpr auto SampledTextureSampleLodCompareOffset_Texture2D_name = "textureSampleLodCompareOffset"_c;
inline constexpr auto SampledTextureSampleLodCompareOffset_Texture2D_backend_index = 2402u;

/// textureSampleLodCompareOffset with Texture3D, Sampler, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleLodCompareOffset_Texture3D_texture;
extern Variable TextureSampleLodCompareOffset_Texture3D_sampler;
extern Variable TextureSampleLodCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleLodCompareOffset_Texture3D_lod;
extern Variable TextureSampleLodCompareOffset_Texture3D_compare;
extern Variable TextureSampleLodCompareOffset_Texture3D_offset;
extern Function TextureSampleLodCompareOffset_Texture3D;
inline constexpr auto TextureSampleLodCompareOffset_Texture3D_name = "textureSampleLodCompareOffset"_c;
inline constexpr auto TextureSampleLodCompareOffset_Texture3D_backend_index = 2403u;

/// textureSampleLodCompareOffset with SampledTexture3D, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleLodCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleLodCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleLodCompareOffset_Texture3D_lod;
extern Variable SampledTextureSampleLodCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleLodCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleLodCompareOffset_Texture3D;
inline constexpr auto SampledTextureSampleLodCompareOffset_Texture3D_name = "textureSampleLodCompareOffset"_c;
inline constexpr auto SampledTextureSampleLodCompareOffset_Texture3D_backend_index = 2404u;

/// textureSampleLodCompareOffset with Texture1DArray, Sampler, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleLodCompareOffset_Texture1DArray_texture;
extern Variable TextureSampleLodCompareOffset_Texture1DArray_sampler;
extern Variable TextureSampleLodCompareOffset_Texture1DArray_coordinate;
extern Variable TextureSampleLodCompareOffset_Texture1DArray_lod;
extern Variable TextureSampleLodCompareOffset_Texture1DArray_compare;
extern Variable TextureSampleLodCompareOffset_Texture1DArray_offset;
extern Function TextureSampleLodCompareOffset_Texture1DArray;
inline constexpr auto TextureSampleLodCompareOffset_Texture1DArray_name = "textureSampleLodCompareOffset"_c;
inline constexpr auto TextureSampleLodCompareOffset_Texture1DArray_backend_index = 2405u;

/// textureSampleLodCompareOffset with SampledTexture1DArray, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleLodCompareOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleLodCompareOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleLodCompareOffset_Texture1DArray_lod;
extern Variable SampledTextureSampleLodCompareOffset_Texture1DArray_compare;
extern Variable SampledTextureSampleLodCompareOffset_Texture1DArray_offset;
extern Function SampledTextureSampleLodCompareOffset_Texture1DArray;
inline constexpr auto SampledTextureSampleLodCompareOffset_Texture1DArray_name = "textureSampleLodCompareOffset"_c;
inline constexpr auto SampledTextureSampleLodCompareOffset_Texture1DArray_backend_index = 2406u;

/// textureSampleLodCompareOffset with Texture2DArray, Sampler, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleLodCompareOffset_Texture2DArray_texture;
extern Variable TextureSampleLodCompareOffset_Texture2DArray_sampler;
extern Variable TextureSampleLodCompareOffset_Texture2DArray_coordinate;
extern Variable TextureSampleLodCompareOffset_Texture2DArray_lod;
extern Variable TextureSampleLodCompareOffset_Texture2DArray_compare;
extern Variable TextureSampleLodCompareOffset_Texture2DArray_offset;
extern Function TextureSampleLodCompareOffset_Texture2DArray;
inline constexpr auto TextureSampleLodCompareOffset_Texture2DArray_name = "textureSampleLodCompareOffset"_c;
inline constexpr auto TextureSampleLodCompareOffset_Texture2DArray_backend_index = 2407u;

/// textureSampleLodCompareOffset with SampledTexture2DArray, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleLodCompareOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleLodCompareOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleLodCompareOffset_Texture2DArray_lod;
extern Variable SampledTextureSampleLodCompareOffset_Texture2DArray_compare;
extern Variable SampledTextureSampleLodCompareOffset_Texture2DArray_offset;
extern Function SampledTextureSampleLodCompareOffset_Texture2DArray;
inline constexpr auto SampledTextureSampleLodCompareOffset_Texture2DArray_name = "textureSampleLodCompareOffset"_c;
inline constexpr auto SampledTextureSampleLodCompareOffset_Texture2DArray_backend_index = 2408u;

/// textureSampleLodProjCompare with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleLodProjCompare_Texture1D_texture;
extern Variable TextureSampleLodProjCompare_Texture1D_sampler;
extern Variable TextureSampleLodProjCompare_Texture1D_coordinate;
extern Variable TextureSampleLodProjCompare_Texture1D_lod;
extern Variable TextureSampleLodProjCompare_Texture1D_proj;
extern Variable TextureSampleLodProjCompare_Texture1D_compare;
extern Function TextureSampleLodProjCompare_Texture1D;
inline constexpr auto TextureSampleLodProjCompare_Texture1D_name = "textureSampleLodProjCompare"_c;
inline constexpr auto TextureSampleLodProjCompare_Texture1D_backend_index = 2409u;

/// textureSampleLodProjCompare with SampledTexture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleLodProjCompare_Texture1D_texture;
extern Variable SampledTextureSampleLodProjCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleLodProjCompare_Texture1D_lod;
extern Variable SampledTextureSampleLodProjCompare_Texture1D_proj;
extern Variable SampledTextureSampleLodProjCompare_Texture1D_compare;
extern Function SampledTextureSampleLodProjCompare_Texture1D;
inline constexpr auto SampledTextureSampleLodProjCompare_Texture1D_name = "textureSampleLodProjCompare"_c;
inline constexpr auto SampledTextureSampleLodProjCompare_Texture1D_backend_index = 2410u;

/// textureSampleLodProjCompare with Texture2D, Sampler, Float32x2, Float32, Float32, Float32
extern Variable TextureSampleLodProjCompare_Texture2D_texture;
extern Variable TextureSampleLodProjCompare_Texture2D_sampler;
extern Variable TextureSampleLodProjCompare_Texture2D_coordinate;
extern Variable TextureSampleLodProjCompare_Texture2D_lod;
extern Variable TextureSampleLodProjCompare_Texture2D_proj;
extern Variable TextureSampleLodProjCompare_Texture2D_compare;
extern Function TextureSampleLodProjCompare_Texture2D;
inline constexpr auto TextureSampleLodProjCompare_Texture2D_name = "textureSampleLodProjCompare"_c;
inline constexpr auto TextureSampleLodProjCompare_Texture2D_backend_index = 2411u;

/// textureSampleLodProjCompare with SampledTexture2D, Float32x2, Float32, Float32, Float32
extern Variable SampledTextureSampleLodProjCompare_Texture2D_texture;
extern Variable SampledTextureSampleLodProjCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleLodProjCompare_Texture2D_lod;
extern Variable SampledTextureSampleLodProjCompare_Texture2D_proj;
extern Variable SampledTextureSampleLodProjCompare_Texture2D_compare;
extern Function SampledTextureSampleLodProjCompare_Texture2D;
inline constexpr auto SampledTextureSampleLodProjCompare_Texture2D_name = "textureSampleLodProjCompare"_c;
inline constexpr auto SampledTextureSampleLodProjCompare_Texture2D_backend_index = 2412u;

/// textureSampleLodProjCompare with Texture3D, Sampler, Float32x3, Float32, Float32, Float32
extern Variable TextureSampleLodProjCompare_Texture3D_texture;
extern Variable TextureSampleLodProjCompare_Texture3D_sampler;
extern Variable TextureSampleLodProjCompare_Texture3D_coordinate;
extern Variable TextureSampleLodProjCompare_Texture3D_lod;
extern Variable TextureSampleLodProjCompare_Texture3D_proj;
extern Variable TextureSampleLodProjCompare_Texture3D_compare;
extern Function TextureSampleLodProjCompare_Texture3D;
inline constexpr auto TextureSampleLodProjCompare_Texture3D_name = "textureSampleLodProjCompare"_c;
inline constexpr auto TextureSampleLodProjCompare_Texture3D_backend_index = 2413u;

/// textureSampleLodProjCompare with SampledTexture3D, Float32x3, Float32, Float32, Float32
extern Variable SampledTextureSampleLodProjCompare_Texture3D_texture;
extern Variable SampledTextureSampleLodProjCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleLodProjCompare_Texture3D_lod;
extern Variable SampledTextureSampleLodProjCompare_Texture3D_proj;
extern Variable SampledTextureSampleLodProjCompare_Texture3D_compare;
extern Function SampledTextureSampleLodProjCompare_Texture3D;
inline constexpr auto SampledTextureSampleLodProjCompare_Texture3D_name = "textureSampleLodProjCompare"_c;
inline constexpr auto SampledTextureSampleLodProjCompare_Texture3D_backend_index = 2414u;

/// textureSampleLodProjCompareOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32, Float32
extern Variable TextureSampleLodProjCompareOffset_Texture1D_texture;
extern Variable TextureSampleLodProjCompareOffset_Texture1D_sampler;
extern Variable TextureSampleLodProjCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleLodProjCompareOffset_Texture1D_lod;
extern Variable TextureSampleLodProjCompareOffset_Texture1D_proj;
extern Variable TextureSampleLodProjCompareOffset_Texture1D_compare;
extern Variable TextureSampleLodProjCompareOffset_Texture1D_offset;
extern Function TextureSampleLodProjCompareOffset_Texture1D;
inline constexpr auto TextureSampleLodProjCompareOffset_Texture1D_name = "textureSampleLodProjCompareOffset"_c;
inline constexpr auto TextureSampleLodProjCompareOffset_Texture1D_backend_index = 2415u;

/// textureSampleLodProjCompareOffset with SampledTexture1D, Float32, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleLodProjCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture1D_lod;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture1D_proj;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleLodProjCompareOffset_Texture1D;
inline constexpr auto SampledTextureSampleLodProjCompareOffset_Texture1D_name = "textureSampleLodProjCompareOffset"_c;
inline constexpr auto SampledTextureSampleLodProjCompareOffset_Texture1D_backend_index = 2416u;

/// textureSampleLodProjCompareOffset with Texture2D, Sampler, Float32x2, Float32, Float32, Float32, Float32x2
extern Variable TextureSampleLodProjCompareOffset_Texture2D_texture;
extern Variable TextureSampleLodProjCompareOffset_Texture2D_sampler;
extern Variable TextureSampleLodProjCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleLodProjCompareOffset_Texture2D_lod;
extern Variable TextureSampleLodProjCompareOffset_Texture2D_proj;
extern Variable TextureSampleLodProjCompareOffset_Texture2D_compare;
extern Variable TextureSampleLodProjCompareOffset_Texture2D_offset;
extern Function TextureSampleLodProjCompareOffset_Texture2D;
inline constexpr auto TextureSampleLodProjCompareOffset_Texture2D_name = "textureSampleLodProjCompareOffset"_c;
inline constexpr auto TextureSampleLodProjCompareOffset_Texture2D_backend_index = 2417u;

/// textureSampleLodProjCompareOffset with SampledTexture2D, Float32x2, Float32, Float32, Float32, Float32x2
extern Variable SampledTextureSampleLodProjCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture2D_lod;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture2D_proj;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleLodProjCompareOffset_Texture2D;
inline constexpr auto SampledTextureSampleLodProjCompareOffset_Texture2D_name = "textureSampleLodProjCompareOffset"_c;
inline constexpr auto SampledTextureSampleLodProjCompareOffset_Texture2D_backend_index = 2418u;

/// textureSampleLodProjCompareOffset with Texture3D, Sampler, Float32x3, Float32, Float32, Float32, Float32x3
extern Variable TextureSampleLodProjCompareOffset_Texture3D_texture;
extern Variable TextureSampleLodProjCompareOffset_Texture3D_sampler;
extern Variable TextureSampleLodProjCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleLodProjCompareOffset_Texture3D_lod;
extern Variable TextureSampleLodProjCompareOffset_Texture3D_proj;
extern Variable TextureSampleLodProjCompareOffset_Texture3D_compare;
extern Variable TextureSampleLodProjCompareOffset_Texture3D_offset;
extern Function TextureSampleLodProjCompareOffset_Texture3D;
inline constexpr auto TextureSampleLodProjCompareOffset_Texture3D_name = "textureSampleLodProjCompareOffset"_c;
inline constexpr auto TextureSampleLodProjCompareOffset_Texture3D_backend_index = 2419u;

/// textureSampleLodProjCompareOffset with SampledTexture3D, Float32x3, Float32, Float32, Float32, Float32x3
extern Variable SampledTextureSampleLodProjCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture3D_lod;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture3D_proj;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleLodProjCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleLodProjCompareOffset_Texture3D;
inline constexpr auto SampledTextureSampleLodProjCompareOffset_Texture3D_name = "textureSampleLodProjCompareOffset"_c;
inline constexpr auto SampledTextureSampleLodProjCompareOffset_Texture3D_backend_index = 2420u;

/// textureSampleGrad with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleGrad_Texture1D_texture;
extern Variable TextureSampleGrad_Texture1D_sampler;
extern Variable TextureSampleGrad_Texture1D_coordinate;
extern Variable TextureSampleGrad_Texture1D_grad_x;
extern Variable TextureSampleGrad_Texture1D_grad_y;
extern Function TextureSampleGrad_Texture1D;
inline constexpr auto TextureSampleGrad_Texture1D_name = "textureSampleGrad"_c;
inline constexpr auto TextureSampleGrad_Texture1D_backend_index = 2421u;

/// textureSampleGrad with SampledTexture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleGrad_Texture1D_texture;
extern Variable SampledTextureSampleGrad_Texture1D_coordinate;
extern Variable SampledTextureSampleGrad_Texture1D_grad_x;
extern Variable SampledTextureSampleGrad_Texture1D_grad_y;
extern Function SampledTextureSampleGrad_Texture1D;
inline constexpr auto SampledTextureSampleGrad_Texture1D_name = "textureSampleGrad"_c;
inline constexpr auto SampledTextureSampleGrad_Texture1D_backend_index = 2422u;

/// textureSampleGrad with Texture2D, Sampler, Float32x2, Float32x2, Float32x2
extern Variable TextureSampleGrad_Texture2D_texture;
extern Variable TextureSampleGrad_Texture2D_sampler;
extern Variable TextureSampleGrad_Texture2D_coordinate;
extern Variable TextureSampleGrad_Texture2D_grad_x;
extern Variable TextureSampleGrad_Texture2D_grad_y;
extern Function TextureSampleGrad_Texture2D;
inline constexpr auto TextureSampleGrad_Texture2D_name = "textureSampleGrad"_c;
inline constexpr auto TextureSampleGrad_Texture2D_backend_index = 2423u;

/// textureSampleGrad with SampledTexture2D, Float32x2, Float32x2, Float32x2
extern Variable SampledTextureSampleGrad_Texture2D_texture;
extern Variable SampledTextureSampleGrad_Texture2D_coordinate;
extern Variable SampledTextureSampleGrad_Texture2D_grad_x;
extern Variable SampledTextureSampleGrad_Texture2D_grad_y;
extern Function SampledTextureSampleGrad_Texture2D;
inline constexpr auto SampledTextureSampleGrad_Texture2D_name = "textureSampleGrad"_c;
inline constexpr auto SampledTextureSampleGrad_Texture2D_backend_index = 2424u;

/// textureSampleGrad with Texture3D, Sampler, Float32x3, Float32x3, Float32x3
extern Variable TextureSampleGrad_Texture3D_texture;
extern Variable TextureSampleGrad_Texture3D_sampler;
extern Variable TextureSampleGrad_Texture3D_coordinate;
extern Variable TextureSampleGrad_Texture3D_grad_x;
extern Variable TextureSampleGrad_Texture3D_grad_y;
extern Function TextureSampleGrad_Texture3D;
inline constexpr auto TextureSampleGrad_Texture3D_name = "textureSampleGrad"_c;
inline constexpr auto TextureSampleGrad_Texture3D_backend_index = 2425u;

/// textureSampleGrad with SampledTexture3D, Float32x3, Float32x3, Float32x3
extern Variable SampledTextureSampleGrad_Texture3D_texture;
extern Variable SampledTextureSampleGrad_Texture3D_coordinate;
extern Variable SampledTextureSampleGrad_Texture3D_grad_x;
extern Variable SampledTextureSampleGrad_Texture3D_grad_y;
extern Function SampledTextureSampleGrad_Texture3D;
inline constexpr auto SampledTextureSampleGrad_Texture3D_name = "textureSampleGrad"_c;
inline constexpr auto SampledTextureSampleGrad_Texture3D_backend_index = 2426u;

/// textureSampleGrad with TextureCube, Sampler, Float32x3, Float32x3, Float32x3
extern Variable TextureSampleGrad_TextureCube_texture;
extern Variable TextureSampleGrad_TextureCube_sampler;
extern Variable TextureSampleGrad_TextureCube_coordinate;
extern Variable TextureSampleGrad_TextureCube_grad_x;
extern Variable TextureSampleGrad_TextureCube_grad_y;
extern Function TextureSampleGrad_TextureCube;
inline constexpr auto TextureSampleGrad_TextureCube_name = "textureSampleGrad"_c;
inline constexpr auto TextureSampleGrad_TextureCube_backend_index = 2427u;

/// textureSampleGrad with SampledTextureCube, Float32x3, Float32x3, Float32x3
extern Variable SampledTextureSampleGrad_TextureCube_texture;
extern Variable SampledTextureSampleGrad_TextureCube_coordinate;
extern Variable SampledTextureSampleGrad_TextureCube_grad_x;
extern Variable SampledTextureSampleGrad_TextureCube_grad_y;
extern Function SampledTextureSampleGrad_TextureCube;
inline constexpr auto SampledTextureSampleGrad_TextureCube_name = "textureSampleGrad"_c;
inline constexpr auto SampledTextureSampleGrad_TextureCube_backend_index = 2428u;

/// textureSampleGrad with Texture1DArray, Sampler, Float32x2, Float32x2, Float32x2
extern Variable TextureSampleGrad_Texture1DArray_texture;
extern Variable TextureSampleGrad_Texture1DArray_sampler;
extern Variable TextureSampleGrad_Texture1DArray_coordinate;
extern Variable TextureSampleGrad_Texture1DArray_grad_x;
extern Variable TextureSampleGrad_Texture1DArray_grad_y;
extern Function TextureSampleGrad_Texture1DArray;
inline constexpr auto TextureSampleGrad_Texture1DArray_name = "textureSampleGrad"_c;
inline constexpr auto TextureSampleGrad_Texture1DArray_backend_index = 2429u;

/// textureSampleGrad with SampledTexture1DArray, Float32x2, Float32x2, Float32x2
extern Variable SampledTextureSampleGrad_Texture1DArray_texture;
extern Variable SampledTextureSampleGrad_Texture1DArray_coordinate;
extern Variable SampledTextureSampleGrad_Texture1DArray_grad_x;
extern Variable SampledTextureSampleGrad_Texture1DArray_grad_y;
extern Function SampledTextureSampleGrad_Texture1DArray;
inline constexpr auto SampledTextureSampleGrad_Texture1DArray_name = "textureSampleGrad"_c;
inline constexpr auto SampledTextureSampleGrad_Texture1DArray_backend_index = 2430u;

/// textureSampleGrad with Texture2DArray, Sampler, Float32x3, Float32x3, Float32x3
extern Variable TextureSampleGrad_Texture2DArray_texture;
extern Variable TextureSampleGrad_Texture2DArray_sampler;
extern Variable TextureSampleGrad_Texture2DArray_coordinate;
extern Variable TextureSampleGrad_Texture2DArray_grad_x;
extern Variable TextureSampleGrad_Texture2DArray_grad_y;
extern Function TextureSampleGrad_Texture2DArray;
inline constexpr auto TextureSampleGrad_Texture2DArray_name = "textureSampleGrad"_c;
inline constexpr auto TextureSampleGrad_Texture2DArray_backend_index = 2431u;

/// textureSampleGrad with SampledTexture2DArray, Float32x3, Float32x3, Float32x3
extern Variable SampledTextureSampleGrad_Texture2DArray_texture;
extern Variable SampledTextureSampleGrad_Texture2DArray_coordinate;
extern Variable SampledTextureSampleGrad_Texture2DArray_grad_x;
extern Variable SampledTextureSampleGrad_Texture2DArray_grad_y;
extern Function SampledTextureSampleGrad_Texture2DArray;
inline constexpr auto SampledTextureSampleGrad_Texture2DArray_name = "textureSampleGrad"_c;
inline constexpr auto SampledTextureSampleGrad_Texture2DArray_backend_index = 2432u;

/// textureSampleGrad with TextureCubeArray, Sampler, Float32x4, Float32x4, Float32x4
extern Variable TextureSampleGrad_TextureCubeArray_texture;
extern Variable TextureSampleGrad_TextureCubeArray_sampler;
extern Variable TextureSampleGrad_TextureCubeArray_coordinate;
extern Variable TextureSampleGrad_TextureCubeArray_grad_x;
extern Variable TextureSampleGrad_TextureCubeArray_grad_y;
extern Function TextureSampleGrad_TextureCubeArray;
inline constexpr auto TextureSampleGrad_TextureCubeArray_name = "textureSampleGrad"_c;
inline constexpr auto TextureSampleGrad_TextureCubeArray_backend_index = 2433u;

/// textureSampleGrad with SampledTextureCubeArray, Float32x4, Float32x4, Float32x4
extern Variable SampledTextureSampleGrad_TextureCubeArray_texture;
extern Variable SampledTextureSampleGrad_TextureCubeArray_coordinate;
extern Variable SampledTextureSampleGrad_TextureCubeArray_grad_x;
extern Variable SampledTextureSampleGrad_TextureCubeArray_grad_y;
extern Function SampledTextureSampleGrad_TextureCubeArray;
inline constexpr auto SampledTextureSampleGrad_TextureCubeArray_name = "textureSampleGrad"_c;
inline constexpr auto SampledTextureSampleGrad_TextureCubeArray_backend_index = 2434u;

/// textureSampleGradOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleGradOffset_Texture1D_texture;
extern Variable TextureSampleGradOffset_Texture1D_sampler;
extern Variable TextureSampleGradOffset_Texture1D_coordinate;
extern Variable TextureSampleGradOffset_Texture1D_grad_x;
extern Variable TextureSampleGradOffset_Texture1D_grad_y;
extern Variable TextureSampleGradOffset_Texture1D_offset;
extern Function TextureSampleGradOffset_Texture1D;
inline constexpr auto TextureSampleGradOffset_Texture1D_name = "textureSampleGradOffset"_c;
inline constexpr auto TextureSampleGradOffset_Texture1D_backend_index = 2435u;

/// textureSampleGradOffset with SampledTexture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleGradOffset_Texture1D_texture;
extern Variable SampledTextureSampleGradOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleGradOffset_Texture1D_grad_x;
extern Variable SampledTextureSampleGradOffset_Texture1D_grad_y;
extern Variable SampledTextureSampleGradOffset_Texture1D_offset;
extern Function SampledTextureSampleGradOffset_Texture1D;
inline constexpr auto SampledTextureSampleGradOffset_Texture1D_name = "textureSampleGradOffset"_c;
inline constexpr auto SampledTextureSampleGradOffset_Texture1D_backend_index = 2436u;

/// textureSampleGradOffset with Texture2D, Sampler, Float32x2, Float32x2, Float32x2, Float32x2
extern Variable TextureSampleGradOffset_Texture2D_texture;
extern Variable TextureSampleGradOffset_Texture2D_sampler;
extern Variable TextureSampleGradOffset_Texture2D_coordinate;
extern Variable TextureSampleGradOffset_Texture2D_grad_x;
extern Variable TextureSampleGradOffset_Texture2D_grad_y;
extern Variable TextureSampleGradOffset_Texture2D_offset;
extern Function TextureSampleGradOffset_Texture2D;
inline constexpr auto TextureSampleGradOffset_Texture2D_name = "textureSampleGradOffset"_c;
inline constexpr auto TextureSampleGradOffset_Texture2D_backend_index = 2437u;

/// textureSampleGradOffset with SampledTexture2D, Float32x2, Float32x2, Float32x2, Float32x2
extern Variable SampledTextureSampleGradOffset_Texture2D_texture;
extern Variable SampledTextureSampleGradOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleGradOffset_Texture2D_grad_x;
extern Variable SampledTextureSampleGradOffset_Texture2D_grad_y;
extern Variable SampledTextureSampleGradOffset_Texture2D_offset;
extern Function SampledTextureSampleGradOffset_Texture2D;
inline constexpr auto SampledTextureSampleGradOffset_Texture2D_name = "textureSampleGradOffset"_c;
inline constexpr auto SampledTextureSampleGradOffset_Texture2D_backend_index = 2438u;

/// textureSampleGradOffset with Texture3D, Sampler, Float32x3, Float32x3, Float32x3, Float32x3
extern Variable TextureSampleGradOffset_Texture3D_texture;
extern Variable TextureSampleGradOffset_Texture3D_sampler;
extern Variable TextureSampleGradOffset_Texture3D_coordinate;
extern Variable TextureSampleGradOffset_Texture3D_grad_x;
extern Variable TextureSampleGradOffset_Texture3D_grad_y;
extern Variable TextureSampleGradOffset_Texture3D_offset;
extern Function TextureSampleGradOffset_Texture3D;
inline constexpr auto TextureSampleGradOffset_Texture3D_name = "textureSampleGradOffset"_c;
inline constexpr auto TextureSampleGradOffset_Texture3D_backend_index = 2439u;

/// textureSampleGradOffset with SampledTexture3D, Float32x3, Float32x3, Float32x3, Float32x3
extern Variable SampledTextureSampleGradOffset_Texture3D_texture;
extern Variable SampledTextureSampleGradOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleGradOffset_Texture3D_grad_x;
extern Variable SampledTextureSampleGradOffset_Texture3D_grad_y;
extern Variable SampledTextureSampleGradOffset_Texture3D_offset;
extern Function SampledTextureSampleGradOffset_Texture3D;
inline constexpr auto SampledTextureSampleGradOffset_Texture3D_name = "textureSampleGradOffset"_c;
inline constexpr auto SampledTextureSampleGradOffset_Texture3D_backend_index = 2440u;

/// textureSampleGradOffset with Texture1DArray, Sampler, Float32x2, Float32x2, Float32x2, Float32x2
extern Variable TextureSampleGradOffset_Texture1DArray_texture;
extern Variable TextureSampleGradOffset_Texture1DArray_sampler;
extern Variable TextureSampleGradOffset_Texture1DArray_coordinate;
extern Variable TextureSampleGradOffset_Texture1DArray_grad_x;
extern Variable TextureSampleGradOffset_Texture1DArray_grad_y;
extern Variable TextureSampleGradOffset_Texture1DArray_offset;
extern Function TextureSampleGradOffset_Texture1DArray;
inline constexpr auto TextureSampleGradOffset_Texture1DArray_name = "textureSampleGradOffset"_c;
inline constexpr auto TextureSampleGradOffset_Texture1DArray_backend_index = 2441u;

/// textureSampleGradOffset with SampledTexture1DArray, Float32x2, Float32x2, Float32x2, Float32x2
extern Variable SampledTextureSampleGradOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleGradOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleGradOffset_Texture1DArray_grad_x;
extern Variable SampledTextureSampleGradOffset_Texture1DArray_grad_y;
extern Variable SampledTextureSampleGradOffset_Texture1DArray_offset;
extern Function SampledTextureSampleGradOffset_Texture1DArray;
inline constexpr auto SampledTextureSampleGradOffset_Texture1DArray_name = "textureSampleGradOffset"_c;
inline constexpr auto SampledTextureSampleGradOffset_Texture1DArray_backend_index = 2442u;

/// textureSampleGradOffset with Texture2DArray, Sampler, Float32x3, Float32x3, Float32x3, Float32x3
extern Variable TextureSampleGradOffset_Texture2DArray_texture;
extern Variable TextureSampleGradOffset_Texture2DArray_sampler;
extern Variable TextureSampleGradOffset_Texture2DArray_coordinate;
extern Variable TextureSampleGradOffset_Texture2DArray_grad_x;
extern Variable TextureSampleGradOffset_Texture2DArray_grad_y;
extern Variable TextureSampleGradOffset_Texture2DArray_offset;
extern Function TextureSampleGradOffset_Texture2DArray;
inline constexpr auto TextureSampleGradOffset_Texture2DArray_name = "textureSampleGradOffset"_c;
inline constexpr auto TextureSampleGradOffset_Texture2DArray_backend_index = 2443u;

/// textureSampleGradOffset with SampledTexture2DArray, Float32x3, Float32x3, Float32x3, Float32x3
extern Variable SampledTextureSampleGradOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleGradOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleGradOffset_Texture2DArray_grad_x;
extern Variable SampledTextureSampleGradOffset_Texture2DArray_grad_y;
extern Variable SampledTextureSampleGradOffset_Texture2DArray_offset;
extern Function SampledTextureSampleGradOffset_Texture2DArray;
inline constexpr auto SampledTextureSampleGradOffset_Texture2DArray_name = "textureSampleGradOffset"_c;
inline constexpr auto SampledTextureSampleGradOffset_Texture2DArray_backend_index = 2444u;

/// textureSampleGradProj with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleGradProj_Texture1D_texture;
extern Variable TextureSampleGradProj_Texture1D_sampler;
extern Variable TextureSampleGradProj_Texture1D_coordinate;
extern Variable TextureSampleGradProj_Texture1D_grad_x;
extern Variable TextureSampleGradProj_Texture1D_grad_y;
extern Variable TextureSampleGradProj_Texture1D_proj;
extern Function TextureSampleGradProj_Texture1D;
inline constexpr auto TextureSampleGradProj_Texture1D_name = "textureSampleGradProj"_c;
inline constexpr auto TextureSampleGradProj_Texture1D_backend_index = 2445u;

/// textureSampleGradProj with SampledTexture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleGradProj_Texture1D_texture;
extern Variable SampledTextureSampleGradProj_Texture1D_coordinate;
extern Variable SampledTextureSampleGradProj_Texture1D_grad_x;
extern Variable SampledTextureSampleGradProj_Texture1D_grad_y;
extern Variable SampledTextureSampleGradProj_Texture1D_proj;
extern Function SampledTextureSampleGradProj_Texture1D;
inline constexpr auto SampledTextureSampleGradProj_Texture1D_name = "textureSampleGradProj"_c;
inline constexpr auto SampledTextureSampleGradProj_Texture1D_backend_index = 2446u;

/// textureSampleGradProj with Texture2D, Sampler, Float32x2, Float32x2, Float32x2, Float32
extern Variable TextureSampleGradProj_Texture2D_texture;
extern Variable TextureSampleGradProj_Texture2D_sampler;
extern Variable TextureSampleGradProj_Texture2D_coordinate;
extern Variable TextureSampleGradProj_Texture2D_grad_x;
extern Variable TextureSampleGradProj_Texture2D_grad_y;
extern Variable TextureSampleGradProj_Texture2D_proj;
extern Function TextureSampleGradProj_Texture2D;
inline constexpr auto TextureSampleGradProj_Texture2D_name = "textureSampleGradProj"_c;
inline constexpr auto TextureSampleGradProj_Texture2D_backend_index = 2447u;

/// textureSampleGradProj with SampledTexture2D, Float32x2, Float32x2, Float32x2, Float32
extern Variable SampledTextureSampleGradProj_Texture2D_texture;
extern Variable SampledTextureSampleGradProj_Texture2D_coordinate;
extern Variable SampledTextureSampleGradProj_Texture2D_grad_x;
extern Variable SampledTextureSampleGradProj_Texture2D_grad_y;
extern Variable SampledTextureSampleGradProj_Texture2D_proj;
extern Function SampledTextureSampleGradProj_Texture2D;
inline constexpr auto SampledTextureSampleGradProj_Texture2D_name = "textureSampleGradProj"_c;
inline constexpr auto SampledTextureSampleGradProj_Texture2D_backend_index = 2448u;

/// textureSampleGradProj with Texture3D, Sampler, Float32x3, Float32x3, Float32x3, Float32
extern Variable TextureSampleGradProj_Texture3D_texture;
extern Variable TextureSampleGradProj_Texture3D_sampler;
extern Variable TextureSampleGradProj_Texture3D_coordinate;
extern Variable TextureSampleGradProj_Texture3D_grad_x;
extern Variable TextureSampleGradProj_Texture3D_grad_y;
extern Variable TextureSampleGradProj_Texture3D_proj;
extern Function TextureSampleGradProj_Texture3D;
inline constexpr auto TextureSampleGradProj_Texture3D_name = "textureSampleGradProj"_c;
inline constexpr auto TextureSampleGradProj_Texture3D_backend_index = 2449u;

/// textureSampleGradProj with SampledTexture3D, Float32x3, Float32x3, Float32x3, Float32
extern Variable SampledTextureSampleGradProj_Texture3D_texture;
extern Variable SampledTextureSampleGradProj_Texture3D_coordinate;
extern Variable SampledTextureSampleGradProj_Texture3D_grad_x;
extern Variable SampledTextureSampleGradProj_Texture3D_grad_y;
extern Variable SampledTextureSampleGradProj_Texture3D_proj;
extern Function SampledTextureSampleGradProj_Texture3D;
inline constexpr auto SampledTextureSampleGradProj_Texture3D_name = "textureSampleGradProj"_c;
inline constexpr auto SampledTextureSampleGradProj_Texture3D_backend_index = 2450u;

/// textureSampleGradProjOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32, Float32
extern Variable TextureSampleGradProjOffset_Texture1D_texture;
extern Variable TextureSampleGradProjOffset_Texture1D_sampler;
extern Variable TextureSampleGradProjOffset_Texture1D_coordinate;
extern Variable TextureSampleGradProjOffset_Texture1D_grad_x;
extern Variable TextureSampleGradProjOffset_Texture1D_grad_y;
extern Variable TextureSampleGradProjOffset_Texture1D_proj;
extern Variable TextureSampleGradProjOffset_Texture1D_offset;
extern Function TextureSampleGradProjOffset_Texture1D;
inline constexpr auto TextureSampleGradProjOffset_Texture1D_name = "textureSampleGradProjOffset"_c;
inline constexpr auto TextureSampleGradProjOffset_Texture1D_backend_index = 2451u;

/// textureSampleGradProjOffset with SampledTexture1D, Float32, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleGradProjOffset_Texture1D_texture;
extern Variable SampledTextureSampleGradProjOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleGradProjOffset_Texture1D_grad_x;
extern Variable SampledTextureSampleGradProjOffset_Texture1D_grad_y;
extern Variable SampledTextureSampleGradProjOffset_Texture1D_proj;
extern Variable SampledTextureSampleGradProjOffset_Texture1D_offset;
extern Function SampledTextureSampleGradProjOffset_Texture1D;
inline constexpr auto SampledTextureSampleGradProjOffset_Texture1D_name = "textureSampleGradProjOffset"_c;
inline constexpr auto SampledTextureSampleGradProjOffset_Texture1D_backend_index = 2452u;

/// textureSampleGradProjOffset with Texture2D, Sampler, Float32x2, Float32x2, Float32x2, Float32, Float32x2
extern Variable TextureSampleGradProjOffset_Texture2D_texture;
extern Variable TextureSampleGradProjOffset_Texture2D_sampler;
extern Variable TextureSampleGradProjOffset_Texture2D_coordinate;
extern Variable TextureSampleGradProjOffset_Texture2D_grad_x;
extern Variable TextureSampleGradProjOffset_Texture2D_grad_y;
extern Variable TextureSampleGradProjOffset_Texture2D_proj;
extern Variable TextureSampleGradProjOffset_Texture2D_offset;
extern Function TextureSampleGradProjOffset_Texture2D;
inline constexpr auto TextureSampleGradProjOffset_Texture2D_name = "textureSampleGradProjOffset"_c;
inline constexpr auto TextureSampleGradProjOffset_Texture2D_backend_index = 2453u;

/// textureSampleGradProjOffset with SampledTexture2D, Float32x2, Float32x2, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleGradProjOffset_Texture2D_texture;
extern Variable SampledTextureSampleGradProjOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleGradProjOffset_Texture2D_grad_x;
extern Variable SampledTextureSampleGradProjOffset_Texture2D_grad_y;
extern Variable SampledTextureSampleGradProjOffset_Texture2D_proj;
extern Variable SampledTextureSampleGradProjOffset_Texture2D_offset;
extern Function SampledTextureSampleGradProjOffset_Texture2D;
inline constexpr auto SampledTextureSampleGradProjOffset_Texture2D_name = "textureSampleGradProjOffset"_c;
inline constexpr auto SampledTextureSampleGradProjOffset_Texture2D_backend_index = 2454u;

/// textureSampleGradProjOffset with Texture3D, Sampler, Float32x3, Float32x3, Float32x3, Float32, Float32x3
extern Variable TextureSampleGradProjOffset_Texture3D_texture;
extern Variable TextureSampleGradProjOffset_Texture3D_sampler;
extern Variable TextureSampleGradProjOffset_Texture3D_coordinate;
extern Variable TextureSampleGradProjOffset_Texture3D_grad_x;
extern Variable TextureSampleGradProjOffset_Texture3D_grad_y;
extern Variable TextureSampleGradProjOffset_Texture3D_proj;
extern Variable TextureSampleGradProjOffset_Texture3D_offset;
extern Function TextureSampleGradProjOffset_Texture3D;
inline constexpr auto TextureSampleGradProjOffset_Texture3D_name = "textureSampleGradProjOffset"_c;
inline constexpr auto TextureSampleGradProjOffset_Texture3D_backend_index = 2455u;

/// textureSampleGradProjOffset with SampledTexture3D, Float32x3, Float32x3, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleGradProjOffset_Texture3D_texture;
extern Variable SampledTextureSampleGradProjOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleGradProjOffset_Texture3D_grad_x;
extern Variable SampledTextureSampleGradProjOffset_Texture3D_grad_y;
extern Variable SampledTextureSampleGradProjOffset_Texture3D_proj;
extern Variable SampledTextureSampleGradProjOffset_Texture3D_offset;
extern Function SampledTextureSampleGradProjOffset_Texture3D;
inline constexpr auto SampledTextureSampleGradProjOffset_Texture3D_name = "textureSampleGradProjOffset"_c;
inline constexpr auto SampledTextureSampleGradProjOffset_Texture3D_backend_index = 2456u;

/// textureSampleGradCompare with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleGradCompare_Texture1D_texture;
extern Variable TextureSampleGradCompare_Texture1D_sampler;
extern Variable TextureSampleGradCompare_Texture1D_coordinate;
extern Variable TextureSampleGradCompare_Texture1D_grad_x;
extern Variable TextureSampleGradCompare_Texture1D_grad_y;
extern Variable TextureSampleGradCompare_Texture1D_compare;
extern Function TextureSampleGradCompare_Texture1D;
inline constexpr auto TextureSampleGradCompare_Texture1D_name = "textureSampleGradCompare"_c;
inline constexpr auto TextureSampleGradCompare_Texture1D_backend_index = 2457u;

/// textureSampleGradCompare with SampledTexture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleGradCompare_Texture1D_texture;
extern Variable SampledTextureSampleGradCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleGradCompare_Texture1D_grad_x;
extern Variable SampledTextureSampleGradCompare_Texture1D_grad_y;
extern Variable SampledTextureSampleGradCompare_Texture1D_compare;
extern Function SampledTextureSampleGradCompare_Texture1D;
inline constexpr auto SampledTextureSampleGradCompare_Texture1D_name = "textureSampleGradCompare"_c;
inline constexpr auto SampledTextureSampleGradCompare_Texture1D_backend_index = 2458u;

/// textureSampleGradCompare with Texture2D, Sampler, Float32x2, Float32x2, Float32x2, Float32
extern Variable TextureSampleGradCompare_Texture2D_texture;
extern Variable TextureSampleGradCompare_Texture2D_sampler;
extern Variable TextureSampleGradCompare_Texture2D_coordinate;
extern Variable TextureSampleGradCompare_Texture2D_grad_x;
extern Variable TextureSampleGradCompare_Texture2D_grad_y;
extern Variable TextureSampleGradCompare_Texture2D_compare;
extern Function TextureSampleGradCompare_Texture2D;
inline constexpr auto TextureSampleGradCompare_Texture2D_name = "textureSampleGradCompare"_c;
inline constexpr auto TextureSampleGradCompare_Texture2D_backend_index = 2459u;

/// textureSampleGradCompare with SampledTexture2D, Float32x2, Float32x2, Float32x2, Float32
extern Variable SampledTextureSampleGradCompare_Texture2D_texture;
extern Variable SampledTextureSampleGradCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleGradCompare_Texture2D_grad_x;
extern Variable SampledTextureSampleGradCompare_Texture2D_grad_y;
extern Variable SampledTextureSampleGradCompare_Texture2D_compare;
extern Function SampledTextureSampleGradCompare_Texture2D;
inline constexpr auto SampledTextureSampleGradCompare_Texture2D_name = "textureSampleGradCompare"_c;
inline constexpr auto SampledTextureSampleGradCompare_Texture2D_backend_index = 2460u;

/// textureSampleGradCompare with Texture3D, Sampler, Float32x3, Float32x3, Float32x3, Float32
extern Variable TextureSampleGradCompare_Texture3D_texture;
extern Variable TextureSampleGradCompare_Texture3D_sampler;
extern Variable TextureSampleGradCompare_Texture3D_coordinate;
extern Variable TextureSampleGradCompare_Texture3D_grad_x;
extern Variable TextureSampleGradCompare_Texture3D_grad_y;
extern Variable TextureSampleGradCompare_Texture3D_compare;
extern Function TextureSampleGradCompare_Texture3D;
inline constexpr auto TextureSampleGradCompare_Texture3D_name = "textureSampleGradCompare"_c;
inline constexpr auto TextureSampleGradCompare_Texture3D_backend_index = 2461u;

/// textureSampleGradCompare with SampledTexture3D, Float32x3, Float32x3, Float32x3, Float32
extern Variable SampledTextureSampleGradCompare_Texture3D_texture;
extern Variable SampledTextureSampleGradCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleGradCompare_Texture3D_grad_x;
extern Variable SampledTextureSampleGradCompare_Texture3D_grad_y;
extern Variable SampledTextureSampleGradCompare_Texture3D_compare;
extern Function SampledTextureSampleGradCompare_Texture3D;
inline constexpr auto SampledTextureSampleGradCompare_Texture3D_name = "textureSampleGradCompare"_c;
inline constexpr auto SampledTextureSampleGradCompare_Texture3D_backend_index = 2462u;

/// textureSampleGradCompare with Texture1DArray, Sampler, Float32x2, Float32x2, Float32x2, Float32
extern Variable TextureSampleGradCompare_Texture1DArray_texture;
extern Variable TextureSampleGradCompare_Texture1DArray_sampler;
extern Variable TextureSampleGradCompare_Texture1DArray_coordinate;
extern Variable TextureSampleGradCompare_Texture1DArray_grad_x;
extern Variable TextureSampleGradCompare_Texture1DArray_grad_y;
extern Variable TextureSampleGradCompare_Texture1DArray_compare;
extern Function TextureSampleGradCompare_Texture1DArray;
inline constexpr auto TextureSampleGradCompare_Texture1DArray_name = "textureSampleGradCompare"_c;
inline constexpr auto TextureSampleGradCompare_Texture1DArray_backend_index = 2463u;

/// textureSampleGradCompare with SampledTexture1DArray, Float32x2, Float32x2, Float32x2, Float32
extern Variable SampledTextureSampleGradCompare_Texture1DArray_texture;
extern Variable SampledTextureSampleGradCompare_Texture1DArray_coordinate;
extern Variable SampledTextureSampleGradCompare_Texture1DArray_grad_x;
extern Variable SampledTextureSampleGradCompare_Texture1DArray_grad_y;
extern Variable SampledTextureSampleGradCompare_Texture1DArray_compare;
extern Function SampledTextureSampleGradCompare_Texture1DArray;
inline constexpr auto SampledTextureSampleGradCompare_Texture1DArray_name = "textureSampleGradCompare"_c;
inline constexpr auto SampledTextureSampleGradCompare_Texture1DArray_backend_index = 2464u;

/// textureSampleGradCompare with Texture2DArray, Sampler, Float32x3, Float32x3, Float32x3, Float32
extern Variable TextureSampleGradCompare_Texture2DArray_texture;
extern Variable TextureSampleGradCompare_Texture2DArray_sampler;
extern Variable TextureSampleGradCompare_Texture2DArray_coordinate;
extern Variable TextureSampleGradCompare_Texture2DArray_grad_x;
extern Variable TextureSampleGradCompare_Texture2DArray_grad_y;
extern Variable TextureSampleGradCompare_Texture2DArray_compare;
extern Function TextureSampleGradCompare_Texture2DArray;
inline constexpr auto TextureSampleGradCompare_Texture2DArray_name = "textureSampleGradCompare"_c;
inline constexpr auto TextureSampleGradCompare_Texture2DArray_backend_index = 2465u;

/// textureSampleGradCompare with SampledTexture2DArray, Float32x3, Float32x3, Float32x3, Float32
extern Variable SampledTextureSampleGradCompare_Texture2DArray_texture;
extern Variable SampledTextureSampleGradCompare_Texture2DArray_coordinate;
extern Variable SampledTextureSampleGradCompare_Texture2DArray_grad_x;
extern Variable SampledTextureSampleGradCompare_Texture2DArray_grad_y;
extern Variable SampledTextureSampleGradCompare_Texture2DArray_compare;
extern Function SampledTextureSampleGradCompare_Texture2DArray;
inline constexpr auto SampledTextureSampleGradCompare_Texture2DArray_name = "textureSampleGradCompare"_c;
inline constexpr auto SampledTextureSampleGradCompare_Texture2DArray_backend_index = 2466u;

/// textureSampleGradCompareOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32, Float32
extern Variable TextureSampleGradCompareOffset_Texture1D_texture;
extern Variable TextureSampleGradCompareOffset_Texture1D_sampler;
extern Variable TextureSampleGradCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleGradCompareOffset_Texture1D_grad_x;
extern Variable TextureSampleGradCompareOffset_Texture1D_grad_y;
extern Variable TextureSampleGradCompareOffset_Texture1D_compare;
extern Variable TextureSampleGradCompareOffset_Texture1D_offset;
extern Function TextureSampleGradCompareOffset_Texture1D;
inline constexpr auto TextureSampleGradCompareOffset_Texture1D_name = "textureSampleGradCompareOffset"_c;
inline constexpr auto TextureSampleGradCompareOffset_Texture1D_backend_index = 2467u;

/// textureSampleGradCompareOffset with SampledTexture1D, Float32, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleGradCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleGradCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleGradCompareOffset_Texture1D_grad_x;
extern Variable SampledTextureSampleGradCompareOffset_Texture1D_grad_y;
extern Variable SampledTextureSampleGradCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleGradCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleGradCompareOffset_Texture1D;
inline constexpr auto SampledTextureSampleGradCompareOffset_Texture1D_name = "textureSampleGradCompareOffset"_c;
inline constexpr auto SampledTextureSampleGradCompareOffset_Texture1D_backend_index = 2468u;

/// textureSampleGradCompareOffset with Texture2D, Sampler, Float32x2, Float32x2, Float32x2, Float32, Float32x2
extern Variable TextureSampleGradCompareOffset_Texture2D_texture;
extern Variable TextureSampleGradCompareOffset_Texture2D_sampler;
extern Variable TextureSampleGradCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleGradCompareOffset_Texture2D_grad_x;
extern Variable TextureSampleGradCompareOffset_Texture2D_grad_y;
extern Variable TextureSampleGradCompareOffset_Texture2D_compare;
extern Variable TextureSampleGradCompareOffset_Texture2D_offset;
extern Function TextureSampleGradCompareOffset_Texture2D;
inline constexpr auto TextureSampleGradCompareOffset_Texture2D_name = "textureSampleGradCompareOffset"_c;
inline constexpr auto TextureSampleGradCompareOffset_Texture2D_backend_index = 2469u;

/// textureSampleGradCompareOffset with SampledTexture2D, Float32x2, Float32x2, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleGradCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleGradCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleGradCompareOffset_Texture2D_grad_x;
extern Variable SampledTextureSampleGradCompareOffset_Texture2D_grad_y;
extern Variable SampledTextureSampleGradCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleGradCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleGradCompareOffset_Texture2D;
inline constexpr auto SampledTextureSampleGradCompareOffset_Texture2D_name = "textureSampleGradCompareOffset"_c;
inline constexpr auto SampledTextureSampleGradCompareOffset_Texture2D_backend_index = 2470u;

/// textureSampleGradCompareOffset with Texture3D, Sampler, Float32x3, Float32x3, Float32x3, Float32, Float32x3
extern Variable TextureSampleGradCompareOffset_Texture3D_texture;
extern Variable TextureSampleGradCompareOffset_Texture3D_sampler;
extern Variable TextureSampleGradCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleGradCompareOffset_Texture3D_grad_x;
extern Variable TextureSampleGradCompareOffset_Texture3D_grad_y;
extern Variable TextureSampleGradCompareOffset_Texture3D_compare;
extern Variable TextureSampleGradCompareOffset_Texture3D_offset;
extern Function TextureSampleGradCompareOffset_Texture3D;
inline constexpr auto TextureSampleGradCompareOffset_Texture3D_name = "textureSampleGradCompareOffset"_c;
inline constexpr auto TextureSampleGradCompareOffset_Texture3D_backend_index = 2471u;

/// textureSampleGradCompareOffset with SampledTexture3D, Float32x3, Float32x3, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleGradCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleGradCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleGradCompareOffset_Texture3D_grad_x;
extern Variable SampledTextureSampleGradCompareOffset_Texture3D_grad_y;
extern Variable SampledTextureSampleGradCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleGradCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleGradCompareOffset_Texture3D;
inline constexpr auto SampledTextureSampleGradCompareOffset_Texture3D_name = "textureSampleGradCompareOffset"_c;
inline constexpr auto SampledTextureSampleGradCompareOffset_Texture3D_backend_index = 2472u;

/// textureSampleGradCompareOffset with Texture1DArray, Sampler, Float32x2, Float32x2, Float32x2, Float32, Float32x2
extern Variable TextureSampleGradCompareOffset_Texture1DArray_texture;
extern Variable TextureSampleGradCompareOffset_Texture1DArray_sampler;
extern Variable TextureSampleGradCompareOffset_Texture1DArray_coordinate;
extern Variable TextureSampleGradCompareOffset_Texture1DArray_grad_x;
extern Variable TextureSampleGradCompareOffset_Texture1DArray_grad_y;
extern Variable TextureSampleGradCompareOffset_Texture1DArray_compare;
extern Variable TextureSampleGradCompareOffset_Texture1DArray_offset;
extern Function TextureSampleGradCompareOffset_Texture1DArray;
inline constexpr auto TextureSampleGradCompareOffset_Texture1DArray_name = "textureSampleGradCompareOffset"_c;
inline constexpr auto TextureSampleGradCompareOffset_Texture1DArray_backend_index = 2473u;

/// textureSampleGradCompareOffset with SampledTexture1DArray, Float32x2, Float32x2, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleGradCompareOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleGradCompareOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleGradCompareOffset_Texture1DArray_grad_x;
extern Variable SampledTextureSampleGradCompareOffset_Texture1DArray_grad_y;
extern Variable SampledTextureSampleGradCompareOffset_Texture1DArray_compare;
extern Variable SampledTextureSampleGradCompareOffset_Texture1DArray_offset;
extern Function SampledTextureSampleGradCompareOffset_Texture1DArray;
inline constexpr auto SampledTextureSampleGradCompareOffset_Texture1DArray_name = "textureSampleGradCompareOffset"_c;
inline constexpr auto SampledTextureSampleGradCompareOffset_Texture1DArray_backend_index = 2474u;

/// textureSampleGradCompareOffset with Texture2DArray, Sampler, Float32x3, Float32x3, Float32x3, Float32, Float32x3
extern Variable TextureSampleGradCompareOffset_Texture2DArray_texture;
extern Variable TextureSampleGradCompareOffset_Texture2DArray_sampler;
extern Variable TextureSampleGradCompareOffset_Texture2DArray_coordinate;
extern Variable TextureSampleGradCompareOffset_Texture2DArray_grad_x;
extern Variable TextureSampleGradCompareOffset_Texture2DArray_grad_y;
extern Variable TextureSampleGradCompareOffset_Texture2DArray_compare;
extern Variable TextureSampleGradCompareOffset_Texture2DArray_offset;
extern Function TextureSampleGradCompareOffset_Texture2DArray;
inline constexpr auto TextureSampleGradCompareOffset_Texture2DArray_name = "textureSampleGradCompareOffset"_c;
inline constexpr auto TextureSampleGradCompareOffset_Texture2DArray_backend_index = 2475u;

/// textureSampleGradCompareOffset with SampledTexture2DArray, Float32x3, Float32x3, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleGradCompareOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleGradCompareOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleGradCompareOffset_Texture2DArray_grad_x;
extern Variable SampledTextureSampleGradCompareOffset_Texture2DArray_grad_y;
extern Variable SampledTextureSampleGradCompareOffset_Texture2DArray_compare;
extern Variable SampledTextureSampleGradCompareOffset_Texture2DArray_offset;
extern Function SampledTextureSampleGradCompareOffset_Texture2DArray;
inline constexpr auto SampledTextureSampleGradCompareOffset_Texture2DArray_name = "textureSampleGradCompareOffset"_c;
inline constexpr auto SampledTextureSampleGradCompareOffset_Texture2DArray_backend_index = 2476u;

/// textureSampleGradProjCompare with Texture1D, Sampler, Float32, Float32, Float32, Float32, Float32
extern Variable TextureSampleGradProjCompare_Texture1D_texture;
extern Variable TextureSampleGradProjCompare_Texture1D_sampler;
extern Variable TextureSampleGradProjCompare_Texture1D_coordinate;
extern Variable TextureSampleGradProjCompare_Texture1D_grad_x;
extern Variable TextureSampleGradProjCompare_Texture1D_grad_y;
extern Variable TextureSampleGradProjCompare_Texture1D_proj;
extern Variable TextureSampleGradProjCompare_Texture1D_compare;
extern Function TextureSampleGradProjCompare_Texture1D;
inline constexpr auto TextureSampleGradProjCompare_Texture1D_name = "textureSampleGradProjCompare"_c;
inline constexpr auto TextureSampleGradProjCompare_Texture1D_backend_index = 2477u;

/// textureSampleGradProjCompare with SampledTexture1D, Float32, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleGradProjCompare_Texture1D_texture;
extern Variable SampledTextureSampleGradProjCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleGradProjCompare_Texture1D_grad_x;
extern Variable SampledTextureSampleGradProjCompare_Texture1D_grad_y;
extern Variable SampledTextureSampleGradProjCompare_Texture1D_proj;
extern Variable SampledTextureSampleGradProjCompare_Texture1D_compare;
extern Function SampledTextureSampleGradProjCompare_Texture1D;
inline constexpr auto SampledTextureSampleGradProjCompare_Texture1D_name = "textureSampleGradProjCompare"_c;
inline constexpr auto SampledTextureSampleGradProjCompare_Texture1D_backend_index = 2478u;

/// textureSampleGradProjCompare with Texture2D, Sampler, Float32x2, Float32x2, Float32x2, Float32, Float32
extern Variable TextureSampleGradProjCompare_Texture2D_texture;
extern Variable TextureSampleGradProjCompare_Texture2D_sampler;
extern Variable TextureSampleGradProjCompare_Texture2D_coordinate;
extern Variable TextureSampleGradProjCompare_Texture2D_grad_x;
extern Variable TextureSampleGradProjCompare_Texture2D_grad_y;
extern Variable TextureSampleGradProjCompare_Texture2D_proj;
extern Variable TextureSampleGradProjCompare_Texture2D_compare;
extern Function TextureSampleGradProjCompare_Texture2D;
inline constexpr auto TextureSampleGradProjCompare_Texture2D_name = "textureSampleGradProjCompare"_c;
inline constexpr auto TextureSampleGradProjCompare_Texture2D_backend_index = 2479u;

/// textureSampleGradProjCompare with SampledTexture2D, Float32x2, Float32x2, Float32x2, Float32, Float32
extern Variable SampledTextureSampleGradProjCompare_Texture2D_texture;
extern Variable SampledTextureSampleGradProjCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleGradProjCompare_Texture2D_grad_x;
extern Variable SampledTextureSampleGradProjCompare_Texture2D_grad_y;
extern Variable SampledTextureSampleGradProjCompare_Texture2D_proj;
extern Variable SampledTextureSampleGradProjCompare_Texture2D_compare;
extern Function SampledTextureSampleGradProjCompare_Texture2D;
inline constexpr auto SampledTextureSampleGradProjCompare_Texture2D_name = "textureSampleGradProjCompare"_c;
inline constexpr auto SampledTextureSampleGradProjCompare_Texture2D_backend_index = 2480u;

/// textureSampleGradProjCompare with Texture3D, Sampler, Float32x3, Float32x3, Float32x3, Float32, Float32
extern Variable TextureSampleGradProjCompare_Texture3D_texture;
extern Variable TextureSampleGradProjCompare_Texture3D_sampler;
extern Variable TextureSampleGradProjCompare_Texture3D_coordinate;
extern Variable TextureSampleGradProjCompare_Texture3D_grad_x;
extern Variable TextureSampleGradProjCompare_Texture3D_grad_y;
extern Variable TextureSampleGradProjCompare_Texture3D_proj;
extern Variable TextureSampleGradProjCompare_Texture3D_compare;
extern Function TextureSampleGradProjCompare_Texture3D;
inline constexpr auto TextureSampleGradProjCompare_Texture3D_name = "textureSampleGradProjCompare"_c;
inline constexpr auto TextureSampleGradProjCompare_Texture3D_backend_index = 2481u;

/// textureSampleGradProjCompare with SampledTexture3D, Float32x3, Float32x3, Float32x3, Float32, Float32
extern Variable SampledTextureSampleGradProjCompare_Texture3D_texture;
extern Variable SampledTextureSampleGradProjCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleGradProjCompare_Texture3D_grad_x;
extern Variable SampledTextureSampleGradProjCompare_Texture3D_grad_y;
extern Variable SampledTextureSampleGradProjCompare_Texture3D_proj;
extern Variable SampledTextureSampleGradProjCompare_Texture3D_compare;
extern Function SampledTextureSampleGradProjCompare_Texture3D;
inline constexpr auto SampledTextureSampleGradProjCompare_Texture3D_name = "textureSampleGradProjCompare"_c;
inline constexpr auto SampledTextureSampleGradProjCompare_Texture3D_backend_index = 2482u;

/// textureSampleGradProjCompareOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable TextureSampleGradProjCompareOffset_Texture1D_texture;
extern Variable TextureSampleGradProjCompareOffset_Texture1D_sampler;
extern Variable TextureSampleGradProjCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleGradProjCompareOffset_Texture1D_grad_x;
extern Variable TextureSampleGradProjCompareOffset_Texture1D_grad_y;
extern Variable TextureSampleGradProjCompareOffset_Texture1D_proj;
extern Variable TextureSampleGradProjCompareOffset_Texture1D_compare;
extern Variable TextureSampleGradProjCompareOffset_Texture1D_offset;
extern Function TextureSampleGradProjCompareOffset_Texture1D;
inline constexpr auto TextureSampleGradProjCompareOffset_Texture1D_name = "textureSampleGradProjCompareOffset"_c;
inline constexpr auto TextureSampleGradProjCompareOffset_Texture1D_backend_index = 2483u;

/// textureSampleGradProjCompareOffset with SampledTexture1D, Float32, Float32, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleGradProjCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture1D_grad_x;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture1D_grad_y;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture1D_proj;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleGradProjCompareOffset_Texture1D;
inline constexpr auto SampledTextureSampleGradProjCompareOffset_Texture1D_name = "textureSampleGradProjCompareOffset"_c;
inline constexpr auto SampledTextureSampleGradProjCompareOffset_Texture1D_backend_index = 2484u;

/// textureSampleGradProjCompareOffset with Texture2D, Sampler, Float32x2, Float32x2, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleGradProjCompareOffset_Texture2D_texture;
extern Variable TextureSampleGradProjCompareOffset_Texture2D_sampler;
extern Variable TextureSampleGradProjCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleGradProjCompareOffset_Texture2D_grad_x;
extern Variable TextureSampleGradProjCompareOffset_Texture2D_grad_y;
extern Variable TextureSampleGradProjCompareOffset_Texture2D_proj;
extern Variable TextureSampleGradProjCompareOffset_Texture2D_compare;
extern Variable TextureSampleGradProjCompareOffset_Texture2D_offset;
extern Function TextureSampleGradProjCompareOffset_Texture2D;
inline constexpr auto TextureSampleGradProjCompareOffset_Texture2D_name = "textureSampleGradProjCompareOffset"_c;
inline constexpr auto TextureSampleGradProjCompareOffset_Texture2D_backend_index = 2485u;

/// textureSampleGradProjCompareOffset with SampledTexture2D, Float32x2, Float32x2, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleGradProjCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture2D_grad_x;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture2D_grad_y;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture2D_proj;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleGradProjCompareOffset_Texture2D;
inline constexpr auto SampledTextureSampleGradProjCompareOffset_Texture2D_name = "textureSampleGradProjCompareOffset"_c;
inline constexpr auto SampledTextureSampleGradProjCompareOffset_Texture2D_backend_index = 2486u;

/// textureSampleGradProjCompareOffset with Texture3D, Sampler, Float32x3, Float32x3, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleGradProjCompareOffset_Texture3D_texture;
extern Variable TextureSampleGradProjCompareOffset_Texture3D_sampler;
extern Variable TextureSampleGradProjCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleGradProjCompareOffset_Texture3D_grad_x;
extern Variable TextureSampleGradProjCompareOffset_Texture3D_grad_y;
extern Variable TextureSampleGradProjCompareOffset_Texture3D_proj;
extern Variable TextureSampleGradProjCompareOffset_Texture3D_compare;
extern Variable TextureSampleGradProjCompareOffset_Texture3D_offset;
extern Function TextureSampleGradProjCompareOffset_Texture3D;
inline constexpr auto TextureSampleGradProjCompareOffset_Texture3D_name = "textureSampleGradProjCompareOffset"_c;
inline constexpr auto TextureSampleGradProjCompareOffset_Texture3D_backend_index = 2487u;

/// textureSampleGradProjCompareOffset with SampledTexture3D, Float32x3, Float32x3, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleGradProjCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture3D_grad_x;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture3D_grad_y;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture3D_proj;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleGradProjCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleGradProjCompareOffset_Texture3D;
inline constexpr auto SampledTextureSampleGradProjCompareOffset_Texture3D_name = "textureSampleGradProjCompareOffset"_c;
inline constexpr auto SampledTextureSampleGradProjCompareOffset_Texture3D_backend_index = 2488u;

/// textureSampleBias with Texture1D, Sampler, Float32, Float32
extern Variable TextureSampleBias_Texture1D_texture;
extern Variable TextureSampleBias_Texture1D_sampler;
extern Variable TextureSampleBias_Texture1D_coordinate;
extern Variable TextureSampleBias_Texture1D_bias;
extern Function TextureSampleBias_Texture1D;
inline constexpr auto TextureSampleBias_Texture1D_name = "textureSampleBias"_c;
inline constexpr auto TextureSampleBias_Texture1D_backend_index = 2489u;

/// textureSampleBias with SampledTexture1D, Float32, Float32
extern Variable SampledTextureSampleBias_Texture1D_texture;
extern Variable SampledTextureSampleBias_Texture1D_coordinate;
extern Variable SampledTextureSampleBias_Texture1D_bias;
extern Function SampledTextureSampleBias_Texture1D;
inline constexpr auto SampledTextureSampleBias_Texture1D_name = "textureSampleBias"_c;
inline constexpr auto SampledTextureSampleBias_Texture1D_backend_index = 2490u;

/// textureSampleBias with Texture2D, Sampler, Float32x2, Float32
extern Variable TextureSampleBias_Texture2D_texture;
extern Variable TextureSampleBias_Texture2D_sampler;
extern Variable TextureSampleBias_Texture2D_coordinate;
extern Variable TextureSampleBias_Texture2D_bias;
extern Function TextureSampleBias_Texture2D;
inline constexpr auto TextureSampleBias_Texture2D_name = "textureSampleBias"_c;
inline constexpr auto TextureSampleBias_Texture2D_backend_index = 2491u;

/// textureSampleBias with SampledTexture2D, Float32x2, Float32
extern Variable SampledTextureSampleBias_Texture2D_texture;
extern Variable SampledTextureSampleBias_Texture2D_coordinate;
extern Variable SampledTextureSampleBias_Texture2D_bias;
extern Function SampledTextureSampleBias_Texture2D;
inline constexpr auto SampledTextureSampleBias_Texture2D_name = "textureSampleBias"_c;
inline constexpr auto SampledTextureSampleBias_Texture2D_backend_index = 2492u;

/// textureSampleBias with Texture3D, Sampler, Float32x3, Float32
extern Variable TextureSampleBias_Texture3D_texture;
extern Variable TextureSampleBias_Texture3D_sampler;
extern Variable TextureSampleBias_Texture3D_coordinate;
extern Variable TextureSampleBias_Texture3D_bias;
extern Function TextureSampleBias_Texture3D;
inline constexpr auto TextureSampleBias_Texture3D_name = "textureSampleBias"_c;
inline constexpr auto TextureSampleBias_Texture3D_backend_index = 2493u;

/// textureSampleBias with SampledTexture3D, Float32x3, Float32
extern Variable SampledTextureSampleBias_Texture3D_texture;
extern Variable SampledTextureSampleBias_Texture3D_coordinate;
extern Variable SampledTextureSampleBias_Texture3D_bias;
extern Function SampledTextureSampleBias_Texture3D;
inline constexpr auto SampledTextureSampleBias_Texture3D_name = "textureSampleBias"_c;
inline constexpr auto SampledTextureSampleBias_Texture3D_backend_index = 2494u;

/// textureSampleBias with TextureCube, Sampler, Float32x3, Float32
extern Variable TextureSampleBias_TextureCube_texture;
extern Variable TextureSampleBias_TextureCube_sampler;
extern Variable TextureSampleBias_TextureCube_coordinate;
extern Variable TextureSampleBias_TextureCube_bias;
extern Function TextureSampleBias_TextureCube;
inline constexpr auto TextureSampleBias_TextureCube_name = "textureSampleBias"_c;
inline constexpr auto TextureSampleBias_TextureCube_backend_index = 2495u;

/// textureSampleBias with SampledTextureCube, Float32x3, Float32
extern Variable SampledTextureSampleBias_TextureCube_texture;
extern Variable SampledTextureSampleBias_TextureCube_coordinate;
extern Variable SampledTextureSampleBias_TextureCube_bias;
extern Function SampledTextureSampleBias_TextureCube;
inline constexpr auto SampledTextureSampleBias_TextureCube_name = "textureSampleBias"_c;
inline constexpr auto SampledTextureSampleBias_TextureCube_backend_index = 2496u;

/// textureSampleBias with Texture1DArray, Sampler, Float32x2, Float32
extern Variable TextureSampleBias_Texture1DArray_texture;
extern Variable TextureSampleBias_Texture1DArray_sampler;
extern Variable TextureSampleBias_Texture1DArray_coordinate;
extern Variable TextureSampleBias_Texture1DArray_bias;
extern Function TextureSampleBias_Texture1DArray;
inline constexpr auto TextureSampleBias_Texture1DArray_name = "textureSampleBias"_c;
inline constexpr auto TextureSampleBias_Texture1DArray_backend_index = 2497u;

/// textureSampleBias with SampledTexture1DArray, Float32x2, Float32
extern Variable SampledTextureSampleBias_Texture1DArray_texture;
extern Variable SampledTextureSampleBias_Texture1DArray_coordinate;
extern Variable SampledTextureSampleBias_Texture1DArray_bias;
extern Function SampledTextureSampleBias_Texture1DArray;
inline constexpr auto SampledTextureSampleBias_Texture1DArray_name = "textureSampleBias"_c;
inline constexpr auto SampledTextureSampleBias_Texture1DArray_backend_index = 2498u;

/// textureSampleBias with Texture2DArray, Sampler, Float32x3, Float32
extern Variable TextureSampleBias_Texture2DArray_texture;
extern Variable TextureSampleBias_Texture2DArray_sampler;
extern Variable TextureSampleBias_Texture2DArray_coordinate;
extern Variable TextureSampleBias_Texture2DArray_bias;
extern Function TextureSampleBias_Texture2DArray;
inline constexpr auto TextureSampleBias_Texture2DArray_name = "textureSampleBias"_c;
inline constexpr auto TextureSampleBias_Texture2DArray_backend_index = 2499u;

/// textureSampleBias with SampledTexture2DArray, Float32x3, Float32
extern Variable SampledTextureSampleBias_Texture2DArray_texture;
extern Variable SampledTextureSampleBias_Texture2DArray_coordinate;
extern Variable SampledTextureSampleBias_Texture2DArray_bias;
extern Function SampledTextureSampleBias_Texture2DArray;
inline constexpr auto SampledTextureSampleBias_Texture2DArray_name = "textureSampleBias"_c;
inline constexpr auto SampledTextureSampleBias_Texture2DArray_backend_index = 2500u;

/// textureSampleBias with TextureCubeArray, Sampler, Float32x4, Float32
extern Variable TextureSampleBias_TextureCubeArray_texture;
extern Variable TextureSampleBias_TextureCubeArray_sampler;
extern Variable TextureSampleBias_TextureCubeArray_coordinate;
extern Variable TextureSampleBias_TextureCubeArray_bias;
extern Function TextureSampleBias_TextureCubeArray;
inline constexpr auto TextureSampleBias_TextureCubeArray_name = "textureSampleBias"_c;
inline constexpr auto TextureSampleBias_TextureCubeArray_backend_index = 2501u;

/// textureSampleBias with SampledTextureCubeArray, Float32x4, Float32
extern Variable SampledTextureSampleBias_TextureCubeArray_texture;
extern Variable SampledTextureSampleBias_TextureCubeArray_coordinate;
extern Variable SampledTextureSampleBias_TextureCubeArray_bias;
extern Function SampledTextureSampleBias_TextureCubeArray;
inline constexpr auto SampledTextureSampleBias_TextureCubeArray_name = "textureSampleBias"_c;
inline constexpr auto SampledTextureSampleBias_TextureCubeArray_backend_index = 2502u;

/// textureSampleBiasOffset with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleBiasOffset_Texture1D_texture;
extern Variable TextureSampleBiasOffset_Texture1D_sampler;
extern Variable TextureSampleBiasOffset_Texture1D_coordinate;
extern Variable TextureSampleBiasOffset_Texture1D_bias;
extern Variable TextureSampleBiasOffset_Texture1D_offset;
extern Function TextureSampleBiasOffset_Texture1D;
inline constexpr auto TextureSampleBiasOffset_Texture1D_name = "textureSampleBiasOffset"_c;
inline constexpr auto TextureSampleBiasOffset_Texture1D_backend_index = 2503u;

/// textureSampleBiasOffset with SampledTexture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasOffset_Texture1D_texture;
extern Variable SampledTextureSampleBiasOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleBiasOffset_Texture1D_bias;
extern Variable SampledTextureSampleBiasOffset_Texture1D_offset;
extern Function SampledTextureSampleBiasOffset_Texture1D;
inline constexpr auto SampledTextureSampleBiasOffset_Texture1D_name = "textureSampleBiasOffset"_c;
inline constexpr auto SampledTextureSampleBiasOffset_Texture1D_backend_index = 2504u;

/// textureSampleBiasOffset with Texture2D, Sampler, Float32x2, Float32, Float32x2
extern Variable TextureSampleBiasOffset_Texture2D_texture;
extern Variable TextureSampleBiasOffset_Texture2D_sampler;
extern Variable TextureSampleBiasOffset_Texture2D_coordinate;
extern Variable TextureSampleBiasOffset_Texture2D_bias;
extern Variable TextureSampleBiasOffset_Texture2D_offset;
extern Function TextureSampleBiasOffset_Texture2D;
inline constexpr auto TextureSampleBiasOffset_Texture2D_name = "textureSampleBiasOffset"_c;
inline constexpr auto TextureSampleBiasOffset_Texture2D_backend_index = 2505u;

/// textureSampleBiasOffset with SampledTexture2D, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleBiasOffset_Texture2D_texture;
extern Variable SampledTextureSampleBiasOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleBiasOffset_Texture2D_bias;
extern Variable SampledTextureSampleBiasOffset_Texture2D_offset;
extern Function SampledTextureSampleBiasOffset_Texture2D;
inline constexpr auto SampledTextureSampleBiasOffset_Texture2D_name = "textureSampleBiasOffset"_c;
inline constexpr auto SampledTextureSampleBiasOffset_Texture2D_backend_index = 2506u;

/// textureSampleBiasOffset with Texture3D, Sampler, Float32x3, Float32, Float32x3
extern Variable TextureSampleBiasOffset_Texture3D_texture;
extern Variable TextureSampleBiasOffset_Texture3D_sampler;
extern Variable TextureSampleBiasOffset_Texture3D_coordinate;
extern Variable TextureSampleBiasOffset_Texture3D_bias;
extern Variable TextureSampleBiasOffset_Texture3D_offset;
extern Function TextureSampleBiasOffset_Texture3D;
inline constexpr auto TextureSampleBiasOffset_Texture3D_name = "textureSampleBiasOffset"_c;
inline constexpr auto TextureSampleBiasOffset_Texture3D_backend_index = 2507u;

/// textureSampleBiasOffset with SampledTexture3D, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleBiasOffset_Texture3D_texture;
extern Variable SampledTextureSampleBiasOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleBiasOffset_Texture3D_bias;
extern Variable SampledTextureSampleBiasOffset_Texture3D_offset;
extern Function SampledTextureSampleBiasOffset_Texture3D;
inline constexpr auto SampledTextureSampleBiasOffset_Texture3D_name = "textureSampleBiasOffset"_c;
inline constexpr auto SampledTextureSampleBiasOffset_Texture3D_backend_index = 2508u;

/// textureSampleBiasOffset with Texture1DArray, Sampler, Float32x2, Float32, Float32x2
extern Variable TextureSampleBiasOffset_Texture1DArray_texture;
extern Variable TextureSampleBiasOffset_Texture1DArray_sampler;
extern Variable TextureSampleBiasOffset_Texture1DArray_coordinate;
extern Variable TextureSampleBiasOffset_Texture1DArray_bias;
extern Variable TextureSampleBiasOffset_Texture1DArray_offset;
extern Function TextureSampleBiasOffset_Texture1DArray;
inline constexpr auto TextureSampleBiasOffset_Texture1DArray_name = "textureSampleBiasOffset"_c;
inline constexpr auto TextureSampleBiasOffset_Texture1DArray_backend_index = 2509u;

/// textureSampleBiasOffset with SampledTexture1DArray, Float32x2, Float32, Float32x2
extern Variable SampledTextureSampleBiasOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleBiasOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleBiasOffset_Texture1DArray_bias;
extern Variable SampledTextureSampleBiasOffset_Texture1DArray_offset;
extern Function SampledTextureSampleBiasOffset_Texture1DArray;
inline constexpr auto SampledTextureSampleBiasOffset_Texture1DArray_name = "textureSampleBiasOffset"_c;
inline constexpr auto SampledTextureSampleBiasOffset_Texture1DArray_backend_index = 2510u;

/// textureSampleBiasOffset with Texture2DArray, Sampler, Float32x3, Float32, Float32x3
extern Variable TextureSampleBiasOffset_Texture2DArray_texture;
extern Variable TextureSampleBiasOffset_Texture2DArray_sampler;
extern Variable TextureSampleBiasOffset_Texture2DArray_coordinate;
extern Variable TextureSampleBiasOffset_Texture2DArray_bias;
extern Variable TextureSampleBiasOffset_Texture2DArray_offset;
extern Function TextureSampleBiasOffset_Texture2DArray;
inline constexpr auto TextureSampleBiasOffset_Texture2DArray_name = "textureSampleBiasOffset"_c;
inline constexpr auto TextureSampleBiasOffset_Texture2DArray_backend_index = 2511u;

/// textureSampleBiasOffset with SampledTexture2DArray, Float32x3, Float32, Float32x3
extern Variable SampledTextureSampleBiasOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleBiasOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleBiasOffset_Texture2DArray_bias;
extern Variable SampledTextureSampleBiasOffset_Texture2DArray_offset;
extern Function SampledTextureSampleBiasOffset_Texture2DArray;
inline constexpr auto SampledTextureSampleBiasOffset_Texture2DArray_name = "textureSampleBiasOffset"_c;
inline constexpr auto SampledTextureSampleBiasOffset_Texture2DArray_backend_index = 2512u;

/// textureSampleBiasProj with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleBiasProj_Texture1D_texture;
extern Variable TextureSampleBiasProj_Texture1D_sampler;
extern Variable TextureSampleBiasProj_Texture1D_coordinate;
extern Variable TextureSampleBiasProj_Texture1D_bias;
extern Variable TextureSampleBiasProj_Texture1D_proj;
extern Function TextureSampleBiasProj_Texture1D;
inline constexpr auto TextureSampleBiasProj_Texture1D_name = "textureSampleBiasProj"_c;
inline constexpr auto TextureSampleBiasProj_Texture1D_backend_index = 2513u;

/// textureSampleBiasProj with SampledTexture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasProj_Texture1D_texture;
extern Variable SampledTextureSampleBiasProj_Texture1D_coordinate;
extern Variable SampledTextureSampleBiasProj_Texture1D_bias;
extern Variable SampledTextureSampleBiasProj_Texture1D_proj;
extern Function SampledTextureSampleBiasProj_Texture1D;
inline constexpr auto SampledTextureSampleBiasProj_Texture1D_name = "textureSampleBiasProj"_c;
inline constexpr auto SampledTextureSampleBiasProj_Texture1D_backend_index = 2514u;

/// textureSampleBiasProj with Texture2D, Sampler, Float32x2, Float32, Float32
extern Variable TextureSampleBiasProj_Texture2D_texture;
extern Variable TextureSampleBiasProj_Texture2D_sampler;
extern Variable TextureSampleBiasProj_Texture2D_coordinate;
extern Variable TextureSampleBiasProj_Texture2D_bias;
extern Variable TextureSampleBiasProj_Texture2D_proj;
extern Function TextureSampleBiasProj_Texture2D;
inline constexpr auto TextureSampleBiasProj_Texture2D_name = "textureSampleBiasProj"_c;
inline constexpr auto TextureSampleBiasProj_Texture2D_backend_index = 2515u;

/// textureSampleBiasProj with SampledTexture2D, Float32x2, Float32, Float32
extern Variable SampledTextureSampleBiasProj_Texture2D_texture;
extern Variable SampledTextureSampleBiasProj_Texture2D_coordinate;
extern Variable SampledTextureSampleBiasProj_Texture2D_bias;
extern Variable SampledTextureSampleBiasProj_Texture2D_proj;
extern Function SampledTextureSampleBiasProj_Texture2D;
inline constexpr auto SampledTextureSampleBiasProj_Texture2D_name = "textureSampleBiasProj"_c;
inline constexpr auto SampledTextureSampleBiasProj_Texture2D_backend_index = 2516u;

/// textureSampleBiasProj with Texture3D, Sampler, Float32x3, Float32, Float32
extern Variable TextureSampleBiasProj_Texture3D_texture;
extern Variable TextureSampleBiasProj_Texture3D_sampler;
extern Variable TextureSampleBiasProj_Texture3D_coordinate;
extern Variable TextureSampleBiasProj_Texture3D_bias;
extern Variable TextureSampleBiasProj_Texture3D_proj;
extern Function TextureSampleBiasProj_Texture3D;
inline constexpr auto TextureSampleBiasProj_Texture3D_name = "textureSampleBiasProj"_c;
inline constexpr auto TextureSampleBiasProj_Texture3D_backend_index = 2517u;

/// textureSampleBiasProj with SampledTexture3D, Float32x3, Float32, Float32
extern Variable SampledTextureSampleBiasProj_Texture3D_texture;
extern Variable SampledTextureSampleBiasProj_Texture3D_coordinate;
extern Variable SampledTextureSampleBiasProj_Texture3D_bias;
extern Variable SampledTextureSampleBiasProj_Texture3D_proj;
extern Function SampledTextureSampleBiasProj_Texture3D;
inline constexpr auto SampledTextureSampleBiasProj_Texture3D_name = "textureSampleBiasProj"_c;
inline constexpr auto SampledTextureSampleBiasProj_Texture3D_backend_index = 2518u;

/// textureSampleBiasProjOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleBiasProjOffset_Texture1D_texture;
extern Variable TextureSampleBiasProjOffset_Texture1D_sampler;
extern Variable TextureSampleBiasProjOffset_Texture1D_coordinate;
extern Variable TextureSampleBiasProjOffset_Texture1D_bias;
extern Variable TextureSampleBiasProjOffset_Texture1D_proj;
extern Variable TextureSampleBiasProjOffset_Texture1D_offset;
extern Function TextureSampleBiasProjOffset_Texture1D;
inline constexpr auto TextureSampleBiasProjOffset_Texture1D_name = "textureSampleBiasProjOffset"_c;
inline constexpr auto TextureSampleBiasProjOffset_Texture1D_backend_index = 2519u;

/// textureSampleBiasProjOffset with SampledTexture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasProjOffset_Texture1D_texture;
extern Variable SampledTextureSampleBiasProjOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleBiasProjOffset_Texture1D_bias;
extern Variable SampledTextureSampleBiasProjOffset_Texture1D_proj;
extern Variable SampledTextureSampleBiasProjOffset_Texture1D_offset;
extern Function SampledTextureSampleBiasProjOffset_Texture1D;
inline constexpr auto SampledTextureSampleBiasProjOffset_Texture1D_name = "textureSampleBiasProjOffset"_c;
inline constexpr auto SampledTextureSampleBiasProjOffset_Texture1D_backend_index = 2520u;

/// textureSampleBiasProjOffset with Texture2D, Sampler, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleBiasProjOffset_Texture2D_texture;
extern Variable TextureSampleBiasProjOffset_Texture2D_sampler;
extern Variable TextureSampleBiasProjOffset_Texture2D_coordinate;
extern Variable TextureSampleBiasProjOffset_Texture2D_bias;
extern Variable TextureSampleBiasProjOffset_Texture2D_proj;
extern Variable TextureSampleBiasProjOffset_Texture2D_offset;
extern Function TextureSampleBiasProjOffset_Texture2D;
inline constexpr auto TextureSampleBiasProjOffset_Texture2D_name = "textureSampleBiasProjOffset"_c;
inline constexpr auto TextureSampleBiasProjOffset_Texture2D_backend_index = 2521u;

/// textureSampleBiasProjOffset with SampledTexture2D, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleBiasProjOffset_Texture2D_texture;
extern Variable SampledTextureSampleBiasProjOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleBiasProjOffset_Texture2D_bias;
extern Variable SampledTextureSampleBiasProjOffset_Texture2D_proj;
extern Variable SampledTextureSampleBiasProjOffset_Texture2D_offset;
extern Function SampledTextureSampleBiasProjOffset_Texture2D;
inline constexpr auto SampledTextureSampleBiasProjOffset_Texture2D_name = "textureSampleBiasProjOffset"_c;
inline constexpr auto SampledTextureSampleBiasProjOffset_Texture2D_backend_index = 2522u;

/// textureSampleBiasProjOffset with Texture3D, Sampler, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleBiasProjOffset_Texture3D_texture;
extern Variable TextureSampleBiasProjOffset_Texture3D_sampler;
extern Variable TextureSampleBiasProjOffset_Texture3D_coordinate;
extern Variable TextureSampleBiasProjOffset_Texture3D_bias;
extern Variable TextureSampleBiasProjOffset_Texture3D_proj;
extern Variable TextureSampleBiasProjOffset_Texture3D_offset;
extern Function TextureSampleBiasProjOffset_Texture3D;
inline constexpr auto TextureSampleBiasProjOffset_Texture3D_name = "textureSampleBiasProjOffset"_c;
inline constexpr auto TextureSampleBiasProjOffset_Texture3D_backend_index = 2523u;

/// textureSampleBiasProjOffset with SampledTexture3D, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleBiasProjOffset_Texture3D_texture;
extern Variable SampledTextureSampleBiasProjOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleBiasProjOffset_Texture3D_bias;
extern Variable SampledTextureSampleBiasProjOffset_Texture3D_proj;
extern Variable SampledTextureSampleBiasProjOffset_Texture3D_offset;
extern Function SampledTextureSampleBiasProjOffset_Texture3D;
inline constexpr auto SampledTextureSampleBiasProjOffset_Texture3D_name = "textureSampleBiasProjOffset"_c;
inline constexpr auto SampledTextureSampleBiasProjOffset_Texture3D_backend_index = 2524u;

/// textureSampleBiasCompare with Texture1D, Sampler, Float32, Float32, Float32
extern Variable TextureSampleBiasCompare_Texture1D_texture;
extern Variable TextureSampleBiasCompare_Texture1D_sampler;
extern Variable TextureSampleBiasCompare_Texture1D_coordinate;
extern Variable TextureSampleBiasCompare_Texture1D_bias;
extern Variable TextureSampleBiasCompare_Texture1D_compare;
extern Function TextureSampleBiasCompare_Texture1D;
inline constexpr auto TextureSampleBiasCompare_Texture1D_name = "textureSampleBiasCompare"_c;
inline constexpr auto TextureSampleBiasCompare_Texture1D_backend_index = 2525u;

/// textureSampleBiasCompare with SampledTexture1D, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasCompare_Texture1D_texture;
extern Variable SampledTextureSampleBiasCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleBiasCompare_Texture1D_bias;
extern Variable SampledTextureSampleBiasCompare_Texture1D_compare;
extern Function SampledTextureSampleBiasCompare_Texture1D;
inline constexpr auto SampledTextureSampleBiasCompare_Texture1D_name = "textureSampleBiasCompare"_c;
inline constexpr auto SampledTextureSampleBiasCompare_Texture1D_backend_index = 2526u;

/// textureSampleBiasCompare with Texture2D, Sampler, Float32x2, Float32, Float32
extern Variable TextureSampleBiasCompare_Texture2D_texture;
extern Variable TextureSampleBiasCompare_Texture2D_sampler;
extern Variable TextureSampleBiasCompare_Texture2D_coordinate;
extern Variable TextureSampleBiasCompare_Texture2D_bias;
extern Variable TextureSampleBiasCompare_Texture2D_compare;
extern Function TextureSampleBiasCompare_Texture2D;
inline constexpr auto TextureSampleBiasCompare_Texture2D_name = "textureSampleBiasCompare"_c;
inline constexpr auto TextureSampleBiasCompare_Texture2D_backend_index = 2527u;

/// textureSampleBiasCompare with SampledTexture2D, Float32x2, Float32, Float32
extern Variable SampledTextureSampleBiasCompare_Texture2D_texture;
extern Variable SampledTextureSampleBiasCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleBiasCompare_Texture2D_bias;
extern Variable SampledTextureSampleBiasCompare_Texture2D_compare;
extern Function SampledTextureSampleBiasCompare_Texture2D;
inline constexpr auto SampledTextureSampleBiasCompare_Texture2D_name = "textureSampleBiasCompare"_c;
inline constexpr auto SampledTextureSampleBiasCompare_Texture2D_backend_index = 2528u;

/// textureSampleBiasCompare with Texture3D, Sampler, Float32x3, Float32, Float32
extern Variable TextureSampleBiasCompare_Texture3D_texture;
extern Variable TextureSampleBiasCompare_Texture3D_sampler;
extern Variable TextureSampleBiasCompare_Texture3D_coordinate;
extern Variable TextureSampleBiasCompare_Texture3D_bias;
extern Variable TextureSampleBiasCompare_Texture3D_compare;
extern Function TextureSampleBiasCompare_Texture3D;
inline constexpr auto TextureSampleBiasCompare_Texture3D_name = "textureSampleBiasCompare"_c;
inline constexpr auto TextureSampleBiasCompare_Texture3D_backend_index = 2529u;

/// textureSampleBiasCompare with SampledTexture3D, Float32x3, Float32, Float32
extern Variable SampledTextureSampleBiasCompare_Texture3D_texture;
extern Variable SampledTextureSampleBiasCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleBiasCompare_Texture3D_bias;
extern Variable SampledTextureSampleBiasCompare_Texture3D_compare;
extern Function SampledTextureSampleBiasCompare_Texture3D;
inline constexpr auto SampledTextureSampleBiasCompare_Texture3D_name = "textureSampleBiasCompare"_c;
inline constexpr auto SampledTextureSampleBiasCompare_Texture3D_backend_index = 2530u;

/// textureSampleBiasCompare with Texture1DArray, Sampler, Float32x2, Float32, Float32
extern Variable TextureSampleBiasCompare_Texture1DArray_texture;
extern Variable TextureSampleBiasCompare_Texture1DArray_sampler;
extern Variable TextureSampleBiasCompare_Texture1DArray_coordinate;
extern Variable TextureSampleBiasCompare_Texture1DArray_bias;
extern Variable TextureSampleBiasCompare_Texture1DArray_compare;
extern Function TextureSampleBiasCompare_Texture1DArray;
inline constexpr auto TextureSampleBiasCompare_Texture1DArray_name = "textureSampleBiasCompare"_c;
inline constexpr auto TextureSampleBiasCompare_Texture1DArray_backend_index = 2531u;

/// textureSampleBiasCompare with SampledTexture1DArray, Float32x2, Float32, Float32
extern Variable SampledTextureSampleBiasCompare_Texture1DArray_texture;
extern Variable SampledTextureSampleBiasCompare_Texture1DArray_coordinate;
extern Variable SampledTextureSampleBiasCompare_Texture1DArray_bias;
extern Variable SampledTextureSampleBiasCompare_Texture1DArray_compare;
extern Function SampledTextureSampleBiasCompare_Texture1DArray;
inline constexpr auto SampledTextureSampleBiasCompare_Texture1DArray_name = "textureSampleBiasCompare"_c;
inline constexpr auto SampledTextureSampleBiasCompare_Texture1DArray_backend_index = 2532u;

/// textureSampleBiasCompare with Texture2DArray, Sampler, Float32x3, Float32, Float32
extern Variable TextureSampleBiasCompare_Texture2DArray_texture;
extern Variable TextureSampleBiasCompare_Texture2DArray_sampler;
extern Variable TextureSampleBiasCompare_Texture2DArray_coordinate;
extern Variable TextureSampleBiasCompare_Texture2DArray_bias;
extern Variable TextureSampleBiasCompare_Texture2DArray_compare;
extern Function TextureSampleBiasCompare_Texture2DArray;
inline constexpr auto TextureSampleBiasCompare_Texture2DArray_name = "textureSampleBiasCompare"_c;
inline constexpr auto TextureSampleBiasCompare_Texture2DArray_backend_index = 2533u;

/// textureSampleBiasCompare with SampledTexture2DArray, Float32x3, Float32, Float32
extern Variable SampledTextureSampleBiasCompare_Texture2DArray_texture;
extern Variable SampledTextureSampleBiasCompare_Texture2DArray_coordinate;
extern Variable SampledTextureSampleBiasCompare_Texture2DArray_bias;
extern Variable SampledTextureSampleBiasCompare_Texture2DArray_compare;
extern Function SampledTextureSampleBiasCompare_Texture2DArray;
inline constexpr auto SampledTextureSampleBiasCompare_Texture2DArray_name = "textureSampleBiasCompare"_c;
inline constexpr auto SampledTextureSampleBiasCompare_Texture2DArray_backend_index = 2534u;

/// textureSampleBiasCompareOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleBiasCompareOffset_Texture1D_texture;
extern Variable TextureSampleBiasCompareOffset_Texture1D_sampler;
extern Variable TextureSampleBiasCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleBiasCompareOffset_Texture1D_bias;
extern Variable TextureSampleBiasCompareOffset_Texture1D_compare;
extern Variable TextureSampleBiasCompareOffset_Texture1D_offset;
extern Function TextureSampleBiasCompareOffset_Texture1D;
inline constexpr auto TextureSampleBiasCompareOffset_Texture1D_name = "textureSampleBiasCompareOffset"_c;
inline constexpr auto TextureSampleBiasCompareOffset_Texture1D_backend_index = 2535u;

/// textureSampleBiasCompareOffset with SampledTexture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1D_bias;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleBiasCompareOffset_Texture1D;
inline constexpr auto SampledTextureSampleBiasCompareOffset_Texture1D_name = "textureSampleBiasCompareOffset"_c;
inline constexpr auto SampledTextureSampleBiasCompareOffset_Texture1D_backend_index = 2536u;

/// textureSampleBiasCompareOffset with Texture2D, Sampler, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleBiasCompareOffset_Texture2D_texture;
extern Variable TextureSampleBiasCompareOffset_Texture2D_sampler;
extern Variable TextureSampleBiasCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleBiasCompareOffset_Texture2D_bias;
extern Variable TextureSampleBiasCompareOffset_Texture2D_compare;
extern Variable TextureSampleBiasCompareOffset_Texture2D_offset;
extern Function TextureSampleBiasCompareOffset_Texture2D;
inline constexpr auto TextureSampleBiasCompareOffset_Texture2D_name = "textureSampleBiasCompareOffset"_c;
inline constexpr auto TextureSampleBiasCompareOffset_Texture2D_backend_index = 2537u;

/// textureSampleBiasCompareOffset with SampledTexture2D, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleBiasCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2D_bias;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleBiasCompareOffset_Texture2D;
inline constexpr auto SampledTextureSampleBiasCompareOffset_Texture2D_name = "textureSampleBiasCompareOffset"_c;
inline constexpr auto SampledTextureSampleBiasCompareOffset_Texture2D_backend_index = 2538u;

/// textureSampleBiasCompareOffset with Texture3D, Sampler, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleBiasCompareOffset_Texture3D_texture;
extern Variable TextureSampleBiasCompareOffset_Texture3D_sampler;
extern Variable TextureSampleBiasCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleBiasCompareOffset_Texture3D_bias;
extern Variable TextureSampleBiasCompareOffset_Texture3D_compare;
extern Variable TextureSampleBiasCompareOffset_Texture3D_offset;
extern Function TextureSampleBiasCompareOffset_Texture3D;
inline constexpr auto TextureSampleBiasCompareOffset_Texture3D_name = "textureSampleBiasCompareOffset"_c;
inline constexpr auto TextureSampleBiasCompareOffset_Texture3D_backend_index = 2539u;

/// textureSampleBiasCompareOffset with SampledTexture3D, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleBiasCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleBiasCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleBiasCompareOffset_Texture3D_bias;
extern Variable SampledTextureSampleBiasCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleBiasCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleBiasCompareOffset_Texture3D;
inline constexpr auto SampledTextureSampleBiasCompareOffset_Texture3D_name = "textureSampleBiasCompareOffset"_c;
inline constexpr auto SampledTextureSampleBiasCompareOffset_Texture3D_backend_index = 2540u;

/// textureSampleBiasCompareOffset with Texture1DArray, Sampler, Float32x2, Float32, Float32, Float32x2
extern Variable TextureSampleBiasCompareOffset_Texture1DArray_texture;
extern Variable TextureSampleBiasCompareOffset_Texture1DArray_sampler;
extern Variable TextureSampleBiasCompareOffset_Texture1DArray_coordinate;
extern Variable TextureSampleBiasCompareOffset_Texture1DArray_bias;
extern Variable TextureSampleBiasCompareOffset_Texture1DArray_compare;
extern Variable TextureSampleBiasCompareOffset_Texture1DArray_offset;
extern Function TextureSampleBiasCompareOffset_Texture1DArray;
inline constexpr auto TextureSampleBiasCompareOffset_Texture1DArray_name = "textureSampleBiasCompareOffset"_c;
inline constexpr auto TextureSampleBiasCompareOffset_Texture1DArray_backend_index = 2541u;

/// textureSampleBiasCompareOffset with SampledTexture1DArray, Float32x2, Float32, Float32, Float32x2
extern Variable SampledTextureSampleBiasCompareOffset_Texture1DArray_texture;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1DArray_coordinate;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1DArray_bias;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1DArray_compare;
extern Variable SampledTextureSampleBiasCompareOffset_Texture1DArray_offset;
extern Function SampledTextureSampleBiasCompareOffset_Texture1DArray;
inline constexpr auto SampledTextureSampleBiasCompareOffset_Texture1DArray_name = "textureSampleBiasCompareOffset"_c;
inline constexpr auto SampledTextureSampleBiasCompareOffset_Texture1DArray_backend_index = 2542u;

/// textureSampleBiasCompareOffset with Texture2DArray, Sampler, Float32x3, Float32, Float32, Float32x3
extern Variable TextureSampleBiasCompareOffset_Texture2DArray_texture;
extern Variable TextureSampleBiasCompareOffset_Texture2DArray_sampler;
extern Variable TextureSampleBiasCompareOffset_Texture2DArray_coordinate;
extern Variable TextureSampleBiasCompareOffset_Texture2DArray_bias;
extern Variable TextureSampleBiasCompareOffset_Texture2DArray_compare;
extern Variable TextureSampleBiasCompareOffset_Texture2DArray_offset;
extern Function TextureSampleBiasCompareOffset_Texture2DArray;
inline constexpr auto TextureSampleBiasCompareOffset_Texture2DArray_name = "textureSampleBiasCompareOffset"_c;
inline constexpr auto TextureSampleBiasCompareOffset_Texture2DArray_backend_index = 2543u;

/// textureSampleBiasCompareOffset with SampledTexture2DArray, Float32x3, Float32, Float32, Float32x3
extern Variable SampledTextureSampleBiasCompareOffset_Texture2DArray_texture;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2DArray_coordinate;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2DArray_bias;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2DArray_compare;
extern Variable SampledTextureSampleBiasCompareOffset_Texture2DArray_offset;
extern Function SampledTextureSampleBiasCompareOffset_Texture2DArray;
inline constexpr auto SampledTextureSampleBiasCompareOffset_Texture2DArray_name = "textureSampleBiasCompareOffset"_c;
inline constexpr auto SampledTextureSampleBiasCompareOffset_Texture2DArray_backend_index = 2544u;

/// textureSampleBiasProjCompare with Texture1D, Sampler, Float32, Float32, Float32, Float32
extern Variable TextureSampleBiasProjCompare_Texture1D_texture;
extern Variable TextureSampleBiasProjCompare_Texture1D_sampler;
extern Variable TextureSampleBiasProjCompare_Texture1D_coordinate;
extern Variable TextureSampleBiasProjCompare_Texture1D_bias;
extern Variable TextureSampleBiasProjCompare_Texture1D_proj;
extern Variable TextureSampleBiasProjCompare_Texture1D_compare;
extern Function TextureSampleBiasProjCompare_Texture1D;
inline constexpr auto TextureSampleBiasProjCompare_Texture1D_name = "textureSampleBiasProjCompare"_c;
inline constexpr auto TextureSampleBiasProjCompare_Texture1D_backend_index = 2545u;

/// textureSampleBiasProjCompare with SampledTexture1D, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasProjCompare_Texture1D_texture;
extern Variable SampledTextureSampleBiasProjCompare_Texture1D_coordinate;
extern Variable SampledTextureSampleBiasProjCompare_Texture1D_bias;
extern Variable SampledTextureSampleBiasProjCompare_Texture1D_proj;
extern Variable SampledTextureSampleBiasProjCompare_Texture1D_compare;
extern Function SampledTextureSampleBiasProjCompare_Texture1D;
inline constexpr auto SampledTextureSampleBiasProjCompare_Texture1D_name = "textureSampleBiasProjCompare"_c;
inline constexpr auto SampledTextureSampleBiasProjCompare_Texture1D_backend_index = 2546u;

/// textureSampleBiasProjCompare with Texture2D, Sampler, Float32x2, Float32, Float32, Float32
extern Variable TextureSampleBiasProjCompare_Texture2D_texture;
extern Variable TextureSampleBiasProjCompare_Texture2D_sampler;
extern Variable TextureSampleBiasProjCompare_Texture2D_coordinate;
extern Variable TextureSampleBiasProjCompare_Texture2D_bias;
extern Variable TextureSampleBiasProjCompare_Texture2D_proj;
extern Variable TextureSampleBiasProjCompare_Texture2D_compare;
extern Function TextureSampleBiasProjCompare_Texture2D;
inline constexpr auto TextureSampleBiasProjCompare_Texture2D_name = "textureSampleBiasProjCompare"_c;
inline constexpr auto TextureSampleBiasProjCompare_Texture2D_backend_index = 2547u;

/// textureSampleBiasProjCompare with SampledTexture2D, Float32x2, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasProjCompare_Texture2D_texture;
extern Variable SampledTextureSampleBiasProjCompare_Texture2D_coordinate;
extern Variable SampledTextureSampleBiasProjCompare_Texture2D_bias;
extern Variable SampledTextureSampleBiasProjCompare_Texture2D_proj;
extern Variable SampledTextureSampleBiasProjCompare_Texture2D_compare;
extern Function SampledTextureSampleBiasProjCompare_Texture2D;
inline constexpr auto SampledTextureSampleBiasProjCompare_Texture2D_name = "textureSampleBiasProjCompare"_c;
inline constexpr auto SampledTextureSampleBiasProjCompare_Texture2D_backend_index = 2548u;

/// textureSampleBiasProjCompare with Texture3D, Sampler, Float32x3, Float32, Float32, Float32
extern Variable TextureSampleBiasProjCompare_Texture3D_texture;
extern Variable TextureSampleBiasProjCompare_Texture3D_sampler;
extern Variable TextureSampleBiasProjCompare_Texture3D_coordinate;
extern Variable TextureSampleBiasProjCompare_Texture3D_bias;
extern Variable TextureSampleBiasProjCompare_Texture3D_proj;
extern Variable TextureSampleBiasProjCompare_Texture3D_compare;
extern Function TextureSampleBiasProjCompare_Texture3D;
inline constexpr auto TextureSampleBiasProjCompare_Texture3D_name = "textureSampleBiasProjCompare"_c;
inline constexpr auto TextureSampleBiasProjCompare_Texture3D_backend_index = 2549u;

/// textureSampleBiasProjCompare with SampledTexture3D, Float32x3, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasProjCompare_Texture3D_texture;
extern Variable SampledTextureSampleBiasProjCompare_Texture3D_coordinate;
extern Variable SampledTextureSampleBiasProjCompare_Texture3D_bias;
extern Variable SampledTextureSampleBiasProjCompare_Texture3D_proj;
extern Variable SampledTextureSampleBiasProjCompare_Texture3D_compare;
extern Function SampledTextureSampleBiasProjCompare_Texture3D;
inline constexpr auto SampledTextureSampleBiasProjCompare_Texture3D_name = "textureSampleBiasProjCompare"_c;
inline constexpr auto SampledTextureSampleBiasProjCompare_Texture3D_backend_index = 2550u;

/// textureSampleBiasProjCompareOffset with Texture1D, Sampler, Float32, Float32, Float32, Float32, Float32
extern Variable TextureSampleBiasProjCompareOffset_Texture1D_texture;
extern Variable TextureSampleBiasProjCompareOffset_Texture1D_sampler;
extern Variable TextureSampleBiasProjCompareOffset_Texture1D_coordinate;
extern Variable TextureSampleBiasProjCompareOffset_Texture1D_bias;
extern Variable TextureSampleBiasProjCompareOffset_Texture1D_proj;
extern Variable TextureSampleBiasProjCompareOffset_Texture1D_compare;
extern Variable TextureSampleBiasProjCompareOffset_Texture1D_offset;
extern Function TextureSampleBiasProjCompareOffset_Texture1D;
inline constexpr auto TextureSampleBiasProjCompareOffset_Texture1D_name = "textureSampleBiasProjCompareOffset"_c;
inline constexpr auto TextureSampleBiasProjCompareOffset_Texture1D_backend_index = 2551u;

/// textureSampleBiasProjCompareOffset with SampledTexture1D, Float32, Float32, Float32, Float32, Float32
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture1D_texture;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture1D_coordinate;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture1D_bias;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture1D_proj;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture1D_compare;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture1D_offset;
extern Function SampledTextureSampleBiasProjCompareOffset_Texture1D;
inline constexpr auto SampledTextureSampleBiasProjCompareOffset_Texture1D_name = "textureSampleBiasProjCompareOffset"_c;
inline constexpr auto SampledTextureSampleBiasProjCompareOffset_Texture1D_backend_index = 2552u;

/// textureSampleBiasProjCompareOffset with Texture2D, Sampler, Float32x2, Float32, Float32, Float32, Float32x2
extern Variable TextureSampleBiasProjCompareOffset_Texture2D_texture;
extern Variable TextureSampleBiasProjCompareOffset_Texture2D_sampler;
extern Variable TextureSampleBiasProjCompareOffset_Texture2D_coordinate;
extern Variable TextureSampleBiasProjCompareOffset_Texture2D_bias;
extern Variable TextureSampleBiasProjCompareOffset_Texture2D_proj;
extern Variable TextureSampleBiasProjCompareOffset_Texture2D_compare;
extern Variable TextureSampleBiasProjCompareOffset_Texture2D_offset;
extern Function TextureSampleBiasProjCompareOffset_Texture2D;
inline constexpr auto TextureSampleBiasProjCompareOffset_Texture2D_name = "textureSampleBiasProjCompareOffset"_c;
inline constexpr auto TextureSampleBiasProjCompareOffset_Texture2D_backend_index = 2553u;

/// textureSampleBiasProjCompareOffset with SampledTexture2D, Float32x2, Float32, Float32, Float32, Float32x2
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture2D_texture;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture2D_coordinate;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture2D_bias;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture2D_proj;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture2D_compare;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture2D_offset;
extern Function SampledTextureSampleBiasProjCompareOffset_Texture2D;
inline constexpr auto SampledTextureSampleBiasProjCompareOffset_Texture2D_name = "textureSampleBiasProjCompareOffset"_c;
inline constexpr auto SampledTextureSampleBiasProjCompareOffset_Texture2D_backend_index = 2554u;

/// textureSampleBiasProjCompareOffset with Texture3D, Sampler, Float32x3, Float32, Float32, Float32, Float32x3
extern Variable TextureSampleBiasProjCompareOffset_Texture3D_texture;
extern Variable TextureSampleBiasProjCompareOffset_Texture3D_sampler;
extern Variable TextureSampleBiasProjCompareOffset_Texture3D_coordinate;
extern Variable TextureSampleBiasProjCompareOffset_Texture3D_bias;
extern Variable TextureSampleBiasProjCompareOffset_Texture3D_proj;
extern Variable TextureSampleBiasProjCompareOffset_Texture3D_compare;
extern Variable TextureSampleBiasProjCompareOffset_Texture3D_offset;
extern Function TextureSampleBiasProjCompareOffset_Texture3D;
inline constexpr auto TextureSampleBiasProjCompareOffset_Texture3D_name = "textureSampleBiasProjCompareOffset"_c;
inline constexpr auto TextureSampleBiasProjCompareOffset_Texture3D_backend_index = 2555u;

/// textureSampleBiasProjCompareOffset with SampledTexture3D, Float32x3, Float32, Float32, Float32, Float32x3
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture3D_texture;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture3D_coordinate;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture3D_bias;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture3D_proj;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture3D_compare;
extern Variable SampledTextureSampleBiasProjCompareOffset_Texture3D_offset;
extern Function SampledTextureSampleBiasProjCompareOffset_Texture3D;
inline constexpr auto SampledTextureSampleBiasProjCompareOffset_Texture3D_name = "textureSampleBiasProjCompareOffset"_c;
inline constexpr auto SampledTextureSampleBiasProjCompareOffset_Texture3D_backend_index = 2556u;

/// textureAtomicLoad with Texture1D, Int32, Float32
extern Variable TextureAtomicLoad_Texture1D_Float32_texture;
extern Variable TextureAtomicLoad_Texture1D_Float32_coordinate;
extern Variable TextureAtomicLoad_Texture1D_Float32_value;
extern Function TextureAtomicLoad_Texture1D_Float32;
inline constexpr auto TextureAtomicLoad_Texture1D_Float32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture1D_Float32_backend_index = 2557u;

/// textureAtomicLoad with Texture1D, Int32, UInt32
extern Variable TextureAtomicLoad_Texture1D_UInt32_texture;
extern Variable TextureAtomicLoad_Texture1D_UInt32_coordinate;
extern Variable TextureAtomicLoad_Texture1D_UInt32_value;
extern Function TextureAtomicLoad_Texture1D_UInt32;
inline constexpr auto TextureAtomicLoad_Texture1D_UInt32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture1D_UInt32_backend_index = 2558u;

/// textureAtomicLoad with Texture1D, Int32, Int32
extern Variable TextureAtomicLoad_Texture1D_Int32_texture;
extern Variable TextureAtomicLoad_Texture1D_Int32_coordinate;
extern Variable TextureAtomicLoad_Texture1D_Int32_value;
extern Function TextureAtomicLoad_Texture1D_Int32;
inline constexpr auto TextureAtomicLoad_Texture1D_Int32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture1D_Int32_backend_index = 2559u;

/// textureAtomicLoad with Texture1D, Int32, Float16
extern Variable TextureAtomicLoad_Texture1D_Float16_texture;
extern Variable TextureAtomicLoad_Texture1D_Float16_coordinate;
extern Variable TextureAtomicLoad_Texture1D_Float16_value;
extern Function TextureAtomicLoad_Texture1D_Float16;
inline constexpr auto TextureAtomicLoad_Texture1D_Float16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture1D_Float16_backend_index = 2560u;

/// textureAtomicLoad with Texture1D, Int32, UInt16
extern Variable TextureAtomicLoad_Texture1D_UInt16_texture;
extern Variable TextureAtomicLoad_Texture1D_UInt16_coordinate;
extern Variable TextureAtomicLoad_Texture1D_UInt16_value;
extern Function TextureAtomicLoad_Texture1D_UInt16;
inline constexpr auto TextureAtomicLoad_Texture1D_UInt16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture1D_UInt16_backend_index = 2561u;

/// textureAtomicLoad with Texture1D, Int32, Int16
extern Variable TextureAtomicLoad_Texture1D_Int16_texture;
extern Variable TextureAtomicLoad_Texture1D_Int16_coordinate;
extern Variable TextureAtomicLoad_Texture1D_Int16_value;
extern Function TextureAtomicLoad_Texture1D_Int16;
inline constexpr auto TextureAtomicLoad_Texture1D_Int16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture1D_Int16_backend_index = 2562u;

/// textureAtomicLoad with Texture2D, Int32x2, Float32
extern Variable TextureAtomicLoad_Texture2D_Float32_texture;
extern Variable TextureAtomicLoad_Texture2D_Float32_coordinate;
extern Variable TextureAtomicLoad_Texture2D_Float32_value;
extern Function TextureAtomicLoad_Texture2D_Float32;
inline constexpr auto TextureAtomicLoad_Texture2D_Float32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture2D_Float32_backend_index = 2563u;

/// textureAtomicLoad with Texture2D, Int32x2, UInt32
extern Variable TextureAtomicLoad_Texture2D_UInt32_texture;
extern Variable TextureAtomicLoad_Texture2D_UInt32_coordinate;
extern Variable TextureAtomicLoad_Texture2D_UInt32_value;
extern Function TextureAtomicLoad_Texture2D_UInt32;
inline constexpr auto TextureAtomicLoad_Texture2D_UInt32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture2D_UInt32_backend_index = 2564u;

/// textureAtomicLoad with Texture2D, Int32x2, Int32
extern Variable TextureAtomicLoad_Texture2D_Int32_texture;
extern Variable TextureAtomicLoad_Texture2D_Int32_coordinate;
extern Variable TextureAtomicLoad_Texture2D_Int32_value;
extern Function TextureAtomicLoad_Texture2D_Int32;
inline constexpr auto TextureAtomicLoad_Texture2D_Int32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture2D_Int32_backend_index = 2565u;

/// textureAtomicLoad with Texture2D, Int32x2, Float16
extern Variable TextureAtomicLoad_Texture2D_Float16_texture;
extern Variable TextureAtomicLoad_Texture2D_Float16_coordinate;
extern Variable TextureAtomicLoad_Texture2D_Float16_value;
extern Function TextureAtomicLoad_Texture2D_Float16;
inline constexpr auto TextureAtomicLoad_Texture2D_Float16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture2D_Float16_backend_index = 2566u;

/// textureAtomicLoad with Texture2D, Int32x2, UInt16
extern Variable TextureAtomicLoad_Texture2D_UInt16_texture;
extern Variable TextureAtomicLoad_Texture2D_UInt16_coordinate;
extern Variable TextureAtomicLoad_Texture2D_UInt16_value;
extern Function TextureAtomicLoad_Texture2D_UInt16;
inline constexpr auto TextureAtomicLoad_Texture2D_UInt16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture2D_UInt16_backend_index = 2567u;

/// textureAtomicLoad with Texture2D, Int32x2, Int16
extern Variable TextureAtomicLoad_Texture2D_Int16_texture;
extern Variable TextureAtomicLoad_Texture2D_Int16_coordinate;
extern Variable TextureAtomicLoad_Texture2D_Int16_value;
extern Function TextureAtomicLoad_Texture2D_Int16;
inline constexpr auto TextureAtomicLoad_Texture2D_Int16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture2D_Int16_backend_index = 2568u;

/// textureAtomicLoad with Texture3D, Int32x3, Float32
extern Variable TextureAtomicLoad_Texture3D_Float32_texture;
extern Variable TextureAtomicLoad_Texture3D_Float32_coordinate;
extern Variable TextureAtomicLoad_Texture3D_Float32_value;
extern Function TextureAtomicLoad_Texture3D_Float32;
inline constexpr auto TextureAtomicLoad_Texture3D_Float32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture3D_Float32_backend_index = 2569u;

/// textureAtomicLoad with Texture3D, Int32x3, UInt32
extern Variable TextureAtomicLoad_Texture3D_UInt32_texture;
extern Variable TextureAtomicLoad_Texture3D_UInt32_coordinate;
extern Variable TextureAtomicLoad_Texture3D_UInt32_value;
extern Function TextureAtomicLoad_Texture3D_UInt32;
inline constexpr auto TextureAtomicLoad_Texture3D_UInt32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture3D_UInt32_backend_index = 2570u;

/// textureAtomicLoad with Texture3D, Int32x3, Int32
extern Variable TextureAtomicLoad_Texture3D_Int32_texture;
extern Variable TextureAtomicLoad_Texture3D_Int32_coordinate;
extern Variable TextureAtomicLoad_Texture3D_Int32_value;
extern Function TextureAtomicLoad_Texture3D_Int32;
inline constexpr auto TextureAtomicLoad_Texture3D_Int32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture3D_Int32_backend_index = 2571u;

/// textureAtomicLoad with Texture3D, Int32x3, Float16
extern Variable TextureAtomicLoad_Texture3D_Float16_texture;
extern Variable TextureAtomicLoad_Texture3D_Float16_coordinate;
extern Variable TextureAtomicLoad_Texture3D_Float16_value;
extern Function TextureAtomicLoad_Texture3D_Float16;
inline constexpr auto TextureAtomicLoad_Texture3D_Float16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture3D_Float16_backend_index = 2572u;

/// textureAtomicLoad with Texture3D, Int32x3, UInt16
extern Variable TextureAtomicLoad_Texture3D_UInt16_texture;
extern Variable TextureAtomicLoad_Texture3D_UInt16_coordinate;
extern Variable TextureAtomicLoad_Texture3D_UInt16_value;
extern Function TextureAtomicLoad_Texture3D_UInt16;
inline constexpr auto TextureAtomicLoad_Texture3D_UInt16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture3D_UInt16_backend_index = 2573u;

/// textureAtomicLoad with Texture3D, Int32x3, Int16
extern Variable TextureAtomicLoad_Texture3D_Int16_texture;
extern Variable TextureAtomicLoad_Texture3D_Int16_coordinate;
extern Variable TextureAtomicLoad_Texture3D_Int16_value;
extern Function TextureAtomicLoad_Texture3D_Int16;
inline constexpr auto TextureAtomicLoad_Texture3D_Int16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture3D_Int16_backend_index = 2574u;

/// textureAtomicLoad with TextureCube, Int32x3, Float32
extern Variable TextureAtomicLoad_TextureCube_Float32_texture;
extern Variable TextureAtomicLoad_TextureCube_Float32_coordinate;
extern Variable TextureAtomicLoad_TextureCube_Float32_value;
extern Function TextureAtomicLoad_TextureCube_Float32;
inline constexpr auto TextureAtomicLoad_TextureCube_Float32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_TextureCube_Float32_backend_index = 2575u;

/// textureAtomicLoad with TextureCube, Int32x3, UInt32
extern Variable TextureAtomicLoad_TextureCube_UInt32_texture;
extern Variable TextureAtomicLoad_TextureCube_UInt32_coordinate;
extern Variable TextureAtomicLoad_TextureCube_UInt32_value;
extern Function TextureAtomicLoad_TextureCube_UInt32;
inline constexpr auto TextureAtomicLoad_TextureCube_UInt32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_TextureCube_UInt32_backend_index = 2576u;

/// textureAtomicLoad with TextureCube, Int32x3, Int32
extern Variable TextureAtomicLoad_TextureCube_Int32_texture;
extern Variable TextureAtomicLoad_TextureCube_Int32_coordinate;
extern Variable TextureAtomicLoad_TextureCube_Int32_value;
extern Function TextureAtomicLoad_TextureCube_Int32;
inline constexpr auto TextureAtomicLoad_TextureCube_Int32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_TextureCube_Int32_backend_index = 2577u;

/// textureAtomicLoad with TextureCube, Int32x3, Float16
extern Variable TextureAtomicLoad_TextureCube_Float16_texture;
extern Variable TextureAtomicLoad_TextureCube_Float16_coordinate;
extern Variable TextureAtomicLoad_TextureCube_Float16_value;
extern Function TextureAtomicLoad_TextureCube_Float16;
inline constexpr auto TextureAtomicLoad_TextureCube_Float16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_TextureCube_Float16_backend_index = 2578u;

/// textureAtomicLoad with TextureCube, Int32x3, UInt16
extern Variable TextureAtomicLoad_TextureCube_UInt16_texture;
extern Variable TextureAtomicLoad_TextureCube_UInt16_coordinate;
extern Variable TextureAtomicLoad_TextureCube_UInt16_value;
extern Function TextureAtomicLoad_TextureCube_UInt16;
inline constexpr auto TextureAtomicLoad_TextureCube_UInt16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_TextureCube_UInt16_backend_index = 2579u;

/// textureAtomicLoad with TextureCube, Int32x3, Int16
extern Variable TextureAtomicLoad_TextureCube_Int16_texture;
extern Variable TextureAtomicLoad_TextureCube_Int16_coordinate;
extern Variable TextureAtomicLoad_TextureCube_Int16_value;
extern Function TextureAtomicLoad_TextureCube_Int16;
inline constexpr auto TextureAtomicLoad_TextureCube_Int16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_TextureCube_Int16_backend_index = 2580u;

/// textureAtomicLoad with Texture1DArray, Int32x2, Float32
extern Variable TextureAtomicLoad_Texture1DArray_Float32_texture;
extern Variable TextureAtomicLoad_Texture1DArray_Float32_coordinate;
extern Variable TextureAtomicLoad_Texture1DArray_Float32_value;
extern Function TextureAtomicLoad_Texture1DArray_Float32;
inline constexpr auto TextureAtomicLoad_Texture1DArray_Float32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture1DArray_Float32_backend_index = 2581u;

/// textureAtomicLoad with Texture1DArray, Int32x2, UInt32
extern Variable TextureAtomicLoad_Texture1DArray_UInt32_texture;
extern Variable TextureAtomicLoad_Texture1DArray_UInt32_coordinate;
extern Variable TextureAtomicLoad_Texture1DArray_UInt32_value;
extern Function TextureAtomicLoad_Texture1DArray_UInt32;
inline constexpr auto TextureAtomicLoad_Texture1DArray_UInt32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture1DArray_UInt32_backend_index = 2582u;

/// textureAtomicLoad with Texture1DArray, Int32x2, Int32
extern Variable TextureAtomicLoad_Texture1DArray_Int32_texture;
extern Variable TextureAtomicLoad_Texture1DArray_Int32_coordinate;
extern Variable TextureAtomicLoad_Texture1DArray_Int32_value;
extern Function TextureAtomicLoad_Texture1DArray_Int32;
inline constexpr auto TextureAtomicLoad_Texture1DArray_Int32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture1DArray_Int32_backend_index = 2583u;

/// textureAtomicLoad with Texture1DArray, Int32x2, Float16
extern Variable TextureAtomicLoad_Texture1DArray_Float16_texture;
extern Variable TextureAtomicLoad_Texture1DArray_Float16_coordinate;
extern Variable TextureAtomicLoad_Texture1DArray_Float16_value;
extern Function TextureAtomicLoad_Texture1DArray_Float16;
inline constexpr auto TextureAtomicLoad_Texture1DArray_Float16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture1DArray_Float16_backend_index = 2584u;

/// textureAtomicLoad with Texture1DArray, Int32x2, UInt16
extern Variable TextureAtomicLoad_Texture1DArray_UInt16_texture;
extern Variable TextureAtomicLoad_Texture1DArray_UInt16_coordinate;
extern Variable TextureAtomicLoad_Texture1DArray_UInt16_value;
extern Function TextureAtomicLoad_Texture1DArray_UInt16;
inline constexpr auto TextureAtomicLoad_Texture1DArray_UInt16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture1DArray_UInt16_backend_index = 2585u;

/// textureAtomicLoad with Texture1DArray, Int32x2, Int16
extern Variable TextureAtomicLoad_Texture1DArray_Int16_texture;
extern Variable TextureAtomicLoad_Texture1DArray_Int16_coordinate;
extern Variable TextureAtomicLoad_Texture1DArray_Int16_value;
extern Function TextureAtomicLoad_Texture1DArray_Int16;
inline constexpr auto TextureAtomicLoad_Texture1DArray_Int16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture1DArray_Int16_backend_index = 2586u;

/// textureAtomicLoad with Texture2DArray, Int32x3, Float32
extern Variable TextureAtomicLoad_Texture2DArray_Float32_texture;
extern Variable TextureAtomicLoad_Texture2DArray_Float32_coordinate;
extern Variable TextureAtomicLoad_Texture2DArray_Float32_value;
extern Function TextureAtomicLoad_Texture2DArray_Float32;
inline constexpr auto TextureAtomicLoad_Texture2DArray_Float32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture2DArray_Float32_backend_index = 2587u;

/// textureAtomicLoad with Texture2DArray, Int32x3, UInt32
extern Variable TextureAtomicLoad_Texture2DArray_UInt32_texture;
extern Variable TextureAtomicLoad_Texture2DArray_UInt32_coordinate;
extern Variable TextureAtomicLoad_Texture2DArray_UInt32_value;
extern Function TextureAtomicLoad_Texture2DArray_UInt32;
inline constexpr auto TextureAtomicLoad_Texture2DArray_UInt32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture2DArray_UInt32_backend_index = 2588u;

/// textureAtomicLoad with Texture2DArray, Int32x3, Int32
extern Variable TextureAtomicLoad_Texture2DArray_Int32_texture;
extern Variable TextureAtomicLoad_Texture2DArray_Int32_coordinate;
extern Variable TextureAtomicLoad_Texture2DArray_Int32_value;
extern Function TextureAtomicLoad_Texture2DArray_Int32;
inline constexpr auto TextureAtomicLoad_Texture2DArray_Int32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture2DArray_Int32_backend_index = 2589u;

/// textureAtomicLoad with Texture2DArray, Int32x3, Float16
extern Variable TextureAtomicLoad_Texture2DArray_Float16_texture;
extern Variable TextureAtomicLoad_Texture2DArray_Float16_coordinate;
extern Variable TextureAtomicLoad_Texture2DArray_Float16_value;
extern Function TextureAtomicLoad_Texture2DArray_Float16;
inline constexpr auto TextureAtomicLoad_Texture2DArray_Float16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture2DArray_Float16_backend_index = 2590u;

/// textureAtomicLoad with Texture2DArray, Int32x3, UInt16
extern Variable TextureAtomicLoad_Texture2DArray_UInt16_texture;
extern Variable TextureAtomicLoad_Texture2DArray_UInt16_coordinate;
extern Variable TextureAtomicLoad_Texture2DArray_UInt16_value;
extern Function TextureAtomicLoad_Texture2DArray_UInt16;
inline constexpr auto TextureAtomicLoad_Texture2DArray_UInt16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture2DArray_UInt16_backend_index = 2591u;

/// textureAtomicLoad with Texture2DArray, Int32x3, Int16
extern Variable TextureAtomicLoad_Texture2DArray_Int16_texture;
extern Variable TextureAtomicLoad_Texture2DArray_Int16_coordinate;
extern Variable TextureAtomicLoad_Texture2DArray_Int16_value;
extern Function TextureAtomicLoad_Texture2DArray_Int16;
inline constexpr auto TextureAtomicLoad_Texture2DArray_Int16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_Texture2DArray_Int16_backend_index = 2592u;

/// textureAtomicLoad with TextureCubeArray, Int32x4, Float32
extern Variable TextureAtomicLoad_TextureCubeArray_Float32_texture;
extern Variable TextureAtomicLoad_TextureCubeArray_Float32_coordinate;
extern Variable TextureAtomicLoad_TextureCubeArray_Float32_value;
extern Function TextureAtomicLoad_TextureCubeArray_Float32;
inline constexpr auto TextureAtomicLoad_TextureCubeArray_Float32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_TextureCubeArray_Float32_backend_index = 2593u;

/// textureAtomicLoad with TextureCubeArray, Int32x4, UInt32
extern Variable TextureAtomicLoad_TextureCubeArray_UInt32_texture;
extern Variable TextureAtomicLoad_TextureCubeArray_UInt32_coordinate;
extern Variable TextureAtomicLoad_TextureCubeArray_UInt32_value;
extern Function TextureAtomicLoad_TextureCubeArray_UInt32;
inline constexpr auto TextureAtomicLoad_TextureCubeArray_UInt32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_TextureCubeArray_UInt32_backend_index = 2594u;

/// textureAtomicLoad with TextureCubeArray, Int32x4, Int32
extern Variable TextureAtomicLoad_TextureCubeArray_Int32_texture;
extern Variable TextureAtomicLoad_TextureCubeArray_Int32_coordinate;
extern Variable TextureAtomicLoad_TextureCubeArray_Int32_value;
extern Function TextureAtomicLoad_TextureCubeArray_Int32;
inline constexpr auto TextureAtomicLoad_TextureCubeArray_Int32_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_TextureCubeArray_Int32_backend_index = 2595u;

/// textureAtomicLoad with TextureCubeArray, Int32x4, Float16
extern Variable TextureAtomicLoad_TextureCubeArray_Float16_texture;
extern Variable TextureAtomicLoad_TextureCubeArray_Float16_coordinate;
extern Variable TextureAtomicLoad_TextureCubeArray_Float16_value;
extern Function TextureAtomicLoad_TextureCubeArray_Float16;
inline constexpr auto TextureAtomicLoad_TextureCubeArray_Float16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_TextureCubeArray_Float16_backend_index = 2596u;

/// textureAtomicLoad with TextureCubeArray, Int32x4, UInt16
extern Variable TextureAtomicLoad_TextureCubeArray_UInt16_texture;
extern Variable TextureAtomicLoad_TextureCubeArray_UInt16_coordinate;
extern Variable TextureAtomicLoad_TextureCubeArray_UInt16_value;
extern Function TextureAtomicLoad_TextureCubeArray_UInt16;
inline constexpr auto TextureAtomicLoad_TextureCubeArray_UInt16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_TextureCubeArray_UInt16_backend_index = 2597u;

/// textureAtomicLoad with TextureCubeArray, Int32x4, Int16
extern Variable TextureAtomicLoad_TextureCubeArray_Int16_texture;
extern Variable TextureAtomicLoad_TextureCubeArray_Int16_coordinate;
extern Variable TextureAtomicLoad_TextureCubeArray_Int16_value;
extern Function TextureAtomicLoad_TextureCubeArray_Int16;
inline constexpr auto TextureAtomicLoad_TextureCubeArray_Int16_name = "textureAtomicLoad"_c;
inline constexpr auto TextureAtomicLoad_TextureCubeArray_Int16_backend_index = 2598u;

/// textureAtomicStore with Texture1D, Int32, Float32
extern Variable TextureAtomicStore_Texture1D_Float32_texture;
extern Variable TextureAtomicStore_Texture1D_Float32_coordinate;
extern Variable TextureAtomicStore_Texture1D_Float32_value;
extern Function TextureAtomicStore_Texture1D_Float32;
inline constexpr auto TextureAtomicStore_Texture1D_Float32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture1D_Float32_backend_index = 2599u;

/// textureAtomicStore with Texture1D, Int32, UInt32
extern Variable TextureAtomicStore_Texture1D_UInt32_texture;
extern Variable TextureAtomicStore_Texture1D_UInt32_coordinate;
extern Variable TextureAtomicStore_Texture1D_UInt32_value;
extern Function TextureAtomicStore_Texture1D_UInt32;
inline constexpr auto TextureAtomicStore_Texture1D_UInt32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture1D_UInt32_backend_index = 2600u;

/// textureAtomicStore with Texture1D, Int32, Int32
extern Variable TextureAtomicStore_Texture1D_Int32_texture;
extern Variable TextureAtomicStore_Texture1D_Int32_coordinate;
extern Variable TextureAtomicStore_Texture1D_Int32_value;
extern Function TextureAtomicStore_Texture1D_Int32;
inline constexpr auto TextureAtomicStore_Texture1D_Int32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture1D_Int32_backend_index = 2601u;

/// textureAtomicStore with Texture1D, Int32, Float16
extern Variable TextureAtomicStore_Texture1D_Float16_texture;
extern Variable TextureAtomicStore_Texture1D_Float16_coordinate;
extern Variable TextureAtomicStore_Texture1D_Float16_value;
extern Function TextureAtomicStore_Texture1D_Float16;
inline constexpr auto TextureAtomicStore_Texture1D_Float16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture1D_Float16_backend_index = 2602u;

/// textureAtomicStore with Texture1D, Int32, UInt16
extern Variable TextureAtomicStore_Texture1D_UInt16_texture;
extern Variable TextureAtomicStore_Texture1D_UInt16_coordinate;
extern Variable TextureAtomicStore_Texture1D_UInt16_value;
extern Function TextureAtomicStore_Texture1D_UInt16;
inline constexpr auto TextureAtomicStore_Texture1D_UInt16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture1D_UInt16_backend_index = 2603u;

/// textureAtomicStore with Texture1D, Int32, Int16
extern Variable TextureAtomicStore_Texture1D_Int16_texture;
extern Variable TextureAtomicStore_Texture1D_Int16_coordinate;
extern Variable TextureAtomicStore_Texture1D_Int16_value;
extern Function TextureAtomicStore_Texture1D_Int16;
inline constexpr auto TextureAtomicStore_Texture1D_Int16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture1D_Int16_backend_index = 2604u;

/// textureAtomicStore with Texture2D, Int32x2, Float32
extern Variable TextureAtomicStore_Texture2D_Float32_texture;
extern Variable TextureAtomicStore_Texture2D_Float32_coordinate;
extern Variable TextureAtomicStore_Texture2D_Float32_value;
extern Function TextureAtomicStore_Texture2D_Float32;
inline constexpr auto TextureAtomicStore_Texture2D_Float32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture2D_Float32_backend_index = 2605u;

/// textureAtomicStore with Texture2D, Int32x2, UInt32
extern Variable TextureAtomicStore_Texture2D_UInt32_texture;
extern Variable TextureAtomicStore_Texture2D_UInt32_coordinate;
extern Variable TextureAtomicStore_Texture2D_UInt32_value;
extern Function TextureAtomicStore_Texture2D_UInt32;
inline constexpr auto TextureAtomicStore_Texture2D_UInt32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture2D_UInt32_backend_index = 2606u;

/// textureAtomicStore with Texture2D, Int32x2, Int32
extern Variable TextureAtomicStore_Texture2D_Int32_texture;
extern Variable TextureAtomicStore_Texture2D_Int32_coordinate;
extern Variable TextureAtomicStore_Texture2D_Int32_value;
extern Function TextureAtomicStore_Texture2D_Int32;
inline constexpr auto TextureAtomicStore_Texture2D_Int32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture2D_Int32_backend_index = 2607u;

/// textureAtomicStore with Texture2D, Int32x2, Float16
extern Variable TextureAtomicStore_Texture2D_Float16_texture;
extern Variable TextureAtomicStore_Texture2D_Float16_coordinate;
extern Variable TextureAtomicStore_Texture2D_Float16_value;
extern Function TextureAtomicStore_Texture2D_Float16;
inline constexpr auto TextureAtomicStore_Texture2D_Float16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture2D_Float16_backend_index = 2608u;

/// textureAtomicStore with Texture2D, Int32x2, UInt16
extern Variable TextureAtomicStore_Texture2D_UInt16_texture;
extern Variable TextureAtomicStore_Texture2D_UInt16_coordinate;
extern Variable TextureAtomicStore_Texture2D_UInt16_value;
extern Function TextureAtomicStore_Texture2D_UInt16;
inline constexpr auto TextureAtomicStore_Texture2D_UInt16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture2D_UInt16_backend_index = 2609u;

/// textureAtomicStore with Texture2D, Int32x2, Int16
extern Variable TextureAtomicStore_Texture2D_Int16_texture;
extern Variable TextureAtomicStore_Texture2D_Int16_coordinate;
extern Variable TextureAtomicStore_Texture2D_Int16_value;
extern Function TextureAtomicStore_Texture2D_Int16;
inline constexpr auto TextureAtomicStore_Texture2D_Int16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture2D_Int16_backend_index = 2610u;

/// textureAtomicStore with Texture3D, Int32x3, Float32
extern Variable TextureAtomicStore_Texture3D_Float32_texture;
extern Variable TextureAtomicStore_Texture3D_Float32_coordinate;
extern Variable TextureAtomicStore_Texture3D_Float32_value;
extern Function TextureAtomicStore_Texture3D_Float32;
inline constexpr auto TextureAtomicStore_Texture3D_Float32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture3D_Float32_backend_index = 2611u;

/// textureAtomicStore with Texture3D, Int32x3, UInt32
extern Variable TextureAtomicStore_Texture3D_UInt32_texture;
extern Variable TextureAtomicStore_Texture3D_UInt32_coordinate;
extern Variable TextureAtomicStore_Texture3D_UInt32_value;
extern Function TextureAtomicStore_Texture3D_UInt32;
inline constexpr auto TextureAtomicStore_Texture3D_UInt32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture3D_UInt32_backend_index = 2612u;

/// textureAtomicStore with Texture3D, Int32x3, Int32
extern Variable TextureAtomicStore_Texture3D_Int32_texture;
extern Variable TextureAtomicStore_Texture3D_Int32_coordinate;
extern Variable TextureAtomicStore_Texture3D_Int32_value;
extern Function TextureAtomicStore_Texture3D_Int32;
inline constexpr auto TextureAtomicStore_Texture3D_Int32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture3D_Int32_backend_index = 2613u;

/// textureAtomicStore with Texture3D, Int32x3, Float16
extern Variable TextureAtomicStore_Texture3D_Float16_texture;
extern Variable TextureAtomicStore_Texture3D_Float16_coordinate;
extern Variable TextureAtomicStore_Texture3D_Float16_value;
extern Function TextureAtomicStore_Texture3D_Float16;
inline constexpr auto TextureAtomicStore_Texture3D_Float16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture3D_Float16_backend_index = 2614u;

/// textureAtomicStore with Texture3D, Int32x3, UInt16
extern Variable TextureAtomicStore_Texture3D_UInt16_texture;
extern Variable TextureAtomicStore_Texture3D_UInt16_coordinate;
extern Variable TextureAtomicStore_Texture3D_UInt16_value;
extern Function TextureAtomicStore_Texture3D_UInt16;
inline constexpr auto TextureAtomicStore_Texture3D_UInt16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture3D_UInt16_backend_index = 2615u;

/// textureAtomicStore with Texture3D, Int32x3, Int16
extern Variable TextureAtomicStore_Texture3D_Int16_texture;
extern Variable TextureAtomicStore_Texture3D_Int16_coordinate;
extern Variable TextureAtomicStore_Texture3D_Int16_value;
extern Function TextureAtomicStore_Texture3D_Int16;
inline constexpr auto TextureAtomicStore_Texture3D_Int16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture3D_Int16_backend_index = 2616u;

/// textureAtomicStore with TextureCube, Int32x3, Float32
extern Variable TextureAtomicStore_TextureCube_Float32_texture;
extern Variable TextureAtomicStore_TextureCube_Float32_coordinate;
extern Variable TextureAtomicStore_TextureCube_Float32_value;
extern Function TextureAtomicStore_TextureCube_Float32;
inline constexpr auto TextureAtomicStore_TextureCube_Float32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_TextureCube_Float32_backend_index = 2617u;

/// textureAtomicStore with TextureCube, Int32x3, UInt32
extern Variable TextureAtomicStore_TextureCube_UInt32_texture;
extern Variable TextureAtomicStore_TextureCube_UInt32_coordinate;
extern Variable TextureAtomicStore_TextureCube_UInt32_value;
extern Function TextureAtomicStore_TextureCube_UInt32;
inline constexpr auto TextureAtomicStore_TextureCube_UInt32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_TextureCube_UInt32_backend_index = 2618u;

/// textureAtomicStore with TextureCube, Int32x3, Int32
extern Variable TextureAtomicStore_TextureCube_Int32_texture;
extern Variable TextureAtomicStore_TextureCube_Int32_coordinate;
extern Variable TextureAtomicStore_TextureCube_Int32_value;
extern Function TextureAtomicStore_TextureCube_Int32;
inline constexpr auto TextureAtomicStore_TextureCube_Int32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_TextureCube_Int32_backend_index = 2619u;

/// textureAtomicStore with TextureCube, Int32x3, Float16
extern Variable TextureAtomicStore_TextureCube_Float16_texture;
extern Variable TextureAtomicStore_TextureCube_Float16_coordinate;
extern Variable TextureAtomicStore_TextureCube_Float16_value;
extern Function TextureAtomicStore_TextureCube_Float16;
inline constexpr auto TextureAtomicStore_TextureCube_Float16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_TextureCube_Float16_backend_index = 2620u;

/// textureAtomicStore with TextureCube, Int32x3, UInt16
extern Variable TextureAtomicStore_TextureCube_UInt16_texture;
extern Variable TextureAtomicStore_TextureCube_UInt16_coordinate;
extern Variable TextureAtomicStore_TextureCube_UInt16_value;
extern Function TextureAtomicStore_TextureCube_UInt16;
inline constexpr auto TextureAtomicStore_TextureCube_UInt16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_TextureCube_UInt16_backend_index = 2621u;

/// textureAtomicStore with TextureCube, Int32x3, Int16
extern Variable TextureAtomicStore_TextureCube_Int16_texture;
extern Variable TextureAtomicStore_TextureCube_Int16_coordinate;
extern Variable TextureAtomicStore_TextureCube_Int16_value;
extern Function TextureAtomicStore_TextureCube_Int16;
inline constexpr auto TextureAtomicStore_TextureCube_Int16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_TextureCube_Int16_backend_index = 2622u;

/// textureAtomicStore with Texture1DArray, Int32x2, Float32
extern Variable TextureAtomicStore_Texture1DArray_Float32_texture;
extern Variable TextureAtomicStore_Texture1DArray_Float32_coordinate;
extern Variable TextureAtomicStore_Texture1DArray_Float32_value;
extern Function TextureAtomicStore_Texture1DArray_Float32;
inline constexpr auto TextureAtomicStore_Texture1DArray_Float32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture1DArray_Float32_backend_index = 2623u;

/// textureAtomicStore with Texture1DArray, Int32x2, UInt32
extern Variable TextureAtomicStore_Texture1DArray_UInt32_texture;
extern Variable TextureAtomicStore_Texture1DArray_UInt32_coordinate;
extern Variable TextureAtomicStore_Texture1DArray_UInt32_value;
extern Function TextureAtomicStore_Texture1DArray_UInt32;
inline constexpr auto TextureAtomicStore_Texture1DArray_UInt32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture1DArray_UInt32_backend_index = 2624u;

/// textureAtomicStore with Texture1DArray, Int32x2, Int32
extern Variable TextureAtomicStore_Texture1DArray_Int32_texture;
extern Variable TextureAtomicStore_Texture1DArray_Int32_coordinate;
extern Variable TextureAtomicStore_Texture1DArray_Int32_value;
extern Function TextureAtomicStore_Texture1DArray_Int32;
inline constexpr auto TextureAtomicStore_Texture1DArray_Int32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture1DArray_Int32_backend_index = 2625u;

/// textureAtomicStore with Texture1DArray, Int32x2, Float16
extern Variable TextureAtomicStore_Texture1DArray_Float16_texture;
extern Variable TextureAtomicStore_Texture1DArray_Float16_coordinate;
extern Variable TextureAtomicStore_Texture1DArray_Float16_value;
extern Function TextureAtomicStore_Texture1DArray_Float16;
inline constexpr auto TextureAtomicStore_Texture1DArray_Float16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture1DArray_Float16_backend_index = 2626u;

/// textureAtomicStore with Texture1DArray, Int32x2, UInt16
extern Variable TextureAtomicStore_Texture1DArray_UInt16_texture;
extern Variable TextureAtomicStore_Texture1DArray_UInt16_coordinate;
extern Variable TextureAtomicStore_Texture1DArray_UInt16_value;
extern Function TextureAtomicStore_Texture1DArray_UInt16;
inline constexpr auto TextureAtomicStore_Texture1DArray_UInt16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture1DArray_UInt16_backend_index = 2627u;

/// textureAtomicStore with Texture1DArray, Int32x2, Int16
extern Variable TextureAtomicStore_Texture1DArray_Int16_texture;
extern Variable TextureAtomicStore_Texture1DArray_Int16_coordinate;
extern Variable TextureAtomicStore_Texture1DArray_Int16_value;
extern Function TextureAtomicStore_Texture1DArray_Int16;
inline constexpr auto TextureAtomicStore_Texture1DArray_Int16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture1DArray_Int16_backend_index = 2628u;

/// textureAtomicStore with Texture2DArray, Int32x3, Float32
extern Variable TextureAtomicStore_Texture2DArray_Float32_texture;
extern Variable TextureAtomicStore_Texture2DArray_Float32_coordinate;
extern Variable TextureAtomicStore_Texture2DArray_Float32_value;
extern Function TextureAtomicStore_Texture2DArray_Float32;
inline constexpr auto TextureAtomicStore_Texture2DArray_Float32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture2DArray_Float32_backend_index = 2629u;

/// textureAtomicStore with Texture2DArray, Int32x3, UInt32
extern Variable TextureAtomicStore_Texture2DArray_UInt32_texture;
extern Variable TextureAtomicStore_Texture2DArray_UInt32_coordinate;
extern Variable TextureAtomicStore_Texture2DArray_UInt32_value;
extern Function TextureAtomicStore_Texture2DArray_UInt32;
inline constexpr auto TextureAtomicStore_Texture2DArray_UInt32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture2DArray_UInt32_backend_index = 2630u;

/// textureAtomicStore with Texture2DArray, Int32x3, Int32
extern Variable TextureAtomicStore_Texture2DArray_Int32_texture;
extern Variable TextureAtomicStore_Texture2DArray_Int32_coordinate;
extern Variable TextureAtomicStore_Texture2DArray_Int32_value;
extern Function TextureAtomicStore_Texture2DArray_Int32;
inline constexpr auto TextureAtomicStore_Texture2DArray_Int32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture2DArray_Int32_backend_index = 2631u;

/// textureAtomicStore with Texture2DArray, Int32x3, Float16
extern Variable TextureAtomicStore_Texture2DArray_Float16_texture;
extern Variable TextureAtomicStore_Texture2DArray_Float16_coordinate;
extern Variable TextureAtomicStore_Texture2DArray_Float16_value;
extern Function TextureAtomicStore_Texture2DArray_Float16;
inline constexpr auto TextureAtomicStore_Texture2DArray_Float16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture2DArray_Float16_backend_index = 2632u;

/// textureAtomicStore with Texture2DArray, Int32x3, UInt16
extern Variable TextureAtomicStore_Texture2DArray_UInt16_texture;
extern Variable TextureAtomicStore_Texture2DArray_UInt16_coordinate;
extern Variable TextureAtomicStore_Texture2DArray_UInt16_value;
extern Function TextureAtomicStore_Texture2DArray_UInt16;
inline constexpr auto TextureAtomicStore_Texture2DArray_UInt16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture2DArray_UInt16_backend_index = 2633u;

/// textureAtomicStore with Texture2DArray, Int32x3, Int16
extern Variable TextureAtomicStore_Texture2DArray_Int16_texture;
extern Variable TextureAtomicStore_Texture2DArray_Int16_coordinate;
extern Variable TextureAtomicStore_Texture2DArray_Int16_value;
extern Function TextureAtomicStore_Texture2DArray_Int16;
inline constexpr auto TextureAtomicStore_Texture2DArray_Int16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_Texture2DArray_Int16_backend_index = 2634u;

/// textureAtomicStore with TextureCubeArray, Int32x4, Float32
extern Variable TextureAtomicStore_TextureCubeArray_Float32_texture;
extern Variable TextureAtomicStore_TextureCubeArray_Float32_coordinate;
extern Variable TextureAtomicStore_TextureCubeArray_Float32_value;
extern Function TextureAtomicStore_TextureCubeArray_Float32;
inline constexpr auto TextureAtomicStore_TextureCubeArray_Float32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_TextureCubeArray_Float32_backend_index = 2635u;

/// textureAtomicStore with TextureCubeArray, Int32x4, UInt32
extern Variable TextureAtomicStore_TextureCubeArray_UInt32_texture;
extern Variable TextureAtomicStore_TextureCubeArray_UInt32_coordinate;
extern Variable TextureAtomicStore_TextureCubeArray_UInt32_value;
extern Function TextureAtomicStore_TextureCubeArray_UInt32;
inline constexpr auto TextureAtomicStore_TextureCubeArray_UInt32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_TextureCubeArray_UInt32_backend_index = 2636u;

/// textureAtomicStore with TextureCubeArray, Int32x4, Int32
extern Variable TextureAtomicStore_TextureCubeArray_Int32_texture;
extern Variable TextureAtomicStore_TextureCubeArray_Int32_coordinate;
extern Variable TextureAtomicStore_TextureCubeArray_Int32_value;
extern Function TextureAtomicStore_TextureCubeArray_Int32;
inline constexpr auto TextureAtomicStore_TextureCubeArray_Int32_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_TextureCubeArray_Int32_backend_index = 2637u;

/// textureAtomicStore with TextureCubeArray, Int32x4, Float16
extern Variable TextureAtomicStore_TextureCubeArray_Float16_texture;
extern Variable TextureAtomicStore_TextureCubeArray_Float16_coordinate;
extern Variable TextureAtomicStore_TextureCubeArray_Float16_value;
extern Function TextureAtomicStore_TextureCubeArray_Float16;
inline constexpr auto TextureAtomicStore_TextureCubeArray_Float16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_TextureCubeArray_Float16_backend_index = 2638u;

/// textureAtomicStore with TextureCubeArray, Int32x4, UInt16
extern Variable TextureAtomicStore_TextureCubeArray_UInt16_texture;
extern Variable TextureAtomicStore_TextureCubeArray_UInt16_coordinate;
extern Variable TextureAtomicStore_TextureCubeArray_UInt16_value;
extern Function TextureAtomicStore_TextureCubeArray_UInt16;
inline constexpr auto TextureAtomicStore_TextureCubeArray_UInt16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_TextureCubeArray_UInt16_backend_index = 2639u;

/// textureAtomicStore with TextureCubeArray, Int32x4, Int16
extern Variable TextureAtomicStore_TextureCubeArray_Int16_texture;
extern Variable TextureAtomicStore_TextureCubeArray_Int16_coordinate;
extern Variable TextureAtomicStore_TextureCubeArray_Int16_value;
extern Function TextureAtomicStore_TextureCubeArray_Int16;
inline constexpr auto TextureAtomicStore_TextureCubeArray_Int16_name = "textureAtomicStore"_c;
inline constexpr auto TextureAtomicStore_TextureCubeArray_Int16_backend_index = 2640u;

/// textureAtomicExchange with Texture1D, Int32, Float32
extern Variable TextureAtomicExchange_Texture1D_Float32_texture;
extern Variable TextureAtomicExchange_Texture1D_Float32_coordinate;
extern Variable TextureAtomicExchange_Texture1D_Float32_value;
extern Function TextureAtomicExchange_Texture1D_Float32;
inline constexpr auto TextureAtomicExchange_Texture1D_Float32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture1D_Float32_backend_index = 2641u;

/// textureAtomicExchange with Texture1D, Int32, UInt32
extern Variable TextureAtomicExchange_Texture1D_UInt32_texture;
extern Variable TextureAtomicExchange_Texture1D_UInt32_coordinate;
extern Variable TextureAtomicExchange_Texture1D_UInt32_value;
extern Function TextureAtomicExchange_Texture1D_UInt32;
inline constexpr auto TextureAtomicExchange_Texture1D_UInt32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture1D_UInt32_backend_index = 2642u;

/// textureAtomicExchange with Texture1D, Int32, Int32
extern Variable TextureAtomicExchange_Texture1D_Int32_texture;
extern Variable TextureAtomicExchange_Texture1D_Int32_coordinate;
extern Variable TextureAtomicExchange_Texture1D_Int32_value;
extern Function TextureAtomicExchange_Texture1D_Int32;
inline constexpr auto TextureAtomicExchange_Texture1D_Int32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture1D_Int32_backend_index = 2643u;

/// textureAtomicExchange with Texture1D, Int32, Float16
extern Variable TextureAtomicExchange_Texture1D_Float16_texture;
extern Variable TextureAtomicExchange_Texture1D_Float16_coordinate;
extern Variable TextureAtomicExchange_Texture1D_Float16_value;
extern Function TextureAtomicExchange_Texture1D_Float16;
inline constexpr auto TextureAtomicExchange_Texture1D_Float16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture1D_Float16_backend_index = 2644u;

/// textureAtomicExchange with Texture1D, Int32, UInt16
extern Variable TextureAtomicExchange_Texture1D_UInt16_texture;
extern Variable TextureAtomicExchange_Texture1D_UInt16_coordinate;
extern Variable TextureAtomicExchange_Texture1D_UInt16_value;
extern Function TextureAtomicExchange_Texture1D_UInt16;
inline constexpr auto TextureAtomicExchange_Texture1D_UInt16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture1D_UInt16_backend_index = 2645u;

/// textureAtomicExchange with Texture1D, Int32, Int16
extern Variable TextureAtomicExchange_Texture1D_Int16_texture;
extern Variable TextureAtomicExchange_Texture1D_Int16_coordinate;
extern Variable TextureAtomicExchange_Texture1D_Int16_value;
extern Function TextureAtomicExchange_Texture1D_Int16;
inline constexpr auto TextureAtomicExchange_Texture1D_Int16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture1D_Int16_backend_index = 2646u;

/// textureAtomicExchange with Texture2D, Int32x2, Float32
extern Variable TextureAtomicExchange_Texture2D_Float32_texture;
extern Variable TextureAtomicExchange_Texture2D_Float32_coordinate;
extern Variable TextureAtomicExchange_Texture2D_Float32_value;
extern Function TextureAtomicExchange_Texture2D_Float32;
inline constexpr auto TextureAtomicExchange_Texture2D_Float32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture2D_Float32_backend_index = 2647u;

/// textureAtomicExchange with Texture2D, Int32x2, UInt32
extern Variable TextureAtomicExchange_Texture2D_UInt32_texture;
extern Variable TextureAtomicExchange_Texture2D_UInt32_coordinate;
extern Variable TextureAtomicExchange_Texture2D_UInt32_value;
extern Function TextureAtomicExchange_Texture2D_UInt32;
inline constexpr auto TextureAtomicExchange_Texture2D_UInt32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture2D_UInt32_backend_index = 2648u;

/// textureAtomicExchange with Texture2D, Int32x2, Int32
extern Variable TextureAtomicExchange_Texture2D_Int32_texture;
extern Variable TextureAtomicExchange_Texture2D_Int32_coordinate;
extern Variable TextureAtomicExchange_Texture2D_Int32_value;
extern Function TextureAtomicExchange_Texture2D_Int32;
inline constexpr auto TextureAtomicExchange_Texture2D_Int32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture2D_Int32_backend_index = 2649u;

/// textureAtomicExchange with Texture2D, Int32x2, Float16
extern Variable TextureAtomicExchange_Texture2D_Float16_texture;
extern Variable TextureAtomicExchange_Texture2D_Float16_coordinate;
extern Variable TextureAtomicExchange_Texture2D_Float16_value;
extern Function TextureAtomicExchange_Texture2D_Float16;
inline constexpr auto TextureAtomicExchange_Texture2D_Float16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture2D_Float16_backend_index = 2650u;

/// textureAtomicExchange with Texture2D, Int32x2, UInt16
extern Variable TextureAtomicExchange_Texture2D_UInt16_texture;
extern Variable TextureAtomicExchange_Texture2D_UInt16_coordinate;
extern Variable TextureAtomicExchange_Texture2D_UInt16_value;
extern Function TextureAtomicExchange_Texture2D_UInt16;
inline constexpr auto TextureAtomicExchange_Texture2D_UInt16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture2D_UInt16_backend_index = 2651u;

/// textureAtomicExchange with Texture2D, Int32x2, Int16
extern Variable TextureAtomicExchange_Texture2D_Int16_texture;
extern Variable TextureAtomicExchange_Texture2D_Int16_coordinate;
extern Variable TextureAtomicExchange_Texture2D_Int16_value;
extern Function TextureAtomicExchange_Texture2D_Int16;
inline constexpr auto TextureAtomicExchange_Texture2D_Int16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture2D_Int16_backend_index = 2652u;

/// textureAtomicExchange with Texture3D, Int32x3, Float32
extern Variable TextureAtomicExchange_Texture3D_Float32_texture;
extern Variable TextureAtomicExchange_Texture3D_Float32_coordinate;
extern Variable TextureAtomicExchange_Texture3D_Float32_value;
extern Function TextureAtomicExchange_Texture3D_Float32;
inline constexpr auto TextureAtomicExchange_Texture3D_Float32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture3D_Float32_backend_index = 2653u;

/// textureAtomicExchange with Texture3D, Int32x3, UInt32
extern Variable TextureAtomicExchange_Texture3D_UInt32_texture;
extern Variable TextureAtomicExchange_Texture3D_UInt32_coordinate;
extern Variable TextureAtomicExchange_Texture3D_UInt32_value;
extern Function TextureAtomicExchange_Texture3D_UInt32;
inline constexpr auto TextureAtomicExchange_Texture3D_UInt32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture3D_UInt32_backend_index = 2654u;

/// textureAtomicExchange with Texture3D, Int32x3, Int32
extern Variable TextureAtomicExchange_Texture3D_Int32_texture;
extern Variable TextureAtomicExchange_Texture3D_Int32_coordinate;
extern Variable TextureAtomicExchange_Texture3D_Int32_value;
extern Function TextureAtomicExchange_Texture3D_Int32;
inline constexpr auto TextureAtomicExchange_Texture3D_Int32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture3D_Int32_backend_index = 2655u;

/// textureAtomicExchange with Texture3D, Int32x3, Float16
extern Variable TextureAtomicExchange_Texture3D_Float16_texture;
extern Variable TextureAtomicExchange_Texture3D_Float16_coordinate;
extern Variable TextureAtomicExchange_Texture3D_Float16_value;
extern Function TextureAtomicExchange_Texture3D_Float16;
inline constexpr auto TextureAtomicExchange_Texture3D_Float16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture3D_Float16_backend_index = 2656u;

/// textureAtomicExchange with Texture3D, Int32x3, UInt16
extern Variable TextureAtomicExchange_Texture3D_UInt16_texture;
extern Variable TextureAtomicExchange_Texture3D_UInt16_coordinate;
extern Variable TextureAtomicExchange_Texture3D_UInt16_value;
extern Function TextureAtomicExchange_Texture3D_UInt16;
inline constexpr auto TextureAtomicExchange_Texture3D_UInt16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture3D_UInt16_backend_index = 2657u;

/// textureAtomicExchange with Texture3D, Int32x3, Int16
extern Variable TextureAtomicExchange_Texture3D_Int16_texture;
extern Variable TextureAtomicExchange_Texture3D_Int16_coordinate;
extern Variable TextureAtomicExchange_Texture3D_Int16_value;
extern Function TextureAtomicExchange_Texture3D_Int16;
inline constexpr auto TextureAtomicExchange_Texture3D_Int16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture3D_Int16_backend_index = 2658u;

/// textureAtomicExchange with TextureCube, Int32x3, Float32
extern Variable TextureAtomicExchange_TextureCube_Float32_texture;
extern Variable TextureAtomicExchange_TextureCube_Float32_coordinate;
extern Variable TextureAtomicExchange_TextureCube_Float32_value;
extern Function TextureAtomicExchange_TextureCube_Float32;
inline constexpr auto TextureAtomicExchange_TextureCube_Float32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_TextureCube_Float32_backend_index = 2659u;

/// textureAtomicExchange with TextureCube, Int32x3, UInt32
extern Variable TextureAtomicExchange_TextureCube_UInt32_texture;
extern Variable TextureAtomicExchange_TextureCube_UInt32_coordinate;
extern Variable TextureAtomicExchange_TextureCube_UInt32_value;
extern Function TextureAtomicExchange_TextureCube_UInt32;
inline constexpr auto TextureAtomicExchange_TextureCube_UInt32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_TextureCube_UInt32_backend_index = 2660u;

/// textureAtomicExchange with TextureCube, Int32x3, Int32
extern Variable TextureAtomicExchange_TextureCube_Int32_texture;
extern Variable TextureAtomicExchange_TextureCube_Int32_coordinate;
extern Variable TextureAtomicExchange_TextureCube_Int32_value;
extern Function TextureAtomicExchange_TextureCube_Int32;
inline constexpr auto TextureAtomicExchange_TextureCube_Int32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_TextureCube_Int32_backend_index = 2661u;

/// textureAtomicExchange with TextureCube, Int32x3, Float16
extern Variable TextureAtomicExchange_TextureCube_Float16_texture;
extern Variable TextureAtomicExchange_TextureCube_Float16_coordinate;
extern Variable TextureAtomicExchange_TextureCube_Float16_value;
extern Function TextureAtomicExchange_TextureCube_Float16;
inline constexpr auto TextureAtomicExchange_TextureCube_Float16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_TextureCube_Float16_backend_index = 2662u;

/// textureAtomicExchange with TextureCube, Int32x3, UInt16
extern Variable TextureAtomicExchange_TextureCube_UInt16_texture;
extern Variable TextureAtomicExchange_TextureCube_UInt16_coordinate;
extern Variable TextureAtomicExchange_TextureCube_UInt16_value;
extern Function TextureAtomicExchange_TextureCube_UInt16;
inline constexpr auto TextureAtomicExchange_TextureCube_UInt16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_TextureCube_UInt16_backend_index = 2663u;

/// textureAtomicExchange with TextureCube, Int32x3, Int16
extern Variable TextureAtomicExchange_TextureCube_Int16_texture;
extern Variable TextureAtomicExchange_TextureCube_Int16_coordinate;
extern Variable TextureAtomicExchange_TextureCube_Int16_value;
extern Function TextureAtomicExchange_TextureCube_Int16;
inline constexpr auto TextureAtomicExchange_TextureCube_Int16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_TextureCube_Int16_backend_index = 2664u;

/// textureAtomicExchange with Texture1DArray, Int32x2, Float32
extern Variable TextureAtomicExchange_Texture1DArray_Float32_texture;
extern Variable TextureAtomicExchange_Texture1DArray_Float32_coordinate;
extern Variable TextureAtomicExchange_Texture1DArray_Float32_value;
extern Function TextureAtomicExchange_Texture1DArray_Float32;
inline constexpr auto TextureAtomicExchange_Texture1DArray_Float32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture1DArray_Float32_backend_index = 2665u;

/// textureAtomicExchange with Texture1DArray, Int32x2, UInt32
extern Variable TextureAtomicExchange_Texture1DArray_UInt32_texture;
extern Variable TextureAtomicExchange_Texture1DArray_UInt32_coordinate;
extern Variable TextureAtomicExchange_Texture1DArray_UInt32_value;
extern Function TextureAtomicExchange_Texture1DArray_UInt32;
inline constexpr auto TextureAtomicExchange_Texture1DArray_UInt32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture1DArray_UInt32_backend_index = 2666u;

/// textureAtomicExchange with Texture1DArray, Int32x2, Int32
extern Variable TextureAtomicExchange_Texture1DArray_Int32_texture;
extern Variable TextureAtomicExchange_Texture1DArray_Int32_coordinate;
extern Variable TextureAtomicExchange_Texture1DArray_Int32_value;
extern Function TextureAtomicExchange_Texture1DArray_Int32;
inline constexpr auto TextureAtomicExchange_Texture1DArray_Int32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture1DArray_Int32_backend_index = 2667u;

/// textureAtomicExchange with Texture1DArray, Int32x2, Float16
extern Variable TextureAtomicExchange_Texture1DArray_Float16_texture;
extern Variable TextureAtomicExchange_Texture1DArray_Float16_coordinate;
extern Variable TextureAtomicExchange_Texture1DArray_Float16_value;
extern Function TextureAtomicExchange_Texture1DArray_Float16;
inline constexpr auto TextureAtomicExchange_Texture1DArray_Float16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture1DArray_Float16_backend_index = 2668u;

/// textureAtomicExchange with Texture1DArray, Int32x2, UInt16
extern Variable TextureAtomicExchange_Texture1DArray_UInt16_texture;
extern Variable TextureAtomicExchange_Texture1DArray_UInt16_coordinate;
extern Variable TextureAtomicExchange_Texture1DArray_UInt16_value;
extern Function TextureAtomicExchange_Texture1DArray_UInt16;
inline constexpr auto TextureAtomicExchange_Texture1DArray_UInt16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture1DArray_UInt16_backend_index = 2669u;

/// textureAtomicExchange with Texture1DArray, Int32x2, Int16
extern Variable TextureAtomicExchange_Texture1DArray_Int16_texture;
extern Variable TextureAtomicExchange_Texture1DArray_Int16_coordinate;
extern Variable TextureAtomicExchange_Texture1DArray_Int16_value;
extern Function TextureAtomicExchange_Texture1DArray_Int16;
inline constexpr auto TextureAtomicExchange_Texture1DArray_Int16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture1DArray_Int16_backend_index = 2670u;

/// textureAtomicExchange with Texture2DArray, Int32x3, Float32
extern Variable TextureAtomicExchange_Texture2DArray_Float32_texture;
extern Variable TextureAtomicExchange_Texture2DArray_Float32_coordinate;
extern Variable TextureAtomicExchange_Texture2DArray_Float32_value;
extern Function TextureAtomicExchange_Texture2DArray_Float32;
inline constexpr auto TextureAtomicExchange_Texture2DArray_Float32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture2DArray_Float32_backend_index = 2671u;

/// textureAtomicExchange with Texture2DArray, Int32x3, UInt32
extern Variable TextureAtomicExchange_Texture2DArray_UInt32_texture;
extern Variable TextureAtomicExchange_Texture2DArray_UInt32_coordinate;
extern Variable TextureAtomicExchange_Texture2DArray_UInt32_value;
extern Function TextureAtomicExchange_Texture2DArray_UInt32;
inline constexpr auto TextureAtomicExchange_Texture2DArray_UInt32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture2DArray_UInt32_backend_index = 2672u;

/// textureAtomicExchange with Texture2DArray, Int32x3, Int32
extern Variable TextureAtomicExchange_Texture2DArray_Int32_texture;
extern Variable TextureAtomicExchange_Texture2DArray_Int32_coordinate;
extern Variable TextureAtomicExchange_Texture2DArray_Int32_value;
extern Function TextureAtomicExchange_Texture2DArray_Int32;
inline constexpr auto TextureAtomicExchange_Texture2DArray_Int32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture2DArray_Int32_backend_index = 2673u;

/// textureAtomicExchange with Texture2DArray, Int32x3, Float16
extern Variable TextureAtomicExchange_Texture2DArray_Float16_texture;
extern Variable TextureAtomicExchange_Texture2DArray_Float16_coordinate;
extern Variable TextureAtomicExchange_Texture2DArray_Float16_value;
extern Function TextureAtomicExchange_Texture2DArray_Float16;
inline constexpr auto TextureAtomicExchange_Texture2DArray_Float16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture2DArray_Float16_backend_index = 2674u;

/// textureAtomicExchange with Texture2DArray, Int32x3, UInt16
extern Variable TextureAtomicExchange_Texture2DArray_UInt16_texture;
extern Variable TextureAtomicExchange_Texture2DArray_UInt16_coordinate;
extern Variable TextureAtomicExchange_Texture2DArray_UInt16_value;
extern Function TextureAtomicExchange_Texture2DArray_UInt16;
inline constexpr auto TextureAtomicExchange_Texture2DArray_UInt16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture2DArray_UInt16_backend_index = 2675u;

/// textureAtomicExchange with Texture2DArray, Int32x3, Int16
extern Variable TextureAtomicExchange_Texture2DArray_Int16_texture;
extern Variable TextureAtomicExchange_Texture2DArray_Int16_coordinate;
extern Variable TextureAtomicExchange_Texture2DArray_Int16_value;
extern Function TextureAtomicExchange_Texture2DArray_Int16;
inline constexpr auto TextureAtomicExchange_Texture2DArray_Int16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_Texture2DArray_Int16_backend_index = 2676u;

/// textureAtomicExchange with TextureCubeArray, Int32x4, Float32
extern Variable TextureAtomicExchange_TextureCubeArray_Float32_texture;
extern Variable TextureAtomicExchange_TextureCubeArray_Float32_coordinate;
extern Variable TextureAtomicExchange_TextureCubeArray_Float32_value;
extern Function TextureAtomicExchange_TextureCubeArray_Float32;
inline constexpr auto TextureAtomicExchange_TextureCubeArray_Float32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_TextureCubeArray_Float32_backend_index = 2677u;

/// textureAtomicExchange with TextureCubeArray, Int32x4, UInt32
extern Variable TextureAtomicExchange_TextureCubeArray_UInt32_texture;
extern Variable TextureAtomicExchange_TextureCubeArray_UInt32_coordinate;
extern Variable TextureAtomicExchange_TextureCubeArray_UInt32_value;
extern Function TextureAtomicExchange_TextureCubeArray_UInt32;
inline constexpr auto TextureAtomicExchange_TextureCubeArray_UInt32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_TextureCubeArray_UInt32_backend_index = 2678u;

/// textureAtomicExchange with TextureCubeArray, Int32x4, Int32
extern Variable TextureAtomicExchange_TextureCubeArray_Int32_texture;
extern Variable TextureAtomicExchange_TextureCubeArray_Int32_coordinate;
extern Variable TextureAtomicExchange_TextureCubeArray_Int32_value;
extern Function TextureAtomicExchange_TextureCubeArray_Int32;
inline constexpr auto TextureAtomicExchange_TextureCubeArray_Int32_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_TextureCubeArray_Int32_backend_index = 2679u;

/// textureAtomicExchange with TextureCubeArray, Int32x4, Float16
extern Variable TextureAtomicExchange_TextureCubeArray_Float16_texture;
extern Variable TextureAtomicExchange_TextureCubeArray_Float16_coordinate;
extern Variable TextureAtomicExchange_TextureCubeArray_Float16_value;
extern Function TextureAtomicExchange_TextureCubeArray_Float16;
inline constexpr auto TextureAtomicExchange_TextureCubeArray_Float16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_TextureCubeArray_Float16_backend_index = 2680u;

/// textureAtomicExchange with TextureCubeArray, Int32x4, UInt16
extern Variable TextureAtomicExchange_TextureCubeArray_UInt16_texture;
extern Variable TextureAtomicExchange_TextureCubeArray_UInt16_coordinate;
extern Variable TextureAtomicExchange_TextureCubeArray_UInt16_value;
extern Function TextureAtomicExchange_TextureCubeArray_UInt16;
inline constexpr auto TextureAtomicExchange_TextureCubeArray_UInt16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_TextureCubeArray_UInt16_backend_index = 2681u;

/// textureAtomicExchange with TextureCubeArray, Int32x4, Int16
extern Variable TextureAtomicExchange_TextureCubeArray_Int16_texture;
extern Variable TextureAtomicExchange_TextureCubeArray_Int16_coordinate;
extern Variable TextureAtomicExchange_TextureCubeArray_Int16_value;
extern Function TextureAtomicExchange_TextureCubeArray_Int16;
inline constexpr auto TextureAtomicExchange_TextureCubeArray_Int16_name = "textureAtomicExchange"_c;
inline constexpr auto TextureAtomicExchange_TextureCubeArray_Int16_backend_index = 2682u;

/// textureAtomicCompareExchange with Texture1D, Int32, UInt32
extern Variable TextureAtomicCompareExchange_Texture1D_UInt32_texture;
extern Variable TextureAtomicCompareExchange_Texture1D_UInt32_coordinate;
extern Variable TextureAtomicCompareExchange_Texture1D_UInt32_value;
extern Function TextureAtomicCompareExchange_Texture1D_UInt32;
inline constexpr auto TextureAtomicCompareExchange_Texture1D_UInt32_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture1D_UInt32_backend_index = 2683u;

/// textureAtomicCompareExchange with Texture1D, Int32, Int32
extern Variable TextureAtomicCompareExchange_Texture1D_Int32_texture;
extern Variable TextureAtomicCompareExchange_Texture1D_Int32_coordinate;
extern Variable TextureAtomicCompareExchange_Texture1D_Int32_value;
extern Function TextureAtomicCompareExchange_Texture1D_Int32;
inline constexpr auto TextureAtomicCompareExchange_Texture1D_Int32_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture1D_Int32_backend_index = 2684u;

/// textureAtomicCompareExchange with Texture1D, Int32, UInt16
extern Variable TextureAtomicCompareExchange_Texture1D_UInt16_texture;
extern Variable TextureAtomicCompareExchange_Texture1D_UInt16_coordinate;
extern Variable TextureAtomicCompareExchange_Texture1D_UInt16_value;
extern Function TextureAtomicCompareExchange_Texture1D_UInt16;
inline constexpr auto TextureAtomicCompareExchange_Texture1D_UInt16_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture1D_UInt16_backend_index = 2685u;

/// textureAtomicCompareExchange with Texture1D, Int32, Int16
extern Variable TextureAtomicCompareExchange_Texture1D_Int16_texture;
extern Variable TextureAtomicCompareExchange_Texture1D_Int16_coordinate;
extern Variable TextureAtomicCompareExchange_Texture1D_Int16_value;
extern Function TextureAtomicCompareExchange_Texture1D_Int16;
inline constexpr auto TextureAtomicCompareExchange_Texture1D_Int16_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture1D_Int16_backend_index = 2686u;

/// textureAtomicCompareExchange with Texture2D, Int32x2, UInt32
extern Variable TextureAtomicCompareExchange_Texture2D_UInt32_texture;
extern Variable TextureAtomicCompareExchange_Texture2D_UInt32_coordinate;
extern Variable TextureAtomicCompareExchange_Texture2D_UInt32_value;
extern Function TextureAtomicCompareExchange_Texture2D_UInt32;
inline constexpr auto TextureAtomicCompareExchange_Texture2D_UInt32_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture2D_UInt32_backend_index = 2687u;

/// textureAtomicCompareExchange with Texture2D, Int32x2, Int32
extern Variable TextureAtomicCompareExchange_Texture2D_Int32_texture;
extern Variable TextureAtomicCompareExchange_Texture2D_Int32_coordinate;
extern Variable TextureAtomicCompareExchange_Texture2D_Int32_value;
extern Function TextureAtomicCompareExchange_Texture2D_Int32;
inline constexpr auto TextureAtomicCompareExchange_Texture2D_Int32_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture2D_Int32_backend_index = 2688u;

/// textureAtomicCompareExchange with Texture2D, Int32x2, UInt16
extern Variable TextureAtomicCompareExchange_Texture2D_UInt16_texture;
extern Variable TextureAtomicCompareExchange_Texture2D_UInt16_coordinate;
extern Variable TextureAtomicCompareExchange_Texture2D_UInt16_value;
extern Function TextureAtomicCompareExchange_Texture2D_UInt16;
inline constexpr auto TextureAtomicCompareExchange_Texture2D_UInt16_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture2D_UInt16_backend_index = 2689u;

/// textureAtomicCompareExchange with Texture2D, Int32x2, Int16
extern Variable TextureAtomicCompareExchange_Texture2D_Int16_texture;
extern Variable TextureAtomicCompareExchange_Texture2D_Int16_coordinate;
extern Variable TextureAtomicCompareExchange_Texture2D_Int16_value;
extern Function TextureAtomicCompareExchange_Texture2D_Int16;
inline constexpr auto TextureAtomicCompareExchange_Texture2D_Int16_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture2D_Int16_backend_index = 2690u;

/// textureAtomicCompareExchange with Texture3D, Int32x3, UInt32
extern Variable TextureAtomicCompareExchange_Texture3D_UInt32_texture;
extern Variable TextureAtomicCompareExchange_Texture3D_UInt32_coordinate;
extern Variable TextureAtomicCompareExchange_Texture3D_UInt32_value;
extern Function TextureAtomicCompareExchange_Texture3D_UInt32;
inline constexpr auto TextureAtomicCompareExchange_Texture3D_UInt32_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture3D_UInt32_backend_index = 2691u;

/// textureAtomicCompareExchange with Texture3D, Int32x3, Int32
extern Variable TextureAtomicCompareExchange_Texture3D_Int32_texture;
extern Variable TextureAtomicCompareExchange_Texture3D_Int32_coordinate;
extern Variable TextureAtomicCompareExchange_Texture3D_Int32_value;
extern Function TextureAtomicCompareExchange_Texture3D_Int32;
inline constexpr auto TextureAtomicCompareExchange_Texture3D_Int32_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture3D_Int32_backend_index = 2692u;

/// textureAtomicCompareExchange with Texture3D, Int32x3, UInt16
extern Variable TextureAtomicCompareExchange_Texture3D_UInt16_texture;
extern Variable TextureAtomicCompareExchange_Texture3D_UInt16_coordinate;
extern Variable TextureAtomicCompareExchange_Texture3D_UInt16_value;
extern Function TextureAtomicCompareExchange_Texture3D_UInt16;
inline constexpr auto TextureAtomicCompareExchange_Texture3D_UInt16_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture3D_UInt16_backend_index = 2693u;

/// textureAtomicCompareExchange with Texture3D, Int32x3, Int16
extern Variable TextureAtomicCompareExchange_Texture3D_Int16_texture;
extern Variable TextureAtomicCompareExchange_Texture3D_Int16_coordinate;
extern Variable TextureAtomicCompareExchange_Texture3D_Int16_value;
extern Function TextureAtomicCompareExchange_Texture3D_Int16;
inline constexpr auto TextureAtomicCompareExchange_Texture3D_Int16_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture3D_Int16_backend_index = 2694u;

/// textureAtomicCompareExchange with TextureCube, Int32x3, UInt32
extern Variable TextureAtomicCompareExchange_TextureCube_UInt32_texture;
extern Variable TextureAtomicCompareExchange_TextureCube_UInt32_coordinate;
extern Variable TextureAtomicCompareExchange_TextureCube_UInt32_value;
extern Function TextureAtomicCompareExchange_TextureCube_UInt32;
inline constexpr auto TextureAtomicCompareExchange_TextureCube_UInt32_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_TextureCube_UInt32_backend_index = 2695u;

/// textureAtomicCompareExchange with TextureCube, Int32x3, Int32
extern Variable TextureAtomicCompareExchange_TextureCube_Int32_texture;
extern Variable TextureAtomicCompareExchange_TextureCube_Int32_coordinate;
extern Variable TextureAtomicCompareExchange_TextureCube_Int32_value;
extern Function TextureAtomicCompareExchange_TextureCube_Int32;
inline constexpr auto TextureAtomicCompareExchange_TextureCube_Int32_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_TextureCube_Int32_backend_index = 2696u;

/// textureAtomicCompareExchange with TextureCube, Int32x3, UInt16
extern Variable TextureAtomicCompareExchange_TextureCube_UInt16_texture;
extern Variable TextureAtomicCompareExchange_TextureCube_UInt16_coordinate;
extern Variable TextureAtomicCompareExchange_TextureCube_UInt16_value;
extern Function TextureAtomicCompareExchange_TextureCube_UInt16;
inline constexpr auto TextureAtomicCompareExchange_TextureCube_UInt16_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_TextureCube_UInt16_backend_index = 2697u;

/// textureAtomicCompareExchange with TextureCube, Int32x3, Int16
extern Variable TextureAtomicCompareExchange_TextureCube_Int16_texture;
extern Variable TextureAtomicCompareExchange_TextureCube_Int16_coordinate;
extern Variable TextureAtomicCompareExchange_TextureCube_Int16_value;
extern Function TextureAtomicCompareExchange_TextureCube_Int16;
inline constexpr auto TextureAtomicCompareExchange_TextureCube_Int16_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_TextureCube_Int16_backend_index = 2698u;

/// textureAtomicCompareExchange with Texture1DArray, Int32x2, UInt32
extern Variable TextureAtomicCompareExchange_Texture1DArray_UInt32_texture;
extern Variable TextureAtomicCompareExchange_Texture1DArray_UInt32_coordinate;
extern Variable TextureAtomicCompareExchange_Texture1DArray_UInt32_value;
extern Function TextureAtomicCompareExchange_Texture1DArray_UInt32;
inline constexpr auto TextureAtomicCompareExchange_Texture1DArray_UInt32_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture1DArray_UInt32_backend_index = 2699u;

/// textureAtomicCompareExchange with Texture1DArray, Int32x2, Int32
extern Variable TextureAtomicCompareExchange_Texture1DArray_Int32_texture;
extern Variable TextureAtomicCompareExchange_Texture1DArray_Int32_coordinate;
extern Variable TextureAtomicCompareExchange_Texture1DArray_Int32_value;
extern Function TextureAtomicCompareExchange_Texture1DArray_Int32;
inline constexpr auto TextureAtomicCompareExchange_Texture1DArray_Int32_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture1DArray_Int32_backend_index = 2700u;

/// textureAtomicCompareExchange with Texture1DArray, Int32x2, UInt16
extern Variable TextureAtomicCompareExchange_Texture1DArray_UInt16_texture;
extern Variable TextureAtomicCompareExchange_Texture1DArray_UInt16_coordinate;
extern Variable TextureAtomicCompareExchange_Texture1DArray_UInt16_value;
extern Function TextureAtomicCompareExchange_Texture1DArray_UInt16;
inline constexpr auto TextureAtomicCompareExchange_Texture1DArray_UInt16_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture1DArray_UInt16_backend_index = 2701u;

/// textureAtomicCompareExchange with Texture1DArray, Int32x2, Int16
extern Variable TextureAtomicCompareExchange_Texture1DArray_Int16_texture;
extern Variable TextureAtomicCompareExchange_Texture1DArray_Int16_coordinate;
extern Variable TextureAtomicCompareExchange_Texture1DArray_Int16_value;
extern Function TextureAtomicCompareExchange_Texture1DArray_Int16;
inline constexpr auto TextureAtomicCompareExchange_Texture1DArray_Int16_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture1DArray_Int16_backend_index = 2702u;

/// textureAtomicCompareExchange with Texture2DArray, Int32x3, UInt32
extern Variable TextureAtomicCompareExchange_Texture2DArray_UInt32_texture;
extern Variable TextureAtomicCompareExchange_Texture2DArray_UInt32_coordinate;
extern Variable TextureAtomicCompareExchange_Texture2DArray_UInt32_value;
extern Function TextureAtomicCompareExchange_Texture2DArray_UInt32;
inline constexpr auto TextureAtomicCompareExchange_Texture2DArray_UInt32_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture2DArray_UInt32_backend_index = 2703u;

/// textureAtomicCompareExchange with Texture2DArray, Int32x3, Int32
extern Variable TextureAtomicCompareExchange_Texture2DArray_Int32_texture;
extern Variable TextureAtomicCompareExchange_Texture2DArray_Int32_coordinate;
extern Variable TextureAtomicCompareExchange_Texture2DArray_Int32_value;
extern Function TextureAtomicCompareExchange_Texture2DArray_Int32;
inline constexpr auto TextureAtomicCompareExchange_Texture2DArray_Int32_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture2DArray_Int32_backend_index = 2704u;

/// textureAtomicCompareExchange with Texture2DArray, Int32x3, UInt16
extern Variable TextureAtomicCompareExchange_Texture2DArray_UInt16_texture;
extern Variable TextureAtomicCompareExchange_Texture2DArray_UInt16_coordinate;
extern Variable TextureAtomicCompareExchange_Texture2DArray_UInt16_value;
extern Function TextureAtomicCompareExchange_Texture2DArray_UInt16;
inline constexpr auto TextureAtomicCompareExchange_Texture2DArray_UInt16_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture2DArray_UInt16_backend_index = 2705u;

/// textureAtomicCompareExchange with Texture2DArray, Int32x3, Int16
extern Variable TextureAtomicCompareExchange_Texture2DArray_Int16_texture;
extern Variable TextureAtomicCompareExchange_Texture2DArray_Int16_coordinate;
extern Variable TextureAtomicCompareExchange_Texture2DArray_Int16_value;
extern Function TextureAtomicCompareExchange_Texture2DArray_Int16;
inline constexpr auto TextureAtomicCompareExchange_Texture2DArray_Int16_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_Texture2DArray_Int16_backend_index = 2706u;

/// textureAtomicCompareExchange with TextureCubeArray, Int32x4, UInt32
extern Variable TextureAtomicCompareExchange_TextureCubeArray_UInt32_texture;
extern Variable TextureAtomicCompareExchange_TextureCubeArray_UInt32_coordinate;
extern Variable TextureAtomicCompareExchange_TextureCubeArray_UInt32_value;
extern Function TextureAtomicCompareExchange_TextureCubeArray_UInt32;
inline constexpr auto TextureAtomicCompareExchange_TextureCubeArray_UInt32_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_TextureCubeArray_UInt32_backend_index = 2707u;

/// textureAtomicCompareExchange with TextureCubeArray, Int32x4, Int32
extern Variable TextureAtomicCompareExchange_TextureCubeArray_Int32_texture;
extern Variable TextureAtomicCompareExchange_TextureCubeArray_Int32_coordinate;
extern Variable TextureAtomicCompareExchange_TextureCubeArray_Int32_value;
extern Function TextureAtomicCompareExchange_TextureCubeArray_Int32;
inline constexpr auto TextureAtomicCompareExchange_TextureCubeArray_Int32_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_TextureCubeArray_Int32_backend_index = 2708u;

/// textureAtomicCompareExchange with TextureCubeArray, Int32x4, UInt16
extern Variable TextureAtomicCompareExchange_TextureCubeArray_UInt16_texture;
extern Variable TextureAtomicCompareExchange_TextureCubeArray_UInt16_coordinate;
extern Variable TextureAtomicCompareExchange_TextureCubeArray_UInt16_value;
extern Function TextureAtomicCompareExchange_TextureCubeArray_UInt16;
inline constexpr auto TextureAtomicCompareExchange_TextureCubeArray_UInt16_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_TextureCubeArray_UInt16_backend_index = 2709u;

/// textureAtomicCompareExchange with TextureCubeArray, Int32x4, Int16
extern Variable TextureAtomicCompareExchange_TextureCubeArray_Int16_texture;
extern Variable TextureAtomicCompareExchange_TextureCubeArray_Int16_coordinate;
extern Variable TextureAtomicCompareExchange_TextureCubeArray_Int16_value;
extern Function TextureAtomicCompareExchange_TextureCubeArray_Int16;
inline constexpr auto TextureAtomicCompareExchange_TextureCubeArray_Int16_name = "textureAtomicCompareExchange"_c;
inline constexpr auto TextureAtomicCompareExchange_TextureCubeArray_Int16_backend_index = 2710u;

/// textureAtomicAdd with Texture1D, Int32, UInt32
extern Variable TextureAtomicAdd_Texture1D_UInt32_texture;
extern Variable TextureAtomicAdd_Texture1D_UInt32_coordinate;
extern Variable TextureAtomicAdd_Texture1D_UInt32_value;
extern Function TextureAtomicAdd_Texture1D_UInt32;
inline constexpr auto TextureAtomicAdd_Texture1D_UInt32_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture1D_UInt32_backend_index = 2711u;

/// textureAtomicAdd with Texture1D, Int32, Int32
extern Variable TextureAtomicAdd_Texture1D_Int32_texture;
extern Variable TextureAtomicAdd_Texture1D_Int32_coordinate;
extern Variable TextureAtomicAdd_Texture1D_Int32_value;
extern Function TextureAtomicAdd_Texture1D_Int32;
inline constexpr auto TextureAtomicAdd_Texture1D_Int32_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture1D_Int32_backend_index = 2712u;

/// textureAtomicAdd with Texture1D, Int32, UInt16
extern Variable TextureAtomicAdd_Texture1D_UInt16_texture;
extern Variable TextureAtomicAdd_Texture1D_UInt16_coordinate;
extern Variable TextureAtomicAdd_Texture1D_UInt16_value;
extern Function TextureAtomicAdd_Texture1D_UInt16;
inline constexpr auto TextureAtomicAdd_Texture1D_UInt16_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture1D_UInt16_backend_index = 2713u;

/// textureAtomicAdd with Texture1D, Int32, Int16
extern Variable TextureAtomicAdd_Texture1D_Int16_texture;
extern Variable TextureAtomicAdd_Texture1D_Int16_coordinate;
extern Variable TextureAtomicAdd_Texture1D_Int16_value;
extern Function TextureAtomicAdd_Texture1D_Int16;
inline constexpr auto TextureAtomicAdd_Texture1D_Int16_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture1D_Int16_backend_index = 2714u;

/// textureAtomicAdd with Texture2D, Int32x2, UInt32
extern Variable TextureAtomicAdd_Texture2D_UInt32_texture;
extern Variable TextureAtomicAdd_Texture2D_UInt32_coordinate;
extern Variable TextureAtomicAdd_Texture2D_UInt32_value;
extern Function TextureAtomicAdd_Texture2D_UInt32;
inline constexpr auto TextureAtomicAdd_Texture2D_UInt32_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture2D_UInt32_backend_index = 2715u;

/// textureAtomicAdd with Texture2D, Int32x2, Int32
extern Variable TextureAtomicAdd_Texture2D_Int32_texture;
extern Variable TextureAtomicAdd_Texture2D_Int32_coordinate;
extern Variable TextureAtomicAdd_Texture2D_Int32_value;
extern Function TextureAtomicAdd_Texture2D_Int32;
inline constexpr auto TextureAtomicAdd_Texture2D_Int32_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture2D_Int32_backend_index = 2716u;

/// textureAtomicAdd with Texture2D, Int32x2, UInt16
extern Variable TextureAtomicAdd_Texture2D_UInt16_texture;
extern Variable TextureAtomicAdd_Texture2D_UInt16_coordinate;
extern Variable TextureAtomicAdd_Texture2D_UInt16_value;
extern Function TextureAtomicAdd_Texture2D_UInt16;
inline constexpr auto TextureAtomicAdd_Texture2D_UInt16_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture2D_UInt16_backend_index = 2717u;

/// textureAtomicAdd with Texture2D, Int32x2, Int16
extern Variable TextureAtomicAdd_Texture2D_Int16_texture;
extern Variable TextureAtomicAdd_Texture2D_Int16_coordinate;
extern Variable TextureAtomicAdd_Texture2D_Int16_value;
extern Function TextureAtomicAdd_Texture2D_Int16;
inline constexpr auto TextureAtomicAdd_Texture2D_Int16_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture2D_Int16_backend_index = 2718u;

/// textureAtomicAdd with Texture3D, Int32x3, UInt32
extern Variable TextureAtomicAdd_Texture3D_UInt32_texture;
extern Variable TextureAtomicAdd_Texture3D_UInt32_coordinate;
extern Variable TextureAtomicAdd_Texture3D_UInt32_value;
extern Function TextureAtomicAdd_Texture3D_UInt32;
inline constexpr auto TextureAtomicAdd_Texture3D_UInt32_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture3D_UInt32_backend_index = 2719u;

/// textureAtomicAdd with Texture3D, Int32x3, Int32
extern Variable TextureAtomicAdd_Texture3D_Int32_texture;
extern Variable TextureAtomicAdd_Texture3D_Int32_coordinate;
extern Variable TextureAtomicAdd_Texture3D_Int32_value;
extern Function TextureAtomicAdd_Texture3D_Int32;
inline constexpr auto TextureAtomicAdd_Texture3D_Int32_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture3D_Int32_backend_index = 2720u;

/// textureAtomicAdd with Texture3D, Int32x3, UInt16
extern Variable TextureAtomicAdd_Texture3D_UInt16_texture;
extern Variable TextureAtomicAdd_Texture3D_UInt16_coordinate;
extern Variable TextureAtomicAdd_Texture3D_UInt16_value;
extern Function TextureAtomicAdd_Texture3D_UInt16;
inline constexpr auto TextureAtomicAdd_Texture3D_UInt16_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture3D_UInt16_backend_index = 2721u;

/// textureAtomicAdd with Texture3D, Int32x3, Int16
extern Variable TextureAtomicAdd_Texture3D_Int16_texture;
extern Variable TextureAtomicAdd_Texture3D_Int16_coordinate;
extern Variable TextureAtomicAdd_Texture3D_Int16_value;
extern Function TextureAtomicAdd_Texture3D_Int16;
inline constexpr auto TextureAtomicAdd_Texture3D_Int16_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture3D_Int16_backend_index = 2722u;

/// textureAtomicAdd with TextureCube, Int32x3, UInt32
extern Variable TextureAtomicAdd_TextureCube_UInt32_texture;
extern Variable TextureAtomicAdd_TextureCube_UInt32_coordinate;
extern Variable TextureAtomicAdd_TextureCube_UInt32_value;
extern Function TextureAtomicAdd_TextureCube_UInt32;
inline constexpr auto TextureAtomicAdd_TextureCube_UInt32_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_TextureCube_UInt32_backend_index = 2723u;

/// textureAtomicAdd with TextureCube, Int32x3, Int32
extern Variable TextureAtomicAdd_TextureCube_Int32_texture;
extern Variable TextureAtomicAdd_TextureCube_Int32_coordinate;
extern Variable TextureAtomicAdd_TextureCube_Int32_value;
extern Function TextureAtomicAdd_TextureCube_Int32;
inline constexpr auto TextureAtomicAdd_TextureCube_Int32_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_TextureCube_Int32_backend_index = 2724u;

/// textureAtomicAdd with TextureCube, Int32x3, UInt16
extern Variable TextureAtomicAdd_TextureCube_UInt16_texture;
extern Variable TextureAtomicAdd_TextureCube_UInt16_coordinate;
extern Variable TextureAtomicAdd_TextureCube_UInt16_value;
extern Function TextureAtomicAdd_TextureCube_UInt16;
inline constexpr auto TextureAtomicAdd_TextureCube_UInt16_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_TextureCube_UInt16_backend_index = 2725u;

/// textureAtomicAdd with TextureCube, Int32x3, Int16
extern Variable TextureAtomicAdd_TextureCube_Int16_texture;
extern Variable TextureAtomicAdd_TextureCube_Int16_coordinate;
extern Variable TextureAtomicAdd_TextureCube_Int16_value;
extern Function TextureAtomicAdd_TextureCube_Int16;
inline constexpr auto TextureAtomicAdd_TextureCube_Int16_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_TextureCube_Int16_backend_index = 2726u;

/// textureAtomicAdd with Texture1DArray, Int32x2, UInt32
extern Variable TextureAtomicAdd_Texture1DArray_UInt32_texture;
extern Variable TextureAtomicAdd_Texture1DArray_UInt32_coordinate;
extern Variable TextureAtomicAdd_Texture1DArray_UInt32_value;
extern Function TextureAtomicAdd_Texture1DArray_UInt32;
inline constexpr auto TextureAtomicAdd_Texture1DArray_UInt32_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture1DArray_UInt32_backend_index = 2727u;

/// textureAtomicAdd with Texture1DArray, Int32x2, Int32
extern Variable TextureAtomicAdd_Texture1DArray_Int32_texture;
extern Variable TextureAtomicAdd_Texture1DArray_Int32_coordinate;
extern Variable TextureAtomicAdd_Texture1DArray_Int32_value;
extern Function TextureAtomicAdd_Texture1DArray_Int32;
inline constexpr auto TextureAtomicAdd_Texture1DArray_Int32_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture1DArray_Int32_backend_index = 2728u;

/// textureAtomicAdd with Texture1DArray, Int32x2, UInt16
extern Variable TextureAtomicAdd_Texture1DArray_UInt16_texture;
extern Variable TextureAtomicAdd_Texture1DArray_UInt16_coordinate;
extern Variable TextureAtomicAdd_Texture1DArray_UInt16_value;
extern Function TextureAtomicAdd_Texture1DArray_UInt16;
inline constexpr auto TextureAtomicAdd_Texture1DArray_UInt16_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture1DArray_UInt16_backend_index = 2729u;

/// textureAtomicAdd with Texture1DArray, Int32x2, Int16
extern Variable TextureAtomicAdd_Texture1DArray_Int16_texture;
extern Variable TextureAtomicAdd_Texture1DArray_Int16_coordinate;
extern Variable TextureAtomicAdd_Texture1DArray_Int16_value;
extern Function TextureAtomicAdd_Texture1DArray_Int16;
inline constexpr auto TextureAtomicAdd_Texture1DArray_Int16_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture1DArray_Int16_backend_index = 2730u;

/// textureAtomicAdd with Texture2DArray, Int32x3, UInt32
extern Variable TextureAtomicAdd_Texture2DArray_UInt32_texture;
extern Variable TextureAtomicAdd_Texture2DArray_UInt32_coordinate;
extern Variable TextureAtomicAdd_Texture2DArray_UInt32_value;
extern Function TextureAtomicAdd_Texture2DArray_UInt32;
inline constexpr auto TextureAtomicAdd_Texture2DArray_UInt32_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture2DArray_UInt32_backend_index = 2731u;

/// textureAtomicAdd with Texture2DArray, Int32x3, Int32
extern Variable TextureAtomicAdd_Texture2DArray_Int32_texture;
extern Variable TextureAtomicAdd_Texture2DArray_Int32_coordinate;
extern Variable TextureAtomicAdd_Texture2DArray_Int32_value;
extern Function TextureAtomicAdd_Texture2DArray_Int32;
inline constexpr auto TextureAtomicAdd_Texture2DArray_Int32_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture2DArray_Int32_backend_index = 2732u;

/// textureAtomicAdd with Texture2DArray, Int32x3, UInt16
extern Variable TextureAtomicAdd_Texture2DArray_UInt16_texture;
extern Variable TextureAtomicAdd_Texture2DArray_UInt16_coordinate;
extern Variable TextureAtomicAdd_Texture2DArray_UInt16_value;
extern Function TextureAtomicAdd_Texture2DArray_UInt16;
inline constexpr auto TextureAtomicAdd_Texture2DArray_UInt16_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture2DArray_UInt16_backend_index = 2733u;

/// textureAtomicAdd with Texture2DArray, Int32x3, Int16
extern Variable TextureAtomicAdd_Texture2DArray_Int16_texture;
extern Variable TextureAtomicAdd_Texture2DArray_Int16_coordinate;
extern Variable TextureAtomicAdd_Texture2DArray_Int16_value;
extern Function TextureAtomicAdd_Texture2DArray_Int16;
inline constexpr auto TextureAtomicAdd_Texture2DArray_Int16_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_Texture2DArray_Int16_backend_index = 2734u;

/// textureAtomicAdd with TextureCubeArray, Int32x4, UInt32
extern Variable TextureAtomicAdd_TextureCubeArray_UInt32_texture;
extern Variable TextureAtomicAdd_TextureCubeArray_UInt32_coordinate;
extern Variable TextureAtomicAdd_TextureCubeArray_UInt32_value;
extern Function TextureAtomicAdd_TextureCubeArray_UInt32;
inline constexpr auto TextureAtomicAdd_TextureCubeArray_UInt32_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_TextureCubeArray_UInt32_backend_index = 2735u;

/// textureAtomicAdd with TextureCubeArray, Int32x4, Int32
extern Variable TextureAtomicAdd_TextureCubeArray_Int32_texture;
extern Variable TextureAtomicAdd_TextureCubeArray_Int32_coordinate;
extern Variable TextureAtomicAdd_TextureCubeArray_Int32_value;
extern Function TextureAtomicAdd_TextureCubeArray_Int32;
inline constexpr auto TextureAtomicAdd_TextureCubeArray_Int32_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_TextureCubeArray_Int32_backend_index = 2736u;

/// textureAtomicAdd with TextureCubeArray, Int32x4, UInt16
extern Variable TextureAtomicAdd_TextureCubeArray_UInt16_texture;
extern Variable TextureAtomicAdd_TextureCubeArray_UInt16_coordinate;
extern Variable TextureAtomicAdd_TextureCubeArray_UInt16_value;
extern Function TextureAtomicAdd_TextureCubeArray_UInt16;
inline constexpr auto TextureAtomicAdd_TextureCubeArray_UInt16_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_TextureCubeArray_UInt16_backend_index = 2737u;

/// textureAtomicAdd with TextureCubeArray, Int32x4, Int16
extern Variable TextureAtomicAdd_TextureCubeArray_Int16_texture;
extern Variable TextureAtomicAdd_TextureCubeArray_Int16_coordinate;
extern Variable TextureAtomicAdd_TextureCubeArray_Int16_value;
extern Function TextureAtomicAdd_TextureCubeArray_Int16;
inline constexpr auto TextureAtomicAdd_TextureCubeArray_Int16_name = "textureAtomicAdd"_c;
inline constexpr auto TextureAtomicAdd_TextureCubeArray_Int16_backend_index = 2738u;

/// textureAtomicSubtract with Texture1D, Int32, UInt32
extern Variable TextureAtomicSubtract_Texture1D_UInt32_texture;
extern Variable TextureAtomicSubtract_Texture1D_UInt32_coordinate;
extern Variable TextureAtomicSubtract_Texture1D_UInt32_value;
extern Function TextureAtomicSubtract_Texture1D_UInt32;
inline constexpr auto TextureAtomicSubtract_Texture1D_UInt32_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture1D_UInt32_backend_index = 2739u;

/// textureAtomicSubtract with Texture1D, Int32, Int32
extern Variable TextureAtomicSubtract_Texture1D_Int32_texture;
extern Variable TextureAtomicSubtract_Texture1D_Int32_coordinate;
extern Variable TextureAtomicSubtract_Texture1D_Int32_value;
extern Function TextureAtomicSubtract_Texture1D_Int32;
inline constexpr auto TextureAtomicSubtract_Texture1D_Int32_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture1D_Int32_backend_index = 2740u;

/// textureAtomicSubtract with Texture1D, Int32, UInt16
extern Variable TextureAtomicSubtract_Texture1D_UInt16_texture;
extern Variable TextureAtomicSubtract_Texture1D_UInt16_coordinate;
extern Variable TextureAtomicSubtract_Texture1D_UInt16_value;
extern Function TextureAtomicSubtract_Texture1D_UInt16;
inline constexpr auto TextureAtomicSubtract_Texture1D_UInt16_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture1D_UInt16_backend_index = 2741u;

/// textureAtomicSubtract with Texture1D, Int32, Int16
extern Variable TextureAtomicSubtract_Texture1D_Int16_texture;
extern Variable TextureAtomicSubtract_Texture1D_Int16_coordinate;
extern Variable TextureAtomicSubtract_Texture1D_Int16_value;
extern Function TextureAtomicSubtract_Texture1D_Int16;
inline constexpr auto TextureAtomicSubtract_Texture1D_Int16_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture1D_Int16_backend_index = 2742u;

/// textureAtomicSubtract with Texture2D, Int32x2, UInt32
extern Variable TextureAtomicSubtract_Texture2D_UInt32_texture;
extern Variable TextureAtomicSubtract_Texture2D_UInt32_coordinate;
extern Variable TextureAtomicSubtract_Texture2D_UInt32_value;
extern Function TextureAtomicSubtract_Texture2D_UInt32;
inline constexpr auto TextureAtomicSubtract_Texture2D_UInt32_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture2D_UInt32_backend_index = 2743u;

/// textureAtomicSubtract with Texture2D, Int32x2, Int32
extern Variable TextureAtomicSubtract_Texture2D_Int32_texture;
extern Variable TextureAtomicSubtract_Texture2D_Int32_coordinate;
extern Variable TextureAtomicSubtract_Texture2D_Int32_value;
extern Function TextureAtomicSubtract_Texture2D_Int32;
inline constexpr auto TextureAtomicSubtract_Texture2D_Int32_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture2D_Int32_backend_index = 2744u;

/// textureAtomicSubtract with Texture2D, Int32x2, UInt16
extern Variable TextureAtomicSubtract_Texture2D_UInt16_texture;
extern Variable TextureAtomicSubtract_Texture2D_UInt16_coordinate;
extern Variable TextureAtomicSubtract_Texture2D_UInt16_value;
extern Function TextureAtomicSubtract_Texture2D_UInt16;
inline constexpr auto TextureAtomicSubtract_Texture2D_UInt16_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture2D_UInt16_backend_index = 2745u;

/// textureAtomicSubtract with Texture2D, Int32x2, Int16
extern Variable TextureAtomicSubtract_Texture2D_Int16_texture;
extern Variable TextureAtomicSubtract_Texture2D_Int16_coordinate;
extern Variable TextureAtomicSubtract_Texture2D_Int16_value;
extern Function TextureAtomicSubtract_Texture2D_Int16;
inline constexpr auto TextureAtomicSubtract_Texture2D_Int16_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture2D_Int16_backend_index = 2746u;

/// textureAtomicSubtract with Texture3D, Int32x3, UInt32
extern Variable TextureAtomicSubtract_Texture3D_UInt32_texture;
extern Variable TextureAtomicSubtract_Texture3D_UInt32_coordinate;
extern Variable TextureAtomicSubtract_Texture3D_UInt32_value;
extern Function TextureAtomicSubtract_Texture3D_UInt32;
inline constexpr auto TextureAtomicSubtract_Texture3D_UInt32_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture3D_UInt32_backend_index = 2747u;

/// textureAtomicSubtract with Texture3D, Int32x3, Int32
extern Variable TextureAtomicSubtract_Texture3D_Int32_texture;
extern Variable TextureAtomicSubtract_Texture3D_Int32_coordinate;
extern Variable TextureAtomicSubtract_Texture3D_Int32_value;
extern Function TextureAtomicSubtract_Texture3D_Int32;
inline constexpr auto TextureAtomicSubtract_Texture3D_Int32_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture3D_Int32_backend_index = 2748u;

/// textureAtomicSubtract with Texture3D, Int32x3, UInt16
extern Variable TextureAtomicSubtract_Texture3D_UInt16_texture;
extern Variable TextureAtomicSubtract_Texture3D_UInt16_coordinate;
extern Variable TextureAtomicSubtract_Texture3D_UInt16_value;
extern Function TextureAtomicSubtract_Texture3D_UInt16;
inline constexpr auto TextureAtomicSubtract_Texture3D_UInt16_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture3D_UInt16_backend_index = 2749u;

/// textureAtomicSubtract with Texture3D, Int32x3, Int16
extern Variable TextureAtomicSubtract_Texture3D_Int16_texture;
extern Variable TextureAtomicSubtract_Texture3D_Int16_coordinate;
extern Variable TextureAtomicSubtract_Texture3D_Int16_value;
extern Function TextureAtomicSubtract_Texture3D_Int16;
inline constexpr auto TextureAtomicSubtract_Texture3D_Int16_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture3D_Int16_backend_index = 2750u;

/// textureAtomicSubtract with TextureCube, Int32x3, UInt32
extern Variable TextureAtomicSubtract_TextureCube_UInt32_texture;
extern Variable TextureAtomicSubtract_TextureCube_UInt32_coordinate;
extern Variable TextureAtomicSubtract_TextureCube_UInt32_value;
extern Function TextureAtomicSubtract_TextureCube_UInt32;
inline constexpr auto TextureAtomicSubtract_TextureCube_UInt32_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_TextureCube_UInt32_backend_index = 2751u;

/// textureAtomicSubtract with TextureCube, Int32x3, Int32
extern Variable TextureAtomicSubtract_TextureCube_Int32_texture;
extern Variable TextureAtomicSubtract_TextureCube_Int32_coordinate;
extern Variable TextureAtomicSubtract_TextureCube_Int32_value;
extern Function TextureAtomicSubtract_TextureCube_Int32;
inline constexpr auto TextureAtomicSubtract_TextureCube_Int32_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_TextureCube_Int32_backend_index = 2752u;

/// textureAtomicSubtract with TextureCube, Int32x3, UInt16
extern Variable TextureAtomicSubtract_TextureCube_UInt16_texture;
extern Variable TextureAtomicSubtract_TextureCube_UInt16_coordinate;
extern Variable TextureAtomicSubtract_TextureCube_UInt16_value;
extern Function TextureAtomicSubtract_TextureCube_UInt16;
inline constexpr auto TextureAtomicSubtract_TextureCube_UInt16_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_TextureCube_UInt16_backend_index = 2753u;

/// textureAtomicSubtract with TextureCube, Int32x3, Int16
extern Variable TextureAtomicSubtract_TextureCube_Int16_texture;
extern Variable TextureAtomicSubtract_TextureCube_Int16_coordinate;
extern Variable TextureAtomicSubtract_TextureCube_Int16_value;
extern Function TextureAtomicSubtract_TextureCube_Int16;
inline constexpr auto TextureAtomicSubtract_TextureCube_Int16_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_TextureCube_Int16_backend_index = 2754u;

/// textureAtomicSubtract with Texture1DArray, Int32x2, UInt32
extern Variable TextureAtomicSubtract_Texture1DArray_UInt32_texture;
extern Variable TextureAtomicSubtract_Texture1DArray_UInt32_coordinate;
extern Variable TextureAtomicSubtract_Texture1DArray_UInt32_value;
extern Function TextureAtomicSubtract_Texture1DArray_UInt32;
inline constexpr auto TextureAtomicSubtract_Texture1DArray_UInt32_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture1DArray_UInt32_backend_index = 2755u;

/// textureAtomicSubtract with Texture1DArray, Int32x2, Int32
extern Variable TextureAtomicSubtract_Texture1DArray_Int32_texture;
extern Variable TextureAtomicSubtract_Texture1DArray_Int32_coordinate;
extern Variable TextureAtomicSubtract_Texture1DArray_Int32_value;
extern Function TextureAtomicSubtract_Texture1DArray_Int32;
inline constexpr auto TextureAtomicSubtract_Texture1DArray_Int32_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture1DArray_Int32_backend_index = 2756u;

/// textureAtomicSubtract with Texture1DArray, Int32x2, UInt16
extern Variable TextureAtomicSubtract_Texture1DArray_UInt16_texture;
extern Variable TextureAtomicSubtract_Texture1DArray_UInt16_coordinate;
extern Variable TextureAtomicSubtract_Texture1DArray_UInt16_value;
extern Function TextureAtomicSubtract_Texture1DArray_UInt16;
inline constexpr auto TextureAtomicSubtract_Texture1DArray_UInt16_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture1DArray_UInt16_backend_index = 2757u;

/// textureAtomicSubtract with Texture1DArray, Int32x2, Int16
extern Variable TextureAtomicSubtract_Texture1DArray_Int16_texture;
extern Variable TextureAtomicSubtract_Texture1DArray_Int16_coordinate;
extern Variable TextureAtomicSubtract_Texture1DArray_Int16_value;
extern Function TextureAtomicSubtract_Texture1DArray_Int16;
inline constexpr auto TextureAtomicSubtract_Texture1DArray_Int16_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture1DArray_Int16_backend_index = 2758u;

/// textureAtomicSubtract with Texture2DArray, Int32x3, UInt32
extern Variable TextureAtomicSubtract_Texture2DArray_UInt32_texture;
extern Variable TextureAtomicSubtract_Texture2DArray_UInt32_coordinate;
extern Variable TextureAtomicSubtract_Texture2DArray_UInt32_value;
extern Function TextureAtomicSubtract_Texture2DArray_UInt32;
inline constexpr auto TextureAtomicSubtract_Texture2DArray_UInt32_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture2DArray_UInt32_backend_index = 2759u;

/// textureAtomicSubtract with Texture2DArray, Int32x3, Int32
extern Variable TextureAtomicSubtract_Texture2DArray_Int32_texture;
extern Variable TextureAtomicSubtract_Texture2DArray_Int32_coordinate;
extern Variable TextureAtomicSubtract_Texture2DArray_Int32_value;
extern Function TextureAtomicSubtract_Texture2DArray_Int32;
inline constexpr auto TextureAtomicSubtract_Texture2DArray_Int32_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture2DArray_Int32_backend_index = 2760u;

/// textureAtomicSubtract with Texture2DArray, Int32x3, UInt16
extern Variable TextureAtomicSubtract_Texture2DArray_UInt16_texture;
extern Variable TextureAtomicSubtract_Texture2DArray_UInt16_coordinate;
extern Variable TextureAtomicSubtract_Texture2DArray_UInt16_value;
extern Function TextureAtomicSubtract_Texture2DArray_UInt16;
inline constexpr auto TextureAtomicSubtract_Texture2DArray_UInt16_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture2DArray_UInt16_backend_index = 2761u;

/// textureAtomicSubtract with Texture2DArray, Int32x3, Int16
extern Variable TextureAtomicSubtract_Texture2DArray_Int16_texture;
extern Variable TextureAtomicSubtract_Texture2DArray_Int16_coordinate;
extern Variable TextureAtomicSubtract_Texture2DArray_Int16_value;
extern Function TextureAtomicSubtract_Texture2DArray_Int16;
inline constexpr auto TextureAtomicSubtract_Texture2DArray_Int16_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_Texture2DArray_Int16_backend_index = 2762u;

/// textureAtomicSubtract with TextureCubeArray, Int32x4, UInt32
extern Variable TextureAtomicSubtract_TextureCubeArray_UInt32_texture;
extern Variable TextureAtomicSubtract_TextureCubeArray_UInt32_coordinate;
extern Variable TextureAtomicSubtract_TextureCubeArray_UInt32_value;
extern Function TextureAtomicSubtract_TextureCubeArray_UInt32;
inline constexpr auto TextureAtomicSubtract_TextureCubeArray_UInt32_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_TextureCubeArray_UInt32_backend_index = 2763u;

/// textureAtomicSubtract with TextureCubeArray, Int32x4, Int32
extern Variable TextureAtomicSubtract_TextureCubeArray_Int32_texture;
extern Variable TextureAtomicSubtract_TextureCubeArray_Int32_coordinate;
extern Variable TextureAtomicSubtract_TextureCubeArray_Int32_value;
extern Function TextureAtomicSubtract_TextureCubeArray_Int32;
inline constexpr auto TextureAtomicSubtract_TextureCubeArray_Int32_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_TextureCubeArray_Int32_backend_index = 2764u;

/// textureAtomicSubtract with TextureCubeArray, Int32x4, UInt16
extern Variable TextureAtomicSubtract_TextureCubeArray_UInt16_texture;
extern Variable TextureAtomicSubtract_TextureCubeArray_UInt16_coordinate;
extern Variable TextureAtomicSubtract_TextureCubeArray_UInt16_value;
extern Function TextureAtomicSubtract_TextureCubeArray_UInt16;
inline constexpr auto TextureAtomicSubtract_TextureCubeArray_UInt16_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_TextureCubeArray_UInt16_backend_index = 2765u;

/// textureAtomicSubtract with TextureCubeArray, Int32x4, Int16
extern Variable TextureAtomicSubtract_TextureCubeArray_Int16_texture;
extern Variable TextureAtomicSubtract_TextureCubeArray_Int16_coordinate;
extern Variable TextureAtomicSubtract_TextureCubeArray_Int16_value;
extern Function TextureAtomicSubtract_TextureCubeArray_Int16;
inline constexpr auto TextureAtomicSubtract_TextureCubeArray_Int16_name = "textureAtomicSubtract"_c;
inline constexpr auto TextureAtomicSubtract_TextureCubeArray_Int16_backend_index = 2766u;

/// textureAtomicMin with Texture1D, Int32, UInt32
extern Variable TextureAtomicMin_Texture1D_UInt32_texture;
extern Variable TextureAtomicMin_Texture1D_UInt32_coordinate;
extern Variable TextureAtomicMin_Texture1D_UInt32_value;
extern Function TextureAtomicMin_Texture1D_UInt32;
inline constexpr auto TextureAtomicMin_Texture1D_UInt32_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture1D_UInt32_backend_index = 2767u;

/// textureAtomicMin with Texture1D, Int32, Int32
extern Variable TextureAtomicMin_Texture1D_Int32_texture;
extern Variable TextureAtomicMin_Texture1D_Int32_coordinate;
extern Variable TextureAtomicMin_Texture1D_Int32_value;
extern Function TextureAtomicMin_Texture1D_Int32;
inline constexpr auto TextureAtomicMin_Texture1D_Int32_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture1D_Int32_backend_index = 2768u;

/// textureAtomicMin with Texture1D, Int32, UInt16
extern Variable TextureAtomicMin_Texture1D_UInt16_texture;
extern Variable TextureAtomicMin_Texture1D_UInt16_coordinate;
extern Variable TextureAtomicMin_Texture1D_UInt16_value;
extern Function TextureAtomicMin_Texture1D_UInt16;
inline constexpr auto TextureAtomicMin_Texture1D_UInt16_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture1D_UInt16_backend_index = 2769u;

/// textureAtomicMin with Texture1D, Int32, Int16
extern Variable TextureAtomicMin_Texture1D_Int16_texture;
extern Variable TextureAtomicMin_Texture1D_Int16_coordinate;
extern Variable TextureAtomicMin_Texture1D_Int16_value;
extern Function TextureAtomicMin_Texture1D_Int16;
inline constexpr auto TextureAtomicMin_Texture1D_Int16_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture1D_Int16_backend_index = 2770u;

/// textureAtomicMin with Texture2D, Int32x2, UInt32
extern Variable TextureAtomicMin_Texture2D_UInt32_texture;
extern Variable TextureAtomicMin_Texture2D_UInt32_coordinate;
extern Variable TextureAtomicMin_Texture2D_UInt32_value;
extern Function TextureAtomicMin_Texture2D_UInt32;
inline constexpr auto TextureAtomicMin_Texture2D_UInt32_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture2D_UInt32_backend_index = 2771u;

/// textureAtomicMin with Texture2D, Int32x2, Int32
extern Variable TextureAtomicMin_Texture2D_Int32_texture;
extern Variable TextureAtomicMin_Texture2D_Int32_coordinate;
extern Variable TextureAtomicMin_Texture2D_Int32_value;
extern Function TextureAtomicMin_Texture2D_Int32;
inline constexpr auto TextureAtomicMin_Texture2D_Int32_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture2D_Int32_backend_index = 2772u;

/// textureAtomicMin with Texture2D, Int32x2, UInt16
extern Variable TextureAtomicMin_Texture2D_UInt16_texture;
extern Variable TextureAtomicMin_Texture2D_UInt16_coordinate;
extern Variable TextureAtomicMin_Texture2D_UInt16_value;
extern Function TextureAtomicMin_Texture2D_UInt16;
inline constexpr auto TextureAtomicMin_Texture2D_UInt16_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture2D_UInt16_backend_index = 2773u;

/// textureAtomicMin with Texture2D, Int32x2, Int16
extern Variable TextureAtomicMin_Texture2D_Int16_texture;
extern Variable TextureAtomicMin_Texture2D_Int16_coordinate;
extern Variable TextureAtomicMin_Texture2D_Int16_value;
extern Function TextureAtomicMin_Texture2D_Int16;
inline constexpr auto TextureAtomicMin_Texture2D_Int16_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture2D_Int16_backend_index = 2774u;

/// textureAtomicMin with Texture3D, Int32x3, UInt32
extern Variable TextureAtomicMin_Texture3D_UInt32_texture;
extern Variable TextureAtomicMin_Texture3D_UInt32_coordinate;
extern Variable TextureAtomicMin_Texture3D_UInt32_value;
extern Function TextureAtomicMin_Texture3D_UInt32;
inline constexpr auto TextureAtomicMin_Texture3D_UInt32_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture3D_UInt32_backend_index = 2775u;

/// textureAtomicMin with Texture3D, Int32x3, Int32
extern Variable TextureAtomicMin_Texture3D_Int32_texture;
extern Variable TextureAtomicMin_Texture3D_Int32_coordinate;
extern Variable TextureAtomicMin_Texture3D_Int32_value;
extern Function TextureAtomicMin_Texture3D_Int32;
inline constexpr auto TextureAtomicMin_Texture3D_Int32_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture3D_Int32_backend_index = 2776u;

/// textureAtomicMin with Texture3D, Int32x3, UInt16
extern Variable TextureAtomicMin_Texture3D_UInt16_texture;
extern Variable TextureAtomicMin_Texture3D_UInt16_coordinate;
extern Variable TextureAtomicMin_Texture3D_UInt16_value;
extern Function TextureAtomicMin_Texture3D_UInt16;
inline constexpr auto TextureAtomicMin_Texture3D_UInt16_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture3D_UInt16_backend_index = 2777u;

/// textureAtomicMin with Texture3D, Int32x3, Int16
extern Variable TextureAtomicMin_Texture3D_Int16_texture;
extern Variable TextureAtomicMin_Texture3D_Int16_coordinate;
extern Variable TextureAtomicMin_Texture3D_Int16_value;
extern Function TextureAtomicMin_Texture3D_Int16;
inline constexpr auto TextureAtomicMin_Texture3D_Int16_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture3D_Int16_backend_index = 2778u;

/// textureAtomicMin with TextureCube, Int32x3, UInt32
extern Variable TextureAtomicMin_TextureCube_UInt32_texture;
extern Variable TextureAtomicMin_TextureCube_UInt32_coordinate;
extern Variable TextureAtomicMin_TextureCube_UInt32_value;
extern Function TextureAtomicMin_TextureCube_UInt32;
inline constexpr auto TextureAtomicMin_TextureCube_UInt32_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_TextureCube_UInt32_backend_index = 2779u;

/// textureAtomicMin with TextureCube, Int32x3, Int32
extern Variable TextureAtomicMin_TextureCube_Int32_texture;
extern Variable TextureAtomicMin_TextureCube_Int32_coordinate;
extern Variable TextureAtomicMin_TextureCube_Int32_value;
extern Function TextureAtomicMin_TextureCube_Int32;
inline constexpr auto TextureAtomicMin_TextureCube_Int32_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_TextureCube_Int32_backend_index = 2780u;

/// textureAtomicMin with TextureCube, Int32x3, UInt16
extern Variable TextureAtomicMin_TextureCube_UInt16_texture;
extern Variable TextureAtomicMin_TextureCube_UInt16_coordinate;
extern Variable TextureAtomicMin_TextureCube_UInt16_value;
extern Function TextureAtomicMin_TextureCube_UInt16;
inline constexpr auto TextureAtomicMin_TextureCube_UInt16_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_TextureCube_UInt16_backend_index = 2781u;

/// textureAtomicMin with TextureCube, Int32x3, Int16
extern Variable TextureAtomicMin_TextureCube_Int16_texture;
extern Variable TextureAtomicMin_TextureCube_Int16_coordinate;
extern Variable TextureAtomicMin_TextureCube_Int16_value;
extern Function TextureAtomicMin_TextureCube_Int16;
inline constexpr auto TextureAtomicMin_TextureCube_Int16_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_TextureCube_Int16_backend_index = 2782u;

/// textureAtomicMin with Texture1DArray, Int32x2, UInt32
extern Variable TextureAtomicMin_Texture1DArray_UInt32_texture;
extern Variable TextureAtomicMin_Texture1DArray_UInt32_coordinate;
extern Variable TextureAtomicMin_Texture1DArray_UInt32_value;
extern Function TextureAtomicMin_Texture1DArray_UInt32;
inline constexpr auto TextureAtomicMin_Texture1DArray_UInt32_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture1DArray_UInt32_backend_index = 2783u;

/// textureAtomicMin with Texture1DArray, Int32x2, Int32
extern Variable TextureAtomicMin_Texture1DArray_Int32_texture;
extern Variable TextureAtomicMin_Texture1DArray_Int32_coordinate;
extern Variable TextureAtomicMin_Texture1DArray_Int32_value;
extern Function TextureAtomicMin_Texture1DArray_Int32;
inline constexpr auto TextureAtomicMin_Texture1DArray_Int32_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture1DArray_Int32_backend_index = 2784u;

/// textureAtomicMin with Texture1DArray, Int32x2, UInt16
extern Variable TextureAtomicMin_Texture1DArray_UInt16_texture;
extern Variable TextureAtomicMin_Texture1DArray_UInt16_coordinate;
extern Variable TextureAtomicMin_Texture1DArray_UInt16_value;
extern Function TextureAtomicMin_Texture1DArray_UInt16;
inline constexpr auto TextureAtomicMin_Texture1DArray_UInt16_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture1DArray_UInt16_backend_index = 2785u;

/// textureAtomicMin with Texture1DArray, Int32x2, Int16
extern Variable TextureAtomicMin_Texture1DArray_Int16_texture;
extern Variable TextureAtomicMin_Texture1DArray_Int16_coordinate;
extern Variable TextureAtomicMin_Texture1DArray_Int16_value;
extern Function TextureAtomicMin_Texture1DArray_Int16;
inline constexpr auto TextureAtomicMin_Texture1DArray_Int16_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture1DArray_Int16_backend_index = 2786u;

/// textureAtomicMin with Texture2DArray, Int32x3, UInt32
extern Variable TextureAtomicMin_Texture2DArray_UInt32_texture;
extern Variable TextureAtomicMin_Texture2DArray_UInt32_coordinate;
extern Variable TextureAtomicMin_Texture2DArray_UInt32_value;
extern Function TextureAtomicMin_Texture2DArray_UInt32;
inline constexpr auto TextureAtomicMin_Texture2DArray_UInt32_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture2DArray_UInt32_backend_index = 2787u;

/// textureAtomicMin with Texture2DArray, Int32x3, Int32
extern Variable TextureAtomicMin_Texture2DArray_Int32_texture;
extern Variable TextureAtomicMin_Texture2DArray_Int32_coordinate;
extern Variable TextureAtomicMin_Texture2DArray_Int32_value;
extern Function TextureAtomicMin_Texture2DArray_Int32;
inline constexpr auto TextureAtomicMin_Texture2DArray_Int32_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture2DArray_Int32_backend_index = 2788u;

/// textureAtomicMin with Texture2DArray, Int32x3, UInt16
extern Variable TextureAtomicMin_Texture2DArray_UInt16_texture;
extern Variable TextureAtomicMin_Texture2DArray_UInt16_coordinate;
extern Variable TextureAtomicMin_Texture2DArray_UInt16_value;
extern Function TextureAtomicMin_Texture2DArray_UInt16;
inline constexpr auto TextureAtomicMin_Texture2DArray_UInt16_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture2DArray_UInt16_backend_index = 2789u;

/// textureAtomicMin with Texture2DArray, Int32x3, Int16
extern Variable TextureAtomicMin_Texture2DArray_Int16_texture;
extern Variable TextureAtomicMin_Texture2DArray_Int16_coordinate;
extern Variable TextureAtomicMin_Texture2DArray_Int16_value;
extern Function TextureAtomicMin_Texture2DArray_Int16;
inline constexpr auto TextureAtomicMin_Texture2DArray_Int16_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_Texture2DArray_Int16_backend_index = 2790u;

/// textureAtomicMin with TextureCubeArray, Int32x4, UInt32
extern Variable TextureAtomicMin_TextureCubeArray_UInt32_texture;
extern Variable TextureAtomicMin_TextureCubeArray_UInt32_coordinate;
extern Variable TextureAtomicMin_TextureCubeArray_UInt32_value;
extern Function TextureAtomicMin_TextureCubeArray_UInt32;
inline constexpr auto TextureAtomicMin_TextureCubeArray_UInt32_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_TextureCubeArray_UInt32_backend_index = 2791u;

/// textureAtomicMin with TextureCubeArray, Int32x4, Int32
extern Variable TextureAtomicMin_TextureCubeArray_Int32_texture;
extern Variable TextureAtomicMin_TextureCubeArray_Int32_coordinate;
extern Variable TextureAtomicMin_TextureCubeArray_Int32_value;
extern Function TextureAtomicMin_TextureCubeArray_Int32;
inline constexpr auto TextureAtomicMin_TextureCubeArray_Int32_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_TextureCubeArray_Int32_backend_index = 2792u;

/// textureAtomicMin with TextureCubeArray, Int32x4, UInt16
extern Variable TextureAtomicMin_TextureCubeArray_UInt16_texture;
extern Variable TextureAtomicMin_TextureCubeArray_UInt16_coordinate;
extern Variable TextureAtomicMin_TextureCubeArray_UInt16_value;
extern Function TextureAtomicMin_TextureCubeArray_UInt16;
inline constexpr auto TextureAtomicMin_TextureCubeArray_UInt16_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_TextureCubeArray_UInt16_backend_index = 2793u;

/// textureAtomicMin with TextureCubeArray, Int32x4, Int16
extern Variable TextureAtomicMin_TextureCubeArray_Int16_texture;
extern Variable TextureAtomicMin_TextureCubeArray_Int16_coordinate;
extern Variable TextureAtomicMin_TextureCubeArray_Int16_value;
extern Function TextureAtomicMin_TextureCubeArray_Int16;
inline constexpr auto TextureAtomicMin_TextureCubeArray_Int16_name = "textureAtomicMin"_c;
inline constexpr auto TextureAtomicMin_TextureCubeArray_Int16_backend_index = 2794u;

/// textureAtomicMax with Texture1D, Int32, UInt32
extern Variable TextureAtomicMax_Texture1D_UInt32_texture;
extern Variable TextureAtomicMax_Texture1D_UInt32_coordinate;
extern Variable TextureAtomicMax_Texture1D_UInt32_value;
extern Function TextureAtomicMax_Texture1D_UInt32;
inline constexpr auto TextureAtomicMax_Texture1D_UInt32_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture1D_UInt32_backend_index = 2795u;

/// textureAtomicMax with Texture1D, Int32, Int32
extern Variable TextureAtomicMax_Texture1D_Int32_texture;
extern Variable TextureAtomicMax_Texture1D_Int32_coordinate;
extern Variable TextureAtomicMax_Texture1D_Int32_value;
extern Function TextureAtomicMax_Texture1D_Int32;
inline constexpr auto TextureAtomicMax_Texture1D_Int32_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture1D_Int32_backend_index = 2796u;

/// textureAtomicMax with Texture1D, Int32, UInt16
extern Variable TextureAtomicMax_Texture1D_UInt16_texture;
extern Variable TextureAtomicMax_Texture1D_UInt16_coordinate;
extern Variable TextureAtomicMax_Texture1D_UInt16_value;
extern Function TextureAtomicMax_Texture1D_UInt16;
inline constexpr auto TextureAtomicMax_Texture1D_UInt16_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture1D_UInt16_backend_index = 2797u;

/// textureAtomicMax with Texture1D, Int32, Int16
extern Variable TextureAtomicMax_Texture1D_Int16_texture;
extern Variable TextureAtomicMax_Texture1D_Int16_coordinate;
extern Variable TextureAtomicMax_Texture1D_Int16_value;
extern Function TextureAtomicMax_Texture1D_Int16;
inline constexpr auto TextureAtomicMax_Texture1D_Int16_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture1D_Int16_backend_index = 2798u;

/// textureAtomicMax with Texture2D, Int32x2, UInt32
extern Variable TextureAtomicMax_Texture2D_UInt32_texture;
extern Variable TextureAtomicMax_Texture2D_UInt32_coordinate;
extern Variable TextureAtomicMax_Texture2D_UInt32_value;
extern Function TextureAtomicMax_Texture2D_UInt32;
inline constexpr auto TextureAtomicMax_Texture2D_UInt32_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture2D_UInt32_backend_index = 2799u;

/// textureAtomicMax with Texture2D, Int32x2, Int32
extern Variable TextureAtomicMax_Texture2D_Int32_texture;
extern Variable TextureAtomicMax_Texture2D_Int32_coordinate;
extern Variable TextureAtomicMax_Texture2D_Int32_value;
extern Function TextureAtomicMax_Texture2D_Int32;
inline constexpr auto TextureAtomicMax_Texture2D_Int32_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture2D_Int32_backend_index = 2800u;

/// textureAtomicMax with Texture2D, Int32x2, UInt16
extern Variable TextureAtomicMax_Texture2D_UInt16_texture;
extern Variable TextureAtomicMax_Texture2D_UInt16_coordinate;
extern Variable TextureAtomicMax_Texture2D_UInt16_value;
extern Function TextureAtomicMax_Texture2D_UInt16;
inline constexpr auto TextureAtomicMax_Texture2D_UInt16_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture2D_UInt16_backend_index = 2801u;

/// textureAtomicMax with Texture2D, Int32x2, Int16
extern Variable TextureAtomicMax_Texture2D_Int16_texture;
extern Variable TextureAtomicMax_Texture2D_Int16_coordinate;
extern Variable TextureAtomicMax_Texture2D_Int16_value;
extern Function TextureAtomicMax_Texture2D_Int16;
inline constexpr auto TextureAtomicMax_Texture2D_Int16_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture2D_Int16_backend_index = 2802u;

/// textureAtomicMax with Texture3D, Int32x3, UInt32
extern Variable TextureAtomicMax_Texture3D_UInt32_texture;
extern Variable TextureAtomicMax_Texture3D_UInt32_coordinate;
extern Variable TextureAtomicMax_Texture3D_UInt32_value;
extern Function TextureAtomicMax_Texture3D_UInt32;
inline constexpr auto TextureAtomicMax_Texture3D_UInt32_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture3D_UInt32_backend_index = 2803u;

/// textureAtomicMax with Texture3D, Int32x3, Int32
extern Variable TextureAtomicMax_Texture3D_Int32_texture;
extern Variable TextureAtomicMax_Texture3D_Int32_coordinate;
extern Variable TextureAtomicMax_Texture3D_Int32_value;
extern Function TextureAtomicMax_Texture3D_Int32;
inline constexpr auto TextureAtomicMax_Texture3D_Int32_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture3D_Int32_backend_index = 2804u;

/// textureAtomicMax with Texture3D, Int32x3, UInt16
extern Variable TextureAtomicMax_Texture3D_UInt16_texture;
extern Variable TextureAtomicMax_Texture3D_UInt16_coordinate;
extern Variable TextureAtomicMax_Texture3D_UInt16_value;
extern Function TextureAtomicMax_Texture3D_UInt16;
inline constexpr auto TextureAtomicMax_Texture3D_UInt16_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture3D_UInt16_backend_index = 2805u;

/// textureAtomicMax with Texture3D, Int32x3, Int16
extern Variable TextureAtomicMax_Texture3D_Int16_texture;
extern Variable TextureAtomicMax_Texture3D_Int16_coordinate;
extern Variable TextureAtomicMax_Texture3D_Int16_value;
extern Function TextureAtomicMax_Texture3D_Int16;
inline constexpr auto TextureAtomicMax_Texture3D_Int16_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture3D_Int16_backend_index = 2806u;

/// textureAtomicMax with TextureCube, Int32x3, UInt32
extern Variable TextureAtomicMax_TextureCube_UInt32_texture;
extern Variable TextureAtomicMax_TextureCube_UInt32_coordinate;
extern Variable TextureAtomicMax_TextureCube_UInt32_value;
extern Function TextureAtomicMax_TextureCube_UInt32;
inline constexpr auto TextureAtomicMax_TextureCube_UInt32_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_TextureCube_UInt32_backend_index = 2807u;

/// textureAtomicMax with TextureCube, Int32x3, Int32
extern Variable TextureAtomicMax_TextureCube_Int32_texture;
extern Variable TextureAtomicMax_TextureCube_Int32_coordinate;
extern Variable TextureAtomicMax_TextureCube_Int32_value;
extern Function TextureAtomicMax_TextureCube_Int32;
inline constexpr auto TextureAtomicMax_TextureCube_Int32_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_TextureCube_Int32_backend_index = 2808u;

/// textureAtomicMax with TextureCube, Int32x3, UInt16
extern Variable TextureAtomicMax_TextureCube_UInt16_texture;
extern Variable TextureAtomicMax_TextureCube_UInt16_coordinate;
extern Variable TextureAtomicMax_TextureCube_UInt16_value;
extern Function TextureAtomicMax_TextureCube_UInt16;
inline constexpr auto TextureAtomicMax_TextureCube_UInt16_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_TextureCube_UInt16_backend_index = 2809u;

/// textureAtomicMax with TextureCube, Int32x3, Int16
extern Variable TextureAtomicMax_TextureCube_Int16_texture;
extern Variable TextureAtomicMax_TextureCube_Int16_coordinate;
extern Variable TextureAtomicMax_TextureCube_Int16_value;
extern Function TextureAtomicMax_TextureCube_Int16;
inline constexpr auto TextureAtomicMax_TextureCube_Int16_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_TextureCube_Int16_backend_index = 2810u;

/// textureAtomicMax with Texture1DArray, Int32x2, UInt32
extern Variable TextureAtomicMax_Texture1DArray_UInt32_texture;
extern Variable TextureAtomicMax_Texture1DArray_UInt32_coordinate;
extern Variable TextureAtomicMax_Texture1DArray_UInt32_value;
extern Function TextureAtomicMax_Texture1DArray_UInt32;
inline constexpr auto TextureAtomicMax_Texture1DArray_UInt32_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture1DArray_UInt32_backend_index = 2811u;

/// textureAtomicMax with Texture1DArray, Int32x2, Int32
extern Variable TextureAtomicMax_Texture1DArray_Int32_texture;
extern Variable TextureAtomicMax_Texture1DArray_Int32_coordinate;
extern Variable TextureAtomicMax_Texture1DArray_Int32_value;
extern Function TextureAtomicMax_Texture1DArray_Int32;
inline constexpr auto TextureAtomicMax_Texture1DArray_Int32_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture1DArray_Int32_backend_index = 2812u;

/// textureAtomicMax with Texture1DArray, Int32x2, UInt16
extern Variable TextureAtomicMax_Texture1DArray_UInt16_texture;
extern Variable TextureAtomicMax_Texture1DArray_UInt16_coordinate;
extern Variable TextureAtomicMax_Texture1DArray_UInt16_value;
extern Function TextureAtomicMax_Texture1DArray_UInt16;
inline constexpr auto TextureAtomicMax_Texture1DArray_UInt16_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture1DArray_UInt16_backend_index = 2813u;

/// textureAtomicMax with Texture1DArray, Int32x2, Int16
extern Variable TextureAtomicMax_Texture1DArray_Int16_texture;
extern Variable TextureAtomicMax_Texture1DArray_Int16_coordinate;
extern Variable TextureAtomicMax_Texture1DArray_Int16_value;
extern Function TextureAtomicMax_Texture1DArray_Int16;
inline constexpr auto TextureAtomicMax_Texture1DArray_Int16_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture1DArray_Int16_backend_index = 2814u;

/// textureAtomicMax with Texture2DArray, Int32x3, UInt32
extern Variable TextureAtomicMax_Texture2DArray_UInt32_texture;
extern Variable TextureAtomicMax_Texture2DArray_UInt32_coordinate;
extern Variable TextureAtomicMax_Texture2DArray_UInt32_value;
extern Function TextureAtomicMax_Texture2DArray_UInt32;
inline constexpr auto TextureAtomicMax_Texture2DArray_UInt32_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture2DArray_UInt32_backend_index = 2815u;

/// textureAtomicMax with Texture2DArray, Int32x3, Int32
extern Variable TextureAtomicMax_Texture2DArray_Int32_texture;
extern Variable TextureAtomicMax_Texture2DArray_Int32_coordinate;
extern Variable TextureAtomicMax_Texture2DArray_Int32_value;
extern Function TextureAtomicMax_Texture2DArray_Int32;
inline constexpr auto TextureAtomicMax_Texture2DArray_Int32_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture2DArray_Int32_backend_index = 2816u;

/// textureAtomicMax with Texture2DArray, Int32x3, UInt16
extern Variable TextureAtomicMax_Texture2DArray_UInt16_texture;
extern Variable TextureAtomicMax_Texture2DArray_UInt16_coordinate;
extern Variable TextureAtomicMax_Texture2DArray_UInt16_value;
extern Function TextureAtomicMax_Texture2DArray_UInt16;
inline constexpr auto TextureAtomicMax_Texture2DArray_UInt16_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture2DArray_UInt16_backend_index = 2817u;

/// textureAtomicMax with Texture2DArray, Int32x3, Int16
extern Variable TextureAtomicMax_Texture2DArray_Int16_texture;
extern Variable TextureAtomicMax_Texture2DArray_Int16_coordinate;
extern Variable TextureAtomicMax_Texture2DArray_Int16_value;
extern Function TextureAtomicMax_Texture2DArray_Int16;
inline constexpr auto TextureAtomicMax_Texture2DArray_Int16_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_Texture2DArray_Int16_backend_index = 2818u;

/// textureAtomicMax with TextureCubeArray, Int32x4, UInt32
extern Variable TextureAtomicMax_TextureCubeArray_UInt32_texture;
extern Variable TextureAtomicMax_TextureCubeArray_UInt32_coordinate;
extern Variable TextureAtomicMax_TextureCubeArray_UInt32_value;
extern Function TextureAtomicMax_TextureCubeArray_UInt32;
inline constexpr auto TextureAtomicMax_TextureCubeArray_UInt32_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_TextureCubeArray_UInt32_backend_index = 2819u;

/// textureAtomicMax with TextureCubeArray, Int32x4, Int32
extern Variable TextureAtomicMax_TextureCubeArray_Int32_texture;
extern Variable TextureAtomicMax_TextureCubeArray_Int32_coordinate;
extern Variable TextureAtomicMax_TextureCubeArray_Int32_value;
extern Function TextureAtomicMax_TextureCubeArray_Int32;
inline constexpr auto TextureAtomicMax_TextureCubeArray_Int32_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_TextureCubeArray_Int32_backend_index = 2820u;

/// textureAtomicMax with TextureCubeArray, Int32x4, UInt16
extern Variable TextureAtomicMax_TextureCubeArray_UInt16_texture;
extern Variable TextureAtomicMax_TextureCubeArray_UInt16_coordinate;
extern Variable TextureAtomicMax_TextureCubeArray_UInt16_value;
extern Function TextureAtomicMax_TextureCubeArray_UInt16;
inline constexpr auto TextureAtomicMax_TextureCubeArray_UInt16_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_TextureCubeArray_UInt16_backend_index = 2821u;

/// textureAtomicMax with TextureCubeArray, Int32x4, Int16
extern Variable TextureAtomicMax_TextureCubeArray_Int16_texture;
extern Variable TextureAtomicMax_TextureCubeArray_Int16_coordinate;
extern Variable TextureAtomicMax_TextureCubeArray_Int16_value;
extern Function TextureAtomicMax_TextureCubeArray_Int16;
inline constexpr auto TextureAtomicMax_TextureCubeArray_Int16_name = "textureAtomicMax"_c;
inline constexpr auto TextureAtomicMax_TextureCubeArray_Int16_backend_index = 2822u;

/// textureAtomicAnd with Texture1D, Int32, UInt32
extern Variable TextureAtomicAnd_Texture1D_UInt32_texture;
extern Variable TextureAtomicAnd_Texture1D_UInt32_coordinate;
extern Variable TextureAtomicAnd_Texture1D_UInt32_value;
extern Function TextureAtomicAnd_Texture1D_UInt32;
inline constexpr auto TextureAtomicAnd_Texture1D_UInt32_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture1D_UInt32_backend_index = 2823u;

/// textureAtomicAnd with Texture1D, Int32, Int32
extern Variable TextureAtomicAnd_Texture1D_Int32_texture;
extern Variable TextureAtomicAnd_Texture1D_Int32_coordinate;
extern Variable TextureAtomicAnd_Texture1D_Int32_value;
extern Function TextureAtomicAnd_Texture1D_Int32;
inline constexpr auto TextureAtomicAnd_Texture1D_Int32_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture1D_Int32_backend_index = 2824u;

/// textureAtomicAnd with Texture1D, Int32, UInt16
extern Variable TextureAtomicAnd_Texture1D_UInt16_texture;
extern Variable TextureAtomicAnd_Texture1D_UInt16_coordinate;
extern Variable TextureAtomicAnd_Texture1D_UInt16_value;
extern Function TextureAtomicAnd_Texture1D_UInt16;
inline constexpr auto TextureAtomicAnd_Texture1D_UInt16_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture1D_UInt16_backend_index = 2825u;

/// textureAtomicAnd with Texture1D, Int32, Int16
extern Variable TextureAtomicAnd_Texture1D_Int16_texture;
extern Variable TextureAtomicAnd_Texture1D_Int16_coordinate;
extern Variable TextureAtomicAnd_Texture1D_Int16_value;
extern Function TextureAtomicAnd_Texture1D_Int16;
inline constexpr auto TextureAtomicAnd_Texture1D_Int16_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture1D_Int16_backend_index = 2826u;

/// textureAtomicAnd with Texture2D, Int32x2, UInt32
extern Variable TextureAtomicAnd_Texture2D_UInt32_texture;
extern Variable TextureAtomicAnd_Texture2D_UInt32_coordinate;
extern Variable TextureAtomicAnd_Texture2D_UInt32_value;
extern Function TextureAtomicAnd_Texture2D_UInt32;
inline constexpr auto TextureAtomicAnd_Texture2D_UInt32_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture2D_UInt32_backend_index = 2827u;

/// textureAtomicAnd with Texture2D, Int32x2, Int32
extern Variable TextureAtomicAnd_Texture2D_Int32_texture;
extern Variable TextureAtomicAnd_Texture2D_Int32_coordinate;
extern Variable TextureAtomicAnd_Texture2D_Int32_value;
extern Function TextureAtomicAnd_Texture2D_Int32;
inline constexpr auto TextureAtomicAnd_Texture2D_Int32_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture2D_Int32_backend_index = 2828u;

/// textureAtomicAnd with Texture2D, Int32x2, UInt16
extern Variable TextureAtomicAnd_Texture2D_UInt16_texture;
extern Variable TextureAtomicAnd_Texture2D_UInt16_coordinate;
extern Variable TextureAtomicAnd_Texture2D_UInt16_value;
extern Function TextureAtomicAnd_Texture2D_UInt16;
inline constexpr auto TextureAtomicAnd_Texture2D_UInt16_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture2D_UInt16_backend_index = 2829u;

/// textureAtomicAnd with Texture2D, Int32x2, Int16
extern Variable TextureAtomicAnd_Texture2D_Int16_texture;
extern Variable TextureAtomicAnd_Texture2D_Int16_coordinate;
extern Variable TextureAtomicAnd_Texture2D_Int16_value;
extern Function TextureAtomicAnd_Texture2D_Int16;
inline constexpr auto TextureAtomicAnd_Texture2D_Int16_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture2D_Int16_backend_index = 2830u;

/// textureAtomicAnd with Texture3D, Int32x3, UInt32
extern Variable TextureAtomicAnd_Texture3D_UInt32_texture;
extern Variable TextureAtomicAnd_Texture3D_UInt32_coordinate;
extern Variable TextureAtomicAnd_Texture3D_UInt32_value;
extern Function TextureAtomicAnd_Texture3D_UInt32;
inline constexpr auto TextureAtomicAnd_Texture3D_UInt32_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture3D_UInt32_backend_index = 2831u;

/// textureAtomicAnd with Texture3D, Int32x3, Int32
extern Variable TextureAtomicAnd_Texture3D_Int32_texture;
extern Variable TextureAtomicAnd_Texture3D_Int32_coordinate;
extern Variable TextureAtomicAnd_Texture3D_Int32_value;
extern Function TextureAtomicAnd_Texture3D_Int32;
inline constexpr auto TextureAtomicAnd_Texture3D_Int32_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture3D_Int32_backend_index = 2832u;

/// textureAtomicAnd with Texture3D, Int32x3, UInt16
extern Variable TextureAtomicAnd_Texture3D_UInt16_texture;
extern Variable TextureAtomicAnd_Texture3D_UInt16_coordinate;
extern Variable TextureAtomicAnd_Texture3D_UInt16_value;
extern Function TextureAtomicAnd_Texture3D_UInt16;
inline constexpr auto TextureAtomicAnd_Texture3D_UInt16_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture3D_UInt16_backend_index = 2833u;

/// textureAtomicAnd with Texture3D, Int32x3, Int16
extern Variable TextureAtomicAnd_Texture3D_Int16_texture;
extern Variable TextureAtomicAnd_Texture3D_Int16_coordinate;
extern Variable TextureAtomicAnd_Texture3D_Int16_value;
extern Function TextureAtomicAnd_Texture3D_Int16;
inline constexpr auto TextureAtomicAnd_Texture3D_Int16_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture3D_Int16_backend_index = 2834u;

/// textureAtomicAnd with TextureCube, Int32x3, UInt32
extern Variable TextureAtomicAnd_TextureCube_UInt32_texture;
extern Variable TextureAtomicAnd_TextureCube_UInt32_coordinate;
extern Variable TextureAtomicAnd_TextureCube_UInt32_value;
extern Function TextureAtomicAnd_TextureCube_UInt32;
inline constexpr auto TextureAtomicAnd_TextureCube_UInt32_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_TextureCube_UInt32_backend_index = 2835u;

/// textureAtomicAnd with TextureCube, Int32x3, Int32
extern Variable TextureAtomicAnd_TextureCube_Int32_texture;
extern Variable TextureAtomicAnd_TextureCube_Int32_coordinate;
extern Variable TextureAtomicAnd_TextureCube_Int32_value;
extern Function TextureAtomicAnd_TextureCube_Int32;
inline constexpr auto TextureAtomicAnd_TextureCube_Int32_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_TextureCube_Int32_backend_index = 2836u;

/// textureAtomicAnd with TextureCube, Int32x3, UInt16
extern Variable TextureAtomicAnd_TextureCube_UInt16_texture;
extern Variable TextureAtomicAnd_TextureCube_UInt16_coordinate;
extern Variable TextureAtomicAnd_TextureCube_UInt16_value;
extern Function TextureAtomicAnd_TextureCube_UInt16;
inline constexpr auto TextureAtomicAnd_TextureCube_UInt16_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_TextureCube_UInt16_backend_index = 2837u;

/// textureAtomicAnd with TextureCube, Int32x3, Int16
extern Variable TextureAtomicAnd_TextureCube_Int16_texture;
extern Variable TextureAtomicAnd_TextureCube_Int16_coordinate;
extern Variable TextureAtomicAnd_TextureCube_Int16_value;
extern Function TextureAtomicAnd_TextureCube_Int16;
inline constexpr auto TextureAtomicAnd_TextureCube_Int16_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_TextureCube_Int16_backend_index = 2838u;

/// textureAtomicAnd with Texture1DArray, Int32x2, UInt32
extern Variable TextureAtomicAnd_Texture1DArray_UInt32_texture;
extern Variable TextureAtomicAnd_Texture1DArray_UInt32_coordinate;
extern Variable TextureAtomicAnd_Texture1DArray_UInt32_value;
extern Function TextureAtomicAnd_Texture1DArray_UInt32;
inline constexpr auto TextureAtomicAnd_Texture1DArray_UInt32_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture1DArray_UInt32_backend_index = 2839u;

/// textureAtomicAnd with Texture1DArray, Int32x2, Int32
extern Variable TextureAtomicAnd_Texture1DArray_Int32_texture;
extern Variable TextureAtomicAnd_Texture1DArray_Int32_coordinate;
extern Variable TextureAtomicAnd_Texture1DArray_Int32_value;
extern Function TextureAtomicAnd_Texture1DArray_Int32;
inline constexpr auto TextureAtomicAnd_Texture1DArray_Int32_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture1DArray_Int32_backend_index = 2840u;

/// textureAtomicAnd with Texture1DArray, Int32x2, UInt16
extern Variable TextureAtomicAnd_Texture1DArray_UInt16_texture;
extern Variable TextureAtomicAnd_Texture1DArray_UInt16_coordinate;
extern Variable TextureAtomicAnd_Texture1DArray_UInt16_value;
extern Function TextureAtomicAnd_Texture1DArray_UInt16;
inline constexpr auto TextureAtomicAnd_Texture1DArray_UInt16_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture1DArray_UInt16_backend_index = 2841u;

/// textureAtomicAnd with Texture1DArray, Int32x2, Int16
extern Variable TextureAtomicAnd_Texture1DArray_Int16_texture;
extern Variable TextureAtomicAnd_Texture1DArray_Int16_coordinate;
extern Variable TextureAtomicAnd_Texture1DArray_Int16_value;
extern Function TextureAtomicAnd_Texture1DArray_Int16;
inline constexpr auto TextureAtomicAnd_Texture1DArray_Int16_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture1DArray_Int16_backend_index = 2842u;

/// textureAtomicAnd with Texture2DArray, Int32x3, UInt32
extern Variable TextureAtomicAnd_Texture2DArray_UInt32_texture;
extern Variable TextureAtomicAnd_Texture2DArray_UInt32_coordinate;
extern Variable TextureAtomicAnd_Texture2DArray_UInt32_value;
extern Function TextureAtomicAnd_Texture2DArray_UInt32;
inline constexpr auto TextureAtomicAnd_Texture2DArray_UInt32_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture2DArray_UInt32_backend_index = 2843u;

/// textureAtomicAnd with Texture2DArray, Int32x3, Int32
extern Variable TextureAtomicAnd_Texture2DArray_Int32_texture;
extern Variable TextureAtomicAnd_Texture2DArray_Int32_coordinate;
extern Variable TextureAtomicAnd_Texture2DArray_Int32_value;
extern Function TextureAtomicAnd_Texture2DArray_Int32;
inline constexpr auto TextureAtomicAnd_Texture2DArray_Int32_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture2DArray_Int32_backend_index = 2844u;

/// textureAtomicAnd with Texture2DArray, Int32x3, UInt16
extern Variable TextureAtomicAnd_Texture2DArray_UInt16_texture;
extern Variable TextureAtomicAnd_Texture2DArray_UInt16_coordinate;
extern Variable TextureAtomicAnd_Texture2DArray_UInt16_value;
extern Function TextureAtomicAnd_Texture2DArray_UInt16;
inline constexpr auto TextureAtomicAnd_Texture2DArray_UInt16_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture2DArray_UInt16_backend_index = 2845u;

/// textureAtomicAnd with Texture2DArray, Int32x3, Int16
extern Variable TextureAtomicAnd_Texture2DArray_Int16_texture;
extern Variable TextureAtomicAnd_Texture2DArray_Int16_coordinate;
extern Variable TextureAtomicAnd_Texture2DArray_Int16_value;
extern Function TextureAtomicAnd_Texture2DArray_Int16;
inline constexpr auto TextureAtomicAnd_Texture2DArray_Int16_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_Texture2DArray_Int16_backend_index = 2846u;

/// textureAtomicAnd with TextureCubeArray, Int32x4, UInt32
extern Variable TextureAtomicAnd_TextureCubeArray_UInt32_texture;
extern Variable TextureAtomicAnd_TextureCubeArray_UInt32_coordinate;
extern Variable TextureAtomicAnd_TextureCubeArray_UInt32_value;
extern Function TextureAtomicAnd_TextureCubeArray_UInt32;
inline constexpr auto TextureAtomicAnd_TextureCubeArray_UInt32_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_TextureCubeArray_UInt32_backend_index = 2847u;

/// textureAtomicAnd with TextureCubeArray, Int32x4, Int32
extern Variable TextureAtomicAnd_TextureCubeArray_Int32_texture;
extern Variable TextureAtomicAnd_TextureCubeArray_Int32_coordinate;
extern Variable TextureAtomicAnd_TextureCubeArray_Int32_value;
extern Function TextureAtomicAnd_TextureCubeArray_Int32;
inline constexpr auto TextureAtomicAnd_TextureCubeArray_Int32_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_TextureCubeArray_Int32_backend_index = 2848u;

/// textureAtomicAnd with TextureCubeArray, Int32x4, UInt16
extern Variable TextureAtomicAnd_TextureCubeArray_UInt16_texture;
extern Variable TextureAtomicAnd_TextureCubeArray_UInt16_coordinate;
extern Variable TextureAtomicAnd_TextureCubeArray_UInt16_value;
extern Function TextureAtomicAnd_TextureCubeArray_UInt16;
inline constexpr auto TextureAtomicAnd_TextureCubeArray_UInt16_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_TextureCubeArray_UInt16_backend_index = 2849u;

/// textureAtomicAnd with TextureCubeArray, Int32x4, Int16
extern Variable TextureAtomicAnd_TextureCubeArray_Int16_texture;
extern Variable TextureAtomicAnd_TextureCubeArray_Int16_coordinate;
extern Variable TextureAtomicAnd_TextureCubeArray_Int16_value;
extern Function TextureAtomicAnd_TextureCubeArray_Int16;
inline constexpr auto TextureAtomicAnd_TextureCubeArray_Int16_name = "textureAtomicAnd"_c;
inline constexpr auto TextureAtomicAnd_TextureCubeArray_Int16_backend_index = 2850u;

/// textureAtomicOr with Texture1D, Int32, UInt32
extern Variable TextureAtomicOr_Texture1D_UInt32_texture;
extern Variable TextureAtomicOr_Texture1D_UInt32_coordinate;
extern Variable TextureAtomicOr_Texture1D_UInt32_value;
extern Function TextureAtomicOr_Texture1D_UInt32;
inline constexpr auto TextureAtomicOr_Texture1D_UInt32_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture1D_UInt32_backend_index = 2851u;

/// textureAtomicOr with Texture1D, Int32, Int32
extern Variable TextureAtomicOr_Texture1D_Int32_texture;
extern Variable TextureAtomicOr_Texture1D_Int32_coordinate;
extern Variable TextureAtomicOr_Texture1D_Int32_value;
extern Function TextureAtomicOr_Texture1D_Int32;
inline constexpr auto TextureAtomicOr_Texture1D_Int32_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture1D_Int32_backend_index = 2852u;

/// textureAtomicOr with Texture1D, Int32, UInt16
extern Variable TextureAtomicOr_Texture1D_UInt16_texture;
extern Variable TextureAtomicOr_Texture1D_UInt16_coordinate;
extern Variable TextureAtomicOr_Texture1D_UInt16_value;
extern Function TextureAtomicOr_Texture1D_UInt16;
inline constexpr auto TextureAtomicOr_Texture1D_UInt16_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture1D_UInt16_backend_index = 2853u;

/// textureAtomicOr with Texture1D, Int32, Int16
extern Variable TextureAtomicOr_Texture1D_Int16_texture;
extern Variable TextureAtomicOr_Texture1D_Int16_coordinate;
extern Variable TextureAtomicOr_Texture1D_Int16_value;
extern Function TextureAtomicOr_Texture1D_Int16;
inline constexpr auto TextureAtomicOr_Texture1D_Int16_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture1D_Int16_backend_index = 2854u;

/// textureAtomicOr with Texture2D, Int32x2, UInt32
extern Variable TextureAtomicOr_Texture2D_UInt32_texture;
extern Variable TextureAtomicOr_Texture2D_UInt32_coordinate;
extern Variable TextureAtomicOr_Texture2D_UInt32_value;
extern Function TextureAtomicOr_Texture2D_UInt32;
inline constexpr auto TextureAtomicOr_Texture2D_UInt32_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture2D_UInt32_backend_index = 2855u;

/// textureAtomicOr with Texture2D, Int32x2, Int32
extern Variable TextureAtomicOr_Texture2D_Int32_texture;
extern Variable TextureAtomicOr_Texture2D_Int32_coordinate;
extern Variable TextureAtomicOr_Texture2D_Int32_value;
extern Function TextureAtomicOr_Texture2D_Int32;
inline constexpr auto TextureAtomicOr_Texture2D_Int32_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture2D_Int32_backend_index = 2856u;

/// textureAtomicOr with Texture2D, Int32x2, UInt16
extern Variable TextureAtomicOr_Texture2D_UInt16_texture;
extern Variable TextureAtomicOr_Texture2D_UInt16_coordinate;
extern Variable TextureAtomicOr_Texture2D_UInt16_value;
extern Function TextureAtomicOr_Texture2D_UInt16;
inline constexpr auto TextureAtomicOr_Texture2D_UInt16_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture2D_UInt16_backend_index = 2857u;

/// textureAtomicOr with Texture2D, Int32x2, Int16
extern Variable TextureAtomicOr_Texture2D_Int16_texture;
extern Variable TextureAtomicOr_Texture2D_Int16_coordinate;
extern Variable TextureAtomicOr_Texture2D_Int16_value;
extern Function TextureAtomicOr_Texture2D_Int16;
inline constexpr auto TextureAtomicOr_Texture2D_Int16_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture2D_Int16_backend_index = 2858u;

/// textureAtomicOr with Texture3D, Int32x3, UInt32
extern Variable TextureAtomicOr_Texture3D_UInt32_texture;
extern Variable TextureAtomicOr_Texture3D_UInt32_coordinate;
extern Variable TextureAtomicOr_Texture3D_UInt32_value;
extern Function TextureAtomicOr_Texture3D_UInt32;
inline constexpr auto TextureAtomicOr_Texture3D_UInt32_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture3D_UInt32_backend_index = 2859u;

/// textureAtomicOr with Texture3D, Int32x3, Int32
extern Variable TextureAtomicOr_Texture3D_Int32_texture;
extern Variable TextureAtomicOr_Texture3D_Int32_coordinate;
extern Variable TextureAtomicOr_Texture3D_Int32_value;
extern Function TextureAtomicOr_Texture3D_Int32;
inline constexpr auto TextureAtomicOr_Texture3D_Int32_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture3D_Int32_backend_index = 2860u;

/// textureAtomicOr with Texture3D, Int32x3, UInt16
extern Variable TextureAtomicOr_Texture3D_UInt16_texture;
extern Variable TextureAtomicOr_Texture3D_UInt16_coordinate;
extern Variable TextureAtomicOr_Texture3D_UInt16_value;
extern Function TextureAtomicOr_Texture3D_UInt16;
inline constexpr auto TextureAtomicOr_Texture3D_UInt16_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture3D_UInt16_backend_index = 2861u;

/// textureAtomicOr with Texture3D, Int32x3, Int16
extern Variable TextureAtomicOr_Texture3D_Int16_texture;
extern Variable TextureAtomicOr_Texture3D_Int16_coordinate;
extern Variable TextureAtomicOr_Texture3D_Int16_value;
extern Function TextureAtomicOr_Texture3D_Int16;
inline constexpr auto TextureAtomicOr_Texture3D_Int16_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture3D_Int16_backend_index = 2862u;

/// textureAtomicOr with TextureCube, Int32x3, UInt32
extern Variable TextureAtomicOr_TextureCube_UInt32_texture;
extern Variable TextureAtomicOr_TextureCube_UInt32_coordinate;
extern Variable TextureAtomicOr_TextureCube_UInt32_value;
extern Function TextureAtomicOr_TextureCube_UInt32;
inline constexpr auto TextureAtomicOr_TextureCube_UInt32_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_TextureCube_UInt32_backend_index = 2863u;

/// textureAtomicOr with TextureCube, Int32x3, Int32
extern Variable TextureAtomicOr_TextureCube_Int32_texture;
extern Variable TextureAtomicOr_TextureCube_Int32_coordinate;
extern Variable TextureAtomicOr_TextureCube_Int32_value;
extern Function TextureAtomicOr_TextureCube_Int32;
inline constexpr auto TextureAtomicOr_TextureCube_Int32_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_TextureCube_Int32_backend_index = 2864u;

/// textureAtomicOr with TextureCube, Int32x3, UInt16
extern Variable TextureAtomicOr_TextureCube_UInt16_texture;
extern Variable TextureAtomicOr_TextureCube_UInt16_coordinate;
extern Variable TextureAtomicOr_TextureCube_UInt16_value;
extern Function TextureAtomicOr_TextureCube_UInt16;
inline constexpr auto TextureAtomicOr_TextureCube_UInt16_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_TextureCube_UInt16_backend_index = 2865u;

/// textureAtomicOr with TextureCube, Int32x3, Int16
extern Variable TextureAtomicOr_TextureCube_Int16_texture;
extern Variable TextureAtomicOr_TextureCube_Int16_coordinate;
extern Variable TextureAtomicOr_TextureCube_Int16_value;
extern Function TextureAtomicOr_TextureCube_Int16;
inline constexpr auto TextureAtomicOr_TextureCube_Int16_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_TextureCube_Int16_backend_index = 2866u;

/// textureAtomicOr with Texture1DArray, Int32x2, UInt32
extern Variable TextureAtomicOr_Texture1DArray_UInt32_texture;
extern Variable TextureAtomicOr_Texture1DArray_UInt32_coordinate;
extern Variable TextureAtomicOr_Texture1DArray_UInt32_value;
extern Function TextureAtomicOr_Texture1DArray_UInt32;
inline constexpr auto TextureAtomicOr_Texture1DArray_UInt32_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture1DArray_UInt32_backend_index = 2867u;

/// textureAtomicOr with Texture1DArray, Int32x2, Int32
extern Variable TextureAtomicOr_Texture1DArray_Int32_texture;
extern Variable TextureAtomicOr_Texture1DArray_Int32_coordinate;
extern Variable TextureAtomicOr_Texture1DArray_Int32_value;
extern Function TextureAtomicOr_Texture1DArray_Int32;
inline constexpr auto TextureAtomicOr_Texture1DArray_Int32_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture1DArray_Int32_backend_index = 2868u;

/// textureAtomicOr with Texture1DArray, Int32x2, UInt16
extern Variable TextureAtomicOr_Texture1DArray_UInt16_texture;
extern Variable TextureAtomicOr_Texture1DArray_UInt16_coordinate;
extern Variable TextureAtomicOr_Texture1DArray_UInt16_value;
extern Function TextureAtomicOr_Texture1DArray_UInt16;
inline constexpr auto TextureAtomicOr_Texture1DArray_UInt16_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture1DArray_UInt16_backend_index = 2869u;

/// textureAtomicOr with Texture1DArray, Int32x2, Int16
extern Variable TextureAtomicOr_Texture1DArray_Int16_texture;
extern Variable TextureAtomicOr_Texture1DArray_Int16_coordinate;
extern Variable TextureAtomicOr_Texture1DArray_Int16_value;
extern Function TextureAtomicOr_Texture1DArray_Int16;
inline constexpr auto TextureAtomicOr_Texture1DArray_Int16_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture1DArray_Int16_backend_index = 2870u;

/// textureAtomicOr with Texture2DArray, Int32x3, UInt32
extern Variable TextureAtomicOr_Texture2DArray_UInt32_texture;
extern Variable TextureAtomicOr_Texture2DArray_UInt32_coordinate;
extern Variable TextureAtomicOr_Texture2DArray_UInt32_value;
extern Function TextureAtomicOr_Texture2DArray_UInt32;
inline constexpr auto TextureAtomicOr_Texture2DArray_UInt32_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture2DArray_UInt32_backend_index = 2871u;

/// textureAtomicOr with Texture2DArray, Int32x3, Int32
extern Variable TextureAtomicOr_Texture2DArray_Int32_texture;
extern Variable TextureAtomicOr_Texture2DArray_Int32_coordinate;
extern Variable TextureAtomicOr_Texture2DArray_Int32_value;
extern Function TextureAtomicOr_Texture2DArray_Int32;
inline constexpr auto TextureAtomicOr_Texture2DArray_Int32_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture2DArray_Int32_backend_index = 2872u;

/// textureAtomicOr with Texture2DArray, Int32x3, UInt16
extern Variable TextureAtomicOr_Texture2DArray_UInt16_texture;
extern Variable TextureAtomicOr_Texture2DArray_UInt16_coordinate;
extern Variable TextureAtomicOr_Texture2DArray_UInt16_value;
extern Function TextureAtomicOr_Texture2DArray_UInt16;
inline constexpr auto TextureAtomicOr_Texture2DArray_UInt16_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture2DArray_UInt16_backend_index = 2873u;

/// textureAtomicOr with Texture2DArray, Int32x3, Int16
extern Variable TextureAtomicOr_Texture2DArray_Int16_texture;
extern Variable TextureAtomicOr_Texture2DArray_Int16_coordinate;
extern Variable TextureAtomicOr_Texture2DArray_Int16_value;
extern Function TextureAtomicOr_Texture2DArray_Int16;
inline constexpr auto TextureAtomicOr_Texture2DArray_Int16_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_Texture2DArray_Int16_backend_index = 2874u;

/// textureAtomicOr with TextureCubeArray, Int32x4, UInt32
extern Variable TextureAtomicOr_TextureCubeArray_UInt32_texture;
extern Variable TextureAtomicOr_TextureCubeArray_UInt32_coordinate;
extern Variable TextureAtomicOr_TextureCubeArray_UInt32_value;
extern Function TextureAtomicOr_TextureCubeArray_UInt32;
inline constexpr auto TextureAtomicOr_TextureCubeArray_UInt32_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_TextureCubeArray_UInt32_backend_index = 2875u;

/// textureAtomicOr with TextureCubeArray, Int32x4, Int32
extern Variable TextureAtomicOr_TextureCubeArray_Int32_texture;
extern Variable TextureAtomicOr_TextureCubeArray_Int32_coordinate;
extern Variable TextureAtomicOr_TextureCubeArray_Int32_value;
extern Function TextureAtomicOr_TextureCubeArray_Int32;
inline constexpr auto TextureAtomicOr_TextureCubeArray_Int32_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_TextureCubeArray_Int32_backend_index = 2876u;

/// textureAtomicOr with TextureCubeArray, Int32x4, UInt16
extern Variable TextureAtomicOr_TextureCubeArray_UInt16_texture;
extern Variable TextureAtomicOr_TextureCubeArray_UInt16_coordinate;
extern Variable TextureAtomicOr_TextureCubeArray_UInt16_value;
extern Function TextureAtomicOr_TextureCubeArray_UInt16;
inline constexpr auto TextureAtomicOr_TextureCubeArray_UInt16_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_TextureCubeArray_UInt16_backend_index = 2877u;

/// textureAtomicOr with TextureCubeArray, Int32x4, Int16
extern Variable TextureAtomicOr_TextureCubeArray_Int16_texture;
extern Variable TextureAtomicOr_TextureCubeArray_Int16_coordinate;
extern Variable TextureAtomicOr_TextureCubeArray_Int16_value;
extern Function TextureAtomicOr_TextureCubeArray_Int16;
inline constexpr auto TextureAtomicOr_TextureCubeArray_Int16_name = "textureAtomicOr"_c;
inline constexpr auto TextureAtomicOr_TextureCubeArray_Int16_backend_index = 2878u;

/// textureAtomicXor with Texture1D, Int32, UInt32
extern Variable TextureAtomicXor_Texture1D_UInt32_texture;
extern Variable TextureAtomicXor_Texture1D_UInt32_coordinate;
extern Variable TextureAtomicXor_Texture1D_UInt32_value;
extern Function TextureAtomicXor_Texture1D_UInt32;
inline constexpr auto TextureAtomicXor_Texture1D_UInt32_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture1D_UInt32_backend_index = 2879u;

/// textureAtomicXor with Texture1D, Int32, Int32
extern Variable TextureAtomicXor_Texture1D_Int32_texture;
extern Variable TextureAtomicXor_Texture1D_Int32_coordinate;
extern Variable TextureAtomicXor_Texture1D_Int32_value;
extern Function TextureAtomicXor_Texture1D_Int32;
inline constexpr auto TextureAtomicXor_Texture1D_Int32_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture1D_Int32_backend_index = 2880u;

/// textureAtomicXor with Texture1D, Int32, UInt16
extern Variable TextureAtomicXor_Texture1D_UInt16_texture;
extern Variable TextureAtomicXor_Texture1D_UInt16_coordinate;
extern Variable TextureAtomicXor_Texture1D_UInt16_value;
extern Function TextureAtomicXor_Texture1D_UInt16;
inline constexpr auto TextureAtomicXor_Texture1D_UInt16_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture1D_UInt16_backend_index = 2881u;

/// textureAtomicXor with Texture1D, Int32, Int16
extern Variable TextureAtomicXor_Texture1D_Int16_texture;
extern Variable TextureAtomicXor_Texture1D_Int16_coordinate;
extern Variable TextureAtomicXor_Texture1D_Int16_value;
extern Function TextureAtomicXor_Texture1D_Int16;
inline constexpr auto TextureAtomicXor_Texture1D_Int16_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture1D_Int16_backend_index = 2882u;

/// textureAtomicXor with Texture2D, Int32x2, UInt32
extern Variable TextureAtomicXor_Texture2D_UInt32_texture;
extern Variable TextureAtomicXor_Texture2D_UInt32_coordinate;
extern Variable TextureAtomicXor_Texture2D_UInt32_value;
extern Function TextureAtomicXor_Texture2D_UInt32;
inline constexpr auto TextureAtomicXor_Texture2D_UInt32_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture2D_UInt32_backend_index = 2883u;

/// textureAtomicXor with Texture2D, Int32x2, Int32
extern Variable TextureAtomicXor_Texture2D_Int32_texture;
extern Variable TextureAtomicXor_Texture2D_Int32_coordinate;
extern Variable TextureAtomicXor_Texture2D_Int32_value;
extern Function TextureAtomicXor_Texture2D_Int32;
inline constexpr auto TextureAtomicXor_Texture2D_Int32_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture2D_Int32_backend_index = 2884u;

/// textureAtomicXor with Texture2D, Int32x2, UInt16
extern Variable TextureAtomicXor_Texture2D_UInt16_texture;
extern Variable TextureAtomicXor_Texture2D_UInt16_coordinate;
extern Variable TextureAtomicXor_Texture2D_UInt16_value;
extern Function TextureAtomicXor_Texture2D_UInt16;
inline constexpr auto TextureAtomicXor_Texture2D_UInt16_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture2D_UInt16_backend_index = 2885u;

/// textureAtomicXor with Texture2D, Int32x2, Int16
extern Variable TextureAtomicXor_Texture2D_Int16_texture;
extern Variable TextureAtomicXor_Texture2D_Int16_coordinate;
extern Variable TextureAtomicXor_Texture2D_Int16_value;
extern Function TextureAtomicXor_Texture2D_Int16;
inline constexpr auto TextureAtomicXor_Texture2D_Int16_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture2D_Int16_backend_index = 2886u;

/// textureAtomicXor with Texture3D, Int32x3, UInt32
extern Variable TextureAtomicXor_Texture3D_UInt32_texture;
extern Variable TextureAtomicXor_Texture3D_UInt32_coordinate;
extern Variable TextureAtomicXor_Texture3D_UInt32_value;
extern Function TextureAtomicXor_Texture3D_UInt32;
inline constexpr auto TextureAtomicXor_Texture3D_UInt32_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture3D_UInt32_backend_index = 2887u;

/// textureAtomicXor with Texture3D, Int32x3, Int32
extern Variable TextureAtomicXor_Texture3D_Int32_texture;
extern Variable TextureAtomicXor_Texture3D_Int32_coordinate;
extern Variable TextureAtomicXor_Texture3D_Int32_value;
extern Function TextureAtomicXor_Texture3D_Int32;
inline constexpr auto TextureAtomicXor_Texture3D_Int32_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture3D_Int32_backend_index = 2888u;

/// textureAtomicXor with Texture3D, Int32x3, UInt16
extern Variable TextureAtomicXor_Texture3D_UInt16_texture;
extern Variable TextureAtomicXor_Texture3D_UInt16_coordinate;
extern Variable TextureAtomicXor_Texture3D_UInt16_value;
extern Function TextureAtomicXor_Texture3D_UInt16;
inline constexpr auto TextureAtomicXor_Texture3D_UInt16_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture3D_UInt16_backend_index = 2889u;

/// textureAtomicXor with Texture3D, Int32x3, Int16
extern Variable TextureAtomicXor_Texture3D_Int16_texture;
extern Variable TextureAtomicXor_Texture3D_Int16_coordinate;
extern Variable TextureAtomicXor_Texture3D_Int16_value;
extern Function TextureAtomicXor_Texture3D_Int16;
inline constexpr auto TextureAtomicXor_Texture3D_Int16_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture3D_Int16_backend_index = 2890u;

/// textureAtomicXor with TextureCube, Int32x3, UInt32
extern Variable TextureAtomicXor_TextureCube_UInt32_texture;
extern Variable TextureAtomicXor_TextureCube_UInt32_coordinate;
extern Variable TextureAtomicXor_TextureCube_UInt32_value;
extern Function TextureAtomicXor_TextureCube_UInt32;
inline constexpr auto TextureAtomicXor_TextureCube_UInt32_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_TextureCube_UInt32_backend_index = 2891u;

/// textureAtomicXor with TextureCube, Int32x3, Int32
extern Variable TextureAtomicXor_TextureCube_Int32_texture;
extern Variable TextureAtomicXor_TextureCube_Int32_coordinate;
extern Variable TextureAtomicXor_TextureCube_Int32_value;
extern Function TextureAtomicXor_TextureCube_Int32;
inline constexpr auto TextureAtomicXor_TextureCube_Int32_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_TextureCube_Int32_backend_index = 2892u;

/// textureAtomicXor with TextureCube, Int32x3, UInt16
extern Variable TextureAtomicXor_TextureCube_UInt16_texture;
extern Variable TextureAtomicXor_TextureCube_UInt16_coordinate;
extern Variable TextureAtomicXor_TextureCube_UInt16_value;
extern Function TextureAtomicXor_TextureCube_UInt16;
inline constexpr auto TextureAtomicXor_TextureCube_UInt16_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_TextureCube_UInt16_backend_index = 2893u;

/// textureAtomicXor with TextureCube, Int32x3, Int16
extern Variable TextureAtomicXor_TextureCube_Int16_texture;
extern Variable TextureAtomicXor_TextureCube_Int16_coordinate;
extern Variable TextureAtomicXor_TextureCube_Int16_value;
extern Function TextureAtomicXor_TextureCube_Int16;
inline constexpr auto TextureAtomicXor_TextureCube_Int16_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_TextureCube_Int16_backend_index = 2894u;

/// textureAtomicXor with Texture1DArray, Int32x2, UInt32
extern Variable TextureAtomicXor_Texture1DArray_UInt32_texture;
extern Variable TextureAtomicXor_Texture1DArray_UInt32_coordinate;
extern Variable TextureAtomicXor_Texture1DArray_UInt32_value;
extern Function TextureAtomicXor_Texture1DArray_UInt32;
inline constexpr auto TextureAtomicXor_Texture1DArray_UInt32_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture1DArray_UInt32_backend_index = 2895u;

/// textureAtomicXor with Texture1DArray, Int32x2, Int32
extern Variable TextureAtomicXor_Texture1DArray_Int32_texture;
extern Variable TextureAtomicXor_Texture1DArray_Int32_coordinate;
extern Variable TextureAtomicXor_Texture1DArray_Int32_value;
extern Function TextureAtomicXor_Texture1DArray_Int32;
inline constexpr auto TextureAtomicXor_Texture1DArray_Int32_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture1DArray_Int32_backend_index = 2896u;

/// textureAtomicXor with Texture1DArray, Int32x2, UInt16
extern Variable TextureAtomicXor_Texture1DArray_UInt16_texture;
extern Variable TextureAtomicXor_Texture1DArray_UInt16_coordinate;
extern Variable TextureAtomicXor_Texture1DArray_UInt16_value;
extern Function TextureAtomicXor_Texture1DArray_UInt16;
inline constexpr auto TextureAtomicXor_Texture1DArray_UInt16_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture1DArray_UInt16_backend_index = 2897u;

/// textureAtomicXor with Texture1DArray, Int32x2, Int16
extern Variable TextureAtomicXor_Texture1DArray_Int16_texture;
extern Variable TextureAtomicXor_Texture1DArray_Int16_coordinate;
extern Variable TextureAtomicXor_Texture1DArray_Int16_value;
extern Function TextureAtomicXor_Texture1DArray_Int16;
inline constexpr auto TextureAtomicXor_Texture1DArray_Int16_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture1DArray_Int16_backend_index = 2898u;

/// textureAtomicXor with Texture2DArray, Int32x3, UInt32
extern Variable TextureAtomicXor_Texture2DArray_UInt32_texture;
extern Variable TextureAtomicXor_Texture2DArray_UInt32_coordinate;
extern Variable TextureAtomicXor_Texture2DArray_UInt32_value;
extern Function TextureAtomicXor_Texture2DArray_UInt32;
inline constexpr auto TextureAtomicXor_Texture2DArray_UInt32_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture2DArray_UInt32_backend_index = 2899u;

/// textureAtomicXor with Texture2DArray, Int32x3, Int32
extern Variable TextureAtomicXor_Texture2DArray_Int32_texture;
extern Variable TextureAtomicXor_Texture2DArray_Int32_coordinate;
extern Variable TextureAtomicXor_Texture2DArray_Int32_value;
extern Function TextureAtomicXor_Texture2DArray_Int32;
inline constexpr auto TextureAtomicXor_Texture2DArray_Int32_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture2DArray_Int32_backend_index = 2900u;

/// textureAtomicXor with Texture2DArray, Int32x3, UInt16
extern Variable TextureAtomicXor_Texture2DArray_UInt16_texture;
extern Variable TextureAtomicXor_Texture2DArray_UInt16_coordinate;
extern Variable TextureAtomicXor_Texture2DArray_UInt16_value;
extern Function TextureAtomicXor_Texture2DArray_UInt16;
inline constexpr auto TextureAtomicXor_Texture2DArray_UInt16_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture2DArray_UInt16_backend_index = 2901u;

/// textureAtomicXor with Texture2DArray, Int32x3, Int16
extern Variable TextureAtomicXor_Texture2DArray_Int16_texture;
extern Variable TextureAtomicXor_Texture2DArray_Int16_coordinate;
extern Variable TextureAtomicXor_Texture2DArray_Int16_value;
extern Function TextureAtomicXor_Texture2DArray_Int16;
inline constexpr auto TextureAtomicXor_Texture2DArray_Int16_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_Texture2DArray_Int16_backend_index = 2902u;

/// textureAtomicXor with TextureCubeArray, Int32x4, UInt32
extern Variable TextureAtomicXor_TextureCubeArray_UInt32_texture;
extern Variable TextureAtomicXor_TextureCubeArray_UInt32_coordinate;
extern Variable TextureAtomicXor_TextureCubeArray_UInt32_value;
extern Function TextureAtomicXor_TextureCubeArray_UInt32;
inline constexpr auto TextureAtomicXor_TextureCubeArray_UInt32_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_TextureCubeArray_UInt32_backend_index = 2903u;

/// textureAtomicXor with TextureCubeArray, Int32x4, Int32
extern Variable TextureAtomicXor_TextureCubeArray_Int32_texture;
extern Variable TextureAtomicXor_TextureCubeArray_Int32_coordinate;
extern Variable TextureAtomicXor_TextureCubeArray_Int32_value;
extern Function TextureAtomicXor_TextureCubeArray_Int32;
inline constexpr auto TextureAtomicXor_TextureCubeArray_Int32_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_TextureCubeArray_Int32_backend_index = 2904u;

/// textureAtomicXor with TextureCubeArray, Int32x4, UInt16
extern Variable TextureAtomicXor_TextureCubeArray_UInt16_texture;
extern Variable TextureAtomicXor_TextureCubeArray_UInt16_coordinate;
extern Variable TextureAtomicXor_TextureCubeArray_UInt16_value;
extern Function TextureAtomicXor_TextureCubeArray_UInt16;
inline constexpr auto TextureAtomicXor_TextureCubeArray_UInt16_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_TextureCubeArray_UInt16_backend_index = 2905u;

/// textureAtomicXor with TextureCubeArray, Int32x4, Int16
extern Variable TextureAtomicXor_TextureCubeArray_Int16_texture;
extern Variable TextureAtomicXor_TextureCubeArray_Int16_coordinate;
extern Variable TextureAtomicXor_TextureCubeArray_Int16_value;
extern Function TextureAtomicXor_TextureCubeArray_Int16;
inline constexpr auto TextureAtomicXor_TextureCubeArray_Int16_name = "textureAtomicXor"_c;
inline constexpr auto TextureAtomicXor_TextureCubeArray_Int16_backend_index = 2906u;

void SetupIntrinsics();

void SetupIntrinsics0();

void SetupIntrinsics1();

void SetupIntrinsics2();

void SetupIntrinsics3();

void SetupIntrinsics4();

void SetupIntrinsics5();

void SetupIntrinsics6();

void SetupIntrinsics7();

void SetupIntrinsics8();

void SetupIntrinsics9();

void SetupIntrinsics10();

void SetupIntrinsics11();

void SetupIntrinsics12();

void SetupIntrinsics13();

void SetupIntrinsics14();

void SetupIntrinsics15();

inline constexpr StaticMap<HashString, Symbol*, 4081> DefaultIntrinsics = {
    std::pair{ "textureGetSampledMip(uniform *texture2DArray,uniform *sampler,f32x3)"_h, &TextureGetSampledMip_Texture2DArray } /* 0 */,
    std::pair{ "f32x4(i32x4)"_h, &Float32x4_from_Int32x4 } /* 1 */,
    std::pair{ "textureAtomicAnd(uniform *texture3D,i32x3,u32)"_h, &TextureAtomicAnd_Texture3D_UInt32 } /* 2 */,
    std::pair{ "GeometryTriangleAdjacency"_h, &GeometryTriangleAdjacencyType } /* 3 */,
    std::pair{ "clamp(i16x4,i16x4,i16x4)"_h, &clamp_Int16x4 } /* 4 */,
    std::pair{ "textureAtomicAdd(uniform *texture2D,i32x2,u32)"_h, &TextureAtomicAdd_Texture2D_UInt32 } /* 5 */,
    std::pair{ "textureAtomicStore(uniform *texture1D,i32,u16)"_h, &TextureAtomicStore_Texture1D_UInt16 } /* 6 */,
    std::pair{ "i16x4(i16,i16x2,i16)"_h, &Int16x4_ctor2 } /* 7 */,
    std::pair{ "CompareMode(u32)"_h, &CompareModeType.toUnderlyingType } /* 8 */,
    std::pair{ "mad(f16x3,f16x3,f16x3)"_h, &mad_Float16x3 } /* 9 */,
    std::pair{ "bitExtract"_h, &BitExtract_UInt32 } /* 10 */,
    std::pair{ "bitExtract"_h, &BitExtract_Int32 } /* 11 */,
    std::pair{ "bitExtract"_h, &BitExtract_UInt16 } /* 12 */,
    std::pair{ "bitExtract"_h, &BitExtract_Int16 } /* 13 */,
    std::pair{ "executionBarrierWorkgroup"_h, &ExecutionBarrierWorkgroup } /* 14 */,
    std::pair{ "vertexGetOutputLayer"_h, &VertexGetOutputLayer } /* 15 */,
    std::pair{ "textureSampleGrad(uniform *textureCube,uniform *sampler,f32x3,f32x3,f32x3)"_h, &TextureSampleGrad_TextureCube } /* 16 */,
    std::pair{ "textureStore(uniform *mutable texture2DMSArray,i32x3,f32x4)"_h, &TextureStore_Texture2DMSArray } /* 17 */,
    std::pair{ "textureAtomicExchange(uniform *texture1D,i32,f16)"_h, &TextureAtomicExchange_Texture1D_Float16 } /* 18 */,
    std::pair{ "f16x4(i16x4)"_h, &Float16x4_from_Int16x4 } /* 19 */,
    std::pair{ "textureSampleLodProj"_h, &TextureSampleLodProj_Texture1D } /* 20 */,
    std::pair{ "textureSampleLodProj"_h, &SampledTextureSampleLodProj_Texture1D } /* 21 */,
    std::pair{ "textureSampleLodProj"_h, &TextureSampleLodProj_Texture2D } /* 22 */,
    std::pair{ "textureSampleLodProj"_h, &SampledTextureSampleLodProj_Texture2D } /* 23 */,
    std::pair{ "textureSampleLodProj"_h, &TextureSampleLodProj_Texture3D } /* 24 */,
    std::pair{ "textureSampleLodProj"_h, &SampledTextureSampleLodProj_Texture3D } /* 25 */,
    std::pair{ "min(u32x2,u32x2)"_h, &min_UInt32x2 } /* 26 */,
    std::pair{ "texture2DMSArray"_h, &Texture2DMSArrayType } /* 27 */,
    std::pair{ "textureSampleGradCompareOffset(uniform *texture2DArray,uniform *sampler,f32x3,f32x3,f32x3,f32,f32x3)"_h, &TextureSampleGradCompareOffset_Texture2DArray } /* 28 */,
    std::pair{ "pixelExportColor(f32x2,literal u32)"_h, &PixelExportColor_Float32x2_UInt32 } /* 29 */,
    std::pair{ "vertexGetBaseIndex()"_h, &VertexGetBaseIndex } /* 30 */,
    std::pair{ "mad(u16x3,u16x3,u16x3)"_h, &mad_UInt16x3 } /* 31 */,
    std::pair{ "textureGetSizeMip(uniform *textureCube,u32)"_h, &TextureGetSizeMip_TextureCube } /* 32 */,
    std::pair{ "u16x3(u32x3)"_h, &UInt16x3_from_UInt32x3 } /* 33 */,
    std::pair{ "i16x3(f32)"_h, &Int16x3_splat_Float32 } /* 34 */,
    std::pair{ "textureSampleLodProj(uniform *textureSampled2D,f32x2,f32,f32)"_h, &SampledTextureSampleLodProj_Texture2D } /* 35 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture1D_UInt32 } /* 36 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture1D_Int32 } /* 37 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture1D_UInt16 } /* 38 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture1D_Int16 } /* 39 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture2D_UInt32 } /* 40 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture2D_Int32 } /* 41 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture2D_UInt16 } /* 42 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture2D_Int16 } /* 43 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture3D_UInt32 } /* 44 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture3D_Int32 } /* 45 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture3D_UInt16 } /* 46 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture3D_Int16 } /* 47 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_TextureCube_UInt32 } /* 48 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_TextureCube_Int32 } /* 49 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_TextureCube_UInt16 } /* 50 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_TextureCube_Int16 } /* 51 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture1DArray_UInt32 } /* 52 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture1DArray_Int32 } /* 53 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture1DArray_UInt16 } /* 54 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture1DArray_Int16 } /* 55 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture2DArray_UInt32 } /* 56 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture2DArray_Int32 } /* 57 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture2DArray_UInt16 } /* 58 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_Texture2DArray_Int16 } /* 59 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_TextureCubeArray_UInt32 } /* 60 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_TextureCubeArray_Int32 } /* 61 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_TextureCubeArray_UInt16 } /* 62 */,
    std::pair{ "textureAtomicXor"_h, &TextureAtomicXor_TextureCubeArray_Int16 } /* 63 */,
    std::pair{ "textureAtomicExchange(uniform *texture1DArray,i32x2,f16)"_h, &TextureAtomicExchange_Texture1DArray_Float16 } /* 64 */,
    std::pair{ "textureSampleGradProjCompareOffset(uniform *texture2D,uniform *sampler,f32x2,f32x2,f32x2,f32,f32,f32x2)"_h, &TextureSampleGradProjCompareOffset_Texture2D } /* 65 */,
    std::pair{ "asinh(f16)"_h, &asinh_Float16 } /* 66 */,
    std::pair{ "textureFetchSample(uniform *texture2D,i32x2,u32,u32)"_h, &TextureFetchSample_Texture2D } /* 67 */,
    std::pair{ "f32x3(u16x3)"_h, &Float32x3_from_UInt16x3 } /* 68 */,
    std::pair{ "textureAtomicExchange(uniform *texture2DArray,i32x3,i16)"_h, &TextureAtomicExchange_Texture2DArray_Int16 } /* 69 */,
    std::pair{ "textureAtomicLoad(uniform *texture1D,i32,i16)"_h, &TextureAtomicLoad_Texture1D_Int16 } /* 70 */,
    std::pair{ "textureGetSizeMip(uniform *texture2D,u32)"_h, &TextureGetSizeMip_Texture2D } /* 71 */,
    std::pair{ "saturate(f32x4)"_h, &saturate_Float32x4 } /* 72 */,
    std::pair{ "u32x3(i16)"_h, &UInt32x3_splat_Int16 } /* 73 */,
    std::pair{ "saturate(f32x3)"_h, &saturate_Float32x3 } /* 74 */,
    std::pair{ "saturate(f32x2)"_h, &saturate_Float32x2 } /* 75 */,
    std::pair{ "subgroupSwapVertical(u32x3)"_h, &SubgroupSwapVertical_UInt32x3 } /* 76 */,
    std::pair{ "subgroupSwapVertical(u32x2)"_h, &SubgroupSwapVertical_UInt32x2 } /* 77 */,
    std::pair{ "subgroupSwapVertical(u32x4)"_h, &SubgroupSwapVertical_UInt32x4 } /* 78 */,
    std::pair{ "textureAtomicSubtract(uniform *textureCube,i32x3,i32)"_h, &TextureAtomicSubtract_TextureCube_Int32 } /* 79 */,
    std::pair{ "textureGetSize(uniform *texture2D)"_h, &TextureGetSize_Texture2D } /* 80 */,
    std::pair{ "textureAtomicLoad(uniform *textureCubeArray,i32x4,f16)"_h, &TextureAtomicLoad_TextureCubeArray_Float16 } /* 81 */,
    std::pair{ "pixelExportColor(f16x2,literal i32)"_h, &PixelExportColor_Float16x2_Int32 } /* 82 */,
    std::pair{ "u32x3(i32x3)"_h, &UInt32x3_from_Int32x3 } /* 83 */,
    std::pair{ "transpose(f16x4x3)"_h, &transpose_Float16x4x3 } /* 84 */,
    std::pair{ "cosh(f32)"_h, &cosh_Float32 } /* 85 */,
    std::pair{ "transpose(f16x4x2)"_h, &transpose_Float16x4x2 } /* 86 */,
    std::pair{ "u32(MemorySemantics)"_h, &MemorySemanticsType.fromUnderlyingType } /* 87 */,
    std::pair{ "transpose(f16x4x4)"_h, &transpose_Float16x4x4 } /* 88 */,
    std::pair{ "textureFetch(uniform *texture2DMS,i32x2,u32)"_h, &TextureFetch_Texture2DMS } /* 89 */,
    std::pair{ "textureAtomicSubtract(uniform *texture2DArray,i32x3,i32)"_h, &TextureAtomicSubtract_Texture2DArray_Int32 } /* 90 */,
    std::pair{ "textureSampleGradCompare(uniform *textureSampled3D,f32x3,f32x3,f32x3,f32)"_h, &SampledTextureSampleGradCompare_Texture3D } /* 91 */,
    std::pair{ "u16x3(u16x3)"_h, &UInt16x3_from_UInt16x3 } /* 92 */,
    std::pair{ "i16x4(u32)"_h, &Int16x4_splat_UInt32 } /* 93 */,
    std::pair{ "pixelExportColor(f32,literal u16)"_h, &PixelExportColor_Float32_UInt16 } /* 94 */,
    std::pair{ "acos"_h, &acos_Float32 } /* 95 */,
    std::pair{ "acos"_h, &acos_Float32x2 } /* 96 */,
    std::pair{ "acos"_h, &acos_Float32x3 } /* 97 */,
    std::pair{ "acos"_h, &acos_Float32x4 } /* 98 */,
    std::pair{ "acos"_h, &acos_Float16 } /* 99 */,
    std::pair{ "acos"_h, &acos_Float16x2 } /* 100 */,
    std::pair{ "acos"_h, &acos_Float16x3 } /* 101 */,
    std::pair{ "acos"_h, &acos_Float16x4 } /* 102 */,
    std::pair{ "i16x4(i32x4)"_h, &Int16x4_from_Int32x4 } /* 103 */,
    std::pair{ "u32(u16)"_h, &UInt32_from_UInt16 } /* 104 */,
    std::pair{ "textureSampleLod(uniform *textureSampled1D,f32,f32)"_h, &SampledTextureSampleLod_Texture1D } /* 105 */,
    std::pair{ "textureAtomicMin(uniform *texture2D,i32x2,u32)"_h, &TextureAtomicMin_Texture2D_UInt32 } /* 106 */,
    std::pair{ "Function"_h, &FunctionPtrType } /* 107 */,
    std::pair{ "abs(i16)"_h, &abs_Int16 } /* 108 */,
    std::pair{ "min"_h, &min_Float32 } /* 109 */,
    std::pair{ "min"_h, &min_Float32x2 } /* 110 */,
    std::pair{ "min"_h, &min_Float32x3 } /* 111 */,
    std::pair{ "min"_h, &min_Float32x4 } /* 112 */,
    std::pair{ "min"_h, &min_Float16 } /* 113 */,
    std::pair{ "min"_h, &min_Float16x2 } /* 114 */,
    std::pair{ "min"_h, &min_Float16x3 } /* 115 */,
    std::pair{ "min"_h, &min_Float16x4 } /* 116 */,
    std::pair{ "min"_h, &min_Int32 } /* 117 */,
    std::pair{ "min"_h, &min_Int32x2 } /* 118 */,
    std::pair{ "min"_h, &min_Int32x3 } /* 119 */,
    std::pair{ "min"_h, &min_Int32x4 } /* 120 */,
    std::pair{ "min"_h, &min_Int16 } /* 121 */,
    std::pair{ "min"_h, &min_Int16x2 } /* 122 */,
    std::pair{ "min"_h, &min_Int16x3 } /* 123 */,
    std::pair{ "min"_h, &min_Int16x4 } /* 124 */,
    std::pair{ "min"_h, &min_UInt32 } /* 125 */,
    std::pair{ "min"_h, &min_UInt32x2 } /* 126 */,
    std::pair{ "min"_h, &min_UInt32x3 } /* 127 */,
    std::pair{ "min"_h, &min_UInt32x4 } /* 128 */,
    std::pair{ "min"_h, &min_UInt16 } /* 129 */,
    std::pair{ "min"_h, &min_UInt16x2 } /* 130 */,
    std::pair{ "min"_h, &min_UInt16x3 } /* 131 */,
    std::pair{ "min"_h, &min_UInt16x4 } /* 132 */,
    std::pair{ "max"_h, &max_Float32 } /* 133 */,
    std::pair{ "max"_h, &max_Float32x2 } /* 134 */,
    std::pair{ "max"_h, &max_Float32x3 } /* 135 */,
    std::pair{ "max"_h, &max_Float32x4 } /* 136 */,
    std::pair{ "max"_h, &max_Float16 } /* 137 */,
    std::pair{ "max"_h, &max_Float16x2 } /* 138 */,
    std::pair{ "max"_h, &max_Float16x3 } /* 139 */,
    std::pair{ "max"_h, &max_Float16x4 } /* 140 */,
    std::pair{ "max"_h, &max_Int32 } /* 141 */,
    std::pair{ "max"_h, &max_Int32x2 } /* 142 */,
    std::pair{ "max"_h, &max_Int32x3 } /* 143 */,
    std::pair{ "max"_h, &max_Int32x4 } /* 144 */,
    std::pair{ "max"_h, &max_Int16 } /* 145 */,
    std::pair{ "max"_h, &max_Int16x2 } /* 146 */,
    std::pair{ "max"_h, &max_Int16x3 } /* 147 */,
    std::pair{ "max"_h, &max_Int16x4 } /* 148 */,
    std::pair{ "max"_h, &max_UInt32 } /* 149 */,
    std::pair{ "max"_h, &max_UInt32x2 } /* 150 */,
    std::pair{ "max"_h, &max_UInt32x3 } /* 151 */,
    std::pair{ "max"_h, &max_UInt32x4 } /* 152 */,
    std::pair{ "max"_h, &max_UInt16 } /* 153 */,
    std::pair{ "max"_h, &max_UInt16x2 } /* 154 */,
    std::pair{ "max"_h, &max_UInt16x3 } /* 155 */,
    std::pair{ "max"_h, &max_UInt16x4 } /* 156 */,
    std::pair{ "mad"_h, &mad_Float32 } /* 157 */,
    std::pair{ "mad"_h, &mad_Float32x2 } /* 158 */,
    std::pair{ "mad"_h, &mad_Float32x3 } /* 159 */,
    std::pair{ "mad"_h, &mad_Float32x4 } /* 160 */,
    std::pair{ "mad"_h, &mad_Float16 } /* 161 */,
    std::pair{ "mad"_h, &mad_Float16x2 } /* 162 */,
    std::pair{ "mad"_h, &mad_Float16x3 } /* 163 */,
    std::pair{ "mad"_h, &mad_Float16x4 } /* 164 */,
    std::pair{ "mad"_h, &mad_Int32 } /* 165 */,
    std::pair{ "mad"_h, &mad_Int32x2 } /* 166 */,
    std::pair{ "mad"_h, &mad_Int32x3 } /* 167 */,
    std::pair{ "mad"_h, &mad_Int32x4 } /* 168 */,
    std::pair{ "mad"_h, &mad_Int16 } /* 169 */,
    std::pair{ "mad"_h, &mad_Int16x2 } /* 170 */,
    std::pair{ "mad"_h, &mad_Int16x3 } /* 171 */,
    std::pair{ "mad"_h, &mad_Int16x4 } /* 172 */,
    std::pair{ "mad"_h, &mad_UInt32 } /* 173 */,
    std::pair{ "mad"_h, &mad_UInt32x2 } /* 174 */,
    std::pair{ "mad"_h, &mad_UInt32x3 } /* 175 */,
    std::pair{ "mad"_h, &mad_UInt32x4 } /* 176 */,
    std::pair{ "mad"_h, &mad_UInt16 } /* 177 */,
    std::pair{ "mad"_h, &mad_UInt16x2 } /* 178 */,
    std::pair{ "mad"_h, &mad_UInt16x3 } /* 179 */,
    std::pair{ "mad"_h, &mad_UInt16x4 } /* 180 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(f32)"_h, &SubgroupBroadcastFirstActiveThread_Float32 } /* 181 */,
    std::pair{ "vertexSetOutputLayer"_h, &VertexSetOutputLayer_UInt16 } /* 182 */,
    std::pair{ "vertexSetOutputLayer"_h, &VertexSetOutputLayer_UInt32 } /* 183 */,
    std::pair{ "b8x4(b8x3,b8)"_h, &Bool8x4_ctor5 } /* 184 */,
    std::pair{ "textureSampleBiasCompare(uniform *texture3D,uniform *sampler,f32x3,f32,f32)"_h, &TextureSampleBiasCompare_Texture3D } /* 185 */,
    std::pair{ "textureAtomicOr(uniform *texture3D,i32x3,u32)"_h, &TextureAtomicOr_Texture3D_UInt32 } /* 186 */,
    std::pair{ "invSqrt(f32x4)"_h, &invSqrt_Float32x4 } /* 187 */,
    std::pair{ "invSqrt(f32x3)"_h, &invSqrt_Float32x3 } /* 188 */,
    std::pair{ "dot(f16x4,f16x4)"_h, &dot_Float16x4 } /* 189 */,
    std::pair{ "invSqrt(f32x2)"_h, &invSqrt_Float32x2 } /* 190 */,
    std::pair{ "textureAtomicExchange(uniform *textureCube,i32x3,i16)"_h, &TextureAtomicExchange_TextureCube_Int16 } /* 191 */,
    std::pair{ "textureAtomicMin(uniform *texture1D,i32,u16)"_h, &TextureAtomicMin_Texture1D_UInt16 } /* 192 */,
    std::pair{ "b8"_h, &Bool8Type } /* 193 */,
    std::pair{ "b8"_h, &Bool8_from_UInt32 } /* 194 */,
    std::pair{ "b8"_h, &Bool8_from_Int32 } /* 195 */,
    std::pair{ "b8"_h, &Bool8_from_UInt16 } /* 196 */,
    std::pair{ "b8"_h, &Bool8_from_Int16 } /* 197 */,
    std::pair{ "b8"_h, &Bool8_ctor0 } /* 198 */,
    std::pair{ "textureAtomicAnd(uniform *texture2DArray,i32x3,i16)"_h, &TextureAtomicAnd_Texture2DArray_Int16 } /* 199 */,
    std::pair{ "pixelExportColor(u16,literal i16)"_h, &PixelExportColor_UInt16_Int16 } /* 200 */,
    std::pair{ "textureSampleBiasCompareOffset(uniform *texture2D,uniform *sampler,f32x2,f32,f32,f32x2)"_h, &TextureSampleBiasCompareOffset_Texture2D } /* 201 */,
    std::pair{ "saturate(f32)"_h, &saturate_Float32 } /* 202 */,
    std::pair{ "i32x4(u32)"_h, &Int32x4_splat_UInt32 } /* 203 */,
    std::pair{ "min(i32x2,i32x2)"_h, &min_Int32x2 } /* 204 */,
    std::pair{ "pixelExportColor(u32x4,literal i32)"_h, &PixelExportColor_UInt32x4_Int32 } /* 205 */,
    std::pair{ "textureSampleLodProj(uniform *texture1D,uniform *sampler,f32,f32,f32)"_h, &TextureSampleLodProj_Texture1D } /* 206 */,
    std::pair{ "textureAtomicXor(uniform *texture2DArray,i32x3,i16)"_h, &TextureAtomicXor_Texture2DArray_Int16 } /* 207 */,
    std::pair{ "b8x2(b8)"_h, &Bool8x2_splat_Bool8 } /* 208 */,
    std::pair{ "textureAtomicXor(uniform *texture1D,i32,u16)"_h, &TextureAtomicXor_Texture1D_UInt16 } /* 209 */,
    std::pair{ "pixelExportColor(f32x3,literal u32)"_h, &PixelExportColor_Float32x3_UInt32 } /* 210 */,
    std::pair{ "u16x2(i16)"_h, &UInt16x2_splat_Int16 } /* 211 */,
    std::pair{ "subgroupSwapVertical(u32)"_h, &SubgroupSwapVertical_UInt32 } /* 212 */,
    std::pair{ "pixelExportColor(i16x4,literal i16)"_h, &PixelExportColor_Int16x4_Int16 } /* 213 */,
    std::pair{ "f16(i32)"_h, &Float16_from_Int32 } /* 214 */,
    std::pair{ "textureSampleGradCompareOffset"_h, &TextureSampleGradCompareOffset_Texture1D } /* 215 */,
    std::pair{ "textureSampleGradCompareOffset"_h, &SampledTextureSampleGradCompareOffset_Texture1D } /* 216 */,
    std::pair{ "textureSampleGradCompareOffset"_h, &TextureSampleGradCompareOffset_Texture2D } /* 217 */,
    std::pair{ "textureSampleGradCompareOffset"_h, &SampledTextureSampleGradCompareOffset_Texture2D } /* 218 */,
    std::pair{ "textureSampleGradCompareOffset"_h, &TextureSampleGradCompareOffset_Texture3D } /* 219 */,
    std::pair{ "textureSampleGradCompareOffset"_h, &SampledTextureSampleGradCompareOffset_Texture3D } /* 220 */,
    std::pair{ "textureSampleGradCompareOffset"_h, &TextureSampleGradCompareOffset_Texture1DArray } /* 221 */,
    std::pair{ "textureSampleGradCompareOffset"_h, &SampledTextureSampleGradCompareOffset_Texture1DArray } /* 222 */,
    std::pair{ "textureSampleGradCompareOffset"_h, &TextureSampleGradCompareOffset_Texture2DArray } /* 223 */,
    std::pair{ "textureSampleGradCompareOffset"_h, &SampledTextureSampleGradCompareOffset_Texture2DArray } /* 224 */,
    std::pair{ "textureAtomicStore(uniform *textureCubeArray,i32x4,f16)"_h, &TextureAtomicStore_TextureCubeArray_Float16 } /* 225 */,
    std::pair{ "b8(u16)"_h, &Bool8_from_UInt16 } /* 226 */,
    std::pair{ "atan2(f16,f16)"_h, &atan2_Float16 } /* 227 */,
    std::pair{ "f32x4x2(f32x2,f32x2,f32x2,f32x2)"_h, &Float32x4x2_Float32_2_ctor } /* 228 */,
    std::pair{ "cosh"_h, &cosh_Float32 } /* 229 */,
    std::pair{ "cosh"_h, &cosh_Float32x2 } /* 230 */,
    std::pair{ "cosh"_h, &cosh_Float32x3 } /* 231 */,
    std::pair{ "cosh"_h, &cosh_Float32x4 } /* 232 */,
    std::pair{ "cosh"_h, &cosh_Float16 } /* 233 */,
    std::pair{ "cosh"_h, &cosh_Float16x2 } /* 234 */,
    std::pair{ "cosh"_h, &cosh_Float16x3 } /* 235 */,
    std::pair{ "cosh"_h, &cosh_Float16x4 } /* 236 */,
    std::pair{ "tanh(f32)"_h, &tanh_Float32 } /* 237 */,
    std::pair{ "textureSampleLod(uniform *textureSampled3D,f32x3,f32)"_h, &SampledTextureSampleLod_Texture3D } /* 238 */,
    std::pair{ "textureSampleProjCompareOffset(uniform *textureSampled1D,f32,f32,f32,f32)"_h, &SampledTextureSampleProjCompareOffset_Texture1D } /* 239 */,
    std::pair{ "cross"_h, &cross_Float32x3 } /* 240 */,
    std::pair{ "cross"_h, &cross_Float16x3 } /* 241 */,
    std::pair{ "textureAtomicAnd(uniform *textureCubeArray,i32x4,i32)"_h, &TextureAtomicAnd_TextureCubeArray_Int32 } /* 242 */,
    std::pair{ "atomicXor(*i16,i16,literal MemorySemantics)"_h, &AtomicXor_Int16 } /* 243 */,
    std::pair{ "textureAtomicSubtract(uniform *texture1D,i32,u32)"_h, &TextureAtomicSubtract_Texture1D_UInt32 } /* 244 */,
    std::pair{ "u32x2(b8)"_h, &UInt32x2_splat_Bool8 } /* 245 */,
    std::pair{ "log2(f32x4)"_h, &log2_Float32x4 } /* 246 */,
    std::pair{ "log2(f32x2)"_h, &log2_Float32x2 } /* 247 */,
    std::pair{ "log2(f32x3)"_h, &log2_Float32x3 } /* 248 */,
    std::pair{ "atomicMax"_h, &AtomicMax_UInt32 } /* 249 */,
    std::pair{ "atomicMax"_h, &AtomicMax_Int32 } /* 250 */,
    std::pair{ "atomicMax"_h, &AtomicMax_UInt16 } /* 251 */,
    std::pair{ "atomicMax"_h, &AtomicMax_Int16 } /* 252 */,
    std::pair{ "atomicMin"_h, &AtomicMin_UInt32 } /* 253 */,
    std::pair{ "atomicMin"_h, &AtomicMin_Int32 } /* 254 */,
    std::pair{ "atomicMin"_h, &AtomicMin_UInt16 } /* 255 */,
    std::pair{ "atomicMin"_h, &AtomicMin_Int16 } /* 256 */,
    std::pair{ "f32x2(i32x2)"_h, &Float32x2_from_Int32x2 } /* 257 */,
    std::pair{ "textureSampleCompare(uniform *textureSampled1DArray,f32x2,f32)"_h, &SampledTextureSampleCompare_Texture1DArray } /* 258 */,
    std::pair{ "textureAtomicMax(uniform *textureCube,i32x3,i16)"_h, &TextureAtomicMax_TextureCube_Int16 } /* 259 */,
    std::pair{ "min(u32,u32)"_h, &min_UInt32 } /* 260 */,
    std::pair{ "geometryExportVertex(f32x4)"_h, &GeometryExportVertex_Float32x4 } /* 261 */,
    std::pair{ "subgroupGetFirstActiveThread()"_h, &SubgroupGetFirstActiveThread } /* 262 */,
    std::pair{ "textureGetSize(uniform *texture3D)"_h, &TextureGetSize_Texture3D } /* 263 */,
    std::pair{ "WindingOrder"_h, &WindingOrderType } /* 264 */,
    std::pair{ "textureLoadMip(uniform *mutable textureCubeArray,i32x4,i32)"_h, &TextureLoadMip_TextureCubeArray } /* 265 */,
    std::pair{ "textureAtomicExchange(uniform *texture1D,i32,u32)"_h, &TextureAtomicExchange_Texture1D_UInt32 } /* 266 */,
    std::pair{ "textureAtomicMin(uniform *texture3D,i32x3,u32)"_h, &TextureAtomicMin_Texture3D_UInt32 } /* 267 */,
    std::pair{ "InputTopology"_h, &InputTopologyType } /* 268 */,
    std::pair{ "textureSampleProj(uniform *textureSampled3D,f32x3,f32)"_h, &SampledTextureSampleProj_Texture3D } /* 269 */,
    std::pair{ "textureSampleLodProjCompare(uniform *texture1D,uniform *sampler,f32,f32,f32,f32)"_h, &TextureSampleLodProjCompare_Texture1D } /* 270 */,
    std::pair{ "textureAtomicSubtract(uniform *texture2D,i32x2,i16)"_h, &TextureAtomicSubtract_Texture2D_Int16 } /* 271 */,
    std::pair{ "ceil(f32x3)"_h, &ceil_Float32x3 } /* 272 */,
    std::pair{ "textureAtomicExchange(uniform *texture1DArray,i32x2,i32)"_h, &TextureAtomicExchange_Texture1DArray_Int32 } /* 273 */,
    std::pair{ "ceil(f32x2)"_h, &ceil_Float32x2 } /* 274 */,
    std::pair{ "ceil(f32x4)"_h, &ceil_Float32x4 } /* 275 */,
    std::pair{ "i32x3(u16)"_h, &Int32x3_splat_UInt16 } /* 276 */,
    std::pair{ "f16x2x2()"_h, &Float16x2x2_identity } /* 277 */,
    std::pair{ "u32(Patch)"_h, &PatchType.fromUnderlyingType } /* 278 */,
    std::pair{ "textureGatherOffset(uniform *textureCubeArray,uniform *sampler,i32x4,i32,u32)"_h, &TextureGatherOffset_TextureCubeArray } /* 279 */,
    std::pair{ "textureSampleGradProj(uniform *textureSampled2D,f32x2,f32x2,f32x2,f32)"_h, &SampledTextureSampleGradProj_Texture2D } /* 280 */,
    std::pair{ "b8(b8)"_h, &Bool8_ctor0 } /* 281 */,
    std::pair{ "textureSampleGrad(uniform *texture1DArray,uniform *sampler,f32x2,f32x2,f32x2)"_h, &TextureSampleGrad_Texture1DArray } /* 282 */,
    std::pair{ "textureStoreMip(uniform *mutable texture1D,i32,i32,f32x4)"_h, &TextureStoreMip_Texture1D } /* 283 */,
    std::pair{ "smoothstep(f32x3,f32x3,f32x3)"_h, &smoothstep_Float32x3 } /* 284 */,
    std::pair{ "textureSampleBiasProj(uniform *texture3D,uniform *sampler,f32x3,f32,f32)"_h, &TextureSampleBiasProj_Texture3D } /* 285 */,
    std::pair{ "textureSampleGradCompare(uniform *texture2DArray,uniform *sampler,f32x3,f32x3,f32x3,f32)"_h, &TextureSampleGradCompare_Texture2DArray } /* 286 */,
    std::pair{ "transpose(f32x4x4)"_h, &transpose_Float32x4x4 } /* 287 */,
    std::pair{ "transpose(f32x4x3)"_h, &transpose_Float32x4x3 } /* 288 */,
    std::pair{ "transpose(f32x4x2)"_h, &transpose_Float32x4x2 } /* 289 */,
    std::pair{ "textureAtomicExchange(uniform *texture2D,i32x2,u16)"_h, &TextureAtomicExchange_Texture2D_UInt16 } /* 290 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture1D,i32,i32)"_h, &TextureAtomicCompareExchange_Texture1D_Int32 } /* 291 */,
    std::pair{ "u32(PixelOrigin)"_h, &PixelOriginType.fromUnderlyingType } /* 292 */,
    std::pair{ "textureSampleLodCompare(uniform *texture2DArray,uniform *sampler,f32x3,f32,f32)"_h, &TextureSampleLodCompare_Texture2DArray } /* 293 */,
    std::pair{ "b8x2(u16)"_h, &Bool8x2_splat_UInt16 } /* 294 */,
    std::pair{ "textureSampleBiasProjCompare(uniform *textureSampled2D,f32x2,f32,f32,f32)"_h, &SampledTextureSampleBiasProjCompare_Texture2D } /* 295 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Float32 } /* 296 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Float32x2 } /* 297 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Float32x3 } /* 298 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Float32x4 } /* 299 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Float16 } /* 300 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Float16x2 } /* 301 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Float16x3 } /* 302 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Float16x4 } /* 303 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Int32 } /* 304 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Int32x2 } /* 305 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Int32x3 } /* 306 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Int32x4 } /* 307 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Int16 } /* 308 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Int16x2 } /* 309 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Int16x3 } /* 310 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_Int16x4 } /* 311 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_UInt32 } /* 312 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_UInt32x2 } /* 313 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_UInt32x3 } /* 314 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_UInt32x4 } /* 315 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_UInt16 } /* 316 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_UInt16x2 } /* 317 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_UInt16x3 } /* 318 */,
    std::pair{ "subgroupSwapVertical"_h, &SubgroupSwapVertical_UInt16x4 } /* 319 */,
    std::pair{ "subgroupSwapHorizontal(f16)"_h, &SubgroupSwapHorizontal_Float16 } /* 320 */,
    std::pair{ "textureAtomicAdd(uniform *textureCubeArray,i32x4,u16)"_h, &TextureAtomicAdd_TextureCubeArray_UInt16 } /* 321 */,
    std::pair{ "textureFetch(uniform *texture2D,i32x2,u32)"_h, &TextureFetch_Texture2D } /* 322 */,
    std::pair{ "log"_h, &log_Float32 } /* 323 */,
    std::pair{ "log"_h, &log_Float32x2 } /* 324 */,
    std::pair{ "log"_h, &log_Float32x3 } /* 325 */,
    std::pair{ "log"_h, &log_Float32x4 } /* 326 */,
    std::pair{ "log"_h, &log_Float16 } /* 327 */,
    std::pair{ "log"_h, &log_Float16x2 } /* 328 */,
    std::pair{ "log"_h, &log_Float16x3 } /* 329 */,
    std::pair{ "log"_h, &log_Float16x4 } /* 330 */,
    std::pair{ "pixelExportColor(i16x3,literal u16)"_h, &PixelExportColor_Int16x3_UInt16 } /* 331 */,
    std::pair{ "log2(f16x4)"_h, &log2_Float16x4 } /* 332 */,
    std::pair{ "log2(f16x2)"_h, &log2_Float16x2 } /* 333 */,
    std::pair{ "log2(f16x3)"_h, &log2_Float16x3 } /* 334 */,
    std::pair{ "textureSampleLodCompare(uniform *texture3D,uniform *sampler,f32x3,f32,f32)"_h, &TextureSampleLodCompare_Texture3D } /* 335 */,
    std::pair{ "pixelExportColor(u32x2,literal i16)"_h, &PixelExportColor_UInt32x2_Int16 } /* 336 */,
    std::pair{ "geometryExportVertex(f16x4)"_h, &GeometryExportVertex_Float16x4 } /* 337 */,
    std::pair{ "memoryBarrier"_h, &MemoryBarrier } /* 338 */,
    std::pair{ "textureStore(uniform *mutable textureCubeArray,i32x4,f32x4)"_h, &TextureStore_TextureCubeArray } /* 339 */,
    std::pair{ "f16x4(u16)"_h, &Float16x4_splat_UInt16 } /* 340 */,
    std::pair{ "cos(f16x3)"_h, &cos_Float16x3 } /* 341 */,
    std::pair{ "cos(f16x2)"_h, &cos_Float16x2 } /* 342 */,
    std::pair{ "i32x2(i16)"_h, &Int32x2_splat_Int16 } /* 343 */,
    std::pair{ "cos(f16x4)"_h, &cos_Float16x4 } /* 344 */,
    std::pair{ "u32x4(u32x3,u32)"_h, &UInt32x4_ctor5 } /* 345 */,
    std::pair{ "min(i32x3,i32x3)"_h, &min_Int32x3 } /* 346 */,
    std::pair{ "f32(u32)"_h, &Float32_from_UInt32 } /* 347 */,
    std::pair{ "textureSampleBias(uniform *textureSampledCubeArray,f32x4,f32)"_h, &SampledTextureSampleBias_TextureCubeArray } /* 348 */,
    std::pair{ "textureSampleGrad(uniform *textureSampledCube,f32x3,f32x3,f32x3)"_h, &SampledTextureSampleGrad_TextureCube } /* 349 */,
    std::pair{ "f32x2(i16x2)"_h, &Float32x2_from_Int16x2 } /* 350 */,
    std::pair{ "textureAtomicMin(uniform *texture2DArray,i32x3,u32)"_h, &TextureAtomicMin_Texture2DArray_UInt32 } /* 351 */,
    std::pair{ "textureAtomicExchange(uniform *texture1D,i32,f32)"_h, &TextureAtomicExchange_Texture1D_Float32 } /* 352 */,
    std::pair{ "textureSample(uniform *texture2DArray,uniform *sampler,f32x3)"_h, &TextureSample_Texture2DArray } /* 353 */,
    std::pair{ "b8x3(i32x3)"_h, &Bool8x3_from_Int32x3 } /* 354 */,
    std::pair{ "textureLoadMip(uniform *mutable texture3D,i32x3,i32)"_h, &TextureLoadMip_Texture3D } /* 355 */,
    std::pair{ "textureSampleProjOffset(uniform *textureSampled2D,f32x2,f32,f32x2)"_h, &SampledTextureSampleProjOffset_Texture2D } /* 356 */,
    std::pair{ "f32x4(f32x4)"_h, &Float32x4_from_Float32x4 } /* 357 */,
    std::pair{ "textureAtomicStore(uniform *textureCubeArray,i32x4,i32)"_h, &TextureAtomicStore_TextureCubeArray_Int32 } /* 358 */,
    std::pair{ "f16x4(f16x2,f16,f16)"_h, &Float16x4_ctor1 } /* 359 */,
    std::pair{ "f32x3(b8)"_h, &Float32x3_splat_Bool8 } /* 360 */,
    std::pair{ "textureAtomicLoad(uniform *textureCubeArray,i32x4,f32)"_h, &TextureAtomicLoad_TextureCubeArray_Float32 } /* 361 */,
    std::pair{ "b8x4(i16x4)"_h, &Bool8x4_from_Int16x4 } /* 362 */,
    std::pair{ "textureAtomicStore(uniform *texture3D,i32x3,f16)"_h, &TextureAtomicStore_Texture3D_Float16 } /* 363 */,
    std::pair{ "sin(f32)"_h, &sin_Float32 } /* 364 */,
    std::pair{ "asinh(f32)"_h, &asinh_Float32 } /* 365 */,
    std::pair{ "textureAtomicExchange(uniform *texture2DArray,i32x3,i32)"_h, &TextureAtomicExchange_Texture2DArray_Int32 } /* 366 */,
    std::pair{ "sign(i16x4)"_h, &sign_Int16x4 } /* 367 */,
    std::pair{ "subgroupGetLowerMask"_h, &SubgroupGetLowerMask } /* 368 */,
    std::pair{ "sign(i16x2)"_h, &sign_Int16x2 } /* 369 */,
    std::pair{ "fract(f16)"_h, &fract_Float16 } /* 370 */,
    std::pair{ "sign(i16x3)"_h, &sign_Int16x3 } /* 371 */,
    std::pair{ "textureSampleGradCompare(uniform *textureSampled1D,f32,f32,f32,f32)"_h, &SampledTextureSampleGradCompare_Texture1D } /* 372 */,
    std::pair{ "StencilOp"_h, &StencilOpType } /* 373 */,
    std::pair{ "i32x2(u32x2)"_h, &Int32x2_from_UInt32x2 } /* 374 */,
    std::pair{ "textureGetSampledMip(uniform *texture3D,uniform *sampler,f32x3)"_h, &TextureGetSampledMip_Texture3D } /* 375 */,
    std::pair{ "textureAtomicSubtract(uniform *textureCube,i32x3,i16)"_h, &TextureAtomicSubtract_TextureCube_Int16 } /* 376 */,
    std::pair{ "textureSampleBiasProj(uniform *texture1D,uniform *sampler,f32,f32,f32)"_h, &TextureSampleBiasProj_Texture1D } /* 377 */,
    std::pair{ "pixelExportColor(f16x2,literal i16)"_h, &PixelExportColor_Float16x2_Int16 } /* 378 */,
    std::pair{ "textureStore(uniform *mutable texture2DMS,i32x2,f32x4)"_h, &TextureStore_Texture2DMS } /* 379 */,
    std::pair{ "textureLoad(uniform *mutable texture1DArray,i32x2)"_h, &TextureLoad_Texture1DArray } /* 380 */,
    std::pair{ "subgroupSwapVertical(f32x4)"_h, &SubgroupSwapVertical_Float32x4 } /* 381 */,
    std::pair{ "subgroupSwapVertical(f32x2)"_h, &SubgroupSwapVertical_Float32x2 } /* 382 */,
    std::pair{ "textureSample(uniform *textureCube,uniform *sampler,f32x3)"_h, &TextureSample_TextureCube } /* 383 */,
    std::pair{ "subgroupSwapVertical(f32x3)"_h, &SubgroupSwapVertical_Float32x3 } /* 384 */,
    std::pair{ "f16x3x2(f16x2,f16x2,f16x2)"_h, &Float16x3x2_Float16_2_ctor } /* 385 */,
    std::pair{ "atomicStore(*u32,u32,literal MemorySemantics)"_h, &AtomicStore_UInt32 } /* 386 */,
    std::pair{ "cosh(f16)"_h, &cosh_Float16 } /* 387 */,
    std::pair{ "pixelExportColor(f16,literal i16)"_h, &PixelExportColor_Float16_Int16 } /* 388 */,
    std::pair{ "textureAtomicExchange(uniform *textureCube,i32x3,f16)"_h, &TextureAtomicExchange_TextureCube_Float16 } /* 389 */,
    std::pair{ "u32x3(u32,u32x2)"_h, &UInt32x3_ctor2 } /* 390 */,
    std::pair{ "textureAtomicMax(uniform *texture1DArray,i32x2,i32)"_h, &TextureAtomicMax_Texture1DArray_Int32 } /* 391 */,
    std::pair{ "u16x4"_h, &UInt16x4Type } /* 392 */,
    std::pair{ "u16x4"_h, &UInt16x4_from_Float32x4 } /* 393 */,
    std::pair{ "u16x4"_h, &UInt16x4_splat_Float32 } /* 394 */,
    std::pair{ "u16x4"_h, &UInt16x4_from_UInt32x4 } /* 395 */,
    std::pair{ "u16x4"_h, &UInt16x4_splat_UInt32 } /* 396 */,
    std::pair{ "u16x4"_h, &UInt16x4_from_Int32x4 } /* 397 */,
    std::pair{ "u16x4"_h, &UInt16x4_splat_Int32 } /* 398 */,
    std::pair{ "u16x4"_h, &UInt16x4_from_Bool8x4 } /* 399 */,
    std::pair{ "u16x4"_h, &UInt16x4_splat_Bool8 } /* 400 */,
    std::pair{ "u16x4"_h, &UInt16x4_from_Float16x4 } /* 401 */,
    std::pair{ "u16x4"_h, &UInt16x4_splat_Float16 } /* 402 */,
    std::pair{ "u16x4"_h, &UInt16x4_from_UInt16x4 } /* 403 */,
    std::pair{ "u16x4"_h, &UInt16x4_splat_UInt16 } /* 404 */,
    std::pair{ "u16x4"_h, &UInt16x4_from_Int16x4 } /* 405 */,
    std::pair{ "u16x4"_h, &UInt16x4_splat_Int16 } /* 406 */,
    std::pair{ "u16x4"_h, &UInt16x4_ctor0 } /* 407 */,
    std::pair{ "u16x4"_h, &UInt16x4_ctor1 } /* 408 */,
    std::pair{ "u16x4"_h, &UInt16x4_ctor2 } /* 409 */,
    std::pair{ "u16x4"_h, &UInt16x4_ctor3 } /* 410 */,
    std::pair{ "u16x4"_h, &UInt16x4_ctor4 } /* 411 */,
    std::pair{ "u16x4"_h, &UInt16x4_ctor5 } /* 412 */,
    std::pair{ "u16x4"_h, &UInt16x4_ctor6 } /* 413 */,
    std::pair{ "u16x3"_h, &UInt16x3Type } /* 414 */,
    std::pair{ "u16x3"_h, &UInt16x3_from_Float32x3 } /* 415 */,
    std::pair{ "u16x3"_h, &UInt16x3_splat_Float32 } /* 416 */,
    std::pair{ "u16x3"_h, &UInt16x3_from_UInt32x3 } /* 417 */,
    std::pair{ "u16x3"_h, &UInt16x3_splat_UInt32 } /* 418 */,
    std::pair{ "u16x3"_h, &UInt16x3_from_Int32x3 } /* 419 */,
    std::pair{ "u16x3"_h, &UInt16x3_splat_Int32 } /* 420 */,
    std::pair{ "u16x3"_h, &UInt16x3_from_Bool8x3 } /* 421 */,
    std::pair{ "u16x3"_h, &UInt16x3_splat_Bool8 } /* 422 */,
    std::pair{ "u16x3"_h, &UInt16x3_from_Float16x3 } /* 423 */,
    std::pair{ "u16x3"_h, &UInt16x3_splat_Float16 } /* 424 */,
    std::pair{ "u16x3"_h, &UInt16x3_from_UInt16x3 } /* 425 */,
    std::pair{ "u16x3"_h, &UInt16x3_splat_UInt16 } /* 426 */,
    std::pair{ "u16x3"_h, &UInt16x3_from_Int16x3 } /* 427 */,
    std::pair{ "u16x3"_h, &UInt16x3_splat_Int16 } /* 428 */,
    std::pair{ "u16x3"_h, &UInt16x3_ctor0 } /* 429 */,
    std::pair{ "u16x3"_h, &UInt16x3_ctor1 } /* 430 */,
    std::pair{ "u16x3"_h, &UInt16x3_ctor2 } /* 431 */,
    std::pair{ "u16x2"_h, &UInt16x2Type } /* 432 */,
    std::pair{ "u16x2"_h, &UInt16x2_from_Float32x2 } /* 433 */,
    std::pair{ "u16x2"_h, &UInt16x2_splat_Float32 } /* 434 */,
    std::pair{ "u16x2"_h, &UInt16x2_from_UInt32x2 } /* 435 */,
    std::pair{ "u16x2"_h, &UInt16x2_splat_UInt32 } /* 436 */,
    std::pair{ "u16x2"_h, &UInt16x2_from_Int32x2 } /* 437 */,
    std::pair{ "u16x2"_h, &UInt16x2_splat_Int32 } /* 438 */,
    std::pair{ "u16x2"_h, &UInt16x2_from_Bool8x2 } /* 439 */,
    std::pair{ "u16x2"_h, &UInt16x2_splat_Bool8 } /* 440 */,
    std::pair{ "u16x2"_h, &UInt16x2_from_Float16x2 } /* 441 */,
    std::pair{ "u16x2"_h, &UInt16x2_splat_Float16 } /* 442 */,
    std::pair{ "u16x2"_h, &UInt16x2_from_UInt16x2 } /* 443 */,
    std::pair{ "u16x2"_h, &UInt16x2_splat_UInt16 } /* 444 */,
    std::pair{ "u16x2"_h, &UInt16x2_from_Int16x2 } /* 445 */,
    std::pair{ "u16x2"_h, &UInt16x2_splat_Int16 } /* 446 */,
    std::pair{ "u16x2"_h, &UInt16x2_ctor0 } /* 447 */,
    std::pair{ "u32x3(u32,u32,u32)"_h, &UInt32x3_ctor0 } /* 448 */,
    std::pair{ "asinh(f16x4)"_h, &asinh_Float16x4 } /* 449 */,
    std::pair{ "asinh(f16x3)"_h, &asinh_Float16x3 } /* 450 */,
    std::pair{ "asinh(f16x2)"_h, &asinh_Float16x2 } /* 451 */,
    std::pair{ "atomicAnd(*u32,u32,literal MemorySemantics)"_h, &AtomicAnd_UInt32 } /* 452 */,
    std::pair{ "pixelExportColor(u16,literal i32)"_h, &PixelExportColor_UInt16_Int32 } /* 453 */,
    std::pair{ "textureAtomicMin(uniform *texture1D,i32,u32)"_h, &TextureAtomicMin_Texture1D_UInt32 } /* 454 */,
    std::pair{ "atomicStore(*i32,i32,literal MemorySemantics)"_h, &AtomicStore_Int32 } /* 455 */,
    std::pair{ "domainGetTessellationCoordinates()"_h, &DomainGetTessellationCoordinates } /* 456 */,
    std::pair{ "textureSampleGrad(uniform *textureSampled3D,f32x3,f32x3,f32x3)"_h, &SampledTextureSampleGrad_Texture3D } /* 457 */,
    std::pair{ "textureGetMips(uniform *textureCubeArray)"_h, &TextureGetMips_TextureCubeArray } /* 458 */,
    std::pair{ "i32x4(u16)"_h, &Int32x4_splat_UInt16 } /* 459 */,
    std::pair{ "vertexGetOutputViewport"_h, &VertexGetOutputViewport } /* 460 */,
    std::pair{ "u32(LogicOp)"_h, &LogicOpType.fromUnderlyingType } /* 461 */,
    std::pair{ "abs(i32)"_h, &abs_Int32 } /* 462 */,
    std::pair{ "f32x4(i16x4)"_h, &Float32x4_from_Int16x4 } /* 463 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(f16)"_h, &SubgroupBroadcastFirstActiveThread_Float16 } /* 464 */,
    std::pair{ "pixelExportColor(f32x3,literal u16)"_h, &PixelExportColor_Float32x3_UInt16 } /* 465 */,
    std::pair{ "i32x4(i32x3,i32)"_h, &Int32x4_ctor5 } /* 466 */,
    std::pair{ "u16x3(i16)"_h, &UInt16x3_splat_Int16 } /* 467 */,
    std::pair{ "atan2(f16x2,f16x2)"_h, &atan2_Float16x2 } /* 468 */,
    std::pair{ "textureAtomicOr(uniform *texture3D,i32x3,u16)"_h, &TextureAtomicOr_Texture3D_UInt16 } /* 469 */,
    std::pair{ "geometryGetLine()"_h, &GeometryGetLine } /* 470 */,
    std::pair{ "textureAtomicExchange(uniform *textureCube,i32x3,i32)"_h, &TextureAtomicExchange_TextureCube_Int32 } /* 471 */,
    std::pair{ "textureLoadMip"_h, &TextureLoadMip_Texture1D } /* 472 */,
    std::pair{ "textureLoadMip"_h, &TextureLoadMip_Texture2D } /* 473 */,
    std::pair{ "textureLoadMip"_h, &TextureLoadMip_Texture3D } /* 474 */,
    std::pair{ "textureLoadMip"_h, &TextureLoadMip_TextureCube } /* 475 */,
    std::pair{ "textureLoadMip"_h, &TextureLoadMip_Texture1DArray } /* 476 */,
    std::pair{ "textureLoadMip"_h, &TextureLoadMip_Texture2DArray } /* 477 */,
    std::pair{ "textureLoadMip"_h, &TextureLoadMip_TextureCubeArray } /* 478 */,
    std::pair{ "textureLoadMip"_h, &TextureLoadMip_Texture2DMS } /* 479 */,
    std::pair{ "textureLoadMip"_h, &TextureLoadMip_Texture2DMSArray } /* 480 */,
    std::pair{ "castToF32"_h, &castToF32_UInt32 } /* 481 */,
    std::pair{ "castToF32"_h, &castToF32_Int32 } /* 482 */,
    std::pair{ "castToF16"_h, &castToF16_UInt16 } /* 483 */,
    std::pair{ "castToF16"_h, &castToF16_Int16 } /* 484 */,
    std::pair{ "saturate(f16)"_h, &saturate_Float16 } /* 485 */,
    std::pair{ "distance(f16x2,f16x2)"_h, &distance_Float16x2 } /* 486 */,
    std::pair{ "b8(u32)"_h, &Bool8_from_UInt32 } /* 487 */,
    std::pair{ "pixelExportColor(u32x4,literal i16)"_h, &PixelExportColor_UInt32x4_Int16 } /* 488 */,
    std::pair{ "textureSampleLod(uniform *texture3D,uniform *sampler,f32x3,f32)"_h, &TextureSampleLod_Texture3D } /* 489 */,
    std::pair{ "textureSampleBiasOffset(uniform *texture1D,uniform *sampler,f32,f32,f32)"_h, &TextureSampleBiasOffset_Texture1D } /* 490 */,
    std::pair{ "textureAtomicXor(uniform *texture2D,i32x2,i32)"_h, &TextureAtomicXor_Texture2D_Int32 } /* 491 */,
    std::pair{ "subgroupSwapVertical(u16)"_h, &SubgroupSwapVertical_UInt16 } /* 492 */,
    std::pair{ "pixelExportColor(i16x4,literal i32)"_h, &PixelExportColor_Int16x4_Int32 } /* 493 */,
    std::pair{ "i16x3(i16x2,i16)"_h, &Int16x3_ctor1 } /* 494 */,
    std::pair{ "textureFetch(uniform *texture1DArray,i32x2,u32)"_h, &TextureFetch_Texture1DArray } /* 495 */,
    std::pair{ "f16x2(u32x2)"_h, &Float16x2_from_UInt32x2 } /* 496 */,
    std::pair{ "vertexGetIndex()"_h, &VertexGetIndex } /* 497 */,
    std::pair{ "u32x3(i16x3)"_h, &UInt32x3_from_Int16x3 } /* 498 */,
    std::pair{ "subgroupSwapVertical(f16x4)"_h, &SubgroupSwapVertical_Float16x4 } /* 499 */,
    std::pair{ "textureAtomicAdd(uniform *texture2DArray,i32x3,i16)"_h, &TextureAtomicAdd_Texture2DArray_Int16 } /* 500 */,
    std::pair{ "subgroupSwapVertical(f16x2)"_h, &SubgroupSwapVertical_Float16x2 } /* 501 */,
    std::pair{ "subgroupSwapVertical(f16x3)"_h, &SubgroupSwapVertical_Float16x3 } /* 502 */,
    std::pair{ "f32x3(u32)"_h, &Float32x3_splat_UInt32 } /* 503 */,
    std::pair{ "textureAtomicSubtract(uniform *texture1DArray,i32x2,i32)"_h, &TextureAtomicSubtract_Texture1DArray_Int32 } /* 504 */,
    std::pair{ "tanh(f16)"_h, &tanh_Float16 } /* 505 */,
    std::pair{ "max(u32x3,u32x3)"_h, &max_UInt32x3 } /* 506 */,
    std::pair{ "textureGetSize"_h, &TextureGetSize_Texture1D } /* 507 */,
    std::pair{ "textureGetSize"_h, &TextureGetSize_Texture2D } /* 508 */,
    std::pair{ "textureGetSize"_h, &TextureGetSize_Texture3D } /* 509 */,
    std::pair{ "textureGetSize"_h, &TextureGetSize_TextureCube } /* 510 */,
    std::pair{ "textureGetSize"_h, &TextureGetSize_Texture1DArray } /* 511 */,
    std::pair{ "textureGetSize"_h, &TextureGetSize_Texture2DArray } /* 512 */,
    std::pair{ "textureGetSize"_h, &TextureGetSize_TextureCubeArray } /* 513 */,
    std::pair{ "textureAtomicMin(uniform *texture3D,i32x3,u16)"_h, &TextureAtomicMin_Texture3D_UInt16 } /* 514 */,
    std::pair{ "pixelExportColor(i16,literal u16)"_h, &PixelExportColor_Int16_UInt16 } /* 515 */,
    std::pair{ "textureAtomicAnd(uniform *textureCubeArray,i32x4,i16)"_h, &TextureAtomicAnd_TextureCubeArray_Int16 } /* 516 */,
    std::pair{ "max(u16,u16)"_h, &max_UInt16 } /* 517 */,
    std::pair{ "textureAtomicExchange(uniform *texture1DArray,i32x2,i16)"_h, &TextureAtomicExchange_Texture1DArray_Int16 } /* 518 */,
    std::pair{ "textureAtomicSubtract(uniform *texture1D,i32,u16)"_h, &TextureAtomicSubtract_Texture1D_UInt16 } /* 519 */,
    std::pair{ "i32x4(u32x4)"_h, &Int32x4_from_UInt32x4 } /* 520 */,
    std::pair{ "textureAtomicOr(uniform *texture2DArray,i32x3,i16)"_h, &TextureAtomicOr_Texture2DArray_Int16 } /* 521 */,
    std::pair{ "textureSampleLodProjCompareOffset(uniform *texture3D,uniform *sampler,f32x3,f32,f32,f32,f32x3)"_h, &TextureSampleLodProjCompareOffset_Texture3D } /* 522 */,
    std::pair{ "textureGetSize(uniform *texture1D)"_h, &TextureGetSize_Texture1D } /* 523 */,
    std::pair{ "textureAtomicXor(uniform *textureCubeArray,i32x4,i32)"_h, &TextureAtomicXor_TextureCubeArray_Int32 } /* 524 */,
    std::pair{ "textureSampleOffset(uniform *textureSampled2DArray,f32x3,f32x3)"_h, &SampledTextureSampleOffset_Texture2DArray } /* 525 */,
    std::pair{ "pixelExportColor(u32x3,literal i32)"_h, &PixelExportColor_UInt32x3_Int32 } /* 526 */,
    std::pair{ "textureAtomicXor(uniform *texture3D,i32x3,u16)"_h, &TextureAtomicXor_Texture3D_UInt16 } /* 527 */,
    std::pair{ "textureSampleOffset(uniform *textureSampled1DArray,f32x2,f32x2)"_h, &SampledTextureSampleOffset_Texture1DArray } /* 528 */,
    std::pair{ "textureSampleLodProjCompare(uniform *texture3D,uniform *sampler,f32x3,f32,f32,f32)"_h, &TextureSampleLodProjCompare_Texture3D } /* 529 */,
    std::pair{ "pixelExportColor(f16x4,literal u16)"_h, &PixelExportColor_Float16x4_UInt16 } /* 530 */,
    std::pair{ "textureSampleBiasOffset"_h, &TextureSampleBiasOffset_Texture1D } /* 531 */,
    std::pair{ "textureSampleBiasOffset"_h, &SampledTextureSampleBiasOffset_Texture1D } /* 532 */,
    std::pair{ "textureSampleBiasOffset"_h, &TextureSampleBiasOffset_Texture2D } /* 533 */,
    std::pair{ "textureSampleBiasOffset"_h, &SampledTextureSampleBiasOffset_Texture2D } /* 534 */,
    std::pair{ "textureSampleBiasOffset"_h, &TextureSampleBiasOffset_Texture3D } /* 535 */,
    std::pair{ "textureSampleBiasOffset"_h, &SampledTextureSampleBiasOffset_Texture3D } /* 536 */,
    std::pair{ "textureSampleBiasOffset"_h, &TextureSampleBiasOffset_Texture1DArray } /* 537 */,
    std::pair{ "textureSampleBiasOffset"_h, &SampledTextureSampleBiasOffset_Texture1DArray } /* 538 */,
    std::pair{ "textureSampleBiasOffset"_h, &TextureSampleBiasOffset_Texture2DArray } /* 539 */,
    std::pair{ "textureSampleBiasOffset"_h, &SampledTextureSampleBiasOffset_Texture2DArray } /* 540 */,
    std::pair{ "i16(f16)"_h, &Int16_from_Float16 } /* 541 */,
    std::pair{ "textureSampleGradCompare(uniform *texture3D,uniform *sampler,f32x3,f32x3,f32x3,f32)"_h, &TextureSampleGradCompare_Texture3D } /* 542 */,
    std::pair{ "computeGetLocalThreadIndices()"_h, &ComputeGetLocalThreadIndices } /* 543 */,
    std::pair{ "textureAtomicExchange(uniform *texture2D,i32x2,u32)"_h, &TextureAtomicExchange_Texture2D_UInt32 } /* 544 */,
    std::pair{ "invSqrt(f16x3)"_h, &invSqrt_Float16x3 } /* 545 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture1D,i32,i16)"_h, &TextureAtomicCompareExchange_Texture1D_Int16 } /* 546 */,
    std::pair{ "invSqrt(f16x2)"_h, &invSqrt_Float16x2 } /* 547 */,
    std::pair{ "invSqrt(f16x4)"_h, &invSqrt_Float16x4 } /* 548 */,
    std::pair{ "textureAtomicMin(uniform *texture1DArray,i32x2,u16)"_h, &TextureAtomicMin_Texture1DArray_UInt16 } /* 549 */,
    std::pair{ "InputTopology(u32)"_h, &InputTopologyType.toUnderlyingType } /* 550 */,
    std::pair{ "FilterMode"_h, &FilterModeType } /* 551 */,
    std::pair{ "pixelGetFrontFacing"_h, &PixelGetFrontFacing } /* 552 */,
    std::pair{ "f32x4(f32x3,f32)"_h, &Float32x4_ctor5 } /* 553 */,
    std::pair{ "f32x3x2(f32,f32,f32,f32,f32,f32)"_h, &Float32x3x2_raw_list } /* 554 */,
    std::pair{ "f16x4(b8x4)"_h, &Float16x4_from_Bool8x4 } /* 555 */,
    std::pair{ "textureAtomicAdd(uniform *textureCubeArray,i32x4,u32)"_h, &TextureAtomicAdd_TextureCubeArray_UInt32 } /* 556 */,
    std::pair{ "textureSampleBias(uniform *textureSampled2D,f32x2,f32)"_h, &SampledTextureSampleBias_Texture2D } /* 557 */,
    std::pair{ "textureSampleGradOffset(uniform *textureSampled1D,f32,f32,f32,f32)"_h, &SampledTextureSampleGradOffset_Texture1D } /* 558 */,
    std::pair{ "textureSampleProjOffset(uniform *textureSampled3D,f32x3,f32,f32x3)"_h, &SampledTextureSampleProjOffset_Texture3D } /* 559 */,
    std::pair{ "textureAtomicAnd(uniform *texture1DArray,i32x2,u16)"_h, &TextureAtomicAnd_Texture1DArray_UInt16 } /* 560 */,
    std::pair{ "u16x4(f16x4)"_h, &UInt16x4_from_Float16x4 } /* 561 */,
    std::pair{ "b8x4(b8,b8x3)"_h, &Bool8x4_ctor6 } /* 562 */,
    std::pair{ "textureAtomicMax(uniform *texture3D,i32x3,u16)"_h, &TextureAtomicMax_Texture3D_UInt16 } /* 563 */,
    std::pair{ "textureSampleBiasCompareOffset(uniform *texture1DArray,uniform *sampler,f32x2,f32,f32,f32x2)"_h, &TextureSampleBiasCompareOffset_Texture1DArray } /* 564 */,
    std::pair{ "textureLoad(uniform *mutable texture2DArray,i32x3)"_h, &TextureLoad_Texture2DArray } /* 565 */,
    std::pair{ "hullExportInnerTessellationLevel(f32x2)"_h, &HullExportInnerTessellationLevel } /* 566 */,
    std::pair{ "AddressMode(u32)"_h, &AddressModeType.toUnderlyingType } /* 567 */,
    std::pair{ "pixelExportColor(i16x3,literal u32)"_h, &PixelExportColor_Int16x3_UInt32 } /* 568 */,
    std::pair{ "subgroupSwapHorizontal(f32)"_h, &SubgroupSwapHorizontal_Float32 } /* 569 */,
    std::pair{ "f32(u16)"_h, &Float32_from_UInt16 } /* 570 */,
    std::pair{ "atomicSubtract(*i32,i32,literal MemorySemantics)"_h, &AtomicSubtract_Int32 } /* 571 */,
    std::pair{ "f16x3(f16x2,f16)"_h, &Float16x3_ctor1 } /* 572 */,
    std::pair{ "pixelExportColor(u32x2,literal i32)"_h, &PixelExportColor_UInt32x2_Int32 } /* 573 */,
    std::pair{ "sqrt(f16)"_h, &sqrt_Float16 } /* 574 */,
    std::pair{ "textureGetSizeMip(uniform *textureCubeArray,u32)"_h, &TextureGetSizeMip_TextureCubeArray } /* 575 */,
    std::pair{ "textureSampleBiasOffset(uniform *texture2DArray,uniform *sampler,f32x3,f32,f32x3)"_h, &TextureSampleBiasOffset_Texture2DArray } /* 576 */,
    std::pair{ "u32(StencilOp)"_h, &StencilOpType.fromUnderlyingType } /* 577 */,
    std::pair{ "lerp"_h, &lerp_Float32 } /* 578 */,
    std::pair{ "lerp"_h, &lerp_Float32x2 } /* 579 */,
    std::pair{ "lerp"_h, &lerp_Float32x3 } /* 580 */,
    std::pair{ "lerp"_h, &lerp_Float32x4 } /* 581 */,
    std::pair{ "lerp"_h, &lerp_Float16 } /* 582 */,
    std::pair{ "lerp"_h, &lerp_Float16x2 } /* 583 */,
    std::pair{ "lerp"_h, &lerp_Float16x3 } /* 584 */,
    std::pair{ "lerp"_h, &lerp_Float16x4 } /* 585 */,
    std::pair{ "atan(f16x4)"_h, &atan_Float16x4 } /* 586 */,
    std::pair{ "atan(f16x2)"_h, &atan_Float16x2 } /* 587 */,
    std::pair{ "atan(f16x3)"_h, &atan_Float16x3 } /* 588 */,
    std::pair{ "f16x4(f16,f16x2,f16)"_h, &Float16x4_ctor2 } /* 589 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture2DArray,i32x3,i16)"_h, &TextureAtomicCompareExchange_Texture2DArray_Int16 } /* 590 */,
    std::pair{ "castToU32(f32)"_h, &castToU32_Float32 } /* 591 */,
    std::pair{ "inverse(f16x2x2)"_h, &inverse_Float16x2x2 } /* 592 */,
    std::pair{ "inverse(f16x2x3)"_h, &inverse_Float16x2x3 } /* 593 */,
    std::pair{ "inverse(f16x2x4)"_h, &inverse_Float16x2x4 } /* 594 */,
    std::pair{ "i32x2(i32)"_h, &Int32x2_splat_Int32 } /* 595 */,
    std::pair{ "min(i32,i32)"_h, &min_Int32 } /* 596 */,
    std::pair{ "textureSampleCompareOffset(uniform *texture3D,uniform *sampler,f32x3,f32,f32x3)"_h, &TextureSampleCompareOffset_Texture3D } /* 597 */,
    std::pair{ "textureAtomicLoad(uniform *texture3D,i32x3,u16)"_h, &TextureAtomicLoad_Texture3D_UInt16 } /* 598 */,
    std::pair{ "f16x4(u32)"_h, &Float16x4_splat_UInt32 } /* 599 */,
    std::pair{ "subgroupInverseBallot(b8)"_h, &SubgroupInverseBallot } /* 600 */,
    std::pair{ "u32x2(i16x2)"_h, &UInt32x2_from_Int16x2 } /* 601 */,
    std::pair{ "i16x4(f16x4)"_h, &Int16x4_from_Float16x4 } /* 602 */,
    std::pair{ "i32(u32)"_h, &Int32_from_UInt32 } /* 603 */,
    std::pair{ "clamp(i32x3,i32x3,i32x3)"_h, &clamp_Int32x3 } /* 604 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture1D_Float32 } /* 605 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture1D_UInt32 } /* 606 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture1D_Int32 } /* 607 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture1D_Float16 } /* 608 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture1D_UInt16 } /* 609 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture1D_Int16 } /* 610 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture2D_Float32 } /* 611 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture2D_UInt32 } /* 612 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture2D_Int32 } /* 613 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture2D_Float16 } /* 614 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture2D_UInt16 } /* 615 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture2D_Int16 } /* 616 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture3D_Float32 } /* 617 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture3D_UInt32 } /* 618 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture3D_Int32 } /* 619 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture3D_Float16 } /* 620 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture3D_UInt16 } /* 621 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture3D_Int16 } /* 622 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_TextureCube_Float32 } /* 623 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_TextureCube_UInt32 } /* 624 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_TextureCube_Int32 } /* 625 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_TextureCube_Float16 } /* 626 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_TextureCube_UInt16 } /* 627 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_TextureCube_Int16 } /* 628 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture1DArray_Float32 } /* 629 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture1DArray_UInt32 } /* 630 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture1DArray_Int32 } /* 631 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture1DArray_Float16 } /* 632 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture1DArray_UInt16 } /* 633 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture1DArray_Int16 } /* 634 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture2DArray_Float32 } /* 635 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture2DArray_UInt32 } /* 636 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture2DArray_Int32 } /* 637 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture2DArray_Float16 } /* 638 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture2DArray_UInt16 } /* 639 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_Texture2DArray_Int16 } /* 640 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_TextureCubeArray_Float32 } /* 641 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_TextureCubeArray_UInt32 } /* 642 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_TextureCubeArray_Int32 } /* 643 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_TextureCubeArray_Float16 } /* 644 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_TextureCubeArray_UInt16 } /* 645 */,
    std::pair{ "textureAtomicStore"_h, &TextureAtomicStore_TextureCubeArray_Int16 } /* 646 */,
    std::pair{ "f32x4x4()"_h, &Float32x4x4_identity } /* 647 */,
    std::pair{ "u16x4(u16x2,u16,u16)"_h, &UInt16x4_ctor1 } /* 648 */,
    std::pair{ "textureAtomicStore(uniform *texture3D,i32x3,f32)"_h, &TextureAtomicStore_Texture3D_Float32 } /* 649 */,
    std::pair{ "sin(f16)"_h, &sin_Float16 } /* 650 */,
    std::pair{ "u16(b8)"_h, &UInt16_from_Bool8 } /* 651 */,
    std::pair{ "textureSampleLodProj(uniform *texture2D,uniform *sampler,f32x2,f32,f32)"_h, &TextureSampleLodProj_Texture2D } /* 652 */,
    std::pair{ "textureAtomicMin(uniform *texture2DArray,i32x3,u16)"_h, &TextureAtomicMin_Texture2DArray_UInt16 } /* 653 */,
    std::pair{ "i16(u16)"_h, &Int16_from_UInt16 } /* 654 */,
    std::pair{ "b8x3(b8)"_h, &Bool8x3_splat_Bool8 } /* 655 */,
    std::pair{ "acos(f16x4)"_h, &acos_Float16x4 } /* 656 */,
    std::pair{ "acos(f16x2)"_h, &acos_Float16x2 } /* 657 */,
    std::pair{ "acos(f16x3)"_h, &acos_Float16x3 } /* 658 */,
    std::pair{ "textureSampleGradProjOffset(uniform *texture1D,uniform *sampler,f32,f32,f32,f32,f32)"_h, &TextureSampleGradProjOffset_Texture1D } /* 659 */,
    std::pair{ "textureAtomicLoad(uniform *texture1DArray,i32x2,i32)"_h, &TextureAtomicLoad_Texture1DArray_Int32 } /* 660 */,
    std::pair{ "textureGatherOffset"_h, &TextureGatherOffset_Texture2D } /* 661 */,
    std::pair{ "textureGatherOffset"_h, &SampledTextureGatherOffset_Texture2D } /* 662 */,
    std::pair{ "textureGatherOffset"_h, &TextureGatherOffset_TextureCube } /* 663 */,
    std::pair{ "textureGatherOffset"_h, &SampledTextureGatherOffset_TextureCube } /* 664 */,
    std::pair{ "textureGatherOffset"_h, &TextureGatherOffset_Texture2DArray } /* 665 */,
    std::pair{ "textureGatherOffset"_h, &SampledTextureGatherOffset_Texture2DArray } /* 666 */,
    std::pair{ "textureGatherOffset"_h, &TextureGatherOffset_TextureCubeArray } /* 667 */,
    std::pair{ "textureGatherOffset"_h, &SampledTextureGatherOffset_TextureCubeArray } /* 668 */,
    std::pair{ "textureAtomicStore(uniform *textureCubeArray,i32x4,i16)"_h, &TextureAtomicStore_TextureCubeArray_Int16 } /* 669 */,
    std::pair{ "f16x2(b8x2)"_h, &Float16x2_from_Bool8x2 } /* 670 */,
    std::pair{ "fract(f32)"_h, &fract_Float32 } /* 671 */,
    std::pair{ "invSqrt"_h, &invSqrt_Float32 } /* 672 */,
    std::pair{ "invSqrt"_h, &invSqrt_Float32x2 } /* 673 */,
    std::pair{ "invSqrt"_h, &invSqrt_Float32x3 } /* 674 */,
    std::pair{ "invSqrt"_h, &invSqrt_Float32x4 } /* 675 */,
    std::pair{ "invSqrt"_h, &invSqrt_Float16 } /* 676 */,
    std::pair{ "invSqrt"_h, &invSqrt_Float16x2 } /* 677 */,
    std::pair{ "invSqrt"_h, &invSqrt_Float16x3 } /* 678 */,
    std::pair{ "invSqrt"_h, &invSqrt_Float16x4 } /* 679 */,
    std::pair{ "BlendFactor(u32)"_h, &BlendFactorType.toUnderlyingType } /* 680 */,
    std::pair{ "computeGetWorkGroupDimensions()"_h, &ComputeGetWorkGroupDimensions } /* 681 */,
    std::pair{ "computeGetGlobalThreadIndices()"_h, &ComputeGetGlobalThreadIndices } /* 682 */,
    std::pair{ "pixelGetCoordinates()"_h, &PixelGetCoordinates_Float32x4 } /* 683 */,
    std::pair{ "pixelGetCoordinates()"_h, &PixelGetCoordinates_Float16x4 } /* 684 */,
    std::pair{ "textureSampleLodCompare(uniform *textureSampled2DArray,f32x3,f32,f32)"_h, &SampledTextureSampleLodCompare_Texture2DArray } /* 685 */,
    std::pair{ "atomicExchange(*u32,u32,literal MemorySemantics)"_h, &AtomicExchange_UInt32 } /* 686 */,
    std::pair{ "mad(u16,u16,u16)"_h, &mad_UInt16 } /* 687 */,
    std::pair{ "step(f32,f32)"_h, &step_Float32 } /* 688 */,
    std::pair{ "textureAtomicExchange(uniform *textureCube,i32x3,f32)"_h, &TextureAtomicExchange_TextureCube_Float32 } /* 689 */,
    std::pair{ "pixelExportColor(f16,literal i32)"_h, &PixelExportColor_Float16_Int32 } /* 690 */,
    std::pair{ "textureAtomicMax(uniform *texture1DArray,i32x2,i16)"_h, &TextureAtomicMax_Texture1DArray_Int16 } /* 691 */,
    std::pair{ "cross(f16x3,f16x3)"_h, &cross_Float16x3 } /* 692 */,
    std::pair{ "textureAtomicExchange(uniform *textureCubeArray,i32x4,i16)"_h, &TextureAtomicExchange_TextureCubeArray_Int16 } /* 693 */,
    std::pair{ "f16x2x2(f16x2,f16x2)"_h, &Float16x2x2_Float16_2_ctor } /* 694 */,
    std::pair{ "f32x2x2()"_h, &Float32x2x2_identity } /* 695 */,
    std::pair{ "i16x2(u32)"_h, &Int16x2_splat_UInt32 } /* 696 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture1D_UInt32 } /* 697 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture1D_Int32 } /* 698 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture1D_UInt16 } /* 699 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture1D_Int16 } /* 700 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture2D_UInt32 } /* 701 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture2D_Int32 } /* 702 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture2D_UInt16 } /* 703 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture2D_Int16 } /* 704 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture3D_UInt32 } /* 705 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture3D_Int32 } /* 706 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture3D_UInt16 } /* 707 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture3D_Int16 } /* 708 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_TextureCube_UInt32 } /* 709 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_TextureCube_Int32 } /* 710 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_TextureCube_UInt16 } /* 711 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_TextureCube_Int16 } /* 712 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture1DArray_UInt32 } /* 713 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture1DArray_Int32 } /* 714 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture1DArray_UInt16 } /* 715 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture1DArray_Int16 } /* 716 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture2DArray_UInt32 } /* 717 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture2DArray_Int32 } /* 718 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture2DArray_UInt16 } /* 719 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_Texture2DArray_Int16 } /* 720 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_TextureCubeArray_UInt32 } /* 721 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_TextureCubeArray_Int32 } /* 722 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_TextureCubeArray_UInt16 } /* 723 */,
    std::pair{ "textureAtomicAnd"_h, &TextureAtomicAnd_TextureCubeArray_Int16 } /* 724 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture1D_UInt32 } /* 725 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture1D_Int32 } /* 726 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture1D_UInt16 } /* 727 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture1D_Int16 } /* 728 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture2D_UInt32 } /* 729 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture2D_Int32 } /* 730 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture2D_UInt16 } /* 731 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture2D_Int16 } /* 732 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture3D_UInt32 } /* 733 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture3D_Int32 } /* 734 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture3D_UInt16 } /* 735 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture3D_Int16 } /* 736 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_TextureCube_UInt32 } /* 737 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_TextureCube_Int32 } /* 738 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_TextureCube_UInt16 } /* 739 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_TextureCube_Int16 } /* 740 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture1DArray_UInt32 } /* 741 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture1DArray_Int32 } /* 742 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture1DArray_UInt16 } /* 743 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture1DArray_Int16 } /* 744 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture2DArray_UInt32 } /* 745 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture2DArray_Int32 } /* 746 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture2DArray_UInt16 } /* 747 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_Texture2DArray_Int16 } /* 748 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_TextureCubeArray_UInt32 } /* 749 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_TextureCubeArray_Int32 } /* 750 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_TextureCubeArray_UInt16 } /* 751 */,
    std::pair{ "textureAtomicAdd"_h, &TextureAtomicAdd_TextureCubeArray_Int16 } /* 752 */,
    std::pair{ "mad(f32x3,f32x3,f32x3)"_h, &mad_Float32x3 } /* 753 */,
    std::pair{ "i16"_h, &Int16Type } /* 754 */,
    std::pair{ "i16"_h, &Int16_from_Float32 } /* 755 */,
    std::pair{ "i16"_h, &Int16_from_UInt32 } /* 756 */,
    std::pair{ "i16"_h, &Int16_from_Int32 } /* 757 */,
    std::pair{ "i16"_h, &Int16_from_Bool8 } /* 758 */,
    std::pair{ "i16"_h, &Int16_from_Float16 } /* 759 */,
    std::pair{ "i16"_h, &Int16_from_UInt16 } /* 760 */,
    std::pair{ "i16"_h, &Int16_ctor0 } /* 761 */,
    std::pair{ "textureSampleGradProjOffset(uniform *texture2D,uniform *sampler,f32x2,f32x2,f32x2,f32,f32x2)"_h, &TextureSampleGradProjOffset_Texture2D } /* 762 */,
    std::pair{ "i32"_h, &Int32Type } /* 763 */,
    std::pair{ "i32"_h, &Int32_from_Float32 } /* 764 */,
    std::pair{ "i32"_h, &Int32_from_UInt32 } /* 765 */,
    std::pair{ "i32"_h, &Int32_from_Bool8 } /* 766 */,
    std::pair{ "i32"_h, &Int32_from_Float16 } /* 767 */,
    std::pair{ "i32"_h, &Int32_from_UInt16 } /* 768 */,
    std::pair{ "i32"_h, &Int32_from_Int16 } /* 769 */,
    std::pair{ "i32"_h, &Int32_ctor0 } /* 770 */,
    std::pair{ "f16x3x3(f16,f16,f16,f16,f16,f16,f16,f16,f16)"_h, &Float16x3x3_raw_list } /* 771 */,
    std::pair{ "textureSampleBias(uniform *textureSampled3D,f32x3,f32)"_h, &SampledTextureSampleBias_Texture3D } /* 772 */,
    std::pair{ "u16x3(i32)"_h, &UInt16x3_splat_Int32 } /* 773 */,
    std::pair{ "acosh"_h, &acosh_Float32 } /* 774 */,
    std::pair{ "acosh"_h, &acosh_Float32x2 } /* 775 */,
    std::pair{ "acosh"_h, &acosh_Float32x3 } /* 776 */,
    std::pair{ "acosh"_h, &acosh_Float32x4 } /* 777 */,
    std::pair{ "acosh"_h, &acosh_Float16 } /* 778 */,
    std::pair{ "acosh"_h, &acosh_Float16x2 } /* 779 */,
    std::pair{ "acosh"_h, &acosh_Float16x3 } /* 780 */,
    std::pair{ "acosh"_h, &acosh_Float16x4 } /* 781 */,
    std::pair{ "min(u32x3,u32x3)"_h, &min_UInt32x3 } /* 782 */,
    std::pair{ "f32x4x2"_h, &Float32x4x2Type } /* 783 */,
    std::pair{ "f32x4x2"_h, &Float32x4x2_Float32_2_ctor } /* 784 */,
    std::pair{ "f32x4x2"_h, &Float32x4x2_raw_list } /* 785 */,
    std::pair{ "f32x4x3"_h, &Float32x4x3Type } /* 786 */,
    std::pair{ "f32x4x3"_h, &Float32x4x3_Float32_3_ctor } /* 787 */,
    std::pair{ "f32x4x3"_h, &Float32x4x3_raw_list } /* 788 */,
    std::pair{ "f32x4x4"_h, &Float32x4x4Type } /* 789 */,
    std::pair{ "f32x4x4"_h, &Float32x4x4_Float32_4_ctor } /* 790 */,
    std::pair{ "f32x4x4"_h, &Float32x4x4_identity } /* 791 */,
    std::pair{ "f32x4x4"_h, &Float32x4x4_raw_list } /* 792 */,
    std::pair{ "textureAtomicXor(uniform *texture2D,i32x2,i16)"_h, &TextureAtomicXor_Texture2D_Int16 } /* 793 */,
    std::pair{ "textureSampleBiasCompareOffset(uniform *texture2DArray,uniform *sampler,f32x3,f32,f32,f32x3)"_h, &TextureSampleBiasCompareOffset_Texture2DArray } /* 794 */,
    std::pair{ "f32x3(i16x3)"_h, &Float32x3_from_Int16x3 } /* 795 */,
    std::pair{ "subgroupSwapHorizontal(u32x3)"_h, &SubgroupSwapHorizontal_UInt32x3 } /* 796 */,
    std::pair{ "subgroupSwapHorizontal(u32x2)"_h, &SubgroupSwapHorizontal_UInt32x2 } /* 797 */,
    std::pair{ "subgroupSwapHorizontal(u32x4)"_h, &SubgroupSwapHorizontal_UInt32x4 } /* 798 */,
    std::pair{ "computeGetIndexInWorkgroup"_h, &ComputeGetIndexInWorkgroup } /* 799 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Float32 } /* 800 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Float32x2 } /* 801 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Float32x3 } /* 802 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Float32x4 } /* 803 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Float16 } /* 804 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Float16x2 } /* 805 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Float16x3 } /* 806 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Float16x4 } /* 807 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Int32 } /* 808 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Int32x2 } /* 809 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Int32x3 } /* 810 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Int32x4 } /* 811 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Int16 } /* 812 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Int16x2 } /* 813 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Int16x3 } /* 814 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_Int16x4 } /* 815 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_UInt32 } /* 816 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_UInt32x2 } /* 817 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_UInt32x3 } /* 818 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_UInt32x4 } /* 819 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_UInt16 } /* 820 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_UInt16x2 } /* 821 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_UInt16x3 } /* 822 */,
    std::pair{ "subgroupBroadcastFirstActiveThread"_h, &SubgroupBroadcastFirstActiveThread_UInt16x4 } /* 823 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture3D,i32x3,i16)"_h, &TextureAtomicCompareExchange_Texture3D_Int16 } /* 824 */,
    std::pair{ "f32x3(u16)"_h, &Float32x3_splat_UInt16 } /* 825 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(i16x3)"_h, &SubgroupBroadcastFirstActiveThread_Int16x3 } /* 826 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(i16x2)"_h, &SubgroupBroadcastFirstActiveThread_Int16x2 } /* 827 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(i16x4)"_h, &SubgroupBroadcastFirstActiveThread_Int16x4 } /* 828 */,
    std::pair{ "b8x4(b8x2,b8,b8)"_h, &Bool8x4_ctor1 } /* 829 */,
    std::pair{ "u32(ComputeDerivatives)"_h, &ComputeDerivativesType.fromUnderlyingType } /* 830 */,
    std::pair{ "textureAtomicSubtract(uniform *texture1DArray,i32x2,i16)"_h, &TextureAtomicSubtract_Texture1DArray_Int16 } /* 831 */,
    std::pair{ "textureAtomicAdd(uniform *texture2DArray,i32x3,i32)"_h, &TextureAtomicAdd_Texture2DArray_Int32 } /* 832 */,
    std::pair{ "textureSampleGradOffset(uniform *texture1DArray,uniform *sampler,f32x2,f32x2,f32x2,f32x2)"_h, &TextureSampleGradOffset_Texture1DArray } /* 833 */,
    std::pair{ "textureAtomicOr(uniform *textureCube,i32x3,i16)"_h, &TextureAtomicOr_TextureCube_Int16 } /* 834 */,
    std::pair{ "textureSampleBiasProjCompareOffset(uniform *texture3D,uniform *sampler,f32x3,f32,f32,f32,f32x3)"_h, &TextureSampleBiasProjCompareOffset_Texture3D } /* 835 */,
    std::pair{ "textureAtomicOr(uniform *texture2DArray,i32x3,i32)"_h, &TextureAtomicOr_Texture2DArray_Int32 } /* 836 */,
    std::pair{ "u32x2(u16x2)"_h, &UInt32x2_from_UInt16x2 } /* 837 */,
    std::pair{ "u16(f16)"_h, &UInt16_from_Float16 } /* 838 */,
    std::pair{ "pixelExportColor(i16,literal u32)"_h, &PixelExportColor_Int16_UInt32 } /* 839 */,
    std::pair{ "clamp(i16,i16,i16)"_h, &clamp_Int16 } /* 840 */,
    std::pair{ "pixelExportColor(u32x3,literal i16)"_h, &PixelExportColor_UInt32x3_Int16 } /* 841 */,
    std::pair{ "inverse(f16x3x3)"_h, &inverse_Float16x3x3 } /* 842 */,
    std::pair{ "inverse(f16x3x2)"_h, &inverse_Float16x3x2 } /* 843 */,
    std::pair{ "inverse(f16x3x4)"_h, &inverse_Float16x3x4 } /* 844 */,
    std::pair{ "ExecutionScope"_h, &ExecutionScopeType } /* 845 */,
    std::pair{ "f32x4(b8x4)"_h, &Float32x4_from_Bool8x4 } /* 846 */,
    std::pair{ "textureAtomicXor(uniform *texture3D,i32x3,u32)"_h, &TextureAtomicXor_Texture3D_UInt32 } /* 847 */,
    std::pair{ "b8x3(u16x3)"_h, &Bool8x3_from_UInt16x3 } /* 848 */,
    std::pair{ "textureAtomicXor(uniform *textureCubeArray,i32x4,i16)"_h, &TextureAtomicXor_TextureCubeArray_Int16 } /* 849 */,
    std::pair{ "atomicDecrement"_h, &AtomicDecrement_UInt32 } /* 850 */,
    std::pair{ "atomicDecrement"_h, &AtomicDecrement_Int32 } /* 851 */,
    std::pair{ "atomicDecrement"_h, &AtomicDecrement_UInt16 } /* 852 */,
    std::pair{ "atomicDecrement"_h, &AtomicDecrement_Int16 } /* 853 */,
    std::pair{ "step(f16x2,f16x2)"_h, &step_Float16x2 } /* 854 */,
    std::pair{ "pixelExportColor(f16x4,literal u32)"_h, &PixelExportColor_Float16x4_UInt32 } /* 855 */,
    std::pair{ "void"_h, &VoidType } /* 856 */,
    std::pair{ "textureSampleGradProjCompareOffset(uniform *texture1D,uniform *sampler,f32,f32,f32,f32,f32,f32)"_h, &TextureSampleGradProjCompareOffset_Texture1D } /* 857 */,
    std::pair{ "refract(f32x4,f32x4,f32x4)"_h, &refract_Float32x4 } /* 858 */,
    std::pair{ "i16(f32)"_h, &Int16_from_Float32 } /* 859 */,
    std::pair{ "textureAtomicStore(uniform *texture2D,i32x2,f32)"_h, &TextureAtomicStore_Texture2D_Float32 } /* 860 */,
    std::pair{ "b8x2(u32x2)"_h, &Bool8x2_from_UInt32x2 } /* 861 */,
    std::pair{ "textureSampleOffset(uniform *texture3D,uniform *sampler,f32x3,f32x3)"_h, &TextureSampleOffset_Texture3D } /* 862 */,
    std::pair{ "textureSampleBiasProjCompareOffset"_h, &TextureSampleBiasProjCompareOffset_Texture1D } /* 863 */,
    std::pair{ "textureSampleBiasProjCompareOffset"_h, &SampledTextureSampleBiasProjCompareOffset_Texture1D } /* 864 */,
    std::pair{ "textureSampleBiasProjCompareOffset"_h, &TextureSampleBiasProjCompareOffset_Texture2D } /* 865 */,
    std::pair{ "textureSampleBiasProjCompareOffset"_h, &SampledTextureSampleBiasProjCompareOffset_Texture2D } /* 866 */,
    std::pair{ "textureSampleBiasProjCompareOffset"_h, &TextureSampleBiasProjCompareOffset_Texture3D } /* 867 */,
    std::pair{ "textureSampleBiasProjCompareOffset"_h, &SampledTextureSampleBiasProjCompareOffset_Texture3D } /* 868 */,
    std::pair{ "textureSample(uniform *textureSampled3D,f32x3)"_h, &SampledTextureSample_Texture3D } /* 869 */,
    std::pair{ "textureAtomicLoad(uniform *texture2DArray,i32x3,i16)"_h, &TextureAtomicLoad_Texture2DArray_Int16 } /* 870 */,
    std::pair{ "textureSampleGradCompare(uniform *textureSampled2D,f32x2,f32x2,f32x2,f32)"_h, &SampledTextureSampleGradCompare_Texture2D } /* 871 */,
    std::pair{ "textureGetMips(uniform *texture1DArray)"_h, &TextureGetMips_Texture1DArray } /* 872 */,
    std::pair{ "textureFetchSample(uniform *texture3D,i32x3,u32,u32)"_h, &TextureFetchSample_Texture3D } /* 873 */,
    std::pair{ "textureAtomicMin(uniform *texture1DArray,i32x2,u32)"_h, &TextureAtomicMin_Texture1DArray_UInt32 } /* 874 */,
    std::pair{ "clamp(u16x4,u16x4,u16x4)"_h, &clamp_UInt16x4 } /* 875 */,
    std::pair{ "u32x4(f32)"_h, &UInt32x4_splat_Float32 } /* 876 */,
    std::pair{ "mad(i16x4,i16x4,i16x4)"_h, &mad_Int16x4 } /* 877 */,
    std::pair{ "textureSampleLodOffset(uniform *textureSampled3D,f32x3,f32,f32x3)"_h, &SampledTextureSampleLodOffset_Texture3D } /* 878 */,
    std::pair{ "textureFetchSample(uniform *texture2DMSArray,i32x3,u32,u32)"_h, &TextureFetchSample_Texture2DMSArray } /* 879 */,
    std::pair{ "textureAtomicMax(uniform *texture3D,i32x3,u32)"_h, &TextureAtomicMax_Texture3D_UInt32 } /* 880 */,
    std::pair{ "i16x3(b8x3)"_h, &Int16x3_from_Bool8x3 } /* 881 */,
    std::pair{ "u32(FilterMode)"_h, &FilterModeType.fromUnderlyingType } /* 882 */,
    std::pair{ "domainGetTessellationCoordinates"_h, &DomainGetTessellationCoordinates } /* 883 */,
    std::pair{ "i16x3(b8)"_h, &Int16x3_splat_Bool8 } /* 884 */,
    std::pair{ "Color"_h, &ColorType } /* 885 */,
    std::pair{ "textureSampleLodCompare(uniform *texture2D,uniform *sampler,f32x2,f32,f32)"_h, &TextureSampleLodCompare_Texture2D } /* 886 */,
    std::pair{ "subgroupSwapVertical(i32x4)"_h, &SubgroupSwapVertical_Int32x4 } /* 887 */,
    std::pair{ "u16x4(u16)"_h, &UInt16x4_splat_UInt16 } /* 888 */,
    std::pair{ "subgroupSwapVertical(i32x3)"_h, &SubgroupSwapVertical_Int32x3 } /* 889 */,
    std::pair{ "subgroupSwapVertical(i32x2)"_h, &SubgroupSwapVertical_Int32x2 } /* 890 */,
    std::pair{ "sqrt(f32)"_h, &sqrt_Float32 } /* 891 */,
    std::pair{ "textureAtomicAnd(uniform *texture1DArray,i32x2,u32)"_h, &TextureAtomicAnd_Texture1DArray_UInt32 } /* 892 */,
    std::pair{ "u16x4(u16,u16x2,u16)"_h, &UInt16x4_ctor2 } /* 893 */,
    std::pair{ "f16x4(b8)"_h, &Float16x4_splat_Bool8 } /* 894 */,
    std::pair{ "mad(i32x3,i32x3,i32x3)"_h, &mad_Int32x3 } /* 895 */,
    std::pair{ "textureSampleGrad(uniform *textureSampled2D,f32x2,f32x2,f32x2)"_h, &SampledTextureSampleGrad_Texture2D } /* 896 */,
    std::pair{ "max(i16x4,i16x4)"_h, &max_Int16x4 } /* 897 */,
    std::pair{ "i32x4(f16x4)"_h, &Int32x4_from_Float16x4 } /* 898 */,
    std::pair{ "textureFetch(uniform *texture1D,i32,u32)"_h, &TextureFetch_Texture1D } /* 899 */,
    std::pair{ "textureAtomicLoad(uniform *texture3D,i32x3,u32)"_h, &TextureAtomicLoad_Texture3D_UInt32 } /* 900 */,
    std::pair{ "Winding(u32)"_h, &WindingType.toUnderlyingType } /* 901 */,
    std::pair{ "textureSampleLodCompareOffset(uniform *textureSampled1D,f32,f32,f32,f32)"_h, &SampledTextureSampleLodCompareOffset_Texture1D } /* 902 */,
    std::pair{ "textureAtomicMin(uniform *texture2D,i32x2,i16)"_h, &TextureAtomicMin_Texture2D_Int16 } /* 903 */,
    std::pair{ "atomicXor(*u16,u16,literal MemorySemantics)"_h, &AtomicXor_UInt16 } /* 904 */,
    std::pair{ "textureStore"_h, &TextureStore_Texture1D } /* 905 */,
    std::pair{ "textureStore"_h, &TextureStore_Texture2D } /* 906 */,
    std::pair{ "textureStore"_h, &TextureStore_Texture3D } /* 907 */,
    std::pair{ "textureStore"_h, &TextureStore_TextureCube } /* 908 */,
    std::pair{ "textureStore"_h, &TextureStore_Texture1DArray } /* 909 */,
    std::pair{ "textureStore"_h, &TextureStore_Texture2DArray } /* 910 */,
    std::pair{ "textureStore"_h, &TextureStore_TextureCubeArray } /* 911 */,
    std::pair{ "textureStore"_h, &TextureStore_Texture2DMS } /* 912 */,
    std::pair{ "textureStore"_h, &TextureStore_Texture2DMSArray } /* 913 */,
    std::pair{ "atomicXor(*i32,i32,literal MemorySemantics)"_h, &AtomicXor_Int32 } /* 914 */,
    std::pair{ "ComputeDerivatives"_h, &ComputeDerivativesType } /* 915 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture2DArray,i32x3,i32)"_h, &TextureAtomicCompareExchange_Texture2DArray_Int32 } /* 916 */,
    std::pair{ "textureAtomicLoad(uniform *texture1DArray,i32x2,i16)"_h, &TextureAtomicLoad_Texture1DArray_Int16 } /* 917 */,
    std::pair{ "f16x2(u16x2)"_h, &Float16x2_from_UInt16x2 } /* 918 */,
    std::pair{ "textureAtomicCompareExchange(uniform *textureCube,i32x3,u32)"_h, &TextureAtomicCompareExchange_TextureCube_UInt32 } /* 919 */,
    std::pair{ "i32(u16)"_h, &Int32_from_UInt16 } /* 920 */,
    std::pair{ "f32x2(f32x2)"_h, &Float32x2_from_Float32x2 } /* 921 */,
    std::pair{ "atomicAdd(*i16,i16,literal MemorySemantics)"_h, &AtomicAdd_Int16 } /* 922 */,
    std::pair{ "textureAtomicOr(uniform *texture1DArray,i32x2,i32)"_h, &TextureAtomicOr_Texture1DArray_Int32 } /* 923 */,
    std::pair{ "computeGetGlobalThreadIndices"_h, &ComputeGetGlobalThreadIndices } /* 924 */,
    std::pair{ "i16(u32)"_h, &Int16_from_UInt32 } /* 925 */,
    std::pair{ "textureGetSampledMip(uniform *textureCubeArray,uniform *sampler,f32x4)"_h, &TextureGetSampledMip_TextureCubeArray } /* 926 */,
    std::pair{ "subgroupSwapDiagonal(i32)"_h, &SubgroupSwapDiagonal_Int32 } /* 927 */,
    std::pair{ "executionBarrierWorkgroup()"_h, &ExecutionBarrierWorkgroup } /* 928 */,
    std::pair{ "castToI16(u16)"_h, &castToI16_UInt16 } /* 929 */,
    std::pair{ "u16x3(b8x3)"_h, &UInt16x3_from_Bool8x3 } /* 930 */,
    std::pair{ "bitCount"_h, &BitCount_UInt32 } /* 931 */,
    std::pair{ "bitCount"_h, &BitCount_Int32 } /* 932 */,
    std::pair{ "bitCount"_h, &BitCount_UInt16 } /* 933 */,
    std::pair{ "bitCount"_h, &BitCount_Int16 } /* 934 */,
    std::pair{ "geometryExportPrimitive()"_h, &GeometryExportPrimitive } /* 935 */,
    std::pair{ "clamp(f32x4,f32x4,f32x4)"_h, &clamp_Float32x4 } /* 936 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(i32)"_h, &SubgroupBroadcastFirstActiveThread_Int32 } /* 937 */,
    std::pair{ "textureSampleBias(uniform *texture3D,uniform *sampler,f32x3,f32)"_h, &TextureSampleBias_Texture3D } /* 938 */,
    std::pair{ "geometryGetTriangle"_h, &GeometryGetTriangle } /* 939 */,
    std::pair{ "i32(b8)"_h, &Int32_from_Bool8 } /* 940 */,
    std::pair{ "textureGetSizeMip(uniform *texture1DArray,u32)"_h, &TextureGetSizeMip_Texture1DArray } /* 941 */,
    std::pair{ "u16x4(b8x4)"_h, &UInt16x4_from_Bool8x4 } /* 942 */,
    std::pair{ "pow(f32x2,f32x2)"_h, &pow_Float32x2 } /* 943 */,
    std::pair{ "textureSampleBias(uniform *texture2D,uniform *sampler,f32x2,f32)"_h, &TextureSampleBias_Texture2D } /* 944 */,
    std::pair{ "textureSampleProjCompareOffset"_h, &TextureSampleProjCompareOffset_Texture1D } /* 945 */,
    std::pair{ "textureSampleProjCompareOffset"_h, &SampledTextureSampleProjCompareOffset_Texture1D } /* 946 */,
    std::pair{ "textureSampleProjCompareOffset"_h, &TextureSampleProjCompareOffset_Texture2D } /* 947 */,
    std::pair{ "textureSampleProjCompareOffset"_h, &SampledTextureSampleProjCompareOffset_Texture2D } /* 948 */,
    std::pair{ "textureSampleProjCompareOffset"_h, &TextureSampleProjCompareOffset_Texture3D } /* 949 */,
    std::pair{ "textureSampleProjCompareOffset"_h, &SampledTextureSampleProjCompareOffset_Texture3D } /* 950 */,
    std::pair{ "textureAtomicExchange(uniform *textureCubeArray,i32x4,i32)"_h, &TextureAtomicExchange_TextureCubeArray_Int32 } /* 951 */,
    std::pair{ "atomicStore(*u16,u16,literal MemorySemantics)"_h, &AtomicStore_UInt16 } /* 952 */,
    std::pair{ "mad(f16x2,f16x2,f16x2)"_h, &mad_Float16x2 } /* 953 */,
    std::pair{ "textureAtomicMax(uniform *texture2D,i32x2,i32)"_h, &TextureAtomicMax_Texture2D_Int32 } /* 954 */,
    std::pair{ "textureSampleLod(uniform *texture1D,uniform *sampler,f32,f32)"_h, &TextureSampleLod_Texture1D } /* 955 */,
    std::pair{ "atomicOr"_h, &AtomicOr_UInt32 } /* 956 */,
    std::pair{ "atomicOr"_h, &AtomicOr_Int32 } /* 957 */,
    std::pair{ "atomicOr"_h, &AtomicOr_UInt16 } /* 958 */,
    std::pair{ "atomicOr"_h, &AtomicOr_Int16 } /* 959 */,
    std::pair{ "i16x2(u16)"_h, &Int16x2_splat_UInt16 } /* 960 */,
    std::pair{ "textureSampleBiasCompare(uniform *texture2DArray,uniform *sampler,f32x3,f32,f32)"_h, &TextureSampleBiasCompare_Texture2DArray } /* 961 */,
    std::pair{ "bitReverse(u16)"_h, &BitReverse_UInt16 } /* 962 */,
    std::pair{ "textureSampleCompare(uniform *texture2D,uniform *sampler,f32x2,f32)"_h, &TextureSampleCompare_Texture2D } /* 963 */,
    std::pair{ "textureSampleBiasProjCompare(uniform *texture3D,uniform *sampler,f32x3,f32,f32,f32)"_h, &TextureSampleBiasProjCompare_Texture3D } /* 964 */,
    std::pair{ "sign(f32x4)"_h, &sign_Float32x4 } /* 965 */,
    std::pair{ "sign(f32x3)"_h, &sign_Float32x3 } /* 966 */,
    std::pair{ "sign(f32x2)"_h, &sign_Float32x2 } /* 967 */,
    std::pair{ "b8x4(b8x4)"_h, &Bool8x4_from_Bool8x4 } /* 968 */,
    std::pair{ "b8x3(b8x3)"_h, &Bool8x3_from_Bool8x3 } /* 969 */,
    std::pair{ "textureSampleGradOffset(uniform *texture2D,uniform *sampler,f32x2,f32x2,f32x2,f32x2)"_h, &TextureSampleGradOffset_Texture2D } /* 970 */,
    std::pair{ "fwidth"_h, &fwidth_Float32 } /* 971 */,
    std::pair{ "fwidth"_h, &fwidth_Float32x2 } /* 972 */,
    std::pair{ "fwidth"_h, &fwidth_Float32x3 } /* 973 */,
    std::pair{ "fwidth"_h, &fwidth_Float32x4 } /* 974 */,
    std::pair{ "fwidth"_h, &fwidth_Float16 } /* 975 */,
    std::pair{ "fwidth"_h, &fwidth_Float16x2 } /* 976 */,
    std::pair{ "fwidth"_h, &fwidth_Float16x3 } /* 977 */,
    std::pair{ "fwidth"_h, &fwidth_Float16x4 } /* 978 */,
    std::pair{ "u16x4(b8)"_h, &UInt16x4_splat_Bool8 } /* 979 */,
    std::pair{ "step(f16x4,f16x4)"_h, &step_Float16x4 } /* 980 */,
    std::pair{ "distance(f32x3,f32x3)"_h, &distance_Float32x3 } /* 981 */,
    std::pair{ "textureGetMips"_h, &TextureGetMips_Texture1D } /* 982 */,
    std::pair{ "textureGetMips"_h, &TextureGetMips_Texture2D } /* 983 */,
    std::pair{ "textureGetMips"_h, &TextureGetMips_Texture3D } /* 984 */,
    std::pair{ "textureGetMips"_h, &TextureGetMips_TextureCube } /* 985 */,
    std::pair{ "textureGetMips"_h, &TextureGetMips_Texture1DArray } /* 986 */,
    std::pair{ "textureGetMips"_h, &TextureGetMips_Texture2DArray } /* 987 */,
    std::pair{ "textureGetMips"_h, &TextureGetMips_TextureCubeArray } /* 988 */,
    std::pair{ "sign(i32x4)"_h, &sign_Int32x4 } /* 989 */,
    std::pair{ "sign(i32x2)"_h, &sign_Int32x2 } /* 990 */,
    std::pair{ "sign(i32x3)"_h, &sign_Int32x3 } /* 991 */,
    std::pair{ "f16x4(u32x4)"_h, &Float16x4_from_UInt32x4 } /* 992 */,
    std::pair{ "textureAtomicOr(uniform *textureCube,i32x3,i32)"_h, &TextureAtomicOr_TextureCube_Int32 } /* 993 */,
    std::pair{ "f16x4(f16,f16,f16x2)"_h, &Float16x4_ctor3 } /* 994 */,
    std::pair{ "textureSampleBiasCompareOffset(uniform *textureSampled1D,f32,f32,f32,f32)"_h, &SampledTextureSampleBiasCompareOffset_Texture1D } /* 995 */,
    std::pair{ "textureSampleGradProjCompare(uniform *textureSampled3D,f32x3,f32x3,f32x3,f32,f32)"_h, &SampledTextureSampleGradProjCompare_Texture3D } /* 996 */,
    std::pair{ "f16x3x2(f16,f16,f16,f16,f16,f16)"_h, &Float16x3x2_raw_list } /* 997 */,
    std::pair{ "textureGather(uniform *textureSampledCube,i32x3,i32)"_h, &SampledTextureGather_TextureCube } /* 998 */,
    std::pair{ "GeometryVertex"_h, &GeometryVertexType } /* 999 */,
    std::pair{ "f32(b8)"_h, &Float32_from_Bool8 } /* 1000 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture3D,i32x3,i32)"_h, &TextureAtomicCompareExchange_Texture3D_Int32 } /* 1001 */,
    std::pair{ "i16x3(f32x3)"_h, &Int16x3_from_Float32x3 } /* 1002 */,
    std::pair{ "min(i32x4,i32x4)"_h, &min_Int32x4 } /* 1003 */,
    std::pair{ "i32x3(u32x3)"_h, &Int32x3_from_UInt32x3 } /* 1004 */,
    std::pair{ "executionBarrierSubgroup()"_h, &ExecutionBarrierSubgroup } /* 1005 */,
    std::pair{ "textureSampleProjCompare(uniform *texture1D,uniform *sampler,f32,f32,f32)"_h, &TextureSampleProjCompare_Texture1D } /* 1006 */,
    std::pair{ "u16(f32)"_h, &UInt16_from_Float32 } /* 1007 */,
    std::pair{ "b8x2(b8,b8)"_h, &Bool8x2_ctor0 } /* 1008 */,
    std::pair{ "textureAtomicAdd(uniform *texture1DArray,i32x2,i32)"_h, &TextureAtomicAdd_Texture1DArray_Int32 } /* 1009 */,
    std::pair{ "i16x4(i16x3,i16)"_h, &Int16x4_ctor5 } /* 1010 */,
    std::pair{ "max(f32x3,f32x3)"_h, &max_Float32x3 } /* 1011 */,
    std::pair{ "sin(f32x2)"_h, &sin_Float32x2 } /* 1012 */,
    std::pair{ "sin(f32x3)"_h, &sin_Float32x3 } /* 1013 */,
    std::pair{ "textureSampleCompare(uniform *texture3D,uniform *sampler,f32x3,f32)"_h, &TextureSampleCompare_Texture3D } /* 1014 */,
    std::pair{ "sin(f32x4)"_h, &sin_Float32x4 } /* 1015 */,
    std::pair{ "texture2DMS"_h, &Texture2DMSType } /* 1016 */,
    std::pair{ "textureSampleLodOffset(uniform *textureSampled2DArray,f32x3,f32,f32x3)"_h, &SampledTextureSampleLodOffset_Texture2DArray } /* 1017 */,
    std::pair{ "f32x4x4(f32x4,f32x4,f32x4,f32x4)"_h, &Float32x4x4_Float32_4_ctor } /* 1018 */,
    std::pair{ "textureAtomicXor(uniform *textureCube,i32x3,u32)"_h, &TextureAtomicXor_TextureCube_UInt32 } /* 1019 */,
    std::pair{ "pixelExportColor(u16x3,literal u16)"_h, &PixelExportColor_UInt16x3_UInt16 } /* 1020 */,
    std::pair{ "textureGatherOffset(uniform *textureCube,uniform *sampler,i32x3,i32,u32)"_h, &TextureGatherOffset_TextureCube } /* 1021 */,
    std::pair{ "textureAtomicLoad(uniform *texture1DArray,i32x2,f32)"_h, &TextureAtomicLoad_Texture1DArray_Float32 } /* 1022 */,
    std::pair{ "textureSampleBiasProjCompareOffset(uniform *textureSampled3D,f32x3,f32,f32,f32,f32x3)"_h, &SampledTextureSampleBiasProjCompareOffset_Texture3D } /* 1023 */,
    std::pair{ "textureSampleGradOffset(uniform *textureSampled2DArray,f32x3,f32x3,f32x3,f32x3)"_h, &SampledTextureSampleGradOffset_Texture2DArray } /* 1024 */,
    std::pair{ "u32x4(f16)"_h, &UInt32x4_splat_Float16 } /* 1025 */,
    std::pair{ "textureAtomicStore(uniform *texture1DArray,i32x2,i16)"_h, &TextureAtomicStore_Texture1DArray_Int16 } /* 1026 */,
    std::pair{ "max(f32,f32)"_h, &max_Float32 } /* 1027 */,
    std::pair{ "textureSampleBiasCompare(uniform *textureSampled1D,f32,f32,f32)"_h, &SampledTextureSampleBiasCompare_Texture1D } /* 1028 */,
    std::pair{ "vertexSetOutputViewport"_h, &VertexSetOutputViewport_UInt16 } /* 1029 */,
    std::pair{ "vertexSetOutputViewport"_h, &VertexSetOutputViewport_UInt32 } /* 1030 */,
    std::pair{ "max(i32x3,i32x3)"_h, &max_Int32x3 } /* 1031 */,
    std::pair{ "textureAtomicStore(uniform *texture2D,i32x2,f16)"_h, &TextureAtomicStore_Texture2D_Float16 } /* 1032 */,
    std::pair{ "atomicOr(*u16,u16,literal MemorySemantics)"_h, &AtomicOr_UInt16 } /* 1033 */,
    std::pair{ "atomicIncrement(*u16,literal MemorySemantics)"_h, &AtomicIncrement_UInt16 } /* 1034 */,
    std::pair{ "u32(f32)"_h, &UInt32_from_Float32 } /* 1035 */,
    std::pair{ "textureAtomicLoad(uniform *texture2DArray,i32x3,i32)"_h, &TextureAtomicLoad_Texture2DArray_Int32 } /* 1036 */,
    std::pair{ "textureSampleBias(uniform *textureSampled1DArray,f32x2,f32)"_h, &SampledTextureSampleBias_Texture1DArray } /* 1037 */,
    std::pair{ "textureAtomicAnd(uniform *texture2D,i32x2,u32)"_h, &TextureAtomicAnd_Texture2D_UInt32 } /* 1038 */,
    std::pair{ "atomicStore"_h, &AtomicStore_UInt32 } /* 1039 */,
    std::pair{ "atomicStore"_h, &AtomicStore_Int32 } /* 1040 */,
    std::pair{ "atomicStore"_h, &AtomicStore_UInt16 } /* 1041 */,
    std::pair{ "atomicStore"_h, &AtomicStore_Int16 } /* 1042 */,
    std::pair{ "atomicStore"_h, &AtomicStore_Float32 } /* 1043 */,
    std::pair{ "atomicStore"_h, &AtomicStore_Float16 } /* 1044 */,
    std::pair{ "textureSample(uniform *texture1DArray,uniform *sampler,f32x2)"_h, &TextureSample_Texture1DArray } /* 1045 */,
    std::pair{ "textureSampleLodOffset(uniform *textureSampled1D,f32,f32,f32)"_h, &SampledTextureSampleLodOffset_Texture1D } /* 1046 */,
    std::pair{ "textureGetSampledMip(uniform *textureSampled2D,f32x2)"_h, &SampledTextureGetSampledMip_Texture2D } /* 1047 */,
    std::pair{ "f16x2(f16x2)"_h, &Float16x2_from_Float16x2 } /* 1048 */,
    std::pair{ "refract(f32x2,f32x2,f32x2)"_h, &refract_Float32x2 } /* 1049 */,
    std::pair{ "atan2(f16x3,f16x3)"_h, &atan2_Float16x3 } /* 1050 */,
    std::pair{ "textureSampleLodOffset(uniform *texture2D,uniform *sampler,f32x2,f32,f32x2)"_h, &TextureSampleLodOffset_Texture2D } /* 1051 */,
    std::pair{ "textureAtomicMax(uniform *texture1D,i32,u32)"_h, &TextureAtomicMax_Texture1D_UInt32 } /* 1052 */,
    std::pair{ "f16x4(f16)"_h, &Float16x4_splat_Float16 } /* 1053 */,
    std::pair{ "castToI32"_h, &castToI32_Float32 } /* 1054 */,
    std::pair{ "castToI32"_h, &castToI32_UInt32 } /* 1055 */,
    std::pair{ "castToI16"_h, &castToI16_Float16 } /* 1056 */,
    std::pair{ "castToI16"_h, &castToI16_UInt16 } /* 1057 */,
    std::pair{ "u16x4(i32x4)"_h, &UInt16x4_from_Int32x4 } /* 1058 */,
    std::pair{ "textureAtomicStore(uniform *texture3D,i32x3,u16)"_h, &TextureAtomicStore_Texture3D_UInt16 } /* 1059 */,
    std::pair{ "textureSampleGradCompare(uniform *textureSampled2DArray,f32x3,f32x3,f32x3,f32)"_h, &SampledTextureSampleGradCompare_Texture2DArray } /* 1060 */,
    std::pair{ "vertexGetBaseIndex"_h, &VertexGetBaseIndex } /* 1061 */,
    std::pair{ "b8x4"_h, &Bool8x4Type } /* 1062 */,
    std::pair{ "b8x4"_h, &Bool8x4_from_UInt32x4 } /* 1063 */,
    std::pair{ "b8x4"_h, &Bool8x4_splat_UInt32 } /* 1064 */,
    std::pair{ "b8x4"_h, &Bool8x4_from_Int32x4 } /* 1065 */,
    std::pair{ "b8x4"_h, &Bool8x4_splat_Int32 } /* 1066 */,
    std::pair{ "b8x4"_h, &Bool8x4_from_Bool8x4 } /* 1067 */,
    std::pair{ "b8x4"_h, &Bool8x4_splat_Bool8 } /* 1068 */,
    std::pair{ "b8x4"_h, &Bool8x4_from_UInt16x4 } /* 1069 */,
    std::pair{ "b8x4"_h, &Bool8x4_splat_UInt16 } /* 1070 */,
    std::pair{ "b8x4"_h, &Bool8x4_from_Int16x4 } /* 1071 */,
    std::pair{ "b8x4"_h, &Bool8x4_splat_Int16 } /* 1072 */,
    std::pair{ "b8x4"_h, &Bool8x4_ctor0 } /* 1073 */,
    std::pair{ "b8x4"_h, &Bool8x4_ctor1 } /* 1074 */,
    std::pair{ "b8x4"_h, &Bool8x4_ctor2 } /* 1075 */,
    std::pair{ "b8x4"_h, &Bool8x4_ctor3 } /* 1076 */,
    std::pair{ "b8x4"_h, &Bool8x4_ctor4 } /* 1077 */,
    std::pair{ "b8x4"_h, &Bool8x4_ctor5 } /* 1078 */,
    std::pair{ "b8x4"_h, &Bool8x4_ctor6 } /* 1079 */,
    std::pair{ "b8x3"_h, &Bool8x3Type } /* 1080 */,
    std::pair{ "b8x3"_h, &Bool8x3_from_UInt32x3 } /* 1081 */,
    std::pair{ "b8x3"_h, &Bool8x3_splat_UInt32 } /* 1082 */,
    std::pair{ "b8x3"_h, &Bool8x3_from_Int32x3 } /* 1083 */,
    std::pair{ "b8x3"_h, &Bool8x3_splat_Int32 } /* 1084 */,
    std::pair{ "b8x3"_h, &Bool8x3_from_Bool8x3 } /* 1085 */,
    std::pair{ "b8x3"_h, &Bool8x3_splat_Bool8 } /* 1086 */,
    std::pair{ "b8x3"_h, &Bool8x3_from_UInt16x3 } /* 1087 */,
    std::pair{ "b8x3"_h, &Bool8x3_splat_UInt16 } /* 1088 */,
    std::pair{ "b8x3"_h, &Bool8x3_from_Int16x3 } /* 1089 */,
    std::pair{ "b8x3"_h, &Bool8x3_splat_Int16 } /* 1090 */,
    std::pair{ "b8x3"_h, &Bool8x3_ctor0 } /* 1091 */,
    std::pair{ "b8x3"_h, &Bool8x3_ctor1 } /* 1092 */,
    std::pair{ "b8x3"_h, &Bool8x3_ctor2 } /* 1093 */,
    std::pair{ "b8x2"_h, &Bool8x2Type } /* 1094 */,
    std::pair{ "b8x2"_h, &Bool8x2_from_UInt32x2 } /* 1095 */,
    std::pair{ "b8x2"_h, &Bool8x2_splat_UInt32 } /* 1096 */,
    std::pair{ "b8x2"_h, &Bool8x2_from_Int32x2 } /* 1097 */,
    std::pair{ "b8x2"_h, &Bool8x2_splat_Int32 } /* 1098 */,
    std::pair{ "b8x2"_h, &Bool8x2_from_Bool8x2 } /* 1099 */,
    std::pair{ "b8x2"_h, &Bool8x2_splat_Bool8 } /* 1100 */,
    std::pair{ "b8x2"_h, &Bool8x2_from_UInt16x2 } /* 1101 */,
    std::pair{ "b8x2"_h, &Bool8x2_splat_UInt16 } /* 1102 */,
    std::pair{ "b8x2"_h, &Bool8x2_from_Int16x2 } /* 1103 */,
    std::pair{ "b8x2"_h, &Bool8x2_splat_Int16 } /* 1104 */,
    std::pair{ "b8x2"_h, &Bool8x2_ctor0 } /* 1105 */,
    std::pair{ "u16x4(u32)"_h, &UInt16x4_splat_UInt32 } /* 1106 */,
    std::pair{ "b8x3(b8,b8x2)"_h, &Bool8x3_ctor2 } /* 1107 */,
    std::pair{ "textureGather(uniform *textureSampledCubeArray,i32x4,i32)"_h, &SampledTextureGather_TextureCubeArray } /* 1108 */,
    std::pair{ "textureAtomicAnd(uniform *texture1D,i32,i32)"_h, &TextureAtomicAnd_Texture1D_Int32 } /* 1109 */,
    std::pair{ "i32x3(i32x2,i32)"_h, &Int32x3_ctor1 } /* 1110 */,
    std::pair{ "u32x2(i32x2)"_h, &UInt32x2_from_Int32x2 } /* 1111 */,
    std::pair{ "pixelExportColor(f32x2,literal i16)"_h, &PixelExportColor_Float32x2_Int16 } /* 1112 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32_Int32 } /* 1113 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32_UInt32 } /* 1114 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32_Int16 } /* 1115 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32_UInt16 } /* 1116 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32x2_Int32 } /* 1117 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32x2_UInt32 } /* 1118 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32x2_Int16 } /* 1119 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32x2_UInt16 } /* 1120 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32x3_Int32 } /* 1121 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32x3_UInt32 } /* 1122 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32x3_Int16 } /* 1123 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32x3_UInt16 } /* 1124 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32x4_Int32 } /* 1125 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32x4_UInt32 } /* 1126 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32x4_Int16 } /* 1127 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float32x4_UInt16 } /* 1128 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16_Int32 } /* 1129 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16_UInt32 } /* 1130 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16_Int16 } /* 1131 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16_UInt16 } /* 1132 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16x2_Int32 } /* 1133 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16x2_UInt32 } /* 1134 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16x2_Int16 } /* 1135 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16x2_UInt16 } /* 1136 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16x3_Int32 } /* 1137 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16x3_UInt32 } /* 1138 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16x3_Int16 } /* 1139 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16x3_UInt16 } /* 1140 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16x4_Int32 } /* 1141 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16x4_UInt32 } /* 1142 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16x4_Int16 } /* 1143 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Float16x4_UInt16 } /* 1144 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32_Int32 } /* 1145 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32_UInt32 } /* 1146 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32_Int16 } /* 1147 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32_UInt16 } /* 1148 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32x2_Int32 } /* 1149 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32x2_UInt32 } /* 1150 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32x2_Int16 } /* 1151 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32x2_UInt16 } /* 1152 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32x3_Int32 } /* 1153 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32x3_UInt32 } /* 1154 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32x3_Int16 } /* 1155 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32x3_UInt16 } /* 1156 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32x4_Int32 } /* 1157 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32x4_UInt32 } /* 1158 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32x4_Int16 } /* 1159 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int32x4_UInt16 } /* 1160 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16_Int32 } /* 1161 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16_UInt32 } /* 1162 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16_Int16 } /* 1163 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16_UInt16 } /* 1164 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16x2_Int32 } /* 1165 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16x2_UInt32 } /* 1166 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16x2_Int16 } /* 1167 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16x2_UInt16 } /* 1168 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16x3_Int32 } /* 1169 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16x3_UInt32 } /* 1170 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16x3_Int16 } /* 1171 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16x3_UInt16 } /* 1172 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16x4_Int32 } /* 1173 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16x4_UInt32 } /* 1174 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16x4_Int16 } /* 1175 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_Int16x4_UInt16 } /* 1176 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32_Int32 } /* 1177 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32_UInt32 } /* 1178 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32_Int16 } /* 1179 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32_UInt16 } /* 1180 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32x2_Int32 } /* 1181 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32x2_UInt32 } /* 1182 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32x2_Int16 } /* 1183 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32x2_UInt16 } /* 1184 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32x3_Int32 } /* 1185 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32x3_UInt32 } /* 1186 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32x3_Int16 } /* 1187 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32x3_UInt16 } /* 1188 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32x4_Int32 } /* 1189 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32x4_UInt32 } /* 1190 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32x4_Int16 } /* 1191 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt32x4_UInt16 } /* 1192 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16_Int32 } /* 1193 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16_UInt32 } /* 1194 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16_Int16 } /* 1195 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16_UInt16 } /* 1196 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16x2_Int32 } /* 1197 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16x2_UInt32 } /* 1198 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16x2_Int16 } /* 1199 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16x2_UInt16 } /* 1200 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16x3_Int32 } /* 1201 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16x3_UInt32 } /* 1202 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16x3_Int16 } /* 1203 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16x3_UInt16 } /* 1204 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16x4_Int32 } /* 1205 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16x4_UInt32 } /* 1206 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16x4_Int16 } /* 1207 */,
    std::pair{ "pixelExportColor"_h, &PixelExportColor_UInt16x4_UInt16 } /* 1208 */,
    std::pair{ "memoryBarrierWorkgroup()"_h, &MemoryBarrierWorkgroup } /* 1209 */,
    std::pair{ "textureAtomicMin(uniform *texture2D,i32x2,i32)"_h, &TextureAtomicMin_Texture2D_Int32 } /* 1210 */,
    std::pair{ "u32x3(u32)"_h, &UInt32x3_splat_UInt32 } /* 1211 */,
    std::pair{ "textureGather(uniform *texture2DArray,uniform *sampler,i32x3,i32)"_h, &TextureGather_Texture2DArray } /* 1212 */,
    std::pair{ "textureSampleBiasCompareOffset"_h, &TextureSampleBiasCompareOffset_Texture1D } /* 1213 */,
    std::pair{ "textureSampleBiasCompareOffset"_h, &SampledTextureSampleBiasCompareOffset_Texture1D } /* 1214 */,
    std::pair{ "textureSampleBiasCompareOffset"_h, &TextureSampleBiasCompareOffset_Texture2D } /* 1215 */,
    std::pair{ "textureSampleBiasCompareOffset"_h, &SampledTextureSampleBiasCompareOffset_Texture2D } /* 1216 */,
    std::pair{ "textureSampleBiasCompareOffset"_h, &TextureSampleBiasCompareOffset_Texture3D } /* 1217 */,
    std::pair{ "textureSampleBiasCompareOffset"_h, &SampledTextureSampleBiasCompareOffset_Texture3D } /* 1218 */,
    std::pair{ "textureSampleBiasCompareOffset"_h, &TextureSampleBiasCompareOffset_Texture1DArray } /* 1219 */,
    std::pair{ "textureSampleBiasCompareOffset"_h, &SampledTextureSampleBiasCompareOffset_Texture1DArray } /* 1220 */,
    std::pair{ "textureSampleBiasCompareOffset"_h, &TextureSampleBiasCompareOffset_Texture2DArray } /* 1221 */,
    std::pair{ "textureSampleBiasCompareOffset"_h, &SampledTextureSampleBiasCompareOffset_Texture2DArray } /* 1222 */,
    std::pair{ "textureSampleLod(uniform *textureSampledCube,f32x3,f32)"_h, &SampledTextureSampleLod_TextureCube } /* 1223 */,
    std::pair{ "subgroupInverseBallot"_h, &SubgroupInverseBallot } /* 1224 */,
    std::pair{ "cos(f32)"_h, &cos_Float32 } /* 1225 */,
    std::pair{ "i16x2(u32x2)"_h, &Int16x2_from_UInt32x2 } /* 1226 */,
    std::pair{ "textureSampleBias(uniform *textureSampled1D,f32,f32)"_h, &SampledTextureSampleBias_Texture1D } /* 1227 */,
    std::pair{ "textureAtomicMin(uniform *textureCube,i32x3,i16)"_h, &TextureAtomicMin_TextureCube_Int16 } /* 1228 */,
    std::pair{ "textureAtomicStore(uniform *texture2DArray,i32x3,u32)"_h, &TextureAtomicStore_Texture2DArray_UInt32 } /* 1229 */,
    std::pair{ "textureSampleOffset(uniform *texture2D,uniform *sampler,f32x2,f32x2)"_h, &TextureSampleOffset_Texture2D } /* 1230 */,
    std::pair{ "atomicXor(*u32,u32,literal MemorySemantics)"_h, &AtomicXor_UInt32 } /* 1231 */,
    std::pair{ "textureAtomicCompareExchange(uniform *textureCube,i32x3,u16)"_h, &TextureAtomicCompareExchange_TextureCube_UInt16 } /* 1232 */,
    std::pair{ "textureAtomicOr(uniform *texture1DArray,i32x2,i16)"_h, &TextureAtomicOr_Texture1DArray_Int16 } /* 1233 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(i16)"_h, &SubgroupBroadcastFirstActiveThread_Int16 } /* 1234 */,
    std::pair{ "min(f16x3,f16x3)"_h, &min_Float16x3 } /* 1235 */,
    std::pair{ "f32x3(i32x3)"_h, &Float32x3_from_Int32x3 } /* 1236 */,
    std::pair{ "pixelExportColor(i32x4,literal i32)"_h, &PixelExportColor_Int32x4_Int32 } /* 1237 */,
    std::pair{ "subgroupSwapDiagonal(i16)"_h, &SubgroupSwapDiagonal_Int16 } /* 1238 */,
    std::pair{ "textureSampleBiasCompareOffset(uniform *texture3D,uniform *sampler,f32x3,f32,f32,f32x3)"_h, &TextureSampleBiasCompareOffset_Texture3D } /* 1239 */,
    std::pair{ "subgroupBallotFirstOne"_h, &SubgroupBallotFirstOne } /* 1240 */,
    std::pair{ "min(f32x2,f32x2)"_h, &min_Float32x2 } /* 1241 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture1D_UInt32 } /* 1242 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture1D_Int32 } /* 1243 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture1D_UInt16 } /* 1244 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture1D_Int16 } /* 1245 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture2D_UInt32 } /* 1246 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture2D_Int32 } /* 1247 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture2D_UInt16 } /* 1248 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture2D_Int16 } /* 1249 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture3D_UInt32 } /* 1250 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture3D_Int32 } /* 1251 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture3D_UInt16 } /* 1252 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture3D_Int16 } /* 1253 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_TextureCube_UInt32 } /* 1254 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_TextureCube_Int32 } /* 1255 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_TextureCube_UInt16 } /* 1256 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_TextureCube_Int16 } /* 1257 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture1DArray_UInt32 } /* 1258 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture1DArray_Int32 } /* 1259 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture1DArray_UInt16 } /* 1260 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture1DArray_Int16 } /* 1261 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture2DArray_UInt32 } /* 1262 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture2DArray_Int32 } /* 1263 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture2DArray_UInt16 } /* 1264 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_Texture2DArray_Int16 } /* 1265 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_TextureCubeArray_UInt32 } /* 1266 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_TextureCubeArray_Int32 } /* 1267 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_TextureCubeArray_UInt16 } /* 1268 */,
    std::pair{ "textureAtomicMin"_h, &TextureAtomicMin_TextureCubeArray_Int16 } /* 1269 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture1D_UInt32 } /* 1270 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture1D_Int32 } /* 1271 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture1D_UInt16 } /* 1272 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture1D_Int16 } /* 1273 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture2D_UInt32 } /* 1274 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture2D_Int32 } /* 1275 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture2D_UInt16 } /* 1276 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture2D_Int16 } /* 1277 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture3D_UInt32 } /* 1278 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture3D_Int32 } /* 1279 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture3D_UInt16 } /* 1280 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture3D_Int16 } /* 1281 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_TextureCube_UInt32 } /* 1282 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_TextureCube_Int32 } /* 1283 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_TextureCube_UInt16 } /* 1284 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_TextureCube_Int16 } /* 1285 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture1DArray_UInt32 } /* 1286 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture1DArray_Int32 } /* 1287 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture1DArray_UInt16 } /* 1288 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture1DArray_Int16 } /* 1289 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture2DArray_UInt32 } /* 1290 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture2DArray_Int32 } /* 1291 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture2DArray_UInt16 } /* 1292 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_Texture2DArray_Int16 } /* 1293 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_TextureCubeArray_UInt32 } /* 1294 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_TextureCubeArray_Int32 } /* 1295 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_TextureCubeArray_UInt16 } /* 1296 */,
    std::pair{ "textureAtomicMax"_h, &TextureAtomicMax_TextureCubeArray_Int16 } /* 1297 */,
    std::pair{ "u32(Partition)"_h, &PartitionType.fromUnderlyingType } /* 1298 */,
    std::pair{ "pixelGetDepth()"_h, &PixelGetDepth } /* 1299 */,
    std::pair{ "textureAtomicMax(uniform *texture2D,i32x2,i16)"_h, &TextureAtomicMax_Texture2D_Int16 } /* 1300 */,
    std::pair{ "b8x2(i16x2)"_h, &Bool8x2_from_Int16x2 } /* 1301 */,
    std::pair{ "exp(f32x3)"_h, &exp_Float32x3 } /* 1302 */,
    std::pair{ "exp(f32x2)"_h, &exp_Float32x2 } /* 1303 */,
    std::pair{ "exp(f32x4)"_h, &exp_Float32x4 } /* 1304 */,
    std::pair{ "clamp(f32x2,f32x2,f32x2)"_h, &clamp_Float32x2 } /* 1305 */,
    std::pair{ "atomicStore(*f32,f32,literal MemorySemantics)"_h, &AtomicStore_Float32 } /* 1306 */,
    std::pair{ "bitInsert(u32,u32,u32,u32)"_h, &BitInsert_UInt32 } /* 1307 */,
    std::pair{ "u16"_h, &UInt16Type } /* 1308 */,
    std::pair{ "u16"_h, &UInt16_from_Float32 } /* 1309 */,
    std::pair{ "u16"_h, &UInt16_from_UInt32 } /* 1310 */,
    std::pair{ "u16"_h, &UInt16_from_Int32 } /* 1311 */,
    std::pair{ "u16"_h, &UInt16_from_Bool8 } /* 1312 */,
    std::pair{ "u16"_h, &UInt16_from_Float16 } /* 1313 */,
    std::pair{ "u16"_h, &UInt16_from_Int16 } /* 1314 */,
    std::pair{ "u16"_h, &UInt16_ctor0 } /* 1315 */,
    std::pair{ "u32"_h, &UInt32Type } /* 1316 */,
    std::pair{ "u32"_h, &UInt32_from_Float32 } /* 1317 */,
    std::pair{ "u32"_h, &UInt32_from_Int32 } /* 1318 */,
    std::pair{ "u32"_h, &UInt32_from_Bool8 } /* 1319 */,
    std::pair{ "u32"_h, &UInt32_from_Float16 } /* 1320 */,
    std::pair{ "u32"_h, &UInt32_from_UInt16 } /* 1321 */,
    std::pair{ "u32"_h, &UInt32_from_Int16 } /* 1322 */,
    std::pair{ "u32"_h, &UInt32_ctor0 } /* 1323 */,
    std::pair{ "min(f32x4,f32x4)"_h, &min_Float32x4 } /* 1324 */,
    std::pair{ "textureAtomicXor(uniform *texture1D,i32,i32)"_h, &TextureAtomicXor_Texture1D_Int32 } /* 1325 */,
    std::pair{ "mad(f16x4,f16x4,f16x4)"_h, &mad_Float16x4 } /* 1326 */,
    std::pair{ "length(f32x2)"_h, &length_Float32x2 } /* 1327 */,
    std::pair{ "length(f32x3)"_h, &length_Float32x3 } /* 1328 */,
    std::pair{ "length(f32x4)"_h, &length_Float32x4 } /* 1329 */,
    std::pair{ "sign"_h, &sign_Int32 } /* 1330 */,
    std::pair{ "sign"_h, &sign_Int32x2 } /* 1331 */,
    std::pair{ "sign"_h, &sign_Int32x3 } /* 1332 */,
    std::pair{ "sign"_h, &sign_Int32x4 } /* 1333 */,
    std::pair{ "sign"_h, &sign_Int16 } /* 1334 */,
    std::pair{ "sign"_h, &sign_Int16x2 } /* 1335 */,
    std::pair{ "sign"_h, &sign_Int16x3 } /* 1336 */,
    std::pair{ "sign"_h, &sign_Int16x4 } /* 1337 */,
    std::pair{ "sign"_h, &sign_Float32 } /* 1338 */,
    std::pair{ "sign"_h, &sign_Float32x2 } /* 1339 */,
    std::pair{ "sign"_h, &sign_Float32x3 } /* 1340 */,
    std::pair{ "sign"_h, &sign_Float32x4 } /* 1341 */,
    std::pair{ "sign"_h, &sign_Float16 } /* 1342 */,
    std::pair{ "sign"_h, &sign_Float16x2 } /* 1343 */,
    std::pair{ "sign"_h, &sign_Float16x3 } /* 1344 */,
    std::pair{ "sign"_h, &sign_Float16x4 } /* 1345 */,
    std::pair{ "f32x4x4(f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32)"_h, &Float32x4x4_raw_list } /* 1346 */,
    std::pair{ "textureAtomicStore(uniform *texture2D,i32x2,i32)"_h, &TextureAtomicStore_Texture2D_Int32 } /* 1347 */,
    std::pair{ "sinh"_h, &sinh_Float32 } /* 1348 */,
    std::pair{ "sinh"_h, &sinh_Float32x2 } /* 1349 */,
    std::pair{ "sinh"_h, &sinh_Float32x3 } /* 1350 */,
    std::pair{ "sinh"_h, &sinh_Float32x4 } /* 1351 */,
    std::pair{ "sinh"_h, &sinh_Float16 } /* 1352 */,
    std::pair{ "sinh"_h, &sinh_Float16x2 } /* 1353 */,
    std::pair{ "sinh"_h, &sinh_Float16x3 } /* 1354 */,
    std::pair{ "sinh"_h, &sinh_Float16x4 } /* 1355 */,
    std::pair{ "u16x4(i16x4)"_h, &UInt16x4_from_Int16x4 } /* 1356 */,
    std::pair{ "f16x4x2(f16x2,f16x2,f16x2,f16x2)"_h, &Float16x4x2_Float16_2_ctor } /* 1357 */,
    std::pair{ "textureSampleProjCompareOffset(uniform *textureSampled3D,f32x3,f32,f32,f32x3)"_h, &SampledTextureSampleProjCompareOffset_Texture3D } /* 1358 */,
    std::pair{ "f32x2x3(f32,f32,f32,f32,f32,f32)"_h, &Float32x2x3_raw_list } /* 1359 */,
    std::pair{ "max(f16x3,f16x3)"_h, &max_Float16x3 } /* 1360 */,
    std::pair{ "bitReverse(u32)"_h, &BitReverse_UInt32 } /* 1361 */,
    std::pair{ "f16x3(f16x3)"_h, &Float16x3_from_Float16x3 } /* 1362 */,
    std::pair{ "i32x4"_h, &Int32x4Type } /* 1363 */,
    std::pair{ "i32x4"_h, &Int32x4_from_Float32x4 } /* 1364 */,
    std::pair{ "i32x4"_h, &Int32x4_splat_Float32 } /* 1365 */,
    std::pair{ "i32x4"_h, &Int32x4_from_UInt32x4 } /* 1366 */,
    std::pair{ "i32x4"_h, &Int32x4_splat_UInt32 } /* 1367 */,
    std::pair{ "i32x4"_h, &Int32x4_from_Int32x4 } /* 1368 */,
    std::pair{ "i32x4"_h, &Int32x4_splat_Int32 } /* 1369 */,
    std::pair{ "i32x4"_h, &Int32x4_from_Bool8x4 } /* 1370 */,
    std::pair{ "i32x4"_h, &Int32x4_splat_Bool8 } /* 1371 */,
    std::pair{ "i32x4"_h, &Int32x4_from_Float16x4 } /* 1372 */,
    std::pair{ "i32x4"_h, &Int32x4_splat_Float16 } /* 1373 */,
    std::pair{ "i32x4"_h, &Int32x4_from_UInt16x4 } /* 1374 */,
    std::pair{ "i32x4"_h, &Int32x4_splat_UInt16 } /* 1375 */,
    std::pair{ "i32x4"_h, &Int32x4_from_Int16x4 } /* 1376 */,
    std::pair{ "i32x4"_h, &Int32x4_splat_Int16 } /* 1377 */,
    std::pair{ "i32x4"_h, &Int32x4_ctor0 } /* 1378 */,
    std::pair{ "i32x4"_h, &Int32x4_ctor1 } /* 1379 */,
    std::pair{ "i32x4"_h, &Int32x4_ctor2 } /* 1380 */,
    std::pair{ "i32x4"_h, &Int32x4_ctor3 } /* 1381 */,
    std::pair{ "i32x4"_h, &Int32x4_ctor4 } /* 1382 */,
    std::pair{ "i32x4"_h, &Int32x4_ctor5 } /* 1383 */,
    std::pair{ "i32x4"_h, &Int32x4_ctor6 } /* 1384 */,
    std::pair{ "i32x3"_h, &Int32x3Type } /* 1385 */,
    std::pair{ "i32x3"_h, &Int32x3_from_Float32x3 } /* 1386 */,
    std::pair{ "i32x3"_h, &Int32x3_splat_Float32 } /* 1387 */,
    std::pair{ "i32x3"_h, &Int32x3_from_UInt32x3 } /* 1388 */,
    std::pair{ "i32x3"_h, &Int32x3_splat_UInt32 } /* 1389 */,
    std::pair{ "i32x3"_h, &Int32x3_from_Int32x3 } /* 1390 */,
    std::pair{ "i32x3"_h, &Int32x3_splat_Int32 } /* 1391 */,
    std::pair{ "i32x3"_h, &Int32x3_from_Bool8x3 } /* 1392 */,
    std::pair{ "i32x3"_h, &Int32x3_splat_Bool8 } /* 1393 */,
    std::pair{ "i32x3"_h, &Int32x3_from_Float16x3 } /* 1394 */,
    std::pair{ "i32x3"_h, &Int32x3_splat_Float16 } /* 1395 */,
    std::pair{ "i32x3"_h, &Int32x3_from_UInt16x3 } /* 1396 */,
    std::pair{ "i32x3"_h, &Int32x3_splat_UInt16 } /* 1397 */,
    std::pair{ "i32x3"_h, &Int32x3_from_Int16x3 } /* 1398 */,
    std::pair{ "i32x3"_h, &Int32x3_splat_Int16 } /* 1399 */,
    std::pair{ "i32x3"_h, &Int32x3_ctor0 } /* 1400 */,
    std::pair{ "i32x3"_h, &Int32x3_ctor1 } /* 1401 */,
    std::pair{ "i32x3"_h, &Int32x3_ctor2 } /* 1402 */,
    std::pair{ "i32x2"_h, &Int32x2Type } /* 1403 */,
    std::pair{ "i32x2"_h, &Int32x2_from_Float32x2 } /* 1404 */,
    std::pair{ "i32x2"_h, &Int32x2_splat_Float32 } /* 1405 */,
    std::pair{ "i32x2"_h, &Int32x2_from_UInt32x2 } /* 1406 */,
    std::pair{ "i32x2"_h, &Int32x2_splat_UInt32 } /* 1407 */,
    std::pair{ "i32x2"_h, &Int32x2_from_Int32x2 } /* 1408 */,
    std::pair{ "i32x2"_h, &Int32x2_splat_Int32 } /* 1409 */,
    std::pair{ "i32x2"_h, &Int32x2_from_Bool8x2 } /* 1410 */,
    std::pair{ "i32x2"_h, &Int32x2_splat_Bool8 } /* 1411 */,
    std::pair{ "i32x2"_h, &Int32x2_from_Float16x2 } /* 1412 */,
    std::pair{ "i32x2"_h, &Int32x2_splat_Float16 } /* 1413 */,
    std::pair{ "i32x2"_h, &Int32x2_from_UInt16x2 } /* 1414 */,
    std::pair{ "i32x2"_h, &Int32x2_splat_UInt16 } /* 1415 */,
    std::pair{ "i32x2"_h, &Int32x2_from_Int16x2 } /* 1416 */,
    std::pair{ "i32x2"_h, &Int32x2_splat_Int16 } /* 1417 */,
    std::pair{ "i32x2"_h, &Int32x2_ctor0 } /* 1418 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture1D_UInt32 } /* 1419 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture1D_Int32 } /* 1420 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture1D_UInt16 } /* 1421 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture1D_Int16 } /* 1422 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture2D_UInt32 } /* 1423 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture2D_Int32 } /* 1424 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture2D_UInt16 } /* 1425 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture2D_Int16 } /* 1426 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture3D_UInt32 } /* 1427 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture3D_Int32 } /* 1428 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture3D_UInt16 } /* 1429 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture3D_Int16 } /* 1430 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_TextureCube_UInt32 } /* 1431 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_TextureCube_Int32 } /* 1432 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_TextureCube_UInt16 } /* 1433 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_TextureCube_Int16 } /* 1434 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture1DArray_UInt32 } /* 1435 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture1DArray_Int32 } /* 1436 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture1DArray_UInt16 } /* 1437 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture1DArray_Int16 } /* 1438 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture2DArray_UInt32 } /* 1439 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture2DArray_Int32 } /* 1440 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture2DArray_UInt16 } /* 1441 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_Texture2DArray_Int16 } /* 1442 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_TextureCubeArray_UInt32 } /* 1443 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_TextureCubeArray_Int32 } /* 1444 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_TextureCubeArray_UInt16 } /* 1445 */,
    std::pair{ "textureAtomicCompareExchange"_h, &TextureAtomicCompareExchange_TextureCubeArray_Int16 } /* 1446 */,
    std::pair{ "i32x2(i32x2)"_h, &Int32x2_from_Int32x2 } /* 1447 */,
    std::pair{ "inverse(f16x4x4)"_h, &inverse_Float16x4x4 } /* 1448 */,
    std::pair{ "inverse(f16x4x2)"_h, &inverse_Float16x4x2 } /* 1449 */,
    std::pair{ "inverse(f16x4x3)"_h, &inverse_Float16x4x3 } /* 1450 */,
    std::pair{ "textureLoadMip(uniform *mutable texture1DArray,i32x2,i32)"_h, &TextureLoadMip_Texture1DArray } /* 1451 */,
    std::pair{ "fract(f16x4)"_h, &fract_Float16x4 } /* 1452 */,
    std::pair{ "textureSampleLod(uniform *texture2D,uniform *sampler,f32x2,f32)"_h, &TextureSampleLod_Texture2D } /* 1453 */,
    std::pair{ "fract(f16x2)"_h, &fract_Float16x2 } /* 1454 */,
    std::pair{ "fract(f16x3)"_h, &fract_Float16x3 } /* 1455 */,
    std::pair{ "textureAtomicAdd(uniform *texture1DArray,i32x2,i16)"_h, &TextureAtomicAdd_Texture1DArray_Int16 } /* 1456 */,
    std::pair{ "smoothstep(f32x2,f32x2,f32x2)"_h, &smoothstep_Float32x2 } /* 1457 */,
    std::pair{ "i32x4(i32x4)"_h, &Int32x4_from_Int32x4 } /* 1458 */,
    std::pair{ "textureSampleCompare(uniform *texture2DArray,uniform *sampler,f32x3,f32)"_h, &TextureSampleCompare_Texture2DArray } /* 1459 */,
    std::pair{ "f16x2x2(f16,f16,f16,f16)"_h, &Float16x2x2_raw_list } /* 1460 */,
    std::pair{ "textureGetSizeMip(uniform *texture2DArray,u32)"_h, &TextureGetSizeMip_Texture2DArray } /* 1461 */,
    std::pair{ "saturate(f16x3)"_h, &saturate_Float16x3 } /* 1462 */,
    std::pair{ "saturate(f16x2)"_h, &saturate_Float16x2 } /* 1463 */,
    std::pair{ "saturate(f16x4)"_h, &saturate_Float16x4 } /* 1464 */,
    std::pair{ "i16x3(i16,i16x2)"_h, &Int16x3_ctor2 } /* 1465 */,
    std::pair{ "f32x4(f32x2,f32x2)"_h, &Float32x4_ctor4 } /* 1466 */,
    std::pair{ "textureAtomicXor(uniform *textureCube,i32x3,u16)"_h, &TextureAtomicXor_TextureCube_UInt16 } /* 1467 */,
    std::pair{ "u32x4(u32x4)"_h, &UInt32x4_from_UInt32x4 } /* 1468 */,
    std::pair{ "i32x3(i32)"_h, &Int32x3_splat_Int32 } /* 1469 */,
    std::pair{ "f32x4(f16x4)"_h, &Float32x4_from_Float16x4 } /* 1470 */,
    std::pair{ "textureAtomicExchange(uniform *texture3D,i32x3,u32)"_h, &TextureAtomicExchange_Texture3D_UInt32 } /* 1471 */,
    std::pair{ "textureSampleBiasCompare(uniform *texture2D,uniform *sampler,f32x2,f32,f32)"_h, &TextureSampleBiasCompare_Texture2D } /* 1472 */,
    std::pair{ "textureSampleLod(uniform *textureSampled2DArray,f32x3,f32)"_h, &SampledTextureSampleLod_Texture2DArray } /* 1473 */,
    std::pair{ "textureSampleOffset"_h, &TextureSampleOffset_Texture1D } /* 1474 */,
    std::pair{ "textureSampleOffset"_h, &SampledTextureSampleOffset_Texture1D } /* 1475 */,
    std::pair{ "textureSampleOffset"_h, &TextureSampleOffset_Texture2D } /* 1476 */,
    std::pair{ "textureSampleOffset"_h, &SampledTextureSampleOffset_Texture2D } /* 1477 */,
    std::pair{ "textureSampleOffset"_h, &TextureSampleOffset_Texture3D } /* 1478 */,
    std::pair{ "textureSampleOffset"_h, &SampledTextureSampleOffset_Texture3D } /* 1479 */,
    std::pair{ "textureSampleOffset"_h, &TextureSampleOffset_Texture1DArray } /* 1480 */,
    std::pair{ "textureSampleOffset"_h, &SampledTextureSampleOffset_Texture1DArray } /* 1481 */,
    std::pair{ "textureSampleOffset"_h, &TextureSampleOffset_Texture2DArray } /* 1482 */,
    std::pair{ "textureSampleOffset"_h, &SampledTextureSampleOffset_Texture2DArray } /* 1483 */,
    std::pair{ "atan"_h, &atan_Float32 } /* 1484 */,
    std::pair{ "atan"_h, &atan_Float32x2 } /* 1485 */,
    std::pair{ "atan"_h, &atan_Float32x3 } /* 1486 */,
    std::pair{ "atan"_h, &atan_Float32x4 } /* 1487 */,
    std::pair{ "atan"_h, &atan_Float16 } /* 1488 */,
    std::pair{ "atan"_h, &atan_Float16x2 } /* 1489 */,
    std::pair{ "atan"_h, &atan_Float16x3 } /* 1490 */,
    std::pair{ "atan"_h, &atan_Float16x4 } /* 1491 */,
    std::pair{ "u32x2(f32x2)"_h, &UInt32x2_from_Float32x2 } /* 1492 */,
    std::pair{ "f16x3(f16)"_h, &Float16x3_splat_Float16 } /* 1493 */,
    std::pair{ "f32x3(b8x3)"_h, &Float32x3_from_Bool8x3 } /* 1494 */,
    std::pair{ "textureFetch(uniform *texture2DMSArray,i32x3,u32)"_h, &TextureFetch_Texture2DMSArray } /* 1495 */,
    std::pair{ "textureSampleGradOffset(uniform *texture1D,uniform *sampler,f32,f32,f32,f32)"_h, &TextureSampleGradOffset_Texture1D } /* 1496 */,
    std::pair{ "b8x2(u16x2)"_h, &Bool8x2_from_UInt16x2 } /* 1497 */,
    std::pair{ "sqrt(f32x4)"_h, &sqrt_Float32x4 } /* 1498 */,
    std::pair{ "textureAtomicStore(uniform *texture1DArray,i32x2,i32)"_h, &TextureAtomicStore_Texture1DArray_Int32 } /* 1499 */,
    std::pair{ "sqrt(f32x2)"_h, &sqrt_Float32x2 } /* 1500 */,
    std::pair{ "sqrt(f32x3)"_h, &sqrt_Float32x3 } /* 1501 */,
    std::pair{ "subgroupSwapDiagonal(f32)"_h, &SubgroupSwapDiagonal_Float32 } /* 1502 */,
    std::pair{ "textureAtomicLoad(uniform *texture1DArray,i32x2,f16)"_h, &TextureAtomicLoad_Texture1DArray_Float16 } /* 1503 */,
    std::pair{ "pixelExportColor(u16x3,literal u32)"_h, &PixelExportColor_UInt16x3_UInt32 } /* 1504 */,
    std::pair{ "domainGetPrimitiveIndex(u32)"_h, &DomainGetPrimitiveIndex } /* 1505 */,
    std::pair{ "f16x4"_h, &Float16x4Type } /* 1506 */,
    std::pair{ "f16x4"_h, &Float16x4_from_Float32x4 } /* 1507 */,
    std::pair{ "f16x4"_h, &Float16x4_splat_Float32 } /* 1508 */,
    std::pair{ "f16x4"_h, &Float16x4_from_UInt32x4 } /* 1509 */,
    std::pair{ "f16x4"_h, &Float16x4_splat_UInt32 } /* 1510 */,
    std::pair{ "f16x4"_h, &Float16x4_from_Int32x4 } /* 1511 */,
    std::pair{ "f16x4"_h, &Float16x4_splat_Int32 } /* 1512 */,
    std::pair{ "f16x4"_h, &Float16x4_from_Bool8x4 } /* 1513 */,
    std::pair{ "f16x4"_h, &Float16x4_splat_Bool8 } /* 1514 */,
    std::pair{ "f16x4"_h, &Float16x4_from_Float16x4 } /* 1515 */,
    std::pair{ "f16x4"_h, &Float16x4_splat_Float16 } /* 1516 */,
    std::pair{ "f16x4"_h, &Float16x4_from_UInt16x4 } /* 1517 */,
    std::pair{ "f16x4"_h, &Float16x4_splat_UInt16 } /* 1518 */,
    std::pair{ "f16x4"_h, &Float16x4_from_Int16x4 } /* 1519 */,
    std::pair{ "f16x4"_h, &Float16x4_splat_Int16 } /* 1520 */,
    std::pair{ "f16x4"_h, &Float16x4_ctor0 } /* 1521 */,
    std::pair{ "f16x4"_h, &Float16x4_ctor1 } /* 1522 */,
    std::pair{ "f16x4"_h, &Float16x4_ctor2 } /* 1523 */,
    std::pair{ "f16x4"_h, &Float16x4_ctor3 } /* 1524 */,
    std::pair{ "f16x4"_h, &Float16x4_ctor4 } /* 1525 */,
    std::pair{ "f16x4"_h, &Float16x4_ctor5 } /* 1526 */,
    std::pair{ "f16x4"_h, &Float16x4_ctor6 } /* 1527 */,
    std::pair{ "f16x2"_h, &Float16x2Type } /* 1528 */,
    std::pair{ "f16x2"_h, &Float16x2_from_Float32x2 } /* 1529 */,
    std::pair{ "f16x2"_h, &Float16x2_splat_Float32 } /* 1530 */,
    std::pair{ "f16x2"_h, &Float16x2_from_UInt32x2 } /* 1531 */,
    std::pair{ "f16x2"_h, &Float16x2_splat_UInt32 } /* 1532 */,
    std::pair{ "f16x2"_h, &Float16x2_from_Int32x2 } /* 1533 */,
    std::pair{ "f16x2"_h, &Float16x2_splat_Int32 } /* 1534 */,
    std::pair{ "f16x2"_h, &Float16x2_from_Bool8x2 } /* 1535 */,
    std::pair{ "f16x2"_h, &Float16x2_splat_Bool8 } /* 1536 */,
    std::pair{ "f16x2"_h, &Float16x2_from_Float16x2 } /* 1537 */,
    std::pair{ "f16x2"_h, &Float16x2_splat_Float16 } /* 1538 */,
    std::pair{ "f16x2"_h, &Float16x2_from_UInt16x2 } /* 1539 */,
    std::pair{ "f16x2"_h, &Float16x2_splat_UInt16 } /* 1540 */,
    std::pair{ "f16x2"_h, &Float16x2_from_Int16x2 } /* 1541 */,
    std::pair{ "f16x2"_h, &Float16x2_splat_Int16 } /* 1542 */,
    std::pair{ "f16x2"_h, &Float16x2_ctor0 } /* 1543 */,
    std::pair{ "f16x3"_h, &Float16x3Type } /* 1544 */,
    std::pair{ "f16x3"_h, &Float16x3_from_Float32x3 } /* 1545 */,
    std::pair{ "f16x3"_h, &Float16x3_splat_Float32 } /* 1546 */,
    std::pair{ "f16x3"_h, &Float16x3_from_UInt32x3 } /* 1547 */,
    std::pair{ "f16x3"_h, &Float16x3_splat_UInt32 } /* 1548 */,
    std::pair{ "f16x3"_h, &Float16x3_from_Int32x3 } /* 1549 */,
    std::pair{ "f16x3"_h, &Float16x3_splat_Int32 } /* 1550 */,
    std::pair{ "f16x3"_h, &Float16x3_from_Bool8x3 } /* 1551 */,
    std::pair{ "f16x3"_h, &Float16x3_splat_Bool8 } /* 1552 */,
    std::pair{ "f16x3"_h, &Float16x3_from_Float16x3 } /* 1553 */,
    std::pair{ "f16x3"_h, &Float16x3_splat_Float16 } /* 1554 */,
    std::pair{ "f16x3"_h, &Float16x3_from_UInt16x3 } /* 1555 */,
    std::pair{ "f16x3"_h, &Float16x3_splat_UInt16 } /* 1556 */,
    std::pair{ "f16x3"_h, &Float16x3_from_Int16x3 } /* 1557 */,
    std::pair{ "f16x3"_h, &Float16x3_splat_Int16 } /* 1558 */,
    std::pair{ "f16x3"_h, &Float16x3_ctor0 } /* 1559 */,
    std::pair{ "f16x3"_h, &Float16x3_ctor1 } /* 1560 */,
    std::pair{ "f16x3"_h, &Float16x3_ctor2 } /* 1561 */,
    std::pair{ "textureAtomicOr(uniform *textureCubeArray,i32x4,i16)"_h, &TextureAtomicOr_TextureCubeArray_Int16 } /* 1562 */,
    std::pair{ "f32(i32)"_h, &Float32_from_Int32 } /* 1563 */,
    std::pair{ "atomicAnd(*i16,i16,literal MemorySemantics)"_h, &AtomicAnd_Int16 } /* 1564 */,
    std::pair{ "min(f16,f16)"_h, &min_Float16 } /* 1565 */,
    std::pair{ "textureAtomicAnd(uniform *texture2D,i32x2,u16)"_h, &TextureAtomicAnd_Texture2D_UInt16 } /* 1566 */,
    std::pair{ "textureGetMips(uniform *texture1D)"_h, &TextureGetMips_Texture1D } /* 1567 */,
    std::pair{ "f16x4(i16)"_h, &Float16x4_splat_Int16 } /* 1568 */,
    std::pair{ "invSqrt(f16)"_h, &invSqrt_Float16 } /* 1569 */,
    std::pair{ "i16x3(i16)"_h, &Int16x3_splat_Int16 } /* 1570 */,
    std::pair{ "u16x3(f16x3)"_h, &UInt16x3_from_Float16x3 } /* 1571 */,
    std::pair{ "u32(f16)"_h, &UInt32_from_Float16 } /* 1572 */,
    std::pair{ "textureSampleLodCompareOffset(uniform *textureSampled3D,f32x3,f32,f32,f32x3)"_h, &SampledTextureSampleLodCompareOffset_Texture3D } /* 1573 */,
    std::pair{ "vertexExportCoordinates"_h, &VertexExportCoordinates_Float32x4 } /* 1574 */,
    std::pair{ "vertexExportCoordinates"_h, &VertexExportCoordinates_Float16x4 } /* 1575 */,
    std::pair{ "subgroupGetLowerMask()"_h, &SubgroupGetLowerMask } /* 1576 */,
    std::pair{ "u32(WindingOrder)"_h, &WindingOrderType.fromUnderlyingType } /* 1577 */,
    std::pair{ "textureAtomicLoad(uniform *texture3D,i32x3,f16)"_h, &TextureAtomicLoad_Texture3D_Float16 } /* 1578 */,
    std::pair{ "f16x4(f32)"_h, &Float16x4_splat_Float32 } /* 1579 */,
    std::pair{ "textureGetSizeMip(uniform *texture1D,u32)"_h, &TextureGetSizeMip_Texture1D } /* 1580 */,
    std::pair{ "tan"_h, &tan_Float32 } /* 1581 */,
    std::pair{ "tan"_h, &tan_Float32x2 } /* 1582 */,
    std::pair{ "tan"_h, &tan_Float32x3 } /* 1583 */,
    std::pair{ "tan"_h, &tan_Float32x4 } /* 1584 */,
    std::pair{ "tan"_h, &tan_Float16 } /* 1585 */,
    std::pair{ "tan"_h, &tan_Float16x2 } /* 1586 */,
    std::pair{ "tan"_h, &tan_Float16x3 } /* 1587 */,
    std::pair{ "tan"_h, &tan_Float16x4 } /* 1588 */,
    std::pair{ "textureAtomicSubtract(uniform *texture3D,i32x3,u16)"_h, &TextureAtomicSubtract_Texture3D_UInt16 } /* 1589 */,
    std::pair{ "u16x4(u16,u16,u16,u16)"_h, &UInt16x4_ctor0 } /* 1590 */,
    std::pair{ "pixelExportColor(u16x4,literal i16)"_h, &PixelExportColor_UInt16x4_Int16 } /* 1591 */,
    std::pair{ "textureSampleProjCompare(uniform *textureSampled2D,f32x2,f32,f32)"_h, &SampledTextureSampleProjCompare_Texture2D } /* 1592 */,
    std::pair{ "i32x3(u16x3)"_h, &Int32x3_from_UInt16x3 } /* 1593 */,
    std::pair{ "b8x4(b8,b8,b8x2)"_h, &Bool8x4_ctor3 } /* 1594 */,
    std::pair{ "i16x3(i32x3)"_h, &Int16x3_from_Int32x3 } /* 1595 */,
    std::pair{ "textureAtomicAdd(uniform *texture1D,i32,u16)"_h, &TextureAtomicAdd_Texture1D_UInt16 } /* 1596 */,
    std::pair{ "pixelExportColor(f32x2,literal i32)"_h, &PixelExportColor_Float32x2_Int32 } /* 1597 */,
    std::pair{ "textureAtomicMax(uniform *texture1D,i32,u16)"_h, &TextureAtomicMax_Texture1D_UInt16 } /* 1598 */,
    std::pair{ "f16x2x4(f16,f16,f16,f16,f16,f16,f16,f16)"_h, &Float16x2x4_raw_list } /* 1599 */,
    std::pair{ "f32x2(u16)"_h, &Float32x2_splat_UInt16 } /* 1600 */,
    std::pair{ "u32x3(u16)"_h, &UInt32x3_splat_UInt16 } /* 1601 */,
    std::pair{ "textureSampleBiasProj"_h, &TextureSampleBiasProj_Texture1D } /* 1602 */,
    std::pair{ "textureSampleBiasProj"_h, &SampledTextureSampleBiasProj_Texture1D } /* 1603 */,
    std::pair{ "textureSampleBiasProj"_h, &TextureSampleBiasProj_Texture2D } /* 1604 */,
    std::pair{ "textureSampleBiasProj"_h, &SampledTextureSampleBiasProj_Texture2D } /* 1605 */,
    std::pair{ "textureSampleBiasProj"_h, &TextureSampleBiasProj_Texture3D } /* 1606 */,
    std::pair{ "textureSampleBiasProj"_h, &SampledTextureSampleBiasProj_Texture3D } /* 1607 */,
    std::pair{ "textureAtomicAnd(uniform *texture1D,i32,i16)"_h, &TextureAtomicAnd_Texture1D_Int16 } /* 1608 */,
    std::pair{ "textureAtomicStore(uniform *texture3D,i32x3,u32)"_h, &TextureAtomicStore_Texture3D_UInt32 } /* 1609 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture2D,i32x2,u32)"_h, &TextureAtomicCompareExchange_Texture2D_UInt32 } /* 1610 */,
    std::pair{ "subgroupSwapHorizontal(u16)"_h, &SubgroupSwapHorizontal_UInt16 } /* 1611 */,
    std::pair{ "subgroupSwapHorizontal(i32x4)"_h, &SubgroupSwapHorizontal_Int32x4 } /* 1612 */,
    std::pair{ "subgroupSwapHorizontal(i32x3)"_h, &SubgroupSwapHorizontal_Int32x3 } /* 1613 */,
    std::pair{ "subgroupSwapHorizontal(i32x2)"_h, &SubgroupSwapHorizontal_Int32x2 } /* 1614 */,
    std::pair{ "textureAtomicMax(uniform *texture2DArray,i32x3,i16)"_h, &TextureAtomicMax_Texture2DArray_Int16 } /* 1615 */,
    std::pair{ "atomicIncrement(*u32,literal MemorySemantics)"_h, &AtomicIncrement_UInt32 } /* 1616 */,
    std::pair{ "textureAtomicAdd(uniform *texture2D,i32x2,i16)"_h, &TextureAtomicAdd_Texture2D_Int16 } /* 1617 */,
    std::pair{ "textureAtomicStore(uniform *texture2DArray,i32x3,u16)"_h, &TextureAtomicStore_Texture2DArray_UInt16 } /* 1618 */,
    std::pair{ "b8x4(u32x4)"_h, &Bool8x4_from_UInt32x4 } /* 1619 */,
    std::pair{ "bitReverse"_h, &BitReverse_UInt32 } /* 1620 */,
    std::pair{ "bitReverse"_h, &BitReverse_Int32 } /* 1621 */,
    std::pair{ "bitReverse"_h, &BitReverse_UInt16 } /* 1622 */,
    std::pair{ "bitReverse"_h, &BitReverse_Int16 } /* 1623 */,
    std::pair{ "texturePixelCacheLoad(uniform *pixelCacheMS,u32)"_h, &TexturePixelCacheLoad_PixelCacheMS } /* 1624 */,
    std::pair{ "textureLoadMip(uniform *mutable texture2DMS,i32x2,i32)"_h, &TextureLoadMip_Texture2DMS } /* 1625 */,
    std::pair{ "u32x2(i16)"_h, &UInt32x2_splat_Int16 } /* 1626 */,
    std::pair{ "textureSampleLod(uniform *textureSampled1DArray,f32x2,f32)"_h, &SampledTextureSampleLod_Texture1DArray } /* 1627 */,
    std::pair{ "textureSampleBiasProjOffset(uniform *texture3D,uniform *sampler,f32x3,f32,f32,f32x3)"_h, &TextureSampleBiasProjOffset_Texture3D } /* 1628 */,
    std::pair{ "textureAtomicSubtract(uniform *textureCube,i32x3,u32)"_h, &TextureAtomicSubtract_TextureCube_UInt32 } /* 1629 */,
    std::pair{ "textureSampleBiasProjOffset(uniform *textureSampled2D,f32x2,f32,f32,f32x2)"_h, &SampledTextureSampleBiasProjOffset_Texture2D } /* 1630 */,
    std::pair{ "cos(f16)"_h, &cos_Float16 } /* 1631 */,
    std::pair{ "subgroupSwapDiagonal(i32x2)"_h, &SubgroupSwapDiagonal_Int32x2 } /* 1632 */,
    std::pair{ "subgroupSwapDiagonal(i32x3)"_h, &SubgroupSwapDiagonal_Int32x3 } /* 1633 */,
    std::pair{ "f32x4(u32)"_h, &Float32x4_splat_UInt32 } /* 1634 */,
    std::pair{ "textureAtomicMin(uniform *textureCube,i32x3,i32)"_h, &TextureAtomicMin_TextureCube_Int32 } /* 1635 */,
    std::pair{ "subgroupSwapDiagonal(i32x4)"_h, &SubgroupSwapDiagonal_Int32x4 } /* 1636 */,
    std::pair{ "atomicSubtract(*u32,u32,literal MemorySemantics)"_h, &AtomicSubtract_UInt32 } /* 1637 */,
    std::pair{ "sin(f16x2)"_h, &sin_Float16x2 } /* 1638 */,
    std::pair{ "sin(f16x3)"_h, &sin_Float16x3 } /* 1639 */,
    std::pair{ "sin(f16x4)"_h, &sin_Float16x4 } /* 1640 */,
    std::pair{ "Partition"_h, &PartitionType } /* 1641 */,
    std::pair{ "f16x2(i32)"_h, &Float16x2_splat_Int32 } /* 1642 */,
    std::pair{ "dot(f32x2,f32x2)"_h, &dot_Float32x2 } /* 1643 */,
    std::pair{ "vertexGetOutputLayer()"_h, &VertexGetOutputLayer } /* 1644 */,
    std::pair{ "pixelExportColor(i32x4,literal i16)"_h, &PixelExportColor_Int32x4_Int16 } /* 1645 */,
    std::pair{ "acos(f16)"_h, &acos_Float16 } /* 1646 */,
    std::pair{ "exp2(f16x3)"_h, &exp2_Float16x3 } /* 1647 */,
    std::pair{ "exp2(f16x2)"_h, &exp2_Float16x2 } /* 1648 */,
    std::pair{ "exp2(f16x4)"_h, &exp2_Float16x4 } /* 1649 */,
    std::pair{ "textureSampleBiasProjCompareOffset(uniform *texture2D,uniform *sampler,f32x2,f32,f32,f32,f32x2)"_h, &TextureSampleBiasProjCompareOffset_Texture2D } /* 1650 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture1D_Float32 } /* 1651 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture1D_UInt32 } /* 1652 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture1D_Int32 } /* 1653 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture1D_Float16 } /* 1654 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture1D_UInt16 } /* 1655 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture1D_Int16 } /* 1656 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture2D_Float32 } /* 1657 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture2D_UInt32 } /* 1658 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture2D_Int32 } /* 1659 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture2D_Float16 } /* 1660 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture2D_UInt16 } /* 1661 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture2D_Int16 } /* 1662 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture3D_Float32 } /* 1663 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture3D_UInt32 } /* 1664 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture3D_Int32 } /* 1665 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture3D_Float16 } /* 1666 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture3D_UInt16 } /* 1667 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture3D_Int16 } /* 1668 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_TextureCube_Float32 } /* 1669 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_TextureCube_UInt32 } /* 1670 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_TextureCube_Int32 } /* 1671 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_TextureCube_Float16 } /* 1672 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_TextureCube_UInt16 } /* 1673 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_TextureCube_Int16 } /* 1674 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture1DArray_Float32 } /* 1675 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture1DArray_UInt32 } /* 1676 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture1DArray_Int32 } /* 1677 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture1DArray_Float16 } /* 1678 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture1DArray_UInt16 } /* 1679 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture1DArray_Int16 } /* 1680 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture2DArray_Float32 } /* 1681 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture2DArray_UInt32 } /* 1682 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture2DArray_Int32 } /* 1683 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture2DArray_Float16 } /* 1684 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture2DArray_UInt16 } /* 1685 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_Texture2DArray_Int16 } /* 1686 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_TextureCubeArray_Float32 } /* 1687 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_TextureCubeArray_UInt32 } /* 1688 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_TextureCubeArray_Int32 } /* 1689 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_TextureCubeArray_Float16 } /* 1690 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_TextureCubeArray_UInt16 } /* 1691 */,
    std::pair{ "textureAtomicLoad"_h, &TextureAtomicLoad_TextureCubeArray_Int16 } /* 1692 */,
    std::pair{ "textureGetSamples"_h, &TextureGetSamples_Texture2DMS } /* 1693 */,
    std::pair{ "textureGetSamples"_h, &TextureGetSamples_Texture2DMSArray } /* 1694 */,
    std::pair{ "pixelExportColor(u16x2,literal i32)"_h, &PixelExportColor_UInt16x2_Int32 } /* 1695 */,
    std::pair{ "memoryBarrier()"_h, &MemoryBarrier } /* 1696 */,
    std::pair{ "textureStoreMip(uniform *mutable textureCubeArray,i32x4,i32,f32x4)"_h, &TextureStoreMip_TextureCubeArray } /* 1697 */,
    std::pair{ "textureSample(uniform *textureSampled1DArray,f32x2)"_h, &SampledTextureSample_Texture1DArray } /* 1698 */,
    std::pair{ "lerp(f16,f16,f16)"_h, &lerp_Float16 } /* 1699 */,
    std::pair{ "textureSampleLodCompareOffset(uniform *texture2DArray,uniform *sampler,f32x3,f32,f32,f32x3)"_h, &TextureSampleLodCompareOffset_Texture2DArray } /* 1700 */,
    std::pair{ "textureSampleLodCompare(uniform *textureSampled2D,f32x2,f32,f32)"_h, &SampledTextureSampleLodCompare_Texture2D } /* 1701 */,
    std::pair{ "textureGetMips(uniform *texture2D)"_h, &TextureGetMips_Texture2D } /* 1702 */,
    std::pair{ "texturePixelCacheLoad(uniform *pixelCache)"_h, &TexturePixelCacheLoad_PixelCache } /* 1703 */,
    std::pair{ "distance(f16x4,f16x4)"_h, &distance_Float16x4 } /* 1704 */,
    std::pair{ "textureAtomicXor(uniform *texture1D,i32,i16)"_h, &TextureAtomicXor_Texture1D_Int16 } /* 1705 */,
    std::pair{ "pixelExportColor(i32x3,literal u32)"_h, &PixelExportColor_Int32x3_UInt32 } /* 1706 */,
    std::pair{ "textureSampleGradProjCompareOffset(uniform *texture3D,uniform *sampler,f32x3,f32x3,f32x3,f32,f32,f32x3)"_h, &TextureSampleGradProjCompareOffset_Texture3D } /* 1707 */,
    std::pair{ "textureAtomicStore(uniform *textureCube,i32x3,u32)"_h, &TextureAtomicStore_TextureCube_UInt32 } /* 1708 */,
    std::pair{ "f32x2x4"_h, &Float32x2x4Type } /* 1709 */,
    std::pair{ "f32x2x4"_h, &Float32x2x4_Float32_4_ctor } /* 1710 */,
    std::pair{ "f32x2x4"_h, &Float32x2x4_raw_list } /* 1711 */,
    std::pair{ "f32x2x2"_h, &Float32x2x2Type } /* 1712 */,
    std::pair{ "f32x2x2"_h, &Float32x2x2_Float32_2_ctor } /* 1713 */,
    std::pair{ "f32x2x2"_h, &Float32x2x2_identity } /* 1714 */,
    std::pair{ "f32x2x2"_h, &Float32x2x2_raw_list } /* 1715 */,
    std::pair{ "f32x2x3"_h, &Float32x2x3Type } /* 1716 */,
    std::pair{ "f32x2x3"_h, &Float32x2x3_Float32_3_ctor } /* 1717 */,
    std::pair{ "f32x2x3"_h, &Float32x2x3_raw_list } /* 1718 */,
    std::pair{ "Winding"_h, &WindingType } /* 1719 */,
    std::pair{ "memoryBarrierTexture()"_h, &MemoryBarrierTexture } /* 1720 */,
    std::pair{ "castToF16(u16)"_h, &castToF16_UInt16 } /* 1721 */,
    std::pair{ "u32x4(i32x4)"_h, &UInt32x4_from_Int32x4 } /* 1722 */,
    std::pair{ "textureAtomicAnd(uniform *textureCube,i32x3,u32)"_h, &TextureAtomicAnd_TextureCube_UInt32 } /* 1723 */,
    std::pair{ "textureAtomicStore(uniform *texture2D,i32x2,i16)"_h, &TextureAtomicStore_Texture2D_Int16 } /* 1724 */,
    std::pair{ "textureSampleGrad(uniform *texture1D,uniform *sampler,f32,f32,f32)"_h, &TextureSampleGrad_Texture1D } /* 1725 */,
    std::pair{ "u32(i32)"_h, &UInt32_from_Int32 } /* 1726 */,
    std::pair{ "atan(f16)"_h, &atan_Float16 } /* 1727 */,
    std::pair{ "u16(u16)"_h, &UInt16_ctor0 } /* 1728 */,
    std::pair{ "textureSampleOffset(uniform *texture1D,uniform *sampler,f32,f32)"_h, &TextureSampleOffset_Texture1D } /* 1729 */,
    std::pair{ "atomicOr(*i16,i16,literal MemorySemantics)"_h, &AtomicOr_Int16 } /* 1730 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture1DArray,i32x2,i32)"_h, &TextureAtomicCompareExchange_Texture1DArray_Int32 } /* 1731 */,
    std::pair{ "hullExportOuterTessellationLevel(f32x4)"_h, &HullExportOuterTessellationLevel } /* 1732 */,
    std::pair{ "textureAtomicAnd(uniform *texture2DArray,i32x3,u32)"_h, &TextureAtomicAnd_Texture2DArray_UInt32 } /* 1733 */,
    std::pair{ "pixelExportColor(i16x4,literal u16)"_h, &PixelExportColor_Int16x4_UInt16 } /* 1734 */,
    std::pair{ "textureSampleProjOffset(uniform *textureSampled1D,f32,f32,f32)"_h, &SampledTextureSampleProjOffset_Texture1D } /* 1735 */,
    std::pair{ "b8x3(u16)"_h, &Bool8x3_splat_UInt16 } /* 1736 */,
    std::pair{ "clamp(u32x4,u32x4,u32x4)"_h, &clamp_UInt32x4 } /* 1737 */,
    std::pair{ "i32x3(i16)"_h, &Int32x3_splat_Int16 } /* 1738 */,
    std::pair{ "domainGetInvocationIndex()"_h, &DomainGetInvocationIndex } /* 1739 */,
    std::pair{ "u16x2(u32)"_h, &UInt16x2_splat_UInt32 } /* 1740 */,
    std::pair{ "min(u16,u16)"_h, &min_UInt16 } /* 1741 */,
    std::pair{ "computeGetWorkgroupIndices()"_h, &ComputeGetWorkgroupIndices } /* 1742 */,
    std::pair{ "f16x3(f32)"_h, &Float16x3_splat_Float32 } /* 1743 */,
    std::pair{ "pixelExportColor(i32x2,literal i16)"_h, &PixelExportColor_Int32x2_Int16 } /* 1744 */,
    std::pair{ "textureStoreMip(uniform *mutable texture3D,i32x3,i32,f32x4)"_h, &TextureStoreMip_Texture3D } /* 1745 */,
    std::pair{ "max(u32x4,u32x4)"_h, &max_UInt32x4 } /* 1746 */,
    std::pair{ "pixelExportColor(u32,literal i32)"_h, &PixelExportColor_UInt32_Int32 } /* 1747 */,
    std::pair{ "abs(f16x2)"_h, &abs_Float16x2 } /* 1748 */,
    std::pair{ "abs(f16x3)"_h, &abs_Float16x3 } /* 1749 */,
    std::pair{ "textureAtomicExchange(uniform *texture3D,i32x3,u16)"_h, &TextureAtomicExchange_Texture3D_UInt16 } /* 1750 */,
    std::pair{ "abs(f16x4)"_h, &abs_Float16x4 } /* 1751 */,
    std::pair{ "textureLoad(uniform *mutable textureCubeArray,i32x4)"_h, &TextureLoad_TextureCubeArray } /* 1752 */,
    std::pair{ "atomicOr(*u32,u32,literal MemorySemantics)"_h, &AtomicOr_UInt32 } /* 1753 */,
    std::pair{ "textureAtomicExchange(uniform *textureCubeArray,i32x4,f16)"_h, &TextureAtomicExchange_TextureCubeArray_Float16 } /* 1754 */,
    std::pair{ "i32x4(i32,i32x3)"_h, &Int32x4_ctor6 } /* 1755 */,
    std::pair{ "f16(u16)"_h, &Float16_from_UInt16 } /* 1756 */,
    std::pair{ "f32(i16)"_h, &Float32_from_Int16 } /* 1757 */,
    std::pair{ "textureAtomicOr(uniform *textureCubeArray,i32x4,i32)"_h, &TextureAtomicOr_TextureCubeArray_Int32 } /* 1758 */,
    std::pair{ "pow(f32x3,f32x3)"_h, &pow_Float32x3 } /* 1759 */,
    std::pair{ "textureSampleGrad(uniform *texture3D,uniform *sampler,f32x3,f32x3,f32x3)"_h, &TextureSampleGrad_Texture3D } /* 1760 */,
    std::pair{ "invSqrt(f32)"_h, &invSqrt_Float32 } /* 1761 */,
    std::pair{ "f16x4(i32)"_h, &Float16x4_splat_Int32 } /* 1762 */,
    std::pair{ "textureSampleBiasCompare(uniform *texture1DArray,uniform *sampler,f32x2,f32,f32)"_h, &TextureSampleBiasCompare_Texture1DArray } /* 1763 */,
    std::pair{ "textureSampleLodProjCompare(uniform *texture2D,uniform *sampler,f32x2,f32,f32,f32)"_h, &TextureSampleLodProjCompare_Texture2D } /* 1764 */,
    std::pair{ "textureSampleBiasCompare(uniform *textureSampled3D,f32x3,f32,f32)"_h, &SampledTextureSampleBiasCompare_Texture3D } /* 1765 */,
    std::pair{ "length(f16x2)"_h, &length_Float16x2 } /* 1766 */,
    std::pair{ "length(f16x3)"_h, &length_Float16x3 } /* 1767 */,
    std::pair{ "length(f16x4)"_h, &length_Float16x4 } /* 1768 */,
    std::pair{ "u16x4(u16,u16,u16x2)"_h, &UInt16x4_ctor3 } /* 1769 */,
    std::pair{ "subgroupSwapDiagonal(f16)"_h, &SubgroupSwapDiagonal_Float16 } /* 1770 */,
    std::pair{ "textureSampleGradProjOffset(uniform *textureSampled3D,f32x3,f32x3,f32x3,f32,f32x3)"_h, &SampledTextureSampleGradProjOffset_Texture3D } /* 1771 */,
    std::pair{ "textureSampleGradCompare"_h, &TextureSampleGradCompare_Texture1D } /* 1772 */,
    std::pair{ "textureSampleGradCompare"_h, &SampledTextureSampleGradCompare_Texture1D } /* 1773 */,
    std::pair{ "textureSampleGradCompare"_h, &TextureSampleGradCompare_Texture2D } /* 1774 */,
    std::pair{ "textureSampleGradCompare"_h, &SampledTextureSampleGradCompare_Texture2D } /* 1775 */,
    std::pair{ "textureSampleGradCompare"_h, &TextureSampleGradCompare_Texture3D } /* 1776 */,
    std::pair{ "textureSampleGradCompare"_h, &SampledTextureSampleGradCompare_Texture3D } /* 1777 */,
    std::pair{ "textureSampleGradCompare"_h, &TextureSampleGradCompare_Texture1DArray } /* 1778 */,
    std::pair{ "textureSampleGradCompare"_h, &SampledTextureSampleGradCompare_Texture1DArray } /* 1779 */,
    std::pair{ "textureSampleGradCompare"_h, &TextureSampleGradCompare_Texture2DArray } /* 1780 */,
    std::pair{ "textureSampleGradCompare"_h, &SampledTextureSampleGradCompare_Texture2DArray } /* 1781 */,
    std::pair{ "transpose(f16x3x4)"_h, &transpose_Float16x3x4 } /* 1782 */,
    std::pair{ "transpose(f16x3x2)"_h, &transpose_Float16x3x2 } /* 1783 */,
    std::pair{ "transpose(f16x3x3)"_h, &transpose_Float16x3x3 } /* 1784 */,
    std::pair{ "textureGather(uniform *textureSampled2D,i32x2,i32)"_h, &SampledTextureGather_Texture2D } /* 1785 */,
    std::pair{ "textureAtomicExchange(uniform *texture1D,i32,i16)"_h, &TextureAtomicExchange_Texture1D_Int16 } /* 1786 */,
    std::pair{ "dot(f32x4,f32x4)"_h, &dot_Float32x4 } /* 1787 */,
    std::pair{ "textureAtomicSubtract(uniform *texture3D,i32x3,u32)"_h, &TextureAtomicSubtract_Texture3D_UInt32 } /* 1788 */,
    std::pair{ "bitExtract(u32,u32,u32)"_h, &BitExtract_UInt32 } /* 1789 */,
    std::pair{ "max(u16x2,u16x2)"_h, &max_UInt16x2 } /* 1790 */,
    std::pair{ "textureAtomicAdd(uniform *textureCube,i32x3,i16)"_h, &TextureAtomicAdd_TextureCube_Int16 } /* 1791 */,
    std::pair{ "i16x3(i32)"_h, &Int16x3_splat_Int32 } /* 1792 */,
    std::pair{ "textureAtomicLoad(uniform *textureCubeArray,i32x4,i16)"_h, &TextureAtomicLoad_TextureCubeArray_Int16 } /* 1793 */,
    std::pair{ "textureAtomicLoad(uniform *texture1DArray,i32x2,u32)"_h, &TextureAtomicLoad_Texture1DArray_UInt32 } /* 1794 */,
    std::pair{ "exp(f32)"_h, &exp_Float32 } /* 1795 */,
    std::pair{ "textureGetMips(uniform *texture3D)"_h, &TextureGetMips_Texture3D } /* 1796 */,
    std::pair{ "max(f16x4,f16x4)"_h, &max_Float16x4 } /* 1797 */,
    std::pair{ "atomicSubtract(*i16,i16,literal MemorySemantics)"_h, &AtomicSubtract_Int16 } /* 1798 */,
    std::pair{ "textureAtomicLoad(uniform *texture3D,i32x3,f32)"_h, &TextureAtomicLoad_Texture3D_Float32 } /* 1799 */,
    std::pair{ "subgroupGetFirstActiveThread"_h, &SubgroupGetFirstActiveThread } /* 1800 */,
    std::pair{ "vertexGetIndex"_h, &VertexGetIndex } /* 1801 */,
    std::pair{ "u32x2(u32x2)"_h, &UInt32x2_from_UInt32x2 } /* 1802 */,
    std::pair{ "u32x3(f32x3)"_h, &UInt32x3_from_Float32x3 } /* 1803 */,
    std::pair{ "textureSampleGradProjCompare(uniform *textureSampled1D,f32,f32,f32,f32,f32)"_h, &SampledTextureSampleGradProjCompare_Texture1D } /* 1804 */,
    std::pair{ "subgroupSwapVertical(u16x4)"_h, &SubgroupSwapVertical_UInt16x4 } /* 1805 */,
    std::pair{ "subgroupSwapVertical(u16x3)"_h, &SubgroupSwapVertical_UInt16x3 } /* 1806 */,
    std::pair{ "subgroupSwapVertical(u16x2)"_h, &SubgroupSwapVertical_UInt16x2 } /* 1807 */,
    std::pair{ "min(i16,i16)"_h, &min_Int16 } /* 1808 */,
    std::pair{ "atomicExchange(*i16,i16,literal MemorySemantics)"_h, &AtomicExchange_Int16 } /* 1809 */,
    std::pair{ "texturePixelCacheLoad"_h, &TexturePixelCacheLoad_PixelCache } /* 1810 */,
    std::pair{ "texturePixelCacheLoad"_h, &TexturePixelCacheLoad_PixelCacheMS } /* 1811 */,
    std::pair{ "textureSampleBiasProjCompare"_h, &TextureSampleBiasProjCompare_Texture1D } /* 1812 */,
    std::pair{ "textureSampleBiasProjCompare"_h, &SampledTextureSampleBiasProjCompare_Texture1D } /* 1813 */,
    std::pair{ "textureSampleBiasProjCompare"_h, &TextureSampleBiasProjCompare_Texture2D } /* 1814 */,
    std::pair{ "textureSampleBiasProjCompare"_h, &SampledTextureSampleBiasProjCompare_Texture2D } /* 1815 */,
    std::pair{ "textureSampleBiasProjCompare"_h, &TextureSampleBiasProjCompare_Texture3D } /* 1816 */,
    std::pair{ "textureSampleBiasProjCompare"_h, &SampledTextureSampleBiasProjCompare_Texture3D } /* 1817 */,
    std::pair{ "pixelExportColor(i16x3,literal i16)"_h, &PixelExportColor_Int16x3_Int16 } /* 1818 */,
    std::pair{ "pixelExportColor(u16x4,literal i32)"_h, &PixelExportColor_UInt16x4_Int32 } /* 1819 */,
    std::pair{ "textureLoad(uniform *mutable texture3D,i32x3)"_h, &TextureLoad_Texture3D } /* 1820 */,
    std::pair{ "f32x3x3(f32x3,f32x3,f32x3)"_h, &Float32x3x3_Float32_3_ctor } /* 1821 */,
    std::pair{ "exp2(f32x4)"_h, &exp2_Float32x4 } /* 1822 */,
    std::pair{ "f32x4(f32,f32,f32,f32)"_h, &Float32x4_ctor0 } /* 1823 */,
    std::pair{ "exp2(f32x3)"_h, &exp2_Float32x3 } /* 1824 */,
    std::pair{ "exp2(f32x2)"_h, &exp2_Float32x2 } /* 1825 */,
    std::pair{ "max(f16x2,f16x2)"_h, &max_Float16x2 } /* 1826 */,
    std::pair{ "u32x4(u32,u32,u32,u32)"_h, &UInt32x4_ctor0 } /* 1827 */,
    std::pair{ "f32x4(f32,f32x2,f32)"_h, &Float32x4_ctor2 } /* 1828 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(u32x3)"_h, &SubgroupBroadcastFirstActiveThread_UInt32x3 } /* 1829 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(u32x2)"_h, &SubgroupBroadcastFirstActiveThread_UInt32x2 } /* 1830 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(u32x4)"_h, &SubgroupBroadcastFirstActiveThread_UInt32x4 } /* 1831 */,
    std::pair{ "f32x3x4"_h, &Float32x3x4Type } /* 1832 */,
    std::pair{ "f32x3x4"_h, &Float32x3x4_Float32_4_ctor } /* 1833 */,
    std::pair{ "f32x3x4"_h, &Float32x3x4_raw_list } /* 1834 */,
    std::pair{ "f32x3x3"_h, &Float32x3x3Type } /* 1835 */,
    std::pair{ "f32x3x3"_h, &Float32x3x3_Float32_3_ctor } /* 1836 */,
    std::pair{ "f32x3x3"_h, &Float32x3x3_identity } /* 1837 */,
    std::pair{ "f32x3x3"_h, &Float32x3x3_raw_list } /* 1838 */,
    std::pair{ "f32x3x2"_h, &Float32x3x2Type } /* 1839 */,
    std::pair{ "f32x3x2"_h, &Float32x3x2_Float32_2_ctor } /* 1840 */,
    std::pair{ "f32x3x2"_h, &Float32x3x2_raw_list } /* 1841 */,
    std::pair{ "textureAtomicExchange(uniform *texture2DArray,i32x3,f16)"_h, &TextureAtomicExchange_Texture2DArray_Float16 } /* 1842 */,
    std::pair{ "textureAtomicMax(uniform *texture2DArray,i32x3,i32)"_h, &TextureAtomicMax_Texture2DArray_Int32 } /* 1843 */,
    std::pair{ "f32x2x2(f32,f32,f32,f32)"_h, &Float32x2x2_raw_list } /* 1844 */,
    std::pair{ "textureAtomicAdd(uniform *texture1D,i32,u32)"_h, &TextureAtomicAdd_Texture1D_UInt32 } /* 1845 */,
    std::pair{ "subgroupBallotBit(u32x4,literal u32)"_h, &SubgroupBallotBit } /* 1846 */,
    std::pair{ "domainGetInvocationIndex"_h, &DomainGetInvocationIndex } /* 1847 */,
    std::pair{ "atomicXor"_h, &AtomicXor_UInt32 } /* 1848 */,
    std::pair{ "atomicXor"_h, &AtomicXor_Int32 } /* 1849 */,
    std::pair{ "atomicXor"_h, &AtomicXor_UInt16 } /* 1850 */,
    std::pair{ "atomicXor"_h, &AtomicXor_Int16 } /* 1851 */,
    std::pair{ "i32x2(b8x2)"_h, &Int32x2_from_Bool8x2 } /* 1852 */,
    std::pair{ "fwidth(f16)"_h, &fwidth_Float16 } /* 1853 */,
    std::pair{ "f32x2(u32)"_h, &Float32x2_splat_UInt32 } /* 1854 */,
    std::pair{ "trunc(f32)"_h, &trunc_Float32 } /* 1855 */,
    std::pair{ "f32x3x3()"_h, &Float32x3x3_identity } /* 1856 */,
    std::pair{ "subgroupSwapHorizontal(u32)"_h, &SubgroupSwapHorizontal_UInt32 } /* 1857 */,
    std::pair{ "textureAtomicSubtract(uniform *textureCube,i32x3,u16)"_h, &TextureAtomicSubtract_TextureCube_UInt16 } /* 1858 */,
    std::pair{ "textureGatherOffset(uniform *textureSampledCube,i32x3,i32,u32)"_h, &SampledTextureGatherOffset_TextureCube } /* 1859 */,
    std::pair{ "textureSampleLodProjOffset(uniform *texture3D,uniform *sampler,f32x3,f32,f32,f32x3)"_h, &TextureSampleLodProjOffset_Texture3D } /* 1860 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture2D,i32x2,u16)"_h, &TextureAtomicCompareExchange_Texture2D_UInt16 } /* 1861 */,
    std::pair{ "subgroupGetId()"_h, &SubgroupGetId } /* 1862 */,
    std::pair{ "atomicExchange(*f16,f16,literal MemorySemantics)"_h, &AtomicExchange_Float16 } /* 1863 */,
    std::pair{ "f32x3(f32)"_h, &Float32x3_splat_Float32 } /* 1864 */,
    std::pair{ "f32x2x2(f32x2,f32x2)"_h, &Float32x2x2_Float32_2_ctor } /* 1865 */,
    std::pair{ "textureAtomicAdd(uniform *texture2D,i32x2,i32)"_h, &TextureAtomicAdd_Texture2D_Int32 } /* 1866 */,
    std::pair{ "textureFetchSample(uniform *texture1D,i32,u32,u32)"_h, &TextureFetchSample_Texture1D } /* 1867 */,
    std::pair{ "i32x4(f32)"_h, &Int32x4_splat_Float32 } /* 1868 */,
    std::pair{ "textureSampleProjCompareOffset(uniform *texture3D,uniform *sampler,f32x3,f32,f32,f32x3)"_h, &TextureSampleProjCompareOffset_Texture3D } /* 1869 */,
    std::pair{ "abs(f16)"_h, &abs_Float16 } /* 1870 */,
    std::pair{ "acos(f32)"_h, &acos_Float32 } /* 1871 */,
    std::pair{ "step(f32x4,f32x4)"_h, &step_Float32x4 } /* 1872 */,
    std::pair{ "i16x4(u32x4)"_h, &Int16x4_from_UInt32x4 } /* 1873 */,
    std::pair{ "f32x4(u16)"_h, &Float32x4_splat_UInt16 } /* 1874 */,
    std::pair{ "u32x4(i16x4)"_h, &UInt32x4_from_Int16x4 } /* 1875 */,
    std::pair{ "pixelExportColor(i32,literal u32)"_h, &PixelExportColor_Int32_UInt32 } /* 1876 */,
    std::pair{ "castToF32(u32)"_h, &castToF32_UInt32 } /* 1877 */,
    std::pair{ "u32x2(i32)"_h, &UInt32x2_splat_Int32 } /* 1878 */,
    std::pair{ "clamp(u16,u16,u16)"_h, &clamp_UInt16 } /* 1879 */,
    std::pair{ "atomicLoad(*u32,literal MemorySemantics)"_h, &AtomicLoad_UInt32 } /* 1880 */,
    std::pair{ "ddy(f32)"_h, &ddy_Float32 } /* 1881 */,
    std::pair{ "i32x2(i16x2)"_h, &Int32x2_from_Int16x2 } /* 1882 */,
    std::pair{ "textureLoadMip(uniform *mutable texture2DMSArray,i32x3,i32)"_h, &TextureLoadMip_Texture2DMSArray } /* 1883 */,
    std::pair{ "textureLoadMip(uniform *mutable textureCube,i32x3,i32)"_h, &TextureLoadMip_TextureCube } /* 1884 */,
    std::pair{ "textureStore(uniform *mutable textureCube,i32x3,f32x4)"_h, &TextureStore_TextureCube } /* 1885 */,
    std::pair{ "textureGetSampledMip(uniform *textureSampled1D,f32)"_h, &SampledTextureGetSampledMip_Texture1D } /* 1886 */,
    std::pair{ "mad(i16,i16,i16)"_h, &mad_Int16 } /* 1887 */,
    std::pair{ "f16x2(i16)"_h, &Float16x2_splat_Int16 } /* 1888 */,
    std::pair{ "textureGetSize(uniform *textureCubeArray)"_h, &TextureGetSize_TextureCubeArray } /* 1889 */,
    std::pair{ "textureSampleLodOffset(uniform *textureSampled2D,f32x2,f32,f32x2)"_h, &SampledTextureSampleLodOffset_Texture2D } /* 1890 */,
    std::pair{ "pixelExportColor(i32x3,literal u16)"_h, &PixelExportColor_Int32x3_UInt16 } /* 1891 */,
    std::pair{ "subgroupSwapVertical(f32)"_h, &SubgroupSwapVertical_Float32 } /* 1892 */,
    std::pair{ "all(b8x2)"_h, &all_Bool8x2 } /* 1893 */,
    std::pair{ "all(b8x3)"_h, &all_Bool8x3 } /* 1894 */,
    std::pair{ "pixelExportColor(u16x2,literal i16)"_h, &PixelExportColor_UInt16x2_Int16 } /* 1895 */,
    std::pair{ "all(b8x4)"_h, &all_Bool8x4 } /* 1896 */,
    std::pair{ "subgroupGetSize"_h, &SubgroupGetSize } /* 1897 */,
    std::pair{ "textureSampleBiasCompare(uniform *textureSampled2DArray,f32x3,f32,f32)"_h, &SampledTextureSampleBiasCompare_Texture2DArray } /* 1898 */,
    std::pair{ "pixelExportColor(f16x2,literal u32)"_h, &PixelExportColor_Float16x2_UInt32 } /* 1899 */,
    std::pair{ "textureLoadMip(uniform *mutable texture2DArray,i32x3,i32)"_h, &TextureLoadMip_Texture2DArray } /* 1900 */,
    std::pair{ "textureAtomicAnd(uniform *textureCube,i32x3,u16)"_h, &TextureAtomicAnd_TextureCube_UInt16 } /* 1901 */,
    std::pair{ "transpose(f16x2x4)"_h, &transpose_Float16x2x4 } /* 1902 */,
    std::pair{ "transpose(f16x2x3)"_h, &transpose_Float16x2x3 } /* 1903 */,
    std::pair{ "transpose(f16x2x2)"_h, &transpose_Float16x2x2 } /* 1904 */,
    std::pair{ "geometryExportPrimitive"_h, &GeometryExportPrimitive } /* 1905 */,
    std::pair{ "f16x2(f16,f16)"_h, &Float16x2_ctor0 } /* 1906 */,
    std::pair{ "atomicLoad"_h, &AtomicLoad_UInt32 } /* 1907 */,
    std::pair{ "atomicLoad"_h, &AtomicLoad_Int32 } /* 1908 */,
    std::pair{ "atomicLoad"_h, &AtomicLoad_UInt16 } /* 1909 */,
    std::pair{ "atomicLoad"_h, &AtomicLoad_Int16 } /* 1910 */,
    std::pair{ "atomicLoad"_h, &AtomicLoad_Float32 } /* 1911 */,
    std::pair{ "atomicLoad"_h, &AtomicLoad_Float16 } /* 1912 */,
    std::pair{ "CullFace"_h, &CullFaceType } /* 1913 */,
    std::pair{ "textureAtomicStore(uniform *texture1D,i32,i32)"_h, &TextureAtomicStore_Texture1D_Int32 } /* 1914 */,
    std::pair{ "tanh(f16x4)"_h, &tanh_Float16x4 } /* 1915 */,
    std::pair{ "tanh(f16x3)"_h, &tanh_Float16x3 } /* 1916 */,
    std::pair{ "tanh(f16x2)"_h, &tanh_Float16x2 } /* 1917 */,
    std::pair{ "textureAtomicStore(uniform *textureCube,i32x3,u16)"_h, &TextureAtomicStore_TextureCube_UInt16 } /* 1918 */,
    std::pair{ "u32(AddressMode)"_h, &AddressModeType.fromUnderlyingType } /* 1919 */,
    std::pair{ "u16x3(u16)"_h, &UInt16x3_splat_UInt16 } /* 1920 */,
    std::pair{ "fwidth(f16x2)"_h, &fwidth_Float16x2 } /* 1921 */,
    std::pair{ "fwidth(f16x3)"_h, &fwidth_Float16x3 } /* 1922 */,
    std::pair{ "fwidth(f16x4)"_h, &fwidth_Float16x4 } /* 1923 */,
    std::pair{ "ExecutionScope(u32)"_h, &ExecutionScopeType.toUnderlyingType } /* 1924 */,
    std::pair{ "pixelExportColor(i16x4,literal u32)"_h, &PixelExportColor_Int16x4_UInt32 } /* 1925 */,
    std::pair{ "subgroupSwapHorizontal(f32x4)"_h, &SubgroupSwapHorizontal_Float32x4 } /* 1926 */,
    std::pair{ "atomicDecrement(*i16,literal MemorySemantics)"_h, &AtomicDecrement_Int16 } /* 1927 */,
    std::pair{ "u32(i16)"_h, &UInt32_from_Int16 } /* 1928 */,
    std::pair{ "ceil(f16x4)"_h, &ceil_Float16x4 } /* 1929 */,
    std::pair{ "ceil(f16x3)"_h, &ceil_Float16x3 } /* 1930 */,
    std::pair{ "subgroupSwapHorizontal(f32x2)"_h, &SubgroupSwapHorizontal_Float32x2 } /* 1931 */,
    std::pair{ "ceil(f16x2)"_h, &ceil_Float16x2 } /* 1932 */,
    std::pair{ "inverse"_h, &inverse_Float32x2x2 } /* 1933 */,
    std::pair{ "inverse"_h, &inverse_Float16x2x2 } /* 1934 */,
    std::pair{ "inverse"_h, &inverse_Float32x2x3 } /* 1935 */,
    std::pair{ "inverse"_h, &inverse_Float16x2x3 } /* 1936 */,
    std::pair{ "inverse"_h, &inverse_Float32x2x4 } /* 1937 */,
    std::pair{ "inverse"_h, &inverse_Float16x2x4 } /* 1938 */,
    std::pair{ "inverse"_h, &inverse_Float32x3x2 } /* 1939 */,
    std::pair{ "inverse"_h, &inverse_Float16x3x2 } /* 1940 */,
    std::pair{ "inverse"_h, &inverse_Float32x3x3 } /* 1941 */,
    std::pair{ "inverse"_h, &inverse_Float16x3x3 } /* 1942 */,
    std::pair{ "inverse"_h, &inverse_Float32x3x4 } /* 1943 */,
    std::pair{ "inverse"_h, &inverse_Float16x3x4 } /* 1944 */,
    std::pair{ "inverse"_h, &inverse_Float32x4x2 } /* 1945 */,
    std::pair{ "inverse"_h, &inverse_Float16x4x2 } /* 1946 */,
    std::pair{ "inverse"_h, &inverse_Float32x4x3 } /* 1947 */,
    std::pair{ "inverse"_h, &inverse_Float16x4x3 } /* 1948 */,
    std::pair{ "inverse"_h, &inverse_Float32x4x4 } /* 1949 */,
    std::pair{ "inverse"_h, &inverse_Float16x4x4 } /* 1950 */,
    std::pair{ "subgroupSwapHorizontal(f32x3)"_h, &SubgroupSwapHorizontal_Float32x3 } /* 1951 */,
    std::pair{ "textureAtomicAdd(uniform *texture3D,i32x3,i32)"_h, &TextureAtomicAdd_Texture3D_Int32 } /* 1952 */,
    std::pair{ "StencilOp(u32)"_h, &StencilOpType.toUnderlyingType } /* 1953 */,
    std::pair{ "pixelExportColor(i16x2,literal i32)"_h, &PixelExportColor_Int16x2_Int32 } /* 1954 */,
    std::pair{ "subgroupSwapDiagonal(f32x3)"_h, &SubgroupSwapDiagonal_Float32x3 } /* 1955 */,
    std::pair{ "subgroupSwapDiagonal(f32x2)"_h, &SubgroupSwapDiagonal_Float32x2 } /* 1956 */,
    std::pair{ "subgroupSwapDiagonal(f32x4)"_h, &SubgroupSwapDiagonal_Float32x4 } /* 1957 */,
    std::pair{ "textureGetSampledMip(uniform *textureSampled1DArray,f32x2)"_h, &SampledTextureGetSampledMip_Texture1DArray } /* 1958 */,
    std::pair{ "MemorySemantics(u32)"_h, &MemorySemanticsType.toUnderlyingType } /* 1959 */,
    std::pair{ "u16x4(f32x4)"_h, &UInt16x4_from_Float32x4 } /* 1960 */,
    std::pair{ "atan(f32)"_h, &atan_Float32 } /* 1961 */,
    std::pair{ "f32x4(f32,f32,f32x2)"_h, &Float32x4_ctor3 } /* 1962 */,
    std::pair{ "u16(u32)"_h, &UInt16_from_UInt32 } /* 1963 */,
    std::pair{ "subgroupSwapDiagonal(i16x2)"_h, &SubgroupSwapDiagonal_Int16x2 } /* 1964 */,
    std::pair{ "subgroupSwapDiagonal(i16x3)"_h, &SubgroupSwapDiagonal_Int16x3 } /* 1965 */,
    std::pair{ "subgroupSwapDiagonal(i16x4)"_h, &SubgroupSwapDiagonal_Int16x4 } /* 1966 */,
    std::pair{ "f16x3(b8x3)"_h, &Float16x3_from_Bool8x3 } /* 1967 */,
    std::pair{ "textureAtomicAnd(uniform *texture2DArray,i32x3,u16)"_h, &TextureAtomicAnd_Texture2DArray_UInt16 } /* 1968 */,
    std::pair{ "pixelExportColor(u16,literal u16)"_h, &PixelExportColor_UInt16_UInt16 } /* 1969 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture1DArray,i32x2,i16)"_h, &TextureAtomicCompareExchange_Texture1DArray_Int16 } /* 1970 */,
    std::pair{ "acosh(f32)"_h, &acosh_Float32 } /* 1971 */,
    std::pair{ "textureSampleGrad(uniform *textureCubeArray,uniform *sampler,f32x4,f32x4,f32x4)"_h, &TextureSampleGrad_TextureCubeArray } /* 1972 */,
    std::pair{ "textureAtomicOr(uniform *texture3D,i32x3,i32)"_h, &TextureAtomicOr_Texture3D_Int32 } /* 1973 */,
    std::pair{ "i32(f32)"_h, &Int32_from_Float32 } /* 1974 */,
    std::pair{ "pixelExportColor(u32x4,literal u32)"_h, &PixelExportColor_UInt32x4_UInt32 } /* 1975 */,
    std::pair{ "b8x3(u32)"_h, &Bool8x3_splat_UInt32 } /* 1976 */,
    std::pair{ "geometryExportPrimitiveIndex"_h, &GeometryExportPrimitiveIndex } /* 1977 */,
    std::pair{ "i16x4(u16x4)"_h, &Int16x4_from_UInt16x4 } /* 1978 */,
    std::pair{ "f16x3x4(f16x4,f16x4,f16x4)"_h, &Float16x3x4_Float16_4_ctor } /* 1979 */,
    std::pair{ "textureSampleLod(uniform *textureCubeArray,uniform *sampler,f32x4,f32)"_h, &TextureSampleLod_TextureCubeArray } /* 1980 */,
    std::pair{ "textureSampleProjCompare(uniform *textureSampled3D,f32x3,f32,f32)"_h, &SampledTextureSampleProjCompare_Texture3D } /* 1981 */,
    std::pair{ "u16x2(u16)"_h, &UInt16x2_splat_UInt16 } /* 1982 */,
    std::pair{ "textureAtomicExchange(uniform *textureCubeArray,i32x4,f32)"_h, &TextureAtomicExchange_TextureCubeArray_Float32 } /* 1983 */,
    std::pair{ "pixelExportColor(i32x2,literal i32)"_h, &PixelExportColor_Int32x2_Int32 } /* 1984 */,
    std::pair{ "i16x4(i16)"_h, &Int16x4_splat_Int16 } /* 1985 */,
    std::pair{ "f16(u32)"_h, &Float16_from_UInt32 } /* 1986 */,
    std::pair{ "f16x3(u16x3)"_h, &Float16x3_from_UInt16x3 } /* 1987 */,
    std::pair{ "atan2(f32x4,f32x4)"_h, &atan2_Float32x4 } /* 1988 */,
    std::pair{ "pixelExportColor(u32,literal i16)"_h, &PixelExportColor_UInt32_Int16 } /* 1989 */,
    std::pair{ "u32x3(f16x3)"_h, &UInt32x3_from_Float16x3 } /* 1990 */,
    std::pair{ "textureAtomicOr(uniform *texture1D,i32,i16)"_h, &TextureAtomicOr_Texture1D_Int16 } /* 1991 */,
    std::pair{ "i16x2(f16x2)"_h, &Int16x2_from_Float16x2 } /* 1992 */,
    std::pair{ "bitCount(u16)"_h, &BitCount_UInt16 } /* 1993 */,
    std::pair{ "textureSampleLodCompareOffset(uniform *texture3D,uniform *sampler,f32x3,f32,f32,f32x3)"_h, &TextureSampleLodCompareOffset_Texture3D } /* 1994 */,
    std::pair{ "i32x2(f16)"_h, &Int32x2_splat_Float16 } /* 1995 */,
    std::pair{ "textureAtomicLoad(uniform *texture2D,i32x2,i32)"_h, &TextureAtomicLoad_Texture2D_Int32 } /* 1996 */,
    std::pair{ "max(u16x4,u16x4)"_h, &max_UInt16x4 } /* 1997 */,
    std::pair{ "textureAtomicCompareExchange(uniform *textureCubeArray,i32x4,i16)"_h, &TextureAtomicCompareExchange_TextureCubeArray_Int16 } /* 1998 */,
    std::pair{ "textureAtomicExchange(uniform *texture1D,i32,i32)"_h, &TextureAtomicExchange_Texture1D_Int32 } /* 1999 */,
    std::pair{ "textureAtomicExchange(uniform *texture3D,i32x3,f32)"_h, &TextureAtomicExchange_Texture3D_Float32 } /* 2000 */,
    std::pair{ "textureAtomicSubtract(uniform *texture1D,i32,i32)"_h, &TextureAtomicSubtract_Texture1D_Int32 } /* 2001 */,
    std::pair{ "mad(f32x2,f32x2,f32x2)"_h, &mad_Float32x2 } /* 2002 */,
    std::pair{ "pow"_h, &pow_Float32 } /* 2003 */,
    std::pair{ "pow"_h, &pow_Float32x2 } /* 2004 */,
    std::pair{ "pow"_h, &pow_Float32x3 } /* 2005 */,
    std::pair{ "pow"_h, &pow_Float32x4 } /* 2006 */,
    std::pair{ "pow"_h, &pow_Float16 } /* 2007 */,
    std::pair{ "pow"_h, &pow_Float16x2 } /* 2008 */,
    std::pair{ "pow"_h, &pow_Float16x3 } /* 2009 */,
    std::pair{ "pow"_h, &pow_Float16x4 } /* 2010 */,
    std::pair{ "i16x4(i16,i16,i16x2)"_h, &Int16x4_ctor3 } /* 2011 */,
    std::pair{ "textureAtomicLoad(uniform *texture1DArray,i32x2,u16)"_h, &TextureAtomicLoad_Texture1DArray_UInt16 } /* 2012 */,
    std::pair{ "textureAtomicAnd(uniform *textureCubeArray,i32x4,u32)"_h, &TextureAtomicAnd_TextureCubeArray_UInt32 } /* 2013 */,
    std::pair{ "b8x4(u16x4)"_h, &Bool8x4_from_UInt16x4 } /* 2014 */,
    std::pair{ "f32x3x4(f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32)"_h, &Float32x3x4_raw_list } /* 2015 */,
    std::pair{ "textureSampleOffset(uniform *texture1DArray,uniform *sampler,f32x2,f32x2)"_h, &TextureSampleOffset_Texture1DArray } /* 2016 */,
    std::pair{ "textureAtomicOr(uniform *texture2D,i32x2,i16)"_h, &TextureAtomicOr_Texture2D_Int16 } /* 2017 */,
    std::pair{ "textureSampledCubeArray"_h, &SampledTextureCubeArrayType } /* 2018 */,
    std::pair{ "i16x2(f32)"_h, &Int16x2_splat_Float32 } /* 2019 */,
    std::pair{ "u32x4(i32)"_h, &UInt32x4_splat_Int32 } /* 2020 */,
    std::pair{ "textureAtomicAdd(uniform *textureCube,i32x3,i32)"_h, &TextureAtomicAdd_TextureCube_Int32 } /* 2021 */,
    std::pair{ "textureSampleLodProjCompare(uniform *textureSampled1D,f32,f32,f32,f32)"_h, &SampledTextureSampleLodProjCompare_Texture1D } /* 2022 */,
    std::pair{ "geometryExportVertex"_h, &GeometryExportVertex_Float32x4 } /* 2023 */,
    std::pair{ "geometryExportVertex"_h, &GeometryExportVertex_Float16x4 } /* 2024 */,
    std::pair{ "textureAtomicMax(uniform *textureCubeArray,i32x4,u16)"_h, &TextureAtomicMax_TextureCubeArray_UInt16 } /* 2025 */,
    std::pair{ "pixelExportColor(i16x3,literal i32)"_h, &PixelExportColor_Int16x3_Int32 } /* 2026 */,
    std::pair{ "u16x3(i32x3)"_h, &UInt16x3_from_Int32x3 } /* 2027 */,
    std::pair{ "textureAtomicLoad(uniform *textureCubeArray,i32x4,i32)"_h, &TextureAtomicLoad_TextureCubeArray_Int32 } /* 2028 */,
    std::pair{ "f32x4"_h, &Float32x4Type } /* 2029 */,
    std::pair{ "f32x4"_h, &Float32x4_from_Float32x4 } /* 2030 */,
    std::pair{ "f32x4"_h, &Float32x4_splat_Float32 } /* 2031 */,
    std::pair{ "f32x4"_h, &Float32x4_from_UInt32x4 } /* 2032 */,
    std::pair{ "f32x4"_h, &Float32x4_splat_UInt32 } /* 2033 */,
    std::pair{ "f32x4"_h, &Float32x4_from_Int32x4 } /* 2034 */,
    std::pair{ "f32x4"_h, &Float32x4_splat_Int32 } /* 2035 */,
    std::pair{ "f32x4"_h, &Float32x4_from_Bool8x4 } /* 2036 */,
    std::pair{ "f32x4"_h, &Float32x4_splat_Bool8 } /* 2037 */,
    std::pair{ "f32x4"_h, &Float32x4_from_Float16x4 } /* 2038 */,
    std::pair{ "f32x4"_h, &Float32x4_splat_Float16 } /* 2039 */,
    std::pair{ "f32x4"_h, &Float32x4_from_UInt16x4 } /* 2040 */,
    std::pair{ "f32x4"_h, &Float32x4_splat_UInt16 } /* 2041 */,
    std::pair{ "f32x4"_h, &Float32x4_from_Int16x4 } /* 2042 */,
    std::pair{ "f32x4"_h, &Float32x4_splat_Int16 } /* 2043 */,
    std::pair{ "f32x4"_h, &Float32x4_ctor0 } /* 2044 */,
    std::pair{ "f32x4"_h, &Float32x4_ctor1 } /* 2045 */,
    std::pair{ "f32x4"_h, &Float32x4_ctor2 } /* 2046 */,
    std::pair{ "f32x4"_h, &Float32x4_ctor3 } /* 2047 */,
    std::pair{ "f32x4"_h, &Float32x4_ctor4 } /* 2048 */,
    std::pair{ "f32x4"_h, &Float32x4_ctor5 } /* 2049 */,
    std::pair{ "f32x4"_h, &Float32x4_ctor6 } /* 2050 */,
    std::pair{ "f32x2"_h, &Float32x2Type } /* 2051 */,
    std::pair{ "f32x2"_h, &Float32x2_from_Float32x2 } /* 2052 */,
    std::pair{ "f32x2"_h, &Float32x2_splat_Float32 } /* 2053 */,
    std::pair{ "f32x2"_h, &Float32x2_from_UInt32x2 } /* 2054 */,
    std::pair{ "f32x2"_h, &Float32x2_splat_UInt32 } /* 2055 */,
    std::pair{ "f32x2"_h, &Float32x2_from_Int32x2 } /* 2056 */,
    std::pair{ "f32x2"_h, &Float32x2_splat_Int32 } /* 2057 */,
    std::pair{ "f32x2"_h, &Float32x2_from_Bool8x2 } /* 2058 */,
    std::pair{ "f32x2"_h, &Float32x2_splat_Bool8 } /* 2059 */,
    std::pair{ "f32x2"_h, &Float32x2_from_Float16x2 } /* 2060 */,
    std::pair{ "f32x2"_h, &Float32x2_splat_Float16 } /* 2061 */,
    std::pair{ "f32x2"_h, &Float32x2_from_UInt16x2 } /* 2062 */,
    std::pair{ "f32x2"_h, &Float32x2_splat_UInt16 } /* 2063 */,
    std::pair{ "f32x2"_h, &Float32x2_from_Int16x2 } /* 2064 */,
    std::pair{ "f32x2"_h, &Float32x2_splat_Int16 } /* 2065 */,
    std::pair{ "f32x2"_h, &Float32x2_ctor0 } /* 2066 */,
    std::pair{ "f32x3"_h, &Float32x3Type } /* 2067 */,
    std::pair{ "f32x3"_h, &Float32x3_from_Float32x3 } /* 2068 */,
    std::pair{ "f32x3"_h, &Float32x3_splat_Float32 } /* 2069 */,
    std::pair{ "f32x3"_h, &Float32x3_from_UInt32x3 } /* 2070 */,
    std::pair{ "f32x3"_h, &Float32x3_splat_UInt32 } /* 2071 */,
    std::pair{ "f32x3"_h, &Float32x3_from_Int32x3 } /* 2072 */,
    std::pair{ "f32x3"_h, &Float32x3_splat_Int32 } /* 2073 */,
    std::pair{ "f32x3"_h, &Float32x3_from_Bool8x3 } /* 2074 */,
    std::pair{ "f32x3"_h, &Float32x3_splat_Bool8 } /* 2075 */,
    std::pair{ "f32x3"_h, &Float32x3_from_Float16x3 } /* 2076 */,
    std::pair{ "f32x3"_h, &Float32x3_splat_Float16 } /* 2077 */,
    std::pair{ "f32x3"_h, &Float32x3_from_UInt16x3 } /* 2078 */,
    std::pair{ "f32x3"_h, &Float32x3_splat_UInt16 } /* 2079 */,
    std::pair{ "f32x3"_h, &Float32x3_from_Int16x3 } /* 2080 */,
    std::pair{ "f32x3"_h, &Float32x3_splat_Int16 } /* 2081 */,
    std::pair{ "f32x3"_h, &Float32x3_ctor0 } /* 2082 */,
    std::pair{ "f32x3"_h, &Float32x3_ctor1 } /* 2083 */,
    std::pair{ "f32x3"_h, &Float32x3_ctor2 } /* 2084 */,
    std::pair{ "i16x3(u32x3)"_h, &Int16x3_from_UInt32x3 } /* 2085 */,
    std::pair{ "textureAtomicLoad(uniform *textureCube,i32x3,i32)"_h, &TextureAtomicLoad_TextureCube_Int32 } /* 2086 */,
    std::pair{ "exp(f16)"_h, &exp_Float16 } /* 2087 */,
    std::pair{ "textureAtomicExchange(uniform *texture2DArray,i32x3,f32)"_h, &TextureAtomicExchange_Texture2DArray_Float32 } /* 2088 */,
    std::pair{ "Color(u32)"_h, &ColorType.toUnderlyingType } /* 2089 */,
    std::pair{ "textureSampleLodProjOffset(uniform *textureSampled1D,f32,f32,f32,f32)"_h, &SampledTextureSampleLodProjOffset_Texture1D } /* 2090 */,
    std::pair{ "inverse(f32x3x3)"_h, &inverse_Float32x3x3 } /* 2091 */,
    std::pair{ "inverse(f32x3x2)"_h, &inverse_Float32x3x2 } /* 2092 */,
    std::pair{ "inverse(f32x3x4)"_h, &inverse_Float32x3x4 } /* 2093 */,
    std::pair{ "textureSampleLodProjCompareOffset(uniform *textureSampled1D,f32,f32,f32,f32,f32)"_h, &SampledTextureSampleLodProjCompareOffset_Texture1D } /* 2094 */,
    std::pair{ "textureAtomicMin(uniform *textureCubeArray,i32x4,i32)"_h, &TextureAtomicMin_TextureCubeArray_Int32 } /* 2095 */,
    std::pair{ "hullExportInnerTessellationLevel"_h, &HullExportInnerTessellationLevel } /* 2096 */,
    std::pair{ "trunc(f16)"_h, &trunc_Float16 } /* 2097 */,
    std::pair{ "u32x3(u32x3)"_h, &UInt32x3_from_UInt32x3 } /* 2098 */,
    std::pair{ "textureLoadMip(uniform *mutable texture2D,i32x2,i32)"_h, &TextureLoadMip_Texture2D } /* 2099 */,
    std::pair{ "textureAtomicAdd(uniform *textureCubeArray,i32x4,i16)"_h, &TextureAtomicAdd_TextureCubeArray_Int16 } /* 2100 */,
    std::pair{ "pow(f16,f16)"_h, &pow_Float16 } /* 2101 */,
    std::pair{ "f32x3(f16)"_h, &Float32x3_splat_Float16 } /* 2102 */,
    std::pair{ "textureSampleBiasCompare(uniform *texture1D,uniform *sampler,f32,f32,f32)"_h, &TextureSampleBiasCompare_Texture1D } /* 2103 */,
    std::pair{ "i32x3(f32x3)"_h, &Int32x3_from_Float32x3 } /* 2104 */,
    std::pair{ "pixelGetFrontFacing()"_h, &PixelGetFrontFacing } /* 2105 */,
    std::pair{ "fwidth(f32)"_h, &fwidth_Float32 } /* 2106 */,
    std::pair{ "textureAtomicSubtract(uniform *textureCubeArray,i32x4,u16)"_h, &TextureAtomicSubtract_TextureCubeArray_UInt16 } /* 2107 */,
    std::pair{ "abs(f32)"_h, &abs_Float32 } /* 2108 */,
    std::pair{ "u16x2(i16x2)"_h, &UInt16x2_from_Int16x2 } /* 2109 */,
    std::pair{ "pixelExportColor(i32,literal u16)"_h, &PixelExportColor_Int32_UInt16 } /* 2110 */,
    std::pair{ "textureAtomicMax(uniform *texture2D,i32x2,u32)"_h, &TextureAtomicMax_Texture2D_UInt32 } /* 2111 */,
    std::pair{ "textureSampleCompare(uniform *textureSampled3D,f32x3,f32)"_h, &SampledTextureSampleCompare_Texture3D } /* 2112 */,
    std::pair{ "pixelExportColor(u32x2,literal u16)"_h, &PixelExportColor_UInt32x2_UInt16 } /* 2113 */,
    std::pair{ "b8x4(i16)"_h, &Bool8x4_splat_Int16 } /* 2114 */,
    std::pair{ "atomicSubtract(*u16,u16,literal MemorySemantics)"_h, &AtomicSubtract_UInt16 } /* 2115 */,
    std::pair{ "f32x2(u32x2)"_h, &Float32x2_from_UInt32x2 } /* 2116 */,
    std::pair{ "textureSampleBiasProjCompareOffset(uniform *texture1D,uniform *sampler,f32,f32,f32,f32,f32)"_h, &TextureSampleBiasProjCompareOffset_Texture1D } /* 2117 */,
    std::pair{ "f16x3x4(f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16)"_h, &Float16x3x4_raw_list } /* 2118 */,
    std::pair{ "i32x3(b8x3)"_h, &Int32x3_from_Bool8x3 } /* 2119 */,
    std::pair{ "ddy(f16)"_h, &ddy_Float16 } /* 2120 */,
    std::pair{ "pixelExportColor(f16x3,literal i16)"_h, &PixelExportColor_Float16x3_Int16 } /* 2121 */,
    std::pair{ "i32x2(u16)"_h, &Int32x2_splat_UInt16 } /* 2122 */,
    std::pair{ "u16x4(u16x4)"_h, &UInt16x4_from_UInt16x4 } /* 2123 */,
    std::pair{ "textureAtomicSubtract(uniform *texture2D,i32x2,u32)"_h, &TextureAtomicSubtract_Texture2D_UInt32 } /* 2124 */,
    std::pair{ "i32x4(f16)"_h, &Int32x4_splat_Float16 } /* 2125 */,
    std::pair{ "subgroupBallotBit"_h, &SubgroupBallotBit } /* 2126 */,
    std::pair{ "textureSampleLodCompare(uniform *texture1D,uniform *sampler,f32,f32,f32)"_h, &TextureSampleLodCompare_Texture1D } /* 2127 */,
    std::pair{ "textureSampleBiasProjCompareOffset(uniform *textureSampled1D,f32,f32,f32,f32,f32)"_h, &SampledTextureSampleBiasProjCompareOffset_Texture1D } /* 2128 */,
    std::pair{ "textureGatherOffset(uniform *texture2D,uniform *sampler,i32x2,i32,u32)"_h, &TextureGatherOffset_Texture2D } /* 2129 */,
    std::pair{ "textureSampleBiasProjCompareOffset(uniform *textureSampled2D,f32x2,f32,f32,f32,f32x2)"_h, &SampledTextureSampleBiasProjCompareOffset_Texture2D } /* 2130 */,
    std::pair{ "i16x2(b8x2)"_h, &Int16x2_from_Bool8x2 } /* 2131 */,
    std::pair{ "bitReverse(i16)"_h, &BitReverse_Int16 } /* 2132 */,
    std::pair{ "clamp(u16x3,u16x3,u16x3)"_h, &clamp_UInt16x3 } /* 2133 */,
    std::pair{ "textureSampleGradCompareOffset(uniform *texture2D,uniform *sampler,f32x2,f32x2,f32x2,f32,f32x2)"_h, &TextureSampleGradCompareOffset_Texture2D } /* 2134 */,
    std::pair{ "dot(f16x2,f16x2)"_h, &dot_Float16x2 } /* 2135 */,
    std::pair{ "ddx(f32x4)"_h, &ddx_Float32x4 } /* 2136 */,
    std::pair{ "subgroupSwapVertical(f16)"_h, &SubgroupSwapVertical_Float16 } /* 2137 */,
    std::pair{ "ddx(f32x2)"_h, &ddx_Float32x2 } /* 2138 */,
    std::pair{ "ddx(f32x3)"_h, &ddx_Float32x3 } /* 2139 */,
    std::pair{ "vertexSetOutputViewport(u16)"_h, &VertexSetOutputViewport_UInt16 } /* 2140 */,
    std::pair{ "f16x3(i16x3)"_h, &Float16x3_from_Int16x3 } /* 2141 */,
    std::pair{ "textureSampleBiasProjCompare(uniform *texture1D,uniform *sampler,f32,f32,f32,f32)"_h, &TextureSampleBiasProjCompare_Texture1D } /* 2142 */,
    std::pair{ "max(i16x3,i16x3)"_h, &max_Int16x3 } /* 2143 */,
    std::pair{ "i16x3(u16x3)"_h, &Int16x3_from_UInt16x3 } /* 2144 */,
    std::pair{ "textureAtomicStore(uniform *textureCubeArray,i32x4,u32)"_h, &TextureAtomicStore_TextureCubeArray_UInt32 } /* 2145 */,
    std::pair{ "bitExtract(i16,i16,i16)"_h, &BitExtract_Int16 } /* 2146 */,
    std::pair{ "u16x3(i16x3)"_h, &UInt16x3_from_Int16x3 } /* 2147 */,
    std::pair{ "textureStore(uniform *mutable texture2DArray,i32x3,f32x4)"_h, &TextureStore_Texture2DArray } /* 2148 */,
    std::pair{ "pixelExportColor(f16x2,literal u16)"_h, &PixelExportColor_Float16x2_UInt16 } /* 2149 */,
    std::pair{ "GeometryPoint"_h, &GeometryPointType } /* 2150 */,
    std::pair{ "textureAtomicStore(uniform *texture1D,i32,i16)"_h, &TextureAtomicStore_Texture1D_Int16 } /* 2151 */,
    std::pair{ "u32x3(u16x3)"_h, &UInt32x3_from_UInt16x3 } /* 2152 */,
    std::pair{ "normalize(f32x4)"_h, &normalize_Float32x4 } /* 2153 */,
    std::pair{ "normalize(f32x3)"_h, &normalize_Float32x3 } /* 2154 */,
    std::pair{ "normalize(f32x2)"_h, &normalize_Float32x2 } /* 2155 */,
    std::pair{ "i16x2(u16x2)"_h, &Int16x2_from_UInt16x2 } /* 2156 */,
    std::pair{ "u16x3(u32)"_h, &UInt16x3_splat_UInt32 } /* 2157 */,
    std::pair{ "textureSampleLodCompareOffset(uniform *texture1DArray,uniform *sampler,f32x2,f32,f32,f32x2)"_h, &TextureSampleLodCompareOffset_Texture1DArray } /* 2158 */,
    std::pair{ "textureStore(uniform *mutable texture3D,i32x3,f32x4)"_h, &TextureStore_Texture3D } /* 2159 */,
    std::pair{ "BlendOperation"_h, &BlendOperationType } /* 2160 */,
    std::pair{ "subgroupBallotLastOne"_h, &SubgroupBallotLastOne } /* 2161 */,
    std::pair{ "sin"_h, &sin_Float32 } /* 2162 */,
    std::pair{ "sin"_h, &sin_Float32x2 } /* 2163 */,
    std::pair{ "sin"_h, &sin_Float32x3 } /* 2164 */,
    std::pair{ "sin"_h, &sin_Float32x4 } /* 2165 */,
    std::pair{ "sin"_h, &sin_Float16 } /* 2166 */,
    std::pair{ "sin"_h, &sin_Float16x2 } /* 2167 */,
    std::pair{ "sin"_h, &sin_Float16x3 } /* 2168 */,
    std::pair{ "sin"_h, &sin_Float16x4 } /* 2169 */,
    std::pair{ "u32x3"_h, &UInt32x3Type } /* 2170 */,
    std::pair{ "u32x3"_h, &UInt32x3_from_Float32x3 } /* 2171 */,
    std::pair{ "u32x3"_h, &UInt32x3_splat_Float32 } /* 2172 */,
    std::pair{ "u32x3"_h, &UInt32x3_from_UInt32x3 } /* 2173 */,
    std::pair{ "u32x3"_h, &UInt32x3_splat_UInt32 } /* 2174 */,
    std::pair{ "u32x3"_h, &UInt32x3_from_Int32x3 } /* 2175 */,
    std::pair{ "u32x3"_h, &UInt32x3_splat_Int32 } /* 2176 */,
    std::pair{ "u32x3"_h, &UInt32x3_from_Bool8x3 } /* 2177 */,
    std::pair{ "u32x3"_h, &UInt32x3_splat_Bool8 } /* 2178 */,
    std::pair{ "u32x3"_h, &UInt32x3_from_Float16x3 } /* 2179 */,
    std::pair{ "u32x3"_h, &UInt32x3_splat_Float16 } /* 2180 */,
    std::pair{ "u32x3"_h, &UInt32x3_from_UInt16x3 } /* 2181 */,
    std::pair{ "u32x3"_h, &UInt32x3_splat_UInt16 } /* 2182 */,
    std::pair{ "u32x3"_h, &UInt32x3_from_Int16x3 } /* 2183 */,
    std::pair{ "u32x3"_h, &UInt32x3_splat_Int16 } /* 2184 */,
    std::pair{ "u32x3"_h, &UInt32x3_ctor0 } /* 2185 */,
    std::pair{ "u32x3"_h, &UInt32x3_ctor1 } /* 2186 */,
    std::pair{ "u32x3"_h, &UInt32x3_ctor2 } /* 2187 */,
    std::pair{ "u32x2"_h, &UInt32x2Type } /* 2188 */,
    std::pair{ "u32x2"_h, &UInt32x2_from_Float32x2 } /* 2189 */,
    std::pair{ "u32x2"_h, &UInt32x2_splat_Float32 } /* 2190 */,
    std::pair{ "u32x2"_h, &UInt32x2_from_UInt32x2 } /* 2191 */,
    std::pair{ "u32x2"_h, &UInt32x2_splat_UInt32 } /* 2192 */,
    std::pair{ "u32x2"_h, &UInt32x2_from_Int32x2 } /* 2193 */,
    std::pair{ "u32x2"_h, &UInt32x2_splat_Int32 } /* 2194 */,
    std::pair{ "u32x2"_h, &UInt32x2_from_Bool8x2 } /* 2195 */,
    std::pair{ "u32x2"_h, &UInt32x2_splat_Bool8 } /* 2196 */,
    std::pair{ "u32x2"_h, &UInt32x2_from_Float16x2 } /* 2197 */,
    std::pair{ "u32x2"_h, &UInt32x2_splat_Float16 } /* 2198 */,
    std::pair{ "u32x2"_h, &UInt32x2_from_UInt16x2 } /* 2199 */,
    std::pair{ "u32x2"_h, &UInt32x2_splat_UInt16 } /* 2200 */,
    std::pair{ "u32x2"_h, &UInt32x2_from_Int16x2 } /* 2201 */,
    std::pair{ "u32x2"_h, &UInt32x2_splat_Int16 } /* 2202 */,
    std::pair{ "u32x2"_h, &UInt32x2_ctor0 } /* 2203 */,
    std::pair{ "u32x4"_h, &UInt32x4Type } /* 2204 */,
    std::pair{ "u32x4"_h, &UInt32x4_from_Float32x4 } /* 2205 */,
    std::pair{ "u32x4"_h, &UInt32x4_splat_Float32 } /* 2206 */,
    std::pair{ "u32x4"_h, &UInt32x4_from_UInt32x4 } /* 2207 */,
    std::pair{ "u32x4"_h, &UInt32x4_splat_UInt32 } /* 2208 */,
    std::pair{ "u32x4"_h, &UInt32x4_from_Int32x4 } /* 2209 */,
    std::pair{ "u32x4"_h, &UInt32x4_splat_Int32 } /* 2210 */,
    std::pair{ "u32x4"_h, &UInt32x4_from_Bool8x4 } /* 2211 */,
    std::pair{ "u32x4"_h, &UInt32x4_splat_Bool8 } /* 2212 */,
    std::pair{ "u32x4"_h, &UInt32x4_from_Float16x4 } /* 2213 */,
    std::pair{ "u32x4"_h, &UInt32x4_splat_Float16 } /* 2214 */,
    std::pair{ "u32x4"_h, &UInt32x4_from_UInt16x4 } /* 2215 */,
    std::pair{ "u32x4"_h, &UInt32x4_splat_UInt16 } /* 2216 */,
    std::pair{ "u32x4"_h, &UInt32x4_from_Int16x4 } /* 2217 */,
    std::pair{ "u32x4"_h, &UInt32x4_splat_Int16 } /* 2218 */,
    std::pair{ "u32x4"_h, &UInt32x4_ctor0 } /* 2219 */,
    std::pair{ "u32x4"_h, &UInt32x4_ctor1 } /* 2220 */,
    std::pair{ "u32x4"_h, &UInt32x4_ctor2 } /* 2221 */,
    std::pair{ "u32x4"_h, &UInt32x4_ctor3 } /* 2222 */,
    std::pair{ "u32x4"_h, &UInt32x4_ctor4 } /* 2223 */,
    std::pair{ "u32x4"_h, &UInt32x4_ctor5 } /* 2224 */,
    std::pair{ "u32x4"_h, &UInt32x4_ctor6 } /* 2225 */,
    std::pair{ "textureGetSampledMip(uniform *texture1D,uniform *sampler,f32)"_h, &TextureGetSampledMip_Texture1D } /* 2226 */,
    std::pair{ "subgroupGetGreaterMask()"_h, &SubgroupGetGreaterMask } /* 2227 */,
    std::pair{ "ddx(f16x4)"_h, &ddx_Float16x4 } /* 2228 */,
    std::pair{ "ddx(f16x2)"_h, &ddx_Float16x2 } /* 2229 */,
    std::pair{ "ddx(f16x3)"_h, &ddx_Float16x3 } /* 2230 */,
    std::pair{ "pixelExportColor(f16,literal u16)"_h, &PixelExportColor_Float16_UInt16 } /* 2231 */,
    std::pair{ "f32x3x2(f32x2,f32x2,f32x2)"_h, &Float32x3x2_Float32_2_ctor } /* 2232 */,
    std::pair{ "textureSampleBias(uniform *texture1D,uniform *sampler,f32,f32)"_h, &TextureSampleBias_Texture1D } /* 2233 */,
    std::pair{ "i32x4(u16x4)"_h, &Int32x4_from_UInt16x4 } /* 2234 */,
    std::pair{ "mad(i16x2,i16x2,i16x2)"_h, &mad_Int16x2 } /* 2235 */,
    std::pair{ "BlendFactor"_h, &BlendFactorType } /* 2236 */,
    std::pair{ "f16x3(u16)"_h, &Float16x3_splat_UInt16 } /* 2237 */,
    std::pair{ "u32x4(u32,u32x2,u32)"_h, &UInt32x4_ctor2 } /* 2238 */,
    std::pair{ "acosh(f16)"_h, &acosh_Float16 } /* 2239 */,
    std::pair{ "i32x3(f32)"_h, &Int32x3_splat_Float32 } /* 2240 */,
    std::pair{ "textureSampleLodOffset(uniform *texture3D,uniform *sampler,f32x3,f32,f32x3)"_h, &TextureSampleLodOffset_Texture3D } /* 2241 */,
    std::pair{ "pixelExportColor(u16,literal u32)"_h, &PixelExportColor_UInt16_UInt32 } /* 2242 */,
    std::pair{ "tan(f32x3)"_h, &tan_Float32x3 } /* 2243 */,
    std::pair{ "textureAtomicStore(uniform *textureCube,i32x3,f32)"_h, &TextureAtomicStore_TextureCube_Float32 } /* 2244 */,
    std::pair{ "textureAtomicOr(uniform *texture3D,i32x3,i16)"_h, &TextureAtomicOr_Texture3D_Int16 } /* 2245 */,
    std::pair{ "tan(f32x2)"_h, &tan_Float32x2 } /* 2246 */,
    std::pair{ "textureAtomicAdd(uniform *texture3D,i32x3,i16)"_h, &TextureAtomicAdd_Texture3D_Int16 } /* 2247 */,
    std::pair{ "tan(f32x4)"_h, &tan_Float32x4 } /* 2248 */,
    std::pair{ "pixelExportColor(i16x2,literal i16)"_h, &PixelExportColor_Int16x2_Int16 } /* 2249 */,
    std::pair{ "atomicSubtract"_h, &AtomicSubtract_UInt32 } /* 2250 */,
    std::pair{ "atomicSubtract"_h, &AtomicSubtract_Int32 } /* 2251 */,
    std::pair{ "atomicSubtract"_h, &AtomicSubtract_UInt16 } /* 2252 */,
    std::pair{ "atomicSubtract"_h, &AtomicSubtract_Int16 } /* 2253 */,
    std::pair{ "subgroupBallot"_h, &SubgroupBallot } /* 2254 */,
    std::pair{ "textureSampleGrad(uniform *texture2D,uniform *sampler,f32x2,f32x2,f32x2)"_h, &TextureSampleGrad_Texture2D } /* 2255 */,
    std::pair{ "textureSampleCompareOffset(uniform *texture1DArray,uniform *sampler,f32x2,f32,f32x2)"_h, &TextureSampleCompareOffset_Texture1DArray } /* 2256 */,
    std::pair{ "i16x4(f16)"_h, &Int16x4_splat_Float16 } /* 2257 */,
    std::pair{ "textureSampleLodProjOffset(uniform *texture2D,uniform *sampler,f32x2,f32,f32,f32x2)"_h, &TextureSampleLodProjOffset_Texture2D } /* 2258 */,
    std::pair{ "pixelExportColor(u32x4,literal u16)"_h, &PixelExportColor_UInt32x4_UInt16 } /* 2259 */,
    std::pair{ "textureAtomicXor(uniform *texture2D,i32x2,u32)"_h, &TextureAtomicXor_Texture2D_UInt32 } /* 2260 */,
    std::pair{ "i32(f16)"_h, &Int32_from_Float16 } /* 2261 */,
    std::pair{ "textureSampleBias(uniform *texture1DArray,uniform *sampler,f32x2,f32)"_h, &TextureSampleBias_Texture1DArray } /* 2262 */,
    std::pair{ "textureAtomicXor(uniform *texture1DArray,i32x2,u16)"_h, &TextureAtomicXor_Texture1DArray_UInt16 } /* 2263 */,
    std::pair{ "textureFetchSample(uniform *texture2DArray,i32x3,u32,u32)"_h, &TextureFetchSample_Texture2DArray } /* 2264 */,
    std::pair{ "lerp(f16x3,f16x3,f16x3)"_h, &lerp_Float16x3 } /* 2265 */,
    std::pair{ "f32x3(i32)"_h, &Float32x3_splat_Int32 } /* 2266 */,
    std::pair{ "refract(f16x2,f16x2,f16x2)"_h, &refract_Float16x2 } /* 2267 */,
    std::pair{ "i16x4(i32)"_h, &Int16x4_splat_Int32 } /* 2268 */,
    std::pair{ "f16x4(f16x4)"_h, &Float16x4_from_Float16x4 } /* 2269 */,
    std::pair{ "textureAtomicExchange(uniform *texture3D,i32x3,f16)"_h, &TextureAtomicExchange_Texture3D_Float16 } /* 2270 */,
    std::pair{ "u16x2(f32)"_h, &UInt16x2_splat_Float32 } /* 2271 */,
    std::pair{ "textureGather(uniform *textureSampled2DArray,i32x3,i32)"_h, &SampledTextureGather_Texture2DArray } /* 2272 */,
    std::pair{ "textureAtomicOr(uniform *texture1D,i32,i32)"_h, &TextureAtomicOr_Texture1D_Int32 } /* 2273 */,
    std::pair{ "textureAtomicLoad(uniform *texture2DArray,i32x3,u16)"_h, &TextureAtomicLoad_Texture2DArray_UInt16 } /* 2274 */,
    std::pair{ "hullGetPrimitiveIndex(u32)"_h, &HullGetPrimitiveIndex } /* 2275 */,
    std::pair{ "textureSampleCompareOffset"_h, &TextureSampleCompareOffset_Texture1D } /* 2276 */,
    std::pair{ "textureSampleCompareOffset"_h, &SampledTextureSampleCompareOffset_Texture1D } /* 2277 */,
    std::pair{ "textureSampleCompareOffset"_h, &TextureSampleCompareOffset_Texture2D } /* 2278 */,
    std::pair{ "textureSampleCompareOffset"_h, &SampledTextureSampleCompareOffset_Texture2D } /* 2279 */,
    std::pair{ "textureSampleCompareOffset"_h, &TextureSampleCompareOffset_Texture3D } /* 2280 */,
    std::pair{ "textureSampleCompareOffset"_h, &SampledTextureSampleCompareOffset_Texture3D } /* 2281 */,
    std::pair{ "textureSampleCompareOffset"_h, &TextureSampleCompareOffset_Texture1DArray } /* 2282 */,
    std::pair{ "textureSampleCompareOffset"_h, &SampledTextureSampleCompareOffset_Texture1DArray } /* 2283 */,
    std::pair{ "textureSampleCompareOffset"_h, &TextureSampleCompareOffset_Texture2DArray } /* 2284 */,
    std::pair{ "textureSampleCompareOffset"_h, &SampledTextureSampleCompareOffset_Texture2DArray } /* 2285 */,
    std::pair{ "f16x4(f16x2,f16x2)"_h, &Float16x4_ctor4 } /* 2286 */,
    std::pair{ "bitCount(u32)"_h, &BitCount_UInt32 } /* 2287 */,
    std::pair{ "textureAtomicAnd(uniform *textureCubeArray,i32x4,u16)"_h, &TextureAtomicAnd_TextureCubeArray_UInt16 } /* 2288 */,
    std::pair{ "textureAtomicOr(uniform *texture2DArray,i32x3,u16)"_h, &TextureAtomicOr_Texture2DArray_UInt16 } /* 2289 */,
    std::pair{ "textureAtomicLoad(uniform *texture1D,i32,u32)"_h, &TextureAtomicLoad_Texture1D_UInt32 } /* 2290 */,
    std::pair{ "textureAtomicExchange(uniform *textureCube,i32x3,u16)"_h, &TextureAtomicExchange_TextureCube_UInt16 } /* 2291 */,
    std::pair{ "textureGetSampledMip(uniform *textureSampledCube,f32x3)"_h, &SampledTextureGetSampledMip_TextureCube } /* 2292 */,
    std::pair{ "pixelExportColor(i16,literal i16)"_h, &PixelExportColor_Int16_Int16 } /* 2293 */,
    std::pair{ "clamp(f32,f32,f32)"_h, &clamp_Float32 } /* 2294 */,
    std::pair{ "textureAtomicCompareExchange(uniform *textureCubeArray,i32x4,i32)"_h, &TextureAtomicCompareExchange_TextureCubeArray_Int32 } /* 2295 */,
    std::pair{ "subgroupGetThreadAndLowerMask()"_h, &SubgroupGetThreadAndLowerMask } /* 2296 */,
    std::pair{ "f32x2(b8)"_h, &Float32x2_splat_Bool8 } /* 2297 */,
    std::pair{ "min(i16x4,i16x4)"_h, &min_Int16x4 } /* 2298 */,
    std::pair{ "i32x2(f32)"_h, &Int32x2_splat_Float32 } /* 2299 */,
    std::pair{ "textureAtomicLoad(uniform *texture2D,i32x2,i16)"_h, &TextureAtomicLoad_Texture2D_Int16 } /* 2300 */,
    std::pair{ "i32x4(f32x4)"_h, &Int32x4_from_Float32x4 } /* 2301 */,
    std::pair{ "textureSampleBiasProjOffset(uniform *textureSampled1D,f32,f32,f32,f32)"_h, &SampledTextureSampleBiasProjOffset_Texture1D } /* 2302 */,
    std::pair{ "i32x3(i32,i32x2)"_h, &Int32x3_ctor2 } /* 2303 */,
    std::pair{ "textureAtomicSubtract(uniform *texture1D,i32,i16)"_h, &TextureAtomicSubtract_Texture1D_Int16 } /* 2304 */,
    std::pair{ "texture1DArray"_h, &Texture1DArrayType } /* 2305 */,
    std::pair{ "textureSampleLodProjCompareOffset(uniform *texture2D,uniform *sampler,f32x2,f32,f32,f32,f32x2)"_h, &TextureSampleLodProjCompareOffset_Texture2D } /* 2306 */,
    std::pair{ "f16x3(f16,f16x2)"_h, &Float16x3_ctor2 } /* 2307 */,
    std::pair{ "textureAtomicLoad(uniform *textureCube,i32x3,i16)"_h, &TextureAtomicLoad_TextureCube_Int16 } /* 2308 */,
    std::pair{ "i16x2(f16)"_h, &Int16x2_splat_Float16 } /* 2309 */,
    std::pair{ "i32x2(f32x2)"_h, &Int32x2_from_Float32x2 } /* 2310 */,
    std::pair{ "sign(f16x3)"_h, &sign_Float16x3 } /* 2311 */,
    std::pair{ "sign(f16x2)"_h, &sign_Float16x2 } /* 2312 */,
    std::pair{ "textureSampleProjCompare(uniform *texture3D,uniform *sampler,f32x3,f32,f32)"_h, &TextureSampleProjCompare_Texture3D } /* 2313 */,
    std::pair{ "sign(f16x4)"_h, &sign_Float16x4 } /* 2314 */,
    std::pair{ "textureAtomicOr(uniform *texture2D,i32x2,i32)"_h, &TextureAtomicOr_Texture2D_Int32 } /* 2315 */,
    std::pair{ "atomicDecrement(*u16,literal MemorySemantics)"_h, &AtomicDecrement_UInt16 } /* 2316 */,
    std::pair{ "u32x4(i16)"_h, &UInt32x4_splat_Int16 } /* 2317 */,
    std::pair{ "min(i16x3,i16x3)"_h, &min_Int16x3 } /* 2318 */,
    std::pair{ "textureAtomicMax(uniform *textureCubeArray,i32x4,u32)"_h, &TextureAtomicMax_TextureCubeArray_UInt32 } /* 2319 */,
    std::pair{ "Patch(u32)"_h, &PatchType.toUnderlyingType } /* 2320 */,
    std::pair{ "bitExtract(u16,u16,u16)"_h, &BitExtract_UInt16 } /* 2321 */,
    std::pair{ "textureSampleLodProjOffset(uniform *texture1D,uniform *sampler,f32,f32,f32,f32)"_h, &TextureSampleLodProjOffset_Texture1D } /* 2322 */,
    std::pair{ "f32x4(f32,f32x3)"_h, &Float32x4_ctor6 } /* 2323 */,
    std::pair{ "textureSampleLodCompareOffset(uniform *textureSampled1DArray,f32x2,f32,f32,f32x2)"_h, &SampledTextureSampleLodCompareOffset_Texture1DArray } /* 2324 */,
    std::pair{ "trunc"_h, &trunc_Float32 } /* 2325 */,
    std::pair{ "trunc"_h, &trunc_Float32x2 } /* 2326 */,
    std::pair{ "trunc"_h, &trunc_Float32x3 } /* 2327 */,
    std::pair{ "trunc"_h, &trunc_Float32x4 } /* 2328 */,
    std::pair{ "trunc"_h, &trunc_Float16 } /* 2329 */,
    std::pair{ "trunc"_h, &trunc_Float16x2 } /* 2330 */,
    std::pair{ "trunc"_h, &trunc_Float16x3 } /* 2331 */,
    std::pair{ "trunc"_h, &trunc_Float16x4 } /* 2332 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture1D_Float32 } /* 2333 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture1D_UInt32 } /* 2334 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture1D_Int32 } /* 2335 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture1D_Float16 } /* 2336 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture1D_UInt16 } /* 2337 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture1D_Int16 } /* 2338 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture2D_Float32 } /* 2339 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture2D_UInt32 } /* 2340 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture2D_Int32 } /* 2341 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture2D_Float16 } /* 2342 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture2D_UInt16 } /* 2343 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture2D_Int16 } /* 2344 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture3D_Float32 } /* 2345 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture3D_UInt32 } /* 2346 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture3D_Int32 } /* 2347 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture3D_Float16 } /* 2348 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture3D_UInt16 } /* 2349 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture3D_Int16 } /* 2350 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_TextureCube_Float32 } /* 2351 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_TextureCube_UInt32 } /* 2352 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_TextureCube_Int32 } /* 2353 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_TextureCube_Float16 } /* 2354 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_TextureCube_UInt16 } /* 2355 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_TextureCube_Int16 } /* 2356 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture1DArray_Float32 } /* 2357 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture1DArray_UInt32 } /* 2358 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture1DArray_Int32 } /* 2359 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture1DArray_Float16 } /* 2360 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture1DArray_UInt16 } /* 2361 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture1DArray_Int16 } /* 2362 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture2DArray_Float32 } /* 2363 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture2DArray_UInt32 } /* 2364 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture2DArray_Int32 } /* 2365 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture2DArray_Float16 } /* 2366 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture2DArray_UInt16 } /* 2367 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_Texture2DArray_Int16 } /* 2368 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_TextureCubeArray_Float32 } /* 2369 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_TextureCubeArray_UInt32 } /* 2370 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_TextureCubeArray_Int32 } /* 2371 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_TextureCubeArray_Float16 } /* 2372 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_TextureCubeArray_UInt16 } /* 2373 */,
    std::pair{ "textureAtomicExchange"_h, &TextureAtomicExchange_TextureCubeArray_Int16 } /* 2374 */,
    std::pair{ "textureAtomicAnd(uniform *texture1DArray,i32x2,i16)"_h, &TextureAtomicAnd_Texture1DArray_Int16 } /* 2375 */,
    std::pair{ "mad(u16x4,u16x4,u16x4)"_h, &mad_UInt16x4 } /* 2376 */,
    std::pair{ "mad(i32,i32,i32)"_h, &mad_Int32 } /* 2377 */,
    std::pair{ "textureSampleLodProjOffset(uniform *textureSampled2D,f32x2,f32,f32,f32x2)"_h, &SampledTextureSampleLodProjOffset_Texture2D } /* 2378 */,
    std::pair{ "textureAtomicMax(uniform *texture2D,i32x2,u16)"_h, &TextureAtomicMax_Texture2D_UInt16 } /* 2379 */,
    std::pair{ "atomicMin(*f16,f16,literal MemorySemantics)"_h, &AtomicMin_UInt32 } /* 2380 */,
    std::pair{ "atomicMin(*f16,f16,literal MemorySemantics)"_h, &AtomicMin_Int32 } /* 2381 */,
    std::pair{ "atomicMin(*f16,f16,literal MemorySemantics)"_h, &AtomicMin_UInt16 } /* 2382 */,
    std::pair{ "atomicMin(*f16,f16,literal MemorySemantics)"_h, &AtomicMin_Int16 } /* 2383 */,
    std::pair{ "textureAtomicMin(uniform *textureCubeArray,i32x4,i16)"_h, &TextureAtomicMin_TextureCubeArray_Int16 } /* 2384 */,
    std::pair{ "textureAtomicXor(uniform *texture2DArray,i32x3,u32)"_h, &TextureAtomicXor_Texture2DArray_UInt32 } /* 2385 */,
    std::pair{ "textureSampleLod(uniform *textureSampledCubeArray,f32x4,f32)"_h, &SampledTextureSampleLod_TextureCubeArray } /* 2386 */,
    std::pair{ "textureSample(uniform *textureSampledCube,f32x3)"_h, &SampledTextureSample_TextureCube } /* 2387 */,
    std::pair{ "textureSampleBiasCompare(uniform *textureSampled1DArray,f32x2,f32,f32)"_h, &SampledTextureSampleBiasCompare_Texture1DArray } /* 2388 */,
    std::pair{ "atomicAdd(*u32,u32,literal MemorySemantics)"_h, &AtomicAdd_UInt32 } /* 2389 */,
    std::pair{ "f16x2(f32)"_h, &Float16x2_splat_Float32 } /* 2390 */,
    std::pair{ "textureStore(uniform *mutable texture1DArray,i32x2,f32x4)"_h, &TextureStore_Texture1DArray } /* 2391 */,
    std::pair{ "b8x4(i32)"_h, &Bool8x4_splat_Int32 } /* 2392 */,
    std::pair{ "pixelExportColor(f16x3,literal i32)"_h, &PixelExportColor_Float16x3_Int32 } /* 2393 */,
    std::pair{ "textureLoadMip(uniform *mutable texture1D,i32,i32)"_h, &TextureLoadMip_Texture1D } /* 2394 */,
    std::pair{ "textureAtomicAdd(uniform *textureCubeArray,i32x4,i32)"_h, &TextureAtomicAdd_TextureCubeArray_Int32 } /* 2395 */,
    std::pair{ "textureSampleGrad"_h, &TextureSampleGrad_Texture1D } /* 2396 */,
    std::pair{ "textureSampleGrad"_h, &SampledTextureSampleGrad_Texture1D } /* 2397 */,
    std::pair{ "textureSampleGrad"_h, &TextureSampleGrad_Texture2D } /* 2398 */,
    std::pair{ "textureSampleGrad"_h, &SampledTextureSampleGrad_Texture2D } /* 2399 */,
    std::pair{ "textureSampleGrad"_h, &TextureSampleGrad_Texture3D } /* 2400 */,
    std::pair{ "textureSampleGrad"_h, &SampledTextureSampleGrad_Texture3D } /* 2401 */,
    std::pair{ "textureSampleGrad"_h, &TextureSampleGrad_TextureCube } /* 2402 */,
    std::pair{ "textureSampleGrad"_h, &SampledTextureSampleGrad_TextureCube } /* 2403 */,
    std::pair{ "textureSampleGrad"_h, &TextureSampleGrad_Texture1DArray } /* 2404 */,
    std::pair{ "textureSampleGrad"_h, &SampledTextureSampleGrad_Texture1DArray } /* 2405 */,
    std::pair{ "textureSampleGrad"_h, &TextureSampleGrad_Texture2DArray } /* 2406 */,
    std::pair{ "textureSampleGrad"_h, &SampledTextureSampleGrad_Texture2DArray } /* 2407 */,
    std::pair{ "textureSampleGrad"_h, &TextureSampleGrad_TextureCubeArray } /* 2408 */,
    std::pair{ "textureSampleGrad"_h, &SampledTextureSampleGrad_TextureCubeArray } /* 2409 */,
    std::pair{ "f16x4(f16,f16x3)"_h, &Float16x4_ctor6 } /* 2410 */,
    std::pair{ "i32x4(i32,i32,i32,i32)"_h, &Int32x4_ctor0 } /* 2411 */,
    std::pair{ "b8x3(b8,b8,b8)"_h, &Bool8x3_ctor0 } /* 2412 */,
    std::pair{ "atomicAnd(*i32,i32,literal MemorySemantics)"_h, &AtomicAnd_Int32 } /* 2413 */,
    std::pair{ "textureSampleLodCompare(uniform *textureSampled1DArray,f32x2,f32,f32)"_h, &SampledTextureSampleLodCompare_Texture1DArray } /* 2414 */,
    std::pair{ "textureAtomicSubtract(uniform *texture2D,i32x2,u16)"_h, &TextureAtomicSubtract_Texture2D_UInt16 } /* 2415 */,
    std::pair{ "textureSample(uniform *textureSampled1D,f32)"_h, &SampledTextureSample_Texture1D } /* 2416 */,
    std::pair{ "clamp(f16x2,f16x2,f16x2)"_h, &clamp_Float16x2 } /* 2417 */,
    std::pair{ "tanh(f32x3)"_h, &tanh_Float32x3 } /* 2418 */,
    std::pair{ "textureAtomicSubtract(uniform *textureCubeArray,i32x4,u32)"_h, &TextureAtomicSubtract_TextureCubeArray_UInt32 } /* 2419 */,
    std::pair{ "tanh(f32x2)"_h, &tanh_Float32x2 } /* 2420 */,
    std::pair{ "tanh(f32x4)"_h, &tanh_Float32x4 } /* 2421 */,
    std::pair{ "textureSampleLodProjOffset(uniform *textureSampled3D,f32x3,f32,f32,f32x3)"_h, &SampledTextureSampleLodProjOffset_Texture3D } /* 2422 */,
    std::pair{ "textureAtomicCompareExchange(uniform *textureCube,i32x3,i32)"_h, &TextureAtomicCompareExchange_TextureCube_Int32 } /* 2423 */,
    std::pair{ "atomicOr(*i32,i32,literal MemorySemantics)"_h, &AtomicOr_Int32 } /* 2424 */,
    std::pair{ "textureGetSampledMip(uniform *texture1DArray,uniform *sampler,f32x2)"_h, &TextureGetSampledMip_Texture1DArray } /* 2425 */,
    std::pair{ "pixelExportColor(u32x2,literal u32)"_h, &PixelExportColor_UInt32x2_UInt32 } /* 2426 */,
    std::pair{ "bitReverse(i32)"_h, &BitReverse_Int32 } /* 2427 */,
    std::pair{ "textureStoreMip"_h, &TextureStoreMip_Texture1D } /* 2428 */,
    std::pair{ "textureStoreMip"_h, &TextureStoreMip_Texture2D } /* 2429 */,
    std::pair{ "textureStoreMip"_h, &TextureStoreMip_Texture3D } /* 2430 */,
    std::pair{ "textureStoreMip"_h, &TextureStoreMip_TextureCube } /* 2431 */,
    std::pair{ "textureStoreMip"_h, &TextureStoreMip_Texture1DArray } /* 2432 */,
    std::pair{ "textureStoreMip"_h, &TextureStoreMip_Texture2DArray } /* 2433 */,
    std::pair{ "textureStoreMip"_h, &TextureStoreMip_TextureCubeArray } /* 2434 */,
    std::pair{ "textureStoreMip"_h, &TextureStoreMip_Texture2DMS } /* 2435 */,
    std::pair{ "textureStoreMip"_h, &TextureStoreMip_Texture2DMSArray } /* 2436 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture2DArray,i32x3,u16)"_h, &TextureAtomicCompareExchange_Texture2DArray_UInt16 } /* 2437 */,
    std::pair{ "i32x2(u32)"_h, &Int32x2_splat_UInt32 } /* 2438 */,
    std::pair{ "textureAtomicExchange(uniform *texture2D,i32x2,i16)"_h, &TextureAtomicExchange_Texture2D_Int16 } /* 2439 */,
    std::pair{ "asin"_h, &asin_Float32 } /* 2440 */,
    std::pair{ "asin"_h, &asin_Float32x2 } /* 2441 */,
    std::pair{ "asin"_h, &asin_Float32x3 } /* 2442 */,
    std::pair{ "asin"_h, &asin_Float32x4 } /* 2443 */,
    std::pair{ "asin"_h, &asin_Float16 } /* 2444 */,
    std::pair{ "asin"_h, &asin_Float16x2 } /* 2445 */,
    std::pair{ "asin"_h, &asin_Float16x3 } /* 2446 */,
    std::pair{ "asin"_h, &asin_Float16x4 } /* 2447 */,
    std::pair{ "exp2(f16)"_h, &exp2_Float16 } /* 2448 */,
    std::pair{ "textureSampleGradOffset(uniform *texture2DArray,uniform *sampler,f32x3,f32x3,f32x3,f32x3)"_h, &TextureSampleGradOffset_Texture2DArray } /* 2449 */,
    std::pair{ "sinh(f32x4)"_h, &sinh_Float32x4 } /* 2450 */,
    std::pair{ "textureSampleGradProj(uniform *textureSampled3D,f32x3,f32x3,f32x3,f32)"_h, &SampledTextureSampleGradProj_Texture3D } /* 2451 */,
    std::pair{ "textureAtomicStore(uniform *textureCubeArray,i32x4,u16)"_h, &TextureAtomicStore_TextureCubeArray_UInt16 } /* 2452 */,
    std::pair{ "sinh(f32x2)"_h, &sinh_Float32x2 } /* 2453 */,
    std::pair{ "sinh(f32x3)"_h, &sinh_Float32x3 } /* 2454 */,
    std::pair{ "b8x4(i32x4)"_h, &Bool8x4_from_Int32x4 } /* 2455 */,
    std::pair{ "asin(f16x3)"_h, &asin_Float16x3 } /* 2456 */,
    std::pair{ "asin(f16x2)"_h, &asin_Float16x2 } /* 2457 */,
    std::pair{ "asin(f16x4)"_h, &asin_Float16x4 } /* 2458 */,
    std::pair{ "textureSampleBiasProj(uniform *textureSampled2D,f32x2,f32,f32)"_h, &SampledTextureSampleBiasProj_Texture2D } /* 2459 */,
    std::pair{ "i32(i32)"_h, &Int32_ctor0 } /* 2460 */,
    std::pair{ "asinh(f32x3)"_h, &asinh_Float32x3 } /* 2461 */,
    std::pair{ "asinh(f32x2)"_h, &asinh_Float32x2 } /* 2462 */,
    std::pair{ "asinh(f32x4)"_h, &asinh_Float32x4 } /* 2463 */,
    std::pair{ "subgroupGetThreadAndGreaterMask"_h, &SubgroupGetThreadAndGreaterMask } /* 2464 */,
    std::pair{ "domainGetPrimitiveIndex"_h, &DomainGetPrimitiveIndex } /* 2465 */,
    std::pair{ "vertexSetOutputViewport(u32)"_h, &VertexSetOutputViewport_UInt32 } /* 2466 */,
    std::pair{ "bitInsert(u16,u16,u16,u16)"_h, &BitInsert_UInt16 } /* 2467 */,
    std::pair{ "textureSampleBiasProj(uniform *texture2D,uniform *sampler,f32x2,f32,f32)"_h, &TextureSampleBiasProj_Texture2D } /* 2468 */,
    std::pair{ "pixelCacheMS"_h, &PixelCacheMSType } /* 2469 */,
    std::pair{ "textureAtomicLoad(uniform *texture2D,i32x2,f32)"_h, &TextureAtomicLoad_Texture2D_Float32 } /* 2470 */,
    std::pair{ "subgroupBallotBitCount"_h, &SubgroupBallotBitCount } /* 2471 */,
    std::pair{ "log(f16x4)"_h, &log_Float16x4 } /* 2472 */,
    std::pair{ "log(f16x2)"_h, &log_Float16x2 } /* 2473 */,
    std::pair{ "log(f16x3)"_h, &log_Float16x3 } /* 2474 */,
    std::pair{ "pixelExportColor(f16,literal u32)"_h, &PixelExportColor_Float16_UInt32 } /* 2475 */,
    std::pair{ "textureStore(uniform *mutable texture1D,i32,f32x4)"_h, &TextureStore_Texture1D } /* 2476 */,
    std::pair{ "step(f16x3,f16x3)"_h, &step_Float16x3 } /* 2477 */,
    std::pair{ "u32x4(u32x2,u32x2)"_h, &UInt32x4_ctor4 } /* 2478 */,
    std::pair{ "textureSampleLodCompareOffset"_h, &TextureSampleLodCompareOffset_Texture1D } /* 2479 */,
    std::pair{ "textureSampleLodCompareOffset"_h, &SampledTextureSampleLodCompareOffset_Texture1D } /* 2480 */,
    std::pair{ "textureSampleLodCompareOffset"_h, &TextureSampleLodCompareOffset_Texture2D } /* 2481 */,
    std::pair{ "textureSampleLodCompareOffset"_h, &SampledTextureSampleLodCompareOffset_Texture2D } /* 2482 */,
    std::pair{ "textureSampleLodCompareOffset"_h, &TextureSampleLodCompareOffset_Texture3D } /* 2483 */,
    std::pair{ "textureSampleLodCompareOffset"_h, &SampledTextureSampleLodCompareOffset_Texture3D } /* 2484 */,
    std::pair{ "textureSampleLodCompareOffset"_h, &TextureSampleLodCompareOffset_Texture1DArray } /* 2485 */,
    std::pair{ "textureSampleLodCompareOffset"_h, &SampledTextureSampleLodCompareOffset_Texture1DArray } /* 2486 */,
    std::pair{ "textureSampleLodCompareOffset"_h, &TextureSampleLodCompareOffset_Texture2DArray } /* 2487 */,
    std::pair{ "textureSampleLodCompareOffset"_h, &SampledTextureSampleLodCompareOffset_Texture2DArray } /* 2488 */,
    std::pair{ "i32x3(f16)"_h, &Int32x3_splat_Float16 } /* 2489 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(f32x4)"_h, &SubgroupBroadcastFirstActiveThread_Float32x4 } /* 2490 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(f32x2)"_h, &SubgroupBroadcastFirstActiveThread_Float32x2 } /* 2491 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(f32x3)"_h, &SubgroupBroadcastFirstActiveThread_Float32x3 } /* 2492 */,
    std::pair{ "textureSampleLodProjCompare(uniform *textureSampled3D,f32x3,f32,f32,f32)"_h, &SampledTextureSampleLodProjCompare_Texture3D } /* 2493 */,
    std::pair{ "atomicIncrement(*i32,literal MemorySemantics)"_h, &AtomicIncrement_Int32 } /* 2494 */,
    std::pair{ "textureSampleLodProj(uniform *texture3D,uniform *sampler,f32x3,f32,f32)"_h, &TextureSampleLodProj_Texture3D } /* 2495 */,
    std::pair{ "textureAtomicStore(uniform *textureCube,i32x3,f16)"_h, &TextureAtomicStore_TextureCube_Float16 } /* 2496 */,
    std::pair{ "textureSampleLodProjCompare(uniform *textureSampled2D,f32x2,f32,f32,f32)"_h, &SampledTextureSampleLodProjCompare_Texture2D } /* 2497 */,
    std::pair{ "i16x2(i32)"_h, &Int16x2_splat_Int32 } /* 2498 */,
    std::pair{ "pow(f16x4,f16x4)"_h, &pow_Float16x4 } /* 2499 */,
    std::pair{ "pixelExportColor(f32x4,literal i32)"_h, &PixelExportColor_Float32x4_Int32 } /* 2500 */,
    std::pair{ "u32(CullFace)"_h, &CullFaceType.fromUnderlyingType } /* 2501 */,
    std::pair{ "textureStoreMip(uniform *mutable texture2DMSArray,i32x3,i32,f32x4)"_h, &TextureStoreMip_Texture2DMSArray } /* 2502 */,
    std::pair{ "i16x4(f32)"_h, &Int16x4_splat_Float32 } /* 2503 */,
    std::pair{ "textureAtomicLoad(uniform *textureCube,i32x3,f32)"_h, &TextureAtomicLoad_TextureCube_Float32 } /* 2504 */,
    std::pair{ "castToU32(i32)"_h, &castToU32_Int32 } /* 2505 */,
    std::pair{ "f16(f16)"_h, &Float16_ctor0 } /* 2506 */,
    std::pair{ "reflect"_h, &reflect_Float32x2 } /* 2507 */,
    std::pair{ "reflect"_h, &reflect_Float32x3 } /* 2508 */,
    std::pair{ "reflect"_h, &reflect_Float32x4 } /* 2509 */,
    std::pair{ "reflect"_h, &reflect_Float16x2 } /* 2510 */,
    std::pair{ "reflect"_h, &reflect_Float16x3 } /* 2511 */,
    std::pair{ "reflect"_h, &reflect_Float16x4 } /* 2512 */,
    std::pair{ "textureSampleBiasOffset(uniform *textureSampled2DArray,f32x3,f32,f32x3)"_h, &SampledTextureSampleBiasOffset_Texture2DArray } /* 2513 */,
    std::pair{ "f16x3(u32)"_h, &Float16x3_splat_UInt32 } /* 2514 */,
    std::pair{ "b8x2(i32)"_h, &Bool8x2_splat_Int32 } /* 2515 */,
    std::pair{ "sqrt"_h, &sqrt_Float32 } /* 2516 */,
    std::pair{ "sqrt"_h, &sqrt_Float32x2 } /* 2517 */,
    std::pair{ "sqrt"_h, &sqrt_Float32x3 } /* 2518 */,
    std::pair{ "sqrt"_h, &sqrt_Float32x4 } /* 2519 */,
    std::pair{ "sqrt"_h, &sqrt_Float16 } /* 2520 */,
    std::pair{ "sqrt"_h, &sqrt_Float16x2 } /* 2521 */,
    std::pair{ "sqrt"_h, &sqrt_Float16x3 } /* 2522 */,
    std::pair{ "sqrt"_h, &sqrt_Float16x4 } /* 2523 */,
    std::pair{ "ceil(f32)"_h, &ceil_Float32 } /* 2524 */,
    std::pair{ "u32x4(u32,u32x3)"_h, &UInt32x4_ctor6 } /* 2525 */,
    std::pair{ "textureAtomicMin(uniform *texture2DArray,i32x3,i32)"_h, &TextureAtomicMin_Texture2DArray_Int32 } /* 2526 */,
    std::pair{ "smoothstep(f32x4,f32x4,f32x4)"_h, &smoothstep_Float32x4 } /* 2527 */,
    std::pair{ "memoryBarrierAtomic"_h, &MemoryBarrierAtomic } /* 2528 */,
    std::pair{ "f16x3(u32x3)"_h, &Float16x3_from_UInt32x3 } /* 2529 */,
    std::pair{ "textureLoad"_h, &TextureLoad_Texture1D } /* 2530 */,
    std::pair{ "textureLoad"_h, &TextureLoad_Texture2D } /* 2531 */,
    std::pair{ "textureLoad"_h, &TextureLoad_Texture3D } /* 2532 */,
    std::pair{ "textureLoad"_h, &TextureLoad_TextureCube } /* 2533 */,
    std::pair{ "textureLoad"_h, &TextureLoad_Texture1DArray } /* 2534 */,
    std::pair{ "textureLoad"_h, &TextureLoad_Texture2DArray } /* 2535 */,
    std::pair{ "textureLoad"_h, &TextureLoad_TextureCubeArray } /* 2536 */,
    std::pair{ "textureLoad"_h, &TextureLoad_Texture2DMS } /* 2537 */,
    std::pair{ "textureLoad"_h, &TextureLoad_Texture2DMSArray } /* 2538 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(f16x4)"_h, &SubgroupBroadcastFirstActiveThread_Float16x4 } /* 2539 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(f16x2)"_h, &SubgroupBroadcastFirstActiveThread_Float16x2 } /* 2540 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(f16x3)"_h, &SubgroupBroadcastFirstActiveThread_Float16x3 } /* 2541 */,
    std::pair{ "f32x4x3(f32x3,f32x3,f32x3,f32x3)"_h, &Float32x4x3_Float32_3_ctor } /* 2542 */,
    std::pair{ "textureAtomicXor(uniform *texture2D,i32x2,u16)"_h, &TextureAtomicXor_Texture2D_UInt16 } /* 2543 */,
    std::pair{ "textureSampleCompare(uniform *texture1D,uniform *sampler,f32,f32)"_h, &TextureSampleCompare_Texture1D } /* 2544 */,
    std::pair{ "textureAtomicStore(uniform *texture2DArray,i32x3,f32)"_h, &TextureAtomicStore_Texture2DArray_Float32 } /* 2545 */,
    std::pair{ "textureAtomicXor(uniform *texture1DArray,i32x2,u32)"_h, &TextureAtomicXor_Texture1DArray_UInt32 } /* 2546 */,
    std::pair{ "textureAtomicLoad(uniform *texture2DArray,i32x3,u32)"_h, &TextureAtomicLoad_Texture2DArray_UInt32 } /* 2547 */,
    std::pair{ "pixelExportColor(u16x3,literal i16)"_h, &PixelExportColor_UInt16x3_Int16 } /* 2548 */,
    std::pair{ "u16x2(f16)"_h, &UInt16x2_splat_Float16 } /* 2549 */,
    std::pair{ "reflect(f16x3,f16x3)"_h, &reflect_Float16x3 } /* 2550 */,
    std::pair{ "castToU32"_h, &castToU32_Float32 } /* 2551 */,
    std::pair{ "castToU32"_h, &castToU32_Int32 } /* 2552 */,
    std::pair{ "castToU16"_h, &castToU16_Float16 } /* 2553 */,
    std::pair{ "castToU16"_h, &castToU16_Int16 } /* 2554 */,
    std::pair{ "f32x3(i16)"_h, &Float32x3_splat_Int16 } /* 2555 */,
    std::pair{ "distance(f16x3,f16x3)"_h, &distance_Float16x3 } /* 2556 */,
    std::pair{ "textureAtomicAnd(uniform *texture3D,i32x3,i16)"_h, &TextureAtomicAnd_Texture3D_Int16 } /* 2557 */,
    std::pair{ "pixelGetPrimitiveIndex"_h, &PixelGetPrimitiveIndex } /* 2558 */,
    std::pair{ "textureSampleCompareOffset(uniform *textureSampled3D,f32x3,f32,f32x3)"_h, &SampledTextureSampleCompareOffset_Texture3D } /* 2559 */,
    std::pair{ "textureSampleGradProjOffset(uniform *textureSampled2D,f32x2,f32x2,f32x2,f32,f32x2)"_h, &SampledTextureSampleGradProjOffset_Texture2D } /* 2560 */,
    std::pair{ "u32x2(u32,u32)"_h, &UInt32x2_ctor0 } /* 2561 */,
    std::pair{ "b8x3(i16x3)"_h, &Bool8x3_from_Int16x3 } /* 2562 */,
    std::pair{ "pixelSetDepth(f32)"_h, &PixelSetDepth } /* 2563 */,
    std::pair{ "textureAtomicExchange(uniform *textureCube,i32x3,u32)"_h, &TextureAtomicExchange_TextureCube_UInt32 } /* 2564 */,
    std::pair{ "textureAtomicOr(uniform *texture2DArray,i32x3,u32)"_h, &TextureAtomicOr_Texture2DArray_UInt32 } /* 2565 */,
    std::pair{ "textureSampleProjCompareOffset(uniform *texture1D,uniform *sampler,f32,f32,f32,f32)"_h, &TextureSampleProjCompareOffset_Texture1D } /* 2566 */,
    std::pair{ "textureSampleBias(uniform *textureSampled2DArray,f32x3,f32)"_h, &SampledTextureSampleBias_Texture2DArray } /* 2567 */,
    std::pair{ "u16x2(i32x2)"_h, &UInt16x2_from_Int32x2 } /* 2568 */,
    std::pair{ "textureAtomicExchange(uniform *texture2DArray,i32x3,u16)"_h, &TextureAtomicExchange_Texture2DArray_UInt16 } /* 2569 */,
    std::pair{ "textureSampleLod(uniform *textureSampled2D,f32x2,f32)"_h, &SampledTextureSampleLod_Texture2D } /* 2570 */,
    std::pair{ "textureLoad(uniform *mutable texture2DMS,i32x2)"_h, &TextureLoad_Texture2DMS } /* 2571 */,
    std::pair{ "pixelExportColor(i16,literal i32)"_h, &PixelExportColor_Int16_Int32 } /* 2572 */,
    std::pair{ "textureAtomicLoad(uniform *texture1D,i32,u16)"_h, &TextureAtomicLoad_Texture1D_UInt16 } /* 2573 */,
    std::pair{ "textureSampleLod"_h, &TextureSampleLod_Texture1D } /* 2574 */,
    std::pair{ "textureSampleLod"_h, &SampledTextureSampleLod_Texture1D } /* 2575 */,
    std::pair{ "textureSampleLod"_h, &TextureSampleLod_Texture2D } /* 2576 */,
    std::pair{ "textureSampleLod"_h, &SampledTextureSampleLod_Texture2D } /* 2577 */,
    std::pair{ "textureSampleLod"_h, &TextureSampleLod_Texture3D } /* 2578 */,
    std::pair{ "textureSampleLod"_h, &SampledTextureSampleLod_Texture3D } /* 2579 */,
    std::pair{ "textureSampleLod"_h, &TextureSampleLod_TextureCube } /* 2580 */,
    std::pair{ "textureSampleLod"_h, &SampledTextureSampleLod_TextureCube } /* 2581 */,
    std::pair{ "textureSampleLod"_h, &TextureSampleLod_Texture1DArray } /* 2582 */,
    std::pair{ "textureSampleLod"_h, &SampledTextureSampleLod_Texture1DArray } /* 2583 */,
    std::pair{ "textureSampleLod"_h, &TextureSampleLod_Texture2DArray } /* 2584 */,
    std::pair{ "textureSampleLod"_h, &SampledTextureSampleLod_Texture2DArray } /* 2585 */,
    std::pair{ "textureSampleLod"_h, &TextureSampleLod_TextureCubeArray } /* 2586 */,
    std::pair{ "textureSampleLod"_h, &SampledTextureSampleLod_TextureCubeArray } /* 2587 */,
    std::pair{ "atomicDecrement(*i32,literal MemorySemantics)"_h, &AtomicDecrement_Int32 } /* 2588 */,
    std::pair{ "distance(f32x4,f32x4)"_h, &distance_Float32x4 } /* 2589 */,
    std::pair{ "i16x2(i32x2)"_h, &Int16x2_from_Int32x2 } /* 2590 */,
    std::pair{ "i16x2(f32x2)"_h, &Int16x2_from_Float32x2 } /* 2591 */,
    std::pair{ "f16x2(b8)"_h, &Float16x2_splat_Bool8 } /* 2592 */,
    std::pair{ "textureSampleGrad(uniform *textureSampled2DArray,f32x3,f32x3,f32x3)"_h, &SampledTextureSampleGrad_Texture2DArray } /* 2593 */,
    std::pair{ "textureSampleBiasProjOffset"_h, &TextureSampleBiasProjOffset_Texture1D } /* 2594 */,
    std::pair{ "textureSampleBiasProjOffset"_h, &SampledTextureSampleBiasProjOffset_Texture1D } /* 2595 */,
    std::pair{ "textureSampleBiasProjOffset"_h, &TextureSampleBiasProjOffset_Texture2D } /* 2596 */,
    std::pair{ "textureSampleBiasProjOffset"_h, &SampledTextureSampleBiasProjOffset_Texture2D } /* 2597 */,
    std::pair{ "textureSampleBiasProjOffset"_h, &TextureSampleBiasProjOffset_Texture3D } /* 2598 */,
    std::pair{ "textureSampleBiasProjOffset"_h, &SampledTextureSampleBiasProjOffset_Texture3D } /* 2599 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture1D_UInt32 } /* 2600 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture1D_Int32 } /* 2601 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture1D_UInt16 } /* 2602 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture1D_Int16 } /* 2603 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture2D_UInt32 } /* 2604 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture2D_Int32 } /* 2605 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture2D_UInt16 } /* 2606 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture2D_Int16 } /* 2607 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture3D_UInt32 } /* 2608 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture3D_Int32 } /* 2609 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture3D_UInt16 } /* 2610 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture3D_Int16 } /* 2611 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_TextureCube_UInt32 } /* 2612 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_TextureCube_Int32 } /* 2613 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_TextureCube_UInt16 } /* 2614 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_TextureCube_Int16 } /* 2615 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture1DArray_UInt32 } /* 2616 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture1DArray_Int32 } /* 2617 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture1DArray_UInt16 } /* 2618 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture1DArray_Int16 } /* 2619 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture2DArray_UInt32 } /* 2620 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture2DArray_Int32 } /* 2621 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture2DArray_UInt16 } /* 2622 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_Texture2DArray_Int16 } /* 2623 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_TextureCubeArray_UInt32 } /* 2624 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_TextureCubeArray_Int32 } /* 2625 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_TextureCubeArray_UInt16 } /* 2626 */,
    std::pair{ "textureAtomicOr"_h, &TextureAtomicOr_TextureCubeArray_Int16 } /* 2627 */,
    std::pair{ "textureSampleLodProjCompareOffset(uniform *texture1D,uniform *sampler,f32,f32,f32,f32,f32)"_h, &TextureSampleLodProjCompareOffset_Texture1D } /* 2628 */,
    std::pair{ "textureSampleBiasProjCompare(uniform *texture2D,uniform *sampler,f32x2,f32,f32,f32)"_h, &TextureSampleBiasProjCompare_Texture2D } /* 2629 */,
    std::pair{ "f16(b8)"_h, &Float16_from_Bool8 } /* 2630 */,
    std::pair{ "geometryGetLine"_h, &GeometryGetLine } /* 2631 */,
    std::pair{ "textureSampleLodCompareOffset(uniform *texture1D,uniform *sampler,f32,f32,f32,f32)"_h, &TextureSampleLodCompareOffset_Texture1D } /* 2632 */,
    std::pair{ "castToI32(f32)"_h, &castToI32_Float32 } /* 2633 */,
    std::pair{ "distance(f32x2,f32x2)"_h, &distance_Float32x2 } /* 2634 */,
    std::pair{ "i32x4(i32)"_h, &Int32x4_splat_Int32 } /* 2635 */,
    std::pair{ "textureAtomicXor(uniform *texture2DArray,i32x3,u16)"_h, &TextureAtomicXor_Texture2DArray_UInt16 } /* 2636 */,
    std::pair{ "OutputTopology(u32)"_h, &OutputTopologyType.toUnderlyingType } /* 2637 */,
    std::pair{ "textureSampleGradCompareOffset(uniform *texture1DArray,uniform *sampler,f32x2,f32x2,f32x2,f32,f32x2)"_h, &TextureSampleGradCompareOffset_Texture1DArray } /* 2638 */,
    std::pair{ "f16x2(f16)"_h, &Float16x2_splat_Float16 } /* 2639 */,
    std::pair{ "textureGather"_h, &TextureGather_Texture2D } /* 2640 */,
    std::pair{ "textureGather"_h, &SampledTextureGather_Texture2D } /* 2641 */,
    std::pair{ "textureGather"_h, &TextureGather_TextureCube } /* 2642 */,
    std::pair{ "textureGather"_h, &SampledTextureGather_TextureCube } /* 2643 */,
    std::pair{ "textureGather"_h, &TextureGather_Texture2DArray } /* 2644 */,
    std::pair{ "textureGather"_h, &SampledTextureGather_Texture2DArray } /* 2645 */,
    std::pair{ "textureGather"_h, &TextureGather_TextureCubeArray } /* 2646 */,
    std::pair{ "textureGather"_h, &SampledTextureGather_TextureCubeArray } /* 2647 */,
    std::pair{ "textureSampleGradCompareOffset(uniform *textureSampled2D,f32x2,f32x2,f32x2,f32,f32x2)"_h, &SampledTextureSampleGradCompareOffset_Texture2D } /* 2648 */,
    std::pair{ "pixelExportColor(f32x3,literal i32)"_h, &PixelExportColor_Float32x3_Int32 } /* 2649 */,
    std::pair{ "textureAtomicAnd(uniform *texture1DArray,i32x2,i32)"_h, &TextureAtomicAnd_Texture1DArray_Int32 } /* 2650 */,
    std::pair{ "geometryGetTriangle()"_h, &GeometryGetTriangle } /* 2651 */,
    std::pair{ "min(u32x4,u32x4)"_h, &min_UInt32x4 } /* 2652 */,
    std::pair{ "textureAtomicMin(uniform *textureCube,i32x3,u16)"_h, &TextureAtomicMin_TextureCube_UInt16 } /* 2653 */,
    std::pair{ "pixelExportColor(i32x3,literal i32)"_h, &PixelExportColor_Int32x3_Int32 } /* 2654 */,
    std::pair{ "textureAtomicCompareExchange(uniform *textureCube,i32x3,i16)"_h, &TextureAtomicCompareExchange_TextureCube_Int16 } /* 2655 */,
    std::pair{ "ComputeDerivatives(u32)"_h, &ComputeDerivativesType.toUnderlyingType } /* 2656 */,
    std::pair{ "mad(i32x2,i32x2,i32x2)"_h, &mad_Int32x2 } /* 2657 */,
    std::pair{ "subgroupSwapDiagonal(u16x4)"_h, &SubgroupSwapDiagonal_UInt16x4 } /* 2658 */,
    std::pair{ "i32x4(b8)"_h, &Int32x4_splat_Bool8 } /* 2659 */,
    std::pair{ "subgroupSwapDiagonal(u16x2)"_h, &SubgroupSwapDiagonal_UInt16x2 } /* 2660 */,
    std::pair{ "subgroupSwapDiagonal(u16x3)"_h, &SubgroupSwapDiagonal_UInt16x3 } /* 2661 */,
    std::pair{ "textureAtomicExchange(uniform *texture2D,i32x2,f16)"_h, &TextureAtomicExchange_Texture2D_Float16 } /* 2662 */,
    std::pair{ "memoryBarrierAtomic()"_h, &MemoryBarrierAtomic } /* 2663 */,
    std::pair{ "textureSampleProjOffset(uniform *texture2D,uniform *sampler,f32x2,f32,f32x2)"_h, &TextureSampleProjOffset_Texture2D } /* 2664 */,
    std::pair{ "f32x2(f16)"_h, &Float32x2_splat_Float16 } /* 2665 */,
    std::pair{ "floor"_h, &floor_Float32 } /* 2666 */,
    std::pair{ "floor"_h, &floor_Float32x2 } /* 2667 */,
    std::pair{ "floor"_h, &floor_Float32x3 } /* 2668 */,
    std::pair{ "floor"_h, &floor_Float32x4 } /* 2669 */,
    std::pair{ "floor"_h, &floor_Float16 } /* 2670 */,
    std::pair{ "floor"_h, &floor_Float16x2 } /* 2671 */,
    std::pair{ "floor"_h, &floor_Float16x3 } /* 2672 */,
    std::pair{ "floor"_h, &floor_Float16x4 } /* 2673 */,
    std::pair{ "textureStoreMip(uniform *mutable texture2DArray,i32x3,i32,f32x4)"_h, &TextureStoreMip_Texture2DArray } /* 2674 */,
    std::pair{ "subgroupSwapVertical(i32)"_h, &SubgroupSwapVertical_Int32 } /* 2675 */,
    std::pair{ "log(f32)"_h, &log_Float32 } /* 2676 */,
    std::pair{ "castToF16(i16)"_h, &castToF16_Int16 } /* 2677 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture2DArray,i32x3,u32)"_h, &TextureAtomicCompareExchange_Texture2DArray_UInt32 } /* 2678 */,
    std::pair{ "textureAtomicStore(uniform *texture1D,i32,f32)"_h, &TextureAtomicStore_Texture1D_Float32 } /* 2679 */,
    std::pair{ "vertexExportCoordinates(f32x4)"_h, &VertexExportCoordinates_Float32x4 } /* 2680 */,
    std::pair{ "atan2(f32,f32)"_h, &atan2_Float32 } /* 2681 */,
    std::pair{ "textureSampled1DArray"_h, &SampledTexture1DArrayType } /* 2682 */,
    std::pair{ "i32(i16)"_h, &Int32_from_Int16 } /* 2683 */,
    std::pair{ "max(u32,u32)"_h, &max_UInt32 } /* 2684 */,
    std::pair{ "computeGetWorkGroupDimensions"_h, &ComputeGetWorkGroupDimensions } /* 2685 */,
    std::pair{ "reflect(f16x2,f16x2)"_h, &reflect_Float16x2 } /* 2686 */,
    std::pair{ "textureAtomicExchange(uniform *texture2D,i32x2,i32)"_h, &TextureAtomicExchange_Texture2D_Int32 } /* 2687 */,
    std::pair{ "exp2(f32)"_h, &exp2_Float32 } /* 2688 */,
    std::pair{ "memoryBarrierBuffer"_h, &MemoryBarrierBuffer } /* 2689 */,
    std::pair{ "subgroupSwapDiagonal(u32)"_h, &SubgroupSwapDiagonal_UInt32 } /* 2690 */,
    std::pair{ "any(b8)"_h, &any_Bool8 } /* 2691 */,
    std::pair{ "textureAtomicExchange(uniform *texture1DArray,i32x2,u32)"_h, &TextureAtomicExchange_Texture1DArray_UInt32 } /* 2692 */,
    std::pair{ "mad(u32x4,u32x4,u32x4)"_h, &mad_UInt32x4 } /* 2693 */,
    std::pair{ "textureSampled2DMS"_h, &SampledTexture2DMSType } /* 2694 */,
    std::pair{ "i16x4(i16x4)"_h, &Int16x4_from_Int16x4 } /* 2695 */,
    std::pair{ "i16x3(i16,i16,i16)"_h, &Int16x3_ctor0 } /* 2696 */,
    std::pair{ "atanh(f32x2)"_h, &atanh_Float32x2 } /* 2697 */,
    std::pair{ "atanh(f32x3)"_h, &atanh_Float32x3 } /* 2698 */,
    std::pair{ "max(f32x2,f32x2)"_h, &max_Float32x2 } /* 2699 */,
    std::pair{ "atanh(f32x4)"_h, &atanh_Float32x4 } /* 2700 */,
    std::pair{ "f16x4x4(f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16)"_h, &Float16x4x4_raw_list } /* 2701 */,
    std::pair{ "textureSampleLodProjOffset"_h, &TextureSampleLodProjOffset_Texture1D } /* 2702 */,
    std::pair{ "textureSampleLodProjOffset"_h, &SampledTextureSampleLodProjOffset_Texture1D } /* 2703 */,
    std::pair{ "textureSampleLodProjOffset"_h, &TextureSampleLodProjOffset_Texture2D } /* 2704 */,
    std::pair{ "textureSampleLodProjOffset"_h, &SampledTextureSampleLodProjOffset_Texture2D } /* 2705 */,
    std::pair{ "textureSampleLodProjOffset"_h, &TextureSampleLodProjOffset_Texture3D } /* 2706 */,
    std::pair{ "textureSampleLodProjOffset"_h, &SampledTextureSampleLodProjOffset_Texture3D } /* 2707 */,
    std::pair{ "castToI32(u32)"_h, &castToI32_UInt32 } /* 2708 */,
    std::pair{ "textureSampleLod(uniform *textureCube,uniform *sampler,f32x3,f32)"_h, &TextureSampleLod_TextureCube } /* 2709 */,
    std::pair{ "atomicAdd"_h, &AtomicAdd_UInt32 } /* 2710 */,
    std::pair{ "atomicAdd"_h, &AtomicAdd_Int32 } /* 2711 */,
    std::pair{ "atomicAdd"_h, &AtomicAdd_UInt16 } /* 2712 */,
    std::pair{ "atomicAdd"_h, &AtomicAdd_Int16 } /* 2713 */,
    std::pair{ "textureAtomicLoad(uniform *texture2D,i32x2,f16)"_h, &TextureAtomicLoad_Texture2D_Float16 } /* 2714 */,
    std::pair{ "atomicAnd"_h, &AtomicAnd_UInt32 } /* 2715 */,
    std::pair{ "atomicAnd"_h, &AtomicAnd_Int32 } /* 2716 */,
    std::pair{ "atomicAnd"_h, &AtomicAnd_UInt16 } /* 2717 */,
    std::pair{ "atomicAnd"_h, &AtomicAnd_Int16 } /* 2718 */,
    std::pair{ "f16x3x3(f16x3,f16x3,f16x3)"_h, &Float16x3x3_Float16_3_ctor } /* 2719 */,
    std::pair{ "u16x3(f32x3)"_h, &UInt16x3_from_Float32x3 } /* 2720 */,
    std::pair{ "mad(f16,f16,f16)"_h, &mad_Float16 } /* 2721 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Float32 } /* 2722 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Float32x2 } /* 2723 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Float32x3 } /* 2724 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Float32x4 } /* 2725 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Float16 } /* 2726 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Float16x2 } /* 2727 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Float16x3 } /* 2728 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Float16x4 } /* 2729 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Int32 } /* 2730 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Int32x2 } /* 2731 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Int32x3 } /* 2732 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Int32x4 } /* 2733 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Int16 } /* 2734 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Int16x2 } /* 2735 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Int16x3 } /* 2736 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_Int16x4 } /* 2737 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_UInt32 } /* 2738 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_UInt32x2 } /* 2739 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_UInt32x3 } /* 2740 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_UInt32x4 } /* 2741 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_UInt16 } /* 2742 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_UInt16x2 } /* 2743 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_UInt16x3 } /* 2744 */,
    std::pair{ "subgroupSwapHorizontal"_h, &SubgroupSwapHorizontal_UInt16x4 } /* 2745 */,
    std::pair{ "textureGetSizeMip"_h, &TextureGetSizeMip_Texture1D } /* 2746 */,
    std::pair{ "textureGetSizeMip"_h, &TextureGetSizeMip_Texture2D } /* 2747 */,
    std::pair{ "textureGetSizeMip"_h, &TextureGetSizeMip_Texture3D } /* 2748 */,
    std::pair{ "textureGetSizeMip"_h, &TextureGetSizeMip_TextureCube } /* 2749 */,
    std::pair{ "textureGetSizeMip"_h, &TextureGetSizeMip_Texture1DArray } /* 2750 */,
    std::pair{ "textureGetSizeMip"_h, &TextureGetSizeMip_Texture2DArray } /* 2751 */,
    std::pair{ "textureGetSizeMip"_h, &TextureGetSizeMip_TextureCubeArray } /* 2752 */,
    std::pair{ "mad(i32x4,i32x4,i32x4)"_h, &mad_Int32x4 } /* 2753 */,
    std::pair{ "CullFace(u32)"_h, &CullFaceType.toUnderlyingType } /* 2754 */,
    std::pair{ "b8x4(b8x2,b8x2)"_h, &Bool8x4_ctor4 } /* 2755 */,
    std::pair{ "u32x4(f32x4)"_h, &UInt32x4_from_Float32x4 } /* 2756 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture1D,i32,u32)"_h, &TextureAtomicCompareExchange_Texture1D_UInt32 } /* 2757 */,
    std::pair{ "textureSampleGradCompareOffset(uniform *texture3D,uniform *sampler,f32x3,f32x3,f32x3,f32,f32x3)"_h, &TextureSampleGradCompareOffset_Texture3D } /* 2758 */,
    std::pair{ "textureGetMips(uniform *textureCube)"_h, &TextureGetMips_TextureCube } /* 2759 */,
    std::pair{ "MemorySemantics"_h, &MemorySemanticsType } /* 2760 */,
    std::pair{ "transpose(f32x2x3)"_h, &transpose_Float32x2x3 } /* 2761 */,
    std::pair{ "transpose(f32x2x2)"_h, &transpose_Float32x2x2 } /* 2762 */,
    std::pair{ "textureSampleLodOffset(uniform *texture1DArray,uniform *sampler,f32x2,f32,f32x2)"_h, &TextureSampleLodOffset_Texture1DArray } /* 2763 */,
    std::pair{ "transpose(f32x2x4)"_h, &transpose_Float32x2x4 } /* 2764 */,
    std::pair{ "f16x2x3(f16,f16,f16,f16,f16,f16)"_h, &Float16x2x3_raw_list } /* 2765 */,
    std::pair{ "textureAtomicStore(uniform *texture1DArray,i32x2,f16)"_h, &TextureAtomicStore_Texture1DArray_Float16 } /* 2766 */,
    std::pair{ "max(i32,i32)"_h, &max_Int32 } /* 2767 */,
    std::pair{ "b8x2(i16)"_h, &Bool8x2_splat_Int16 } /* 2768 */,
    std::pair{ "textureAtomicMin(uniform *texture2DArray,i32x3,i16)"_h, &TextureAtomicMin_Texture2DArray_Int16 } /* 2769 */,
    std::pair{ "i16x2(i16)"_h, &Int16x2_splat_Int16 } /* 2770 */,
    std::pair{ "textureSampleLod(uniform *texture2DArray,uniform *sampler,f32x3,f32)"_h, &TextureSampleLod_Texture2DArray } /* 2771 */,
    std::pair{ "pixelSetDepth"_h, &PixelSetDepth } /* 2772 */,
    std::pair{ "pixelExportColor(f32x4,literal i16)"_h, &PixelExportColor_Float32x4_Int16 } /* 2773 */,
    std::pair{ "textureAtomicLoad(uniform *textureCube,i32x3,f16)"_h, &TextureAtomicLoad_TextureCube_Float16 } /* 2774 */,
    std::pair{ "u16x2(b8x2)"_h, &UInt16x2_from_Bool8x2 } /* 2775 */,
    std::pair{ "u32(CompareMode)"_h, &CompareModeType.fromUnderlyingType } /* 2776 */,
    std::pair{ "textureSampleGradOffset(uniform *textureSampled2D,f32x2,f32x2,f32x2,f32x2)"_h, &SampledTextureSampleGradOffset_Texture2D } /* 2777 */,
    std::pair{ "f16(f32)"_h, &Float16_from_Float32 } /* 2778 */,
    std::pair{ "f16x4(i32x4)"_h, &Float16x4_from_Int32x4 } /* 2779 */,
    std::pair{ "textureAtomicStore(uniform *texture2DArray,i32x3,f16)"_h, &TextureAtomicStore_Texture2DArray_Float16 } /* 2780 */,
    std::pair{ "ceil(f16)"_h, &ceil_Float16 } /* 2781 */,
    std::pair{ "pixelExportColor(u16x3,literal i32)"_h, &PixelExportColor_UInt16x3_Int32 } /* 2782 */,
    std::pair{ "textureSampleLodProjCompare"_h, &TextureSampleLodProjCompare_Texture1D } /* 2783 */,
    std::pair{ "textureSampleLodProjCompare"_h, &SampledTextureSampleLodProjCompare_Texture1D } /* 2784 */,
    std::pair{ "textureSampleLodProjCompare"_h, &TextureSampleLodProjCompare_Texture2D } /* 2785 */,
    std::pair{ "textureSampleLodProjCompare"_h, &SampledTextureSampleLodProjCompare_Texture2D } /* 2786 */,
    std::pair{ "textureSampleLodProjCompare"_h, &TextureSampleLodProjCompare_Texture3D } /* 2787 */,
    std::pair{ "textureSampleLodProjCompare"_h, &SampledTextureSampleLodProjCompare_Texture3D } /* 2788 */,
    std::pair{ "subgroupBallotLastOne(u32x4)"_h, &SubgroupBallotLastOne } /* 2789 */,
    std::pair{ "f16x4x4(f16x4,f16x4,f16x4,f16x4)"_h, &Float16x4x4_Float16_4_ctor } /* 2790 */,
    std::pair{ "textureSampleGrad(uniform *textureSampled1D,f32,f32,f32)"_h, &SampledTextureSampleGrad_Texture1D } /* 2791 */,
    std::pair{ "mad(u16x2,u16x2,u16x2)"_h, &mad_UInt16x2 } /* 2792 */,
    std::pair{ "textureSampleGrad(uniform *textureSampled1DArray,f32x2,f32x2,f32x2)"_h, &SampledTextureSampleGrad_Texture1DArray } /* 2793 */,
    std::pair{ "textureAtomicLoad(uniform *textureCubeArray,i32x4,u16)"_h, &TextureAtomicLoad_TextureCubeArray_UInt16 } /* 2794 */,
    std::pair{ "textureAtomicAdd(uniform *texture1DArray,i32x2,u32)"_h, &TextureAtomicAdd_Texture1DArray_UInt32 } /* 2795 */,
    std::pair{ "mad(i16x3,i16x3,i16x3)"_h, &mad_Int16x3 } /* 2796 */,
    std::pair{ "floor(f32x2)"_h, &floor_Float32x2 } /* 2797 */,
    std::pair{ "floor(f32x3)"_h, &floor_Float32x3 } /* 2798 */,
    std::pair{ "floor(f32x4)"_h, &floor_Float32x4 } /* 2799 */,
    std::pair{ "mad(f32x4,f32x4,f32x4)"_h, &mad_Float32x4 } /* 2800 */,
    std::pair{ "textureSampleProjOffset(uniform *texture1D,uniform *sampler,f32,f32,f32)"_h, &TextureSampleProjOffset_Texture1D } /* 2801 */,
    std::pair{ "textureSampleLodOffset(uniform *textureSampled1DArray,f32x2,f32,f32x2)"_h, &SampledTextureSampleLodOffset_Texture1DArray } /* 2802 */,
    std::pair{ "textureGetSampledMip(uniform *texture2D,uniform *sampler,f32x2)"_h, &TextureGetSampledMip_Texture2D } /* 2803 */,
    std::pair{ "subgroupSwapDiagonal(f16x4)"_h, &SubgroupSwapDiagonal_Float16x4 } /* 2804 */,
    std::pair{ "subgroupSwapDiagonal(f16x3)"_h, &SubgroupSwapDiagonal_Float16x3 } /* 2805 */,
    std::pair{ "subgroupSwapDiagonal(f16x2)"_h, &SubgroupSwapDiagonal_Float16x2 } /* 2806 */,
    std::pair{ "textureAtomicExchange(uniform *textureCubeArray,i32x4,u16)"_h, &TextureAtomicExchange_TextureCubeArray_UInt16 } /* 2807 */,
    std::pair{ "i16x3(u16)"_h, &Int16x3_splat_UInt16 } /* 2808 */,
    std::pair{ "textureAtomicAnd(uniform *texture3D,i32x3,i32)"_h, &TextureAtomicAnd_Texture3D_Int32 } /* 2809 */,
    std::pair{ "textureGetSize(uniform *texture1DArray)"_h, &TextureGetSize_Texture1DArray } /* 2810 */,
    std::pair{ "f16x2(i32x2)"_h, &Float16x2_from_Int32x2 } /* 2811 */,
    std::pair{ "u16x3(u16,u16,u16)"_h, &UInt16x3_ctor0 } /* 2812 */,
    std::pair{ "hullGetPrimitiveIndex"_h, &HullGetPrimitiveIndex } /* 2813 */,
    std::pair{ "textureSampleBiasOffset(uniform *texture3D,uniform *sampler,f32x3,f32,f32x3)"_h, &TextureSampleBiasOffset_Texture3D } /* 2814 */,
    std::pair{ "textureAtomicExchange(uniform *texture2DArray,i32x3,u32)"_h, &TextureAtomicExchange_Texture2DArray_UInt32 } /* 2815 */,
    std::pair{ "textureSampleGradProjCompareOffset"_h, &TextureSampleGradProjCompareOffset_Texture1D } /* 2816 */,
    std::pair{ "textureSampleGradProjCompareOffset"_h, &SampledTextureSampleGradProjCompareOffset_Texture1D } /* 2817 */,
    std::pair{ "textureSampleGradProjCompareOffset"_h, &TextureSampleGradProjCompareOffset_Texture2D } /* 2818 */,
    std::pair{ "textureSampleGradProjCompareOffset"_h, &SampledTextureSampleGradProjCompareOffset_Texture2D } /* 2819 */,
    std::pair{ "textureSampleGradProjCompareOffset"_h, &TextureSampleGradProjCompareOffset_Texture3D } /* 2820 */,
    std::pair{ "textureSampleGradProjCompareOffset"_h, &SampledTextureSampleGradProjCompareOffset_Texture3D } /* 2821 */,
    std::pair{ "textureSampleCompareOffset(uniform *textureSampled1D,f32,f32,f32)"_h, &SampledTextureSampleCompareOffset_Texture1D } /* 2822 */,
    std::pair{ "pixelExportColor(u16x4,literal u16)"_h, &PixelExportColor_UInt16x4_UInt16 } /* 2823 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture3D,i32x3,u16)"_h, &TextureAtomicCompareExchange_Texture3D_UInt16 } /* 2824 */,
    std::pair{ "min(u16x4,u16x4)"_h, &min_UInt16x4 } /* 2825 */,
    std::pair{ "textureSampleBiasCompareOffset(uniform *textureSampled2D,f32x2,f32,f32,f32x2)"_h, &SampledTextureSampleBiasCompareOffset_Texture2D } /* 2826 */,
    std::pair{ "vertexExportCoordinates(f16x4)"_h, &VertexExportCoordinates_Float16x4 } /* 2827 */,
    std::pair{ "f16x4x2"_h, &Float16x4x2Type } /* 2828 */,
    std::pair{ "f16x4x2"_h, &Float16x4x2_Float16_2_ctor } /* 2829 */,
    std::pair{ "f16x4x2"_h, &Float16x4x2_raw_list } /* 2830 */,
    std::pair{ "f16x4x3"_h, &Float16x4x3Type } /* 2831 */,
    std::pair{ "f16x4x3"_h, &Float16x4x3_Float16_3_ctor } /* 2832 */,
    std::pair{ "f16x4x3"_h, &Float16x4x3_raw_list } /* 2833 */,
    std::pair{ "f16x4x4"_h, &Float16x4x4Type } /* 2834 */,
    std::pair{ "f16x4x4"_h, &Float16x4x4_Float16_4_ctor } /* 2835 */,
    std::pair{ "f16x4x4"_h, &Float16x4x4_identity } /* 2836 */,
    std::pair{ "f16x4x4"_h, &Float16x4x4_raw_list } /* 2837 */,
    std::pair{ "lerp(f32x2,f32x2,f32x2)"_h, &lerp_Float32x2 } /* 2838 */,
    std::pair{ "sqrt(f16x4)"_h, &sqrt_Float16x4 } /* 2839 */,
    std::pair{ "sqrt(f16x2)"_h, &sqrt_Float16x2 } /* 2840 */,
    std::pair{ "sqrt(f16x3)"_h, &sqrt_Float16x3 } /* 2841 */,
    std::pair{ "textureAtomicAnd(uniform *texture2D,i32x2,i32)"_h, &TextureAtomicAnd_Texture2D_Int32 } /* 2842 */,
    std::pair{ "f16x2(i16x2)"_h, &Float16x2_from_Int16x2 } /* 2843 */,
    std::pair{ "textureSampleLodOffset(uniform *texture2DArray,uniform *sampler,f32x3,f32,f32x3)"_h, &TextureSampleLodOffset_Texture2DArray } /* 2844 */,
    std::pair{ "step"_h, &step_Float32 } /* 2845 */,
    std::pair{ "step"_h, &step_Float32x2 } /* 2846 */,
    std::pair{ "step"_h, &step_Float32x3 } /* 2847 */,
    std::pair{ "step"_h, &step_Float32x4 } /* 2848 */,
    std::pair{ "step"_h, &step_Float16 } /* 2849 */,
    std::pair{ "step"_h, &step_Float16x2 } /* 2850 */,
    std::pair{ "step"_h, &step_Float16x3 } /* 2851 */,
    std::pair{ "step"_h, &step_Float16x4 } /* 2852 */,
    std::pair{ "u16x3(b8)"_h, &UInt16x3_splat_Bool8 } /* 2853 */,
    std::pair{ "subgroupSwapHorizontal(i16)"_h, &SubgroupSwapHorizontal_Int16 } /* 2854 */,
    std::pair{ "textureAtomicMin(uniform *textureCube,i32x3,u32)"_h, &TextureAtomicMin_TextureCube_UInt32 } /* 2855 */,
    std::pair{ "pixelExportColor(i32x3,literal i16)"_h, &PixelExportColor_Int32x3_Int16 } /* 2856 */,
    std::pair{ "subgroupSwapVertical(i16x3)"_h, &SubgroupSwapVertical_Int16x3 } /* 2857 */,
    std::pair{ "subgroupSwapVertical(i16x2)"_h, &SubgroupSwapVertical_Int16x2 } /* 2858 */,
    std::pair{ "subgroupSwapVertical(i16x4)"_h, &SubgroupSwapVertical_Int16x4 } /* 2859 */,
    std::pair{ "i32x4(i16)"_h, &Int32x4_splat_Int16 } /* 2860 */,
    std::pair{ "textureSampleProj(uniform *textureSampled2D,f32x2,f32)"_h, &SampledTextureSampleProj_Texture2D } /* 2861 */,
    std::pair{ "textureSampleProjCompareOffset(uniform *texture2D,uniform *sampler,f32x2,f32,f32,f32x2)"_h, &TextureSampleProjCompareOffset_Texture2D } /* 2862 */,
    std::pair{ "lerp(f32x3,f32x3,f32x3)"_h, &lerp_Float32x3 } /* 2863 */,
    std::pair{ "exp(f16x4)"_h, &exp_Float16x4 } /* 2864 */,
    std::pair{ "exp(f16x3)"_h, &exp_Float16x3 } /* 2865 */,
    std::pair{ "textureAtomicExchange(uniform *texture2D,i32x2,f32)"_h, &TextureAtomicExchange_Texture2D_Float32 } /* 2866 */,
    std::pair{ "exp(f16x2)"_h, &exp_Float16x2 } /* 2867 */,
    std::pair{ "textureSampleGradProjCompare(uniform *texture3D,uniform *sampler,f32x3,f32x3,f32x3,f32,f32)"_h, &TextureSampleGradProjCompare_Texture3D } /* 2868 */,
    std::pair{ "textureSampleBias(uniform *texture2DArray,uniform *sampler,f32x3,f32)"_h, &TextureSampleBias_Texture2DArray } /* 2869 */,
    std::pair{ "textureAtomicStore(uniform *texture3D,i32x3,i16)"_h, &TextureAtomicStore_Texture3D_Int16 } /* 2870 */,
    std::pair{ "clamp(u32,u32,u32)"_h, &clamp_UInt32 } /* 2871 */,
    std::pair{ "pixelExportColor(f32x3,literal i16)"_h, &PixelExportColor_Float32x3_Int16 } /* 2872 */,
    std::pair{ "subgroupSwapVertical(i16)"_h, &SubgroupSwapVertical_Int16 } /* 2873 */,
    std::pair{ "WindingOrder(u32)"_h, &WindingOrderType.toUnderlyingType } /* 2874 */,
    std::pair{ "atan2(f16x4,f16x4)"_h, &atan2_Float16x4 } /* 2875 */,
    std::pair{ "abs(i16x4)"_h, &abs_Int16x4 } /* 2876 */,
    std::pair{ "abs(i16x3)"_h, &abs_Int16x3 } /* 2877 */,
    std::pair{ "abs(i16x2)"_h, &abs_Int16x2 } /* 2878 */,
    std::pair{ "f32x4(u16x4)"_h, &Float32x4_from_UInt16x4 } /* 2879 */,
    std::pair{ "textureAtomicAnd(uniform *texture1D,i32,u32)"_h, &TextureAtomicAnd_Texture1D_UInt32 } /* 2880 */,
    std::pair{ "textureSampleGradProj(uniform *textureSampled1D,f32,f32,f32,f32)"_h, &SampledTextureSampleGradProj_Texture1D } /* 2881 */,
    std::pair{ "i32x2(b8)"_h, &Int32x2_splat_Bool8 } /* 2882 */,
    std::pair{ "textureGetSamples(uniform *texture2DMS)"_h, &TextureGetSamples_Texture2DMS } /* 2883 */,
    std::pair{ "f32x2(f32)"_h, &Float32x2_splat_Float32 } /* 2884 */,
    std::pair{ "textureSampleLodCompareOffset(uniform *texture2D,uniform *sampler,f32x2,f32,f32,f32x2)"_h, &TextureSampleLodCompareOffset_Texture2D } /* 2885 */,
    std::pair{ "log(f16)"_h, &log_Float16 } /* 2886 */,
    std::pair{ "pow(f32,f32)"_h, &pow_Float32 } /* 2887 */,
    std::pair{ "f32x4x3(f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32,f32)"_h, &Float32x4x3_raw_list } /* 2888 */,
    std::pair{ "u32x2(b8x2)"_h, &UInt32x2_from_Bool8x2 } /* 2889 */,
    std::pair{ "vertexGetDrawIndex()"_h, &VertexGetDrawIndex } /* 2890 */,
    std::pair{ "f32x3(u32x3)"_h, &Float32x3_from_UInt32x3 } /* 2891 */,
    std::pair{ "clamp(i32,i32,i32)"_h, &clamp_Int32 } /* 2892 */,
    std::pair{ "f32x4(b8)"_h, &Float32x4_splat_Bool8 } /* 2893 */,
    std::pair{ "i16x4(i16,i16x3)"_h, &Int16x4_ctor6 } /* 2894 */,
    std::pair{ "cosh(f32x4)"_h, &cosh_Float32x4 } /* 2895 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(i32x4)"_h, &SubgroupBroadcastFirstActiveThread_Int32x4 } /* 2896 */,
    std::pair{ "textureAtomicStore(uniform *texture1D,i32,f16)"_h, &TextureAtomicStore_Texture1D_Float16 } /* 2897 */,
    std::pair{ "textureAtomicMin(uniform *texture1D,i32,i16)"_h, &TextureAtomicMin_Texture1D_Int16 } /* 2898 */,
    std::pair{ "cosh(f32x3)"_h, &cosh_Float32x3 } /* 2899 */,
    std::pair{ "cosh(f32x2)"_h, &cosh_Float32x2 } /* 2900 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(i32x3)"_h, &SubgroupBroadcastFirstActiveThread_Int32x3 } /* 2901 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(i32x2)"_h, &SubgroupBroadcastFirstActiveThread_Int32x2 } /* 2902 */,
    std::pair{ "castToI16(f16)"_h, &castToI16_Float16 } /* 2903 */,
    std::pair{ "textureFetchSample(uniform *texture2DMS,i32x2,u32,u32)"_h, &TextureFetchSample_Texture2DMS } /* 2904 */,
    std::pair{ "textureAtomicAdd(uniform *texture2DArray,i32x3,u16)"_h, &TextureAtomicAdd_Texture2DArray_UInt16 } /* 2905 */,
    std::pair{ "subgroupGetThreadAndGreaterMask()"_h, &SubgroupGetThreadAndGreaterMask } /* 2906 */,
    std::pair{ "step(f16,f16)"_h, &step_Float16 } /* 2907 */,
    std::pair{ "atomicAdd(*i32,i32,literal MemorySemantics)"_h, &AtomicAdd_Int32 } /* 2908 */,
    std::pair{ "i16x3"_h, &Int16x3Type } /* 2909 */,
    std::pair{ "i16x3"_h, &Int16x3_from_Float32x3 } /* 2910 */,
    std::pair{ "i16x3"_h, &Int16x3_splat_Float32 } /* 2911 */,
    std::pair{ "i16x3"_h, &Int16x3_from_UInt32x3 } /* 2912 */,
    std::pair{ "i16x3"_h, &Int16x3_splat_UInt32 } /* 2913 */,
    std::pair{ "i16x3"_h, &Int16x3_from_Int32x3 } /* 2914 */,
    std::pair{ "i16x3"_h, &Int16x3_splat_Int32 } /* 2915 */,
    std::pair{ "i16x3"_h, &Int16x3_from_Bool8x3 } /* 2916 */,
    std::pair{ "i16x3"_h, &Int16x3_splat_Bool8 } /* 2917 */,
    std::pair{ "i16x3"_h, &Int16x3_from_Float16x3 } /* 2918 */,
    std::pair{ "i16x3"_h, &Int16x3_splat_Float16 } /* 2919 */,
    std::pair{ "i16x3"_h, &Int16x3_from_UInt16x3 } /* 2920 */,
    std::pair{ "i16x3"_h, &Int16x3_splat_UInt16 } /* 2921 */,
    std::pair{ "i16x3"_h, &Int16x3_from_Int16x3 } /* 2922 */,
    std::pair{ "i16x3"_h, &Int16x3_splat_Int16 } /* 2923 */,
    std::pair{ "i16x3"_h, &Int16x3_ctor0 } /* 2924 */,
    std::pair{ "i16x3"_h, &Int16x3_ctor1 } /* 2925 */,
    std::pair{ "i16x3"_h, &Int16x3_ctor2 } /* 2926 */,
    std::pair{ "i16x2"_h, &Int16x2Type } /* 2927 */,
    std::pair{ "i16x2"_h, &Int16x2_from_Float32x2 } /* 2928 */,
    std::pair{ "i16x2"_h, &Int16x2_splat_Float32 } /* 2929 */,
    std::pair{ "i16x2"_h, &Int16x2_from_UInt32x2 } /* 2930 */,
    std::pair{ "i16x2"_h, &Int16x2_splat_UInt32 } /* 2931 */,
    std::pair{ "i16x2"_h, &Int16x2_from_Int32x2 } /* 2932 */,
    std::pair{ "i16x2"_h, &Int16x2_splat_Int32 } /* 2933 */,
    std::pair{ "i16x2"_h, &Int16x2_from_Bool8x2 } /* 2934 */,
    std::pair{ "i16x2"_h, &Int16x2_splat_Bool8 } /* 2935 */,
    std::pair{ "i16x2"_h, &Int16x2_from_Float16x2 } /* 2936 */,
    std::pair{ "i16x2"_h, &Int16x2_splat_Float16 } /* 2937 */,
    std::pair{ "i16x2"_h, &Int16x2_from_UInt16x2 } /* 2938 */,
    std::pair{ "i16x2"_h, &Int16x2_splat_UInt16 } /* 2939 */,
    std::pair{ "i16x2"_h, &Int16x2_from_Int16x2 } /* 2940 */,
    std::pair{ "i16x2"_h, &Int16x2_splat_Int16 } /* 2941 */,
    std::pair{ "i16x2"_h, &Int16x2_ctor0 } /* 2942 */,
    std::pair{ "i16x4"_h, &Int16x4Type } /* 2943 */,
    std::pair{ "i16x4"_h, &Int16x4_from_Float32x4 } /* 2944 */,
    std::pair{ "i16x4"_h, &Int16x4_splat_Float32 } /* 2945 */,
    std::pair{ "i16x4"_h, &Int16x4_from_UInt32x4 } /* 2946 */,
    std::pair{ "i16x4"_h, &Int16x4_splat_UInt32 } /* 2947 */,
    std::pair{ "i16x4"_h, &Int16x4_from_Int32x4 } /* 2948 */,
    std::pair{ "i16x4"_h, &Int16x4_splat_Int32 } /* 2949 */,
    std::pair{ "i16x4"_h, &Int16x4_from_Bool8x4 } /* 2950 */,
    std::pair{ "i16x4"_h, &Int16x4_splat_Bool8 } /* 2951 */,
    std::pair{ "i16x4"_h, &Int16x4_from_Float16x4 } /* 2952 */,
    std::pair{ "i16x4"_h, &Int16x4_splat_Float16 } /* 2953 */,
    std::pair{ "i16x4"_h, &Int16x4_from_UInt16x4 } /* 2954 */,
    std::pair{ "i16x4"_h, &Int16x4_splat_UInt16 } /* 2955 */,
    std::pair{ "i16x4"_h, &Int16x4_from_Int16x4 } /* 2956 */,
    std::pair{ "i16x4"_h, &Int16x4_splat_Int16 } /* 2957 */,
    std::pair{ "i16x4"_h, &Int16x4_ctor0 } /* 2958 */,
    std::pair{ "i16x4"_h, &Int16x4_ctor1 } /* 2959 */,
    std::pair{ "i16x4"_h, &Int16x4_ctor2 } /* 2960 */,
    std::pair{ "i16x4"_h, &Int16x4_ctor3 } /* 2961 */,
    std::pair{ "i16x4"_h, &Int16x4_ctor4 } /* 2962 */,
    std::pair{ "i16x4"_h, &Int16x4_ctor5 } /* 2963 */,
    std::pair{ "i16x4"_h, &Int16x4_ctor6 } /* 2964 */,
    std::pair{ "textureSampleCompareOffset(uniform *texture2DArray,uniform *sampler,f32x3,f32,f32x3)"_h, &TextureSampleCompareOffset_Texture2DArray } /* 2965 */,
    std::pair{ "b8(i16)"_h, &Bool8_from_Int16 } /* 2966 */,
    std::pair{ "sign(i32)"_h, &sign_Int32 } /* 2967 */,
    std::pair{ "textureSampleLodProj(uniform *textureSampled1D,f32,f32,f32)"_h, &SampledTextureSampleLodProj_Texture1D } /* 2968 */,
    std::pair{ "textureAtomicSubtract(uniform *texture2DArray,i32x3,u16)"_h, &TextureAtomicSubtract_Texture2DArray_UInt16 } /* 2969 */,
    std::pair{ "f16x3(f16,f16,f16)"_h, &Float16x3_ctor0 } /* 2970 */,
    std::pair{ "clamp(f16,f16,f16)"_h, &clamp_Float16 } /* 2971 */,
    std::pair{ "atanh"_h, &atanh_Float32 } /* 2972 */,
    std::pair{ "atanh"_h, &atanh_Float32x2 } /* 2973 */,
    std::pair{ "atanh"_h, &atanh_Float32x3 } /* 2974 */,
    std::pair{ "atanh"_h, &atanh_Float32x4 } /* 2975 */,
    std::pair{ "atanh"_h, &atanh_Float16 } /* 2976 */,
    std::pair{ "atanh"_h, &atanh_Float16x2 } /* 2977 */,
    std::pair{ "atanh"_h, &atanh_Float16x3 } /* 2978 */,
    std::pair{ "atanh"_h, &atanh_Float16x4 } /* 2979 */,
    std::pair{ "atan2"_h, &atan2_Float32 } /* 2980 */,
    std::pair{ "atan2"_h, &atan2_Float32x2 } /* 2981 */,
    std::pair{ "atan2"_h, &atan2_Float32x3 } /* 2982 */,
    std::pair{ "atan2"_h, &atan2_Float32x4 } /* 2983 */,
    std::pair{ "atan2"_h, &atan2_Float16 } /* 2984 */,
    std::pair{ "atan2"_h, &atan2_Float16x2 } /* 2985 */,
    std::pair{ "atan2"_h, &atan2_Float16x3 } /* 2986 */,
    std::pair{ "atan2"_h, &atan2_Float16x4 } /* 2987 */,
    std::pair{ "subgroupSwapDiagonal(u16)"_h, &SubgroupSwapDiagonal_UInt16 } /* 2988 */,
    std::pair{ "executionBarrier"_h, &ExecutionBarrier } /* 2989 */,
    std::pair{ "atomicExchange"_h, &AtomicExchange_UInt32 } /* 2990 */,
    std::pair{ "atomicExchange"_h, &AtomicExchange_Int32 } /* 2991 */,
    std::pair{ "atomicExchange"_h, &AtomicExchange_UInt16 } /* 2992 */,
    std::pair{ "atomicExchange"_h, &AtomicExchange_Int16 } /* 2993 */,
    std::pair{ "atomicExchange"_h, &AtomicExchange_Float32 } /* 2994 */,
    std::pair{ "atomicExchange"_h, &AtomicExchange_Float16 } /* 2995 */,
    std::pair{ "clamp(i16x2,i16x2,i16x2)"_h, &clamp_Int16x2 } /* 2996 */,
    std::pair{ "textureAtomicXor(uniform *textureCubeArray,i32x4,u32)"_h, &TextureAtomicXor_TextureCubeArray_UInt32 } /* 2997 */,
    std::pair{ "u16x4(i16)"_h, &UInt16x4_splat_Int16 } /* 2998 */,
    std::pair{ "textureSample(uniform *texture3D,uniform *sampler,f32x3)"_h, &TextureSample_Texture3D } /* 2999 */,
    std::pair{ "textureAtomicExchange(uniform *texture1DArray,i32x2,u16)"_h, &TextureAtomicExchange_Texture1DArray_UInt16 } /* 3000 */,
    std::pair{ "textureGatherOffset(uniform *textureSampled2DArray,i32x3,i32,u32)"_h, &SampledTextureGatherOffset_Texture2DArray } /* 3001 */,
    std::pair{ "pixelExportColor(f32,literal i32)"_h, &PixelExportColor_Float32_Int32 } /* 3002 */,
    std::pair{ "i16x3(i16x3)"_h, &Int16x3_from_Int16x3 } /* 3003 */,
    std::pair{ "tan(f32)"_h, &tan_Float32 } /* 3004 */,
    std::pair{ "i32x4(i32x2,i32x2)"_h, &Int32x4_ctor4 } /* 3005 */,
    std::pair{ "b8x4(b8)"_h, &Bool8x4_splat_Bool8 } /* 3006 */,
    std::pair{ "textureAtomicXor(uniform *texture3D,i32x3,i16)"_h, &TextureAtomicXor_Texture3D_Int16 } /* 3007 */,
    std::pair{ "textureCubeArray"_h, &TextureCubeArrayType } /* 3008 */,
    std::pair{ "pixelExportColor(f16x4,literal i16)"_h, &PixelExportColor_Float16x4_Int16 } /* 3009 */,
    std::pair{ "i32x3(i32x3)"_h, &Int32x3_from_Int32x3 } /* 3010 */,
    std::pair{ "textureSampleBiasProj(uniform *textureSampled1D,f32,f32,f32)"_h, &SampledTextureSampleBiasProj_Texture1D } /* 3011 */,
    std::pair{ "CompareMode"_h, &CompareModeType } /* 3012 */,
    std::pair{ "vertexGetInstanceIndex"_h, &VertexGetInstanceIndex } /* 3013 */,
    std::pair{ "executionBarrier()"_h, &ExecutionBarrier } /* 3014 */,
    std::pair{ "lerp(f32,f32,f32)"_h, &lerp_Float32 } /* 3015 */,
    std::pair{ "f16x4(f16x3,f16)"_h, &Float16x4_ctor5 } /* 3016 */,
    std::pair{ "max(i16x2,i16x2)"_h, &max_Int16x2 } /* 3017 */,
    std::pair{ "textureSampleGradProj(uniform *texture3D,uniform *sampler,f32x3,f32x3,f32x3,f32)"_h, &TextureSampleGradProj_Texture3D } /* 3018 */,
    std::pair{ "subgroupGetSize()"_h, &SubgroupGetSize } /* 3019 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture1DArray,i32x2,u32)"_h, &TextureAtomicCompareExchange_Texture1DArray_UInt32 } /* 3020 */,
    std::pair{ "textureSampleBiasCompare(uniform *textureSampled2D,f32x2,f32,f32)"_h, &SampledTextureSampleBiasCompare_Texture2D } /* 3021 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture1D,i32,u16)"_h, &TextureAtomicCompareExchange_Texture1D_UInt16 } /* 3022 */,
    std::pair{ "u32x4(b8)"_h, &UInt32x4_splat_Bool8 } /* 3023 */,
    std::pair{ "LogicOp"_h, &LogicOpType } /* 3024 */,
    std::pair{ "f32x3(f32,f32,f32)"_h, &Float32x3_ctor0 } /* 3025 */,
    std::pair{ "f16x3(i32x3)"_h, &Float16x3_from_Int32x3 } /* 3026 */,
    std::pair{ "i16x4(i16x2,i16x2)"_h, &Int16x4_ctor4 } /* 3027 */,
    std::pair{ "textureAtomicStore(uniform *texture1DArray,i32x2,f32)"_h, &TextureAtomicStore_Texture1DArray_Float32 } /* 3028 */,
    std::pair{ "subgroupBallotFirstOne(u32x4)"_h, &SubgroupBallotFirstOne } /* 3029 */,
    std::pair{ "i32x2(i32,i32)"_h, &Int32x2_ctor0 } /* 3030 */,
    std::pair{ "textureLoad(uniform *mutable texture2DMSArray,i32x3)"_h, &TextureLoad_Texture2DMSArray } /* 3031 */,
    std::pair{ "u16x2(b8)"_h, &UInt16x2_splat_Bool8 } /* 3032 */,
    std::pair{ "vertexGetBaseInstanceIndex()"_h, &VertexGetBaseInstanceIndex } /* 3033 */,
    std::pair{ "textureAtomicMax(uniform *textureCubeArray,i32x4,i16)"_h, &TextureAtomicMax_TextureCubeArray_Int16 } /* 3034 */,
    std::pair{ "textureGetMips(uniform *texture2DArray)"_h, &TextureGetMips_Texture2DArray } /* 3035 */,
    std::pair{ "PolygonMode(u32)"_h, &PolygonModeType.toUnderlyingType } /* 3036 */,
    std::pair{ "log(f32x4)"_h, &log_Float32x4 } /* 3037 */,
    std::pair{ "log(f32x2)"_h, &log_Float32x2 } /* 3038 */,
    std::pair{ "log(f32x3)"_h, &log_Float32x3 } /* 3039 */,
    std::pair{ "textureAtomicLoad(uniform *textureCubeArray,i32x4,u32)"_h, &TextureAtomicLoad_TextureCubeArray_UInt32 } /* 3040 */,
    std::pair{ "textureStore(uniform *mutable texture2D,i32x2,f32x4)"_h, &TextureStore_Texture2D } /* 3041 */,
    std::pair{ "textureAtomicLoad(uniform *texture3D,i32x3,i16)"_h, &TextureAtomicLoad_Texture3D_Int16 } /* 3042 */,
    std::pair{ "textureAtomicLoad(uniform *textureCube,i32x3,u32)"_h, &TextureAtomicLoad_TextureCube_UInt32 } /* 3043 */,
    std::pair{ "textureSampleGradProjCompareOffset(uniform *textureSampled1D,f32,f32,f32,f32,f32,f32)"_h, &SampledTextureSampleGradProjCompareOffset_Texture1D } /* 3044 */,
    std::pair{ "textureGetSampledMip"_h, &TextureGetSampledMip_Texture1D } /* 3045 */,
    std::pair{ "textureGetSampledMip"_h, &SampledTextureGetSampledMip_Texture1D } /* 3046 */,
    std::pair{ "textureGetSampledMip"_h, &TextureGetSampledMip_Texture2D } /* 3047 */,
    std::pair{ "textureGetSampledMip"_h, &SampledTextureGetSampledMip_Texture2D } /* 3048 */,
    std::pair{ "textureGetSampledMip"_h, &TextureGetSampledMip_Texture3D } /* 3049 */,
    std::pair{ "textureGetSampledMip"_h, &SampledTextureGetSampledMip_Texture3D } /* 3050 */,
    std::pair{ "textureGetSampledMip"_h, &TextureGetSampledMip_TextureCube } /* 3051 */,
    std::pair{ "textureGetSampledMip"_h, &SampledTextureGetSampledMip_TextureCube } /* 3052 */,
    std::pair{ "textureGetSampledMip"_h, &TextureGetSampledMip_Texture1DArray } /* 3053 */,
    std::pair{ "textureGetSampledMip"_h, &SampledTextureGetSampledMip_Texture1DArray } /* 3054 */,
    std::pair{ "textureGetSampledMip"_h, &TextureGetSampledMip_Texture2DArray } /* 3055 */,
    std::pair{ "textureGetSampledMip"_h, &SampledTextureGetSampledMip_Texture2DArray } /* 3056 */,
    std::pair{ "textureGetSampledMip"_h, &TextureGetSampledMip_TextureCubeArray } /* 3057 */,
    std::pair{ "textureGetSampledMip"_h, &SampledTextureGetSampledMip_TextureCubeArray } /* 3058 */,
    std::pair{ "f32x2(f32,f32)"_h, &Float32x2_ctor0 } /* 3059 */,
    std::pair{ "atomicDecrement(*u32,literal MemorySemantics)"_h, &AtomicDecrement_UInt32 } /* 3060 */,
    std::pair{ "textureAtomicMax(uniform *textureCube,i32x3,u32)"_h, &TextureAtomicMax_TextureCube_UInt32 } /* 3061 */,
    std::pair{ "mad(u32,u32,u32)"_h, &mad_UInt32 } /* 3062 */,
    std::pair{ "i32x3(i16x3)"_h, &Int32x3_from_Int16x3 } /* 3063 */,
    std::pair{ "atanh(f16x2)"_h, &atanh_Float16x2 } /* 3064 */,
    std::pair{ "i16x3(u32)"_h, &Int16x3_splat_UInt32 } /* 3065 */,
    std::pair{ "atanh(f16x3)"_h, &atanh_Float16x3 } /* 3066 */,
    std::pair{ "atanh(f16x4)"_h, &atanh_Float16x4 } /* 3067 */,
    std::pair{ "textureAtomicAdd(uniform *texture1DArray,i32x2,u16)"_h, &TextureAtomicAdd_Texture1DArray_UInt16 } /* 3068 */,
    std::pair{ "textureSampleBiasOffset(uniform *texture2D,uniform *sampler,f32x2,f32,f32x2)"_h, &TextureSampleBiasOffset_Texture2D } /* 3069 */,
    std::pair{ "textureAtomicExchange(uniform *textureCubeArray,i32x4,u32)"_h, &TextureAtomicExchange_TextureCubeArray_UInt32 } /* 3070 */,
    std::pair{ "u32(BlendFactor)"_h, &BlendFactorType.fromUnderlyingType } /* 3071 */,
    std::pair{ "b8x4(b8,b8,b8,b8)"_h, &Bool8x4_ctor0 } /* 3072 */,
    std::pair{ "textureSampleBias(uniform *textureSampledCube,f32x3,f32)"_h, &SampledTextureSampleBias_TextureCube } /* 3073 */,
    std::pair{ "i16(i16)"_h, &Int16_ctor0 } /* 3074 */,
    std::pair{ "textureGatherOffset(uniform *texture2DArray,uniform *sampler,i32x3,i32,u32)"_h, &TextureGatherOffset_Texture2DArray } /* 3075 */,
    std::pair{ "sinh(f16)"_h, &sinh_Float16 } /* 3076 */,
    std::pair{ "f32x2x4(f32,f32,f32,f32,f32,f32,f32,f32)"_h, &Float32x2x4_raw_list } /* 3077 */,
    std::pair{ "all(b8)"_h, &all_Bool8 } /* 3078 */,
    std::pair{ "acosh(f32x2)"_h, &acosh_Float32x2 } /* 3079 */,
    std::pair{ "acosh(f32x3)"_h, &acosh_Float32x3 } /* 3080 */,
    std::pair{ "pixelExportColor(u16x4,literal u32)"_h, &PixelExportColor_UInt16x4_UInt32 } /* 3081 */,
    std::pair{ "acosh(f32x4)"_h, &acosh_Float32x4 } /* 3082 */,
    std::pair{ "u16x4(u16,u16x3)"_h, &UInt16x4_ctor6 } /* 3083 */,
    std::pair{ "u16x3(u16x2,u16)"_h, &UInt16x3_ctor1 } /* 3084 */,
    std::pair{ "textureSampleProjCompare"_h, &TextureSampleProjCompare_Texture1D } /* 3085 */,
    std::pair{ "textureSampleProjCompare"_h, &SampledTextureSampleProjCompare_Texture1D } /* 3086 */,
    std::pair{ "textureSampleProjCompare"_h, &TextureSampleProjCompare_Texture2D } /* 3087 */,
    std::pair{ "textureSampleProjCompare"_h, &SampledTextureSampleProjCompare_Texture2D } /* 3088 */,
    std::pair{ "textureSampleProjCompare"_h, &TextureSampleProjCompare_Texture3D } /* 3089 */,
    std::pair{ "textureSampleProjCompare"_h, &SampledTextureSampleProjCompare_Texture3D } /* 3090 */,
    std::pair{ "textureSampleLodProj(uniform *textureSampled3D,f32x3,f32,f32)"_h, &SampledTextureSampleLodProj_Texture3D } /* 3091 */,
    std::pair{ "i32x4(i32,i32,i32x2)"_h, &Int32x4_ctor3 } /* 3092 */,
    std::pair{ "GeometryLine"_h, &GeometryLineType } /* 3093 */,
    std::pair{ "asin(f16)"_h, &asin_Float16 } /* 3094 */,
    std::pair{ "u32x3(u32x2,u32)"_h, &UInt32x3_ctor1 } /* 3095 */,
    std::pair{ "textureSampleProj(uniform *texture3D,uniform *sampler,f32x3,f32)"_h, &TextureSampleProj_Texture3D } /* 3096 */,
    std::pair{ "u32x2(f16)"_h, &UInt32x2_splat_Float16 } /* 3097 */,
    std::pair{ "subgroupGetNum"_h, &SubgroupGetNum } /* 3098 */,
    std::pair{ "textureAtomicOr(uniform *textureCubeArray,i32x4,u16)"_h, &TextureAtomicOr_TextureCubeArray_UInt16 } /* 3099 */,
    std::pair{ "fwidth(f32x2)"_h, &fwidth_Float32x2 } /* 3100 */,
    std::pair{ "fwidth(f32x3)"_h, &fwidth_Float32x3 } /* 3101 */,
    std::pair{ "fwidth(f32x4)"_h, &fwidth_Float32x4 } /* 3102 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture3D,i32x3,u32)"_h, &TextureAtomicCompareExchange_Texture3D_UInt32 } /* 3103 */,
    std::pair{ "textureGetSize(uniform *texture2DArray)"_h, &TextureGetSize_Texture2DArray } /* 3104 */,
    std::pair{ "u32x4(f16x4)"_h, &UInt32x4_from_Float16x4 } /* 3105 */,
    std::pair{ "subgroupSwapHorizontal(i32)"_h, &SubgroupSwapHorizontal_Int32 } /* 3106 */,
    std::pair{ "textureLoad(uniform *mutable texture1D,i32)"_h, &TextureLoad_Texture1D } /* 3107 */,
    std::pair{ "textureSampleGradProjCompareOffset(uniform *textureSampled2D,f32x2,f32x2,f32x2,f32,f32,f32x2)"_h, &SampledTextureSampleGradProjCompareOffset_Texture2D } /* 3108 */,
    std::pair{ "f16x2x4"_h, &Float16x2x4Type } /* 3109 */,
    std::pair{ "f16x2x4"_h, &Float16x2x4_Float16_4_ctor } /* 3110 */,
    std::pair{ "f16x2x4"_h, &Float16x2x4_raw_list } /* 3111 */,
    std::pair{ "f16x2x2"_h, &Float16x2x2Type } /* 3112 */,
    std::pair{ "f16x2x2"_h, &Float16x2x2_Float16_2_ctor } /* 3113 */,
    std::pair{ "f16x2x2"_h, &Float16x2x2_identity } /* 3114 */,
    std::pair{ "f16x2x2"_h, &Float16x2x2_raw_list } /* 3115 */,
    std::pair{ "f16x2x3"_h, &Float16x2x3Type } /* 3116 */,
    std::pair{ "f16x2x3"_h, &Float16x2x3_Float16_3_ctor } /* 3117 */,
    std::pair{ "f16x2x3"_h, &Float16x2x3_raw_list } /* 3118 */,
    std::pair{ "textureAtomicAnd(uniform *texture2D,i32x2,i16)"_h, &TextureAtomicAnd_Texture2D_Int16 } /* 3119 */,
    std::pair{ "f32x2x4(f32x4,f32x4)"_h, &Float32x2x4_Float32_4_ctor } /* 3120 */,
    std::pair{ "textureSampleProjOffset"_h, &TextureSampleProjOffset_Texture1D } /* 3121 */,
    std::pair{ "textureSampleProjOffset"_h, &SampledTextureSampleProjOffset_Texture1D } /* 3122 */,
    std::pair{ "textureSampleProjOffset"_h, &TextureSampleProjOffset_Texture2D } /* 3123 */,
    std::pair{ "textureSampleProjOffset"_h, &SampledTextureSampleProjOffset_Texture2D } /* 3124 */,
    std::pair{ "textureSampleProjOffset"_h, &TextureSampleProjOffset_Texture3D } /* 3125 */,
    std::pair{ "textureSampleProjOffset"_h, &SampledTextureSampleProjOffset_Texture3D } /* 3126 */,
    std::pair{ "geometryGetInvocationIndex"_h, &GeometryGetInvocationIndex } /* 3127 */,
    std::pair{ "textureSample"_h, &TextureSample_Texture1D } /* 3128 */,
    std::pair{ "textureSample"_h, &SampledTextureSample_Texture1D } /* 3129 */,
    std::pair{ "textureSample"_h, &TextureSample_Texture2D } /* 3130 */,
    std::pair{ "textureSample"_h, &SampledTextureSample_Texture2D } /* 3131 */,
    std::pair{ "textureSample"_h, &TextureSample_Texture3D } /* 3132 */,
    std::pair{ "textureSample"_h, &SampledTextureSample_Texture3D } /* 3133 */,
    std::pair{ "textureSample"_h, &TextureSample_TextureCube } /* 3134 */,
    std::pair{ "textureSample"_h, &SampledTextureSample_TextureCube } /* 3135 */,
    std::pair{ "textureSample"_h, &TextureSample_Texture1DArray } /* 3136 */,
    std::pair{ "textureSample"_h, &SampledTextureSample_Texture1DArray } /* 3137 */,
    std::pair{ "textureSample"_h, &TextureSample_Texture2DArray } /* 3138 */,
    std::pair{ "textureSample"_h, &SampledTextureSample_Texture2DArray } /* 3139 */,
    std::pair{ "textureSample"_h, &TextureSample_TextureCubeArray } /* 3140 */,
    std::pair{ "textureSample"_h, &SampledTextureSample_TextureCubeArray } /* 3141 */,
    std::pair{ "atomicIncrement(*i16,literal MemorySemantics)"_h, &AtomicIncrement_Int16 } /* 3142 */,
    std::pair{ "textureAtomicStore(uniform *texture1DArray,i32x2,u16)"_h, &TextureAtomicStore_Texture1DArray_UInt16 } /* 3143 */,
    std::pair{ "u32(PolygonMode)"_h, &PolygonModeType.fromUnderlyingType } /* 3144 */,
    std::pair{ "floor(f16x2)"_h, &floor_Float16x2 } /* 3145 */,
    std::pair{ "floor(f16x3)"_h, &floor_Float16x3 } /* 3146 */,
    std::pair{ "floor(f16x4)"_h, &floor_Float16x4 } /* 3147 */,
    std::pair{ "textureSampled2DMSArray"_h, &SampledTexture2DMSArrayType } /* 3148 */,
    std::pair{ "textureAtomicStore(uniform *texture3D,i32x3,i32)"_h, &TextureAtomicStore_Texture3D_Int32 } /* 3149 */,
    std::pair{ "textureAtomicLoad(uniform *texture1D,i32,f32)"_h, &TextureAtomicLoad_Texture1D_Float32 } /* 3150 */,
    std::pair{ "LogicOp(u32)"_h, &LogicOpType.toUnderlyingType } /* 3151 */,
    std::pair{ "textureSample(uniform *texture2D,uniform *sampler,f32x2)"_h, &TextureSample_Texture2D } /* 3152 */,
    std::pair{ "exp"_h, &exp_Float32 } /* 3153 */,
    std::pair{ "exp"_h, &exp_Float32x2 } /* 3154 */,
    std::pair{ "exp"_h, &exp_Float32x3 } /* 3155 */,
    std::pair{ "exp"_h, &exp_Float32x4 } /* 3156 */,
    std::pair{ "exp"_h, &exp_Float16 } /* 3157 */,
    std::pair{ "exp"_h, &exp_Float16x2 } /* 3158 */,
    std::pair{ "exp"_h, &exp_Float16x3 } /* 3159 */,
    std::pair{ "exp"_h, &exp_Float16x4 } /* 3160 */,
    std::pair{ "textureSampleProjOffset(uniform *texture3D,uniform *sampler,f32x3,f32,f32x3)"_h, &TextureSampleProjOffset_Texture3D } /* 3161 */,
    std::pair{ "textureAtomicAdd(uniform *texture2DArray,i32x3,u32)"_h, &TextureAtomicAdd_Texture2DArray_UInt32 } /* 3162 */,
    std::pair{ "atomicLoad(*f32,literal MemorySemantics)"_h, &AtomicLoad_Float32 } /* 3163 */,
    std::pair{ "vertexGetDrawIndex"_h, &VertexGetDrawIndex } /* 3164 */,
    std::pair{ "textureFetch"_h, &TextureFetch_Texture1D } /* 3165 */,
    std::pair{ "textureFetch"_h, &TextureFetch_Texture2D } /* 3166 */,
    std::pair{ "textureFetch"_h, &TextureFetch_Texture3D } /* 3167 */,
    std::pair{ "textureFetch"_h, &TextureFetch_Texture1DArray } /* 3168 */,
    std::pair{ "textureFetch"_h, &TextureFetch_Texture2DArray } /* 3169 */,
    std::pair{ "textureFetch"_h, &TextureFetch_Texture2DMS } /* 3170 */,
    std::pair{ "textureFetch"_h, &TextureFetch_Texture2DMSArray } /* 3171 */,
    std::pair{ "subgroupGetThreadMask()"_h, &SubgroupGetThreadMask } /* 3172 */,
    std::pair{ "textureAtomicAnd(uniform *texture1D,i32,u16)"_h, &TextureAtomicAnd_Texture1D_UInt16 } /* 3173 */,
    std::pair{ "f16x4x2(f16,f16,f16,f16,f16,f16,f16,f16)"_h, &Float16x4x2_raw_list } /* 3174 */,
    std::pair{ "textureSampledCube"_h, &SampledTextureCubeType } /* 3175 */,
    std::pair{ "max(i32x4,i32x4)"_h, &max_Int32x4 } /* 3176 */,
    std::pair{ "cross(f32x3,f32x3)"_h, &cross_Float32x3 } /* 3177 */,
    std::pair{ "textureGather(uniform *texture2D,uniform *sampler,i32x2,i32)"_h, &TextureGather_Texture2D } /* 3178 */,
    std::pair{ "u32x2(u16)"_h, &UInt32x2_splat_UInt16 } /* 3179 */,
    std::pair{ "f16x4(f32x4)"_h, &Float16x4_from_Float32x4 } /* 3180 */,
    std::pair{ "f16x4(u16x4)"_h, &Float16x4_from_UInt16x4 } /* 3181 */,
    std::pair{ "textureAtomicMin(uniform *texture1D,i32,i32)"_h, &TextureAtomicMin_Texture1D_Int32 } /* 3182 */,
    std::pair{ "subgroupSwapDiagonal(u32x4)"_h, &SubgroupSwapDiagonal_UInt32x4 } /* 3183 */,
    std::pair{ "subgroupSwapDiagonal(u32x2)"_h, &SubgroupSwapDiagonal_UInt32x2 } /* 3184 */,
    std::pair{ "subgroupSwapDiagonal(u32x3)"_h, &SubgroupSwapDiagonal_UInt32x3 } /* 3185 */,
    std::pair{ "f32x4(i32)"_h, &Float32x4_splat_Int32 } /* 3186 */,
    std::pair{ "sign(i16)"_h, &sign_Int16 } /* 3187 */,
    std::pair{ "textureAtomicXor(uniform *texture3D,i32x3,i32)"_h, &TextureAtomicXor_Texture3D_Int32 } /* 3188 */,
    std::pair{ "reflect(f32x3,f32x3)"_h, &reflect_Float32x3 } /* 3189 */,
    std::pair{ "f32(f32)"_h, &Float32_ctor0 } /* 3190 */,
    std::pair{ "tan(f16)"_h, &tan_Float16 } /* 3191 */,
    std::pair{ "b8(i32)"_h, &Bool8_from_Int32 } /* 3192 */,
    std::pair{ "u32x4(b8x4)"_h, &UInt32x4_from_Bool8x4 } /* 3193 */,
    std::pair{ "memoryBarrierSubgroup"_h, &MemoryBarrierSubgroup } /* 3194 */,
    std::pair{ "textureSampleBiasProjOffset(uniform *textureSampled3D,f32x3,f32,f32,f32x3)"_h, &SampledTextureSampleBiasProjOffset_Texture3D } /* 3195 */,
    std::pair{ "textureAtomicSubtract(uniform *texture2DArray,i32x3,u32)"_h, &TextureAtomicSubtract_Texture2DArray_UInt32 } /* 3196 */,
    std::pair{ "textureSample(uniform *texture1D,uniform *sampler,f32)"_h, &TextureSample_Texture1D } /* 3197 */,
    std::pair{ "textureAtomicSubtract(uniform *texture1DArray,i32x2,u32)"_h, &TextureAtomicSubtract_Texture1DArray_UInt32 } /* 3198 */,
    std::pair{ "hullExportOuterTessellationLevel"_h, &HullExportOuterTessellationLevel } /* 3199 */,
    std::pair{ "textureAtomicXor(uniform *textureCubeArray,i32x4,u16)"_h, &TextureAtomicXor_TextureCubeArray_UInt16 } /* 3200 */,
    std::pair{ "u16x4(i32)"_h, &UInt16x4_splat_Int32 } /* 3201 */,
    std::pair{ "textureStoreMip(uniform *mutable texture1DArray,i32x2,i32,f32x4)"_h, &TextureStoreMip_Texture1DArray } /* 3202 */,
    std::pair{ "textureSampleGradProjCompare(uniform *texture2D,uniform *sampler,f32x2,f32x2,f32x2,f32,f32)"_h, &TextureSampleGradProjCompare_Texture2D } /* 3203 */,
    std::pair{ "pixelExportColor(f32,literal i16)"_h, &PixelExportColor_Float32_Int16 } /* 3204 */,
    std::pair{ "f16x3x4"_h, &Float16x3x4Type } /* 3205 */,
    std::pair{ "f16x3x4"_h, &Float16x3x4_Float16_4_ctor } /* 3206 */,
    std::pair{ "f16x3x4"_h, &Float16x3x4_raw_list } /* 3207 */,
    std::pair{ "f16x3x3"_h, &Float16x3x3Type } /* 3208 */,
    std::pair{ "f16x3x3"_h, &Float16x3x3_Float16_3_ctor } /* 3209 */,
    std::pair{ "f16x3x3"_h, &Float16x3x3_identity } /* 3210 */,
    std::pair{ "f16x3x3"_h, &Float16x3x3_raw_list } /* 3211 */,
    std::pair{ "f16x3x2"_h, &Float16x3x2Type } /* 3212 */,
    std::pair{ "f16x3x2"_h, &Float16x3x2_Float16_2_ctor } /* 3213 */,
    std::pair{ "f16x3x2"_h, &Float16x3x2_raw_list } /* 3214 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture1DArray,i32x2,u16)"_h, &TextureAtomicCompareExchange_Texture1DArray_UInt16 } /* 3215 */,
    std::pair{ "textureGetSizeMip(uniform *texture3D,u32)"_h, &TextureGetSizeMip_Texture3D } /* 3216 */,
    std::pair{ "atan(f32x4)"_h, &atan_Float32x4 } /* 3217 */,
    std::pair{ "atan(f32x2)"_h, &atan_Float32x2 } /* 3218 */,
    std::pair{ "atan(f32x3)"_h, &atan_Float32x3 } /* 3219 */,
    std::pair{ "clamp(u32x3,u32x3,u32x3)"_h, &clamp_UInt32x3 } /* 3220 */,
    std::pair{ "vertexSetOutputLayer(u32)"_h, &VertexSetOutputLayer_UInt32 } /* 3221 */,
    std::pair{ "reflect(f16x4,f16x4)"_h, &reflect_Float16x4 } /* 3222 */,
    std::pair{ "pixelExportColor(f16x4,literal i32)"_h, &PixelExportColor_Float16x4_Int32 } /* 3223 */,
    std::pair{ "any(b8x4)"_h, &any_Bool8x4 } /* 3224 */,
    std::pair{ "any(b8x3)"_h, &any_Bool8x3 } /* 3225 */,
    std::pair{ "any(b8x2)"_h, &any_Bool8x2 } /* 3226 */,
    std::pair{ "pixelExportColor(u16x2,literal u32)"_h, &PixelExportColor_UInt16x2_UInt32 } /* 3227 */,
    std::pair{ "u32(BlendOperation)"_h, &BlendOperationType.fromUnderlyingType } /* 3228 */,
    std::pair{ "min(f16x2,f16x2)"_h, &min_Float16x2 } /* 3229 */,
    std::pair{ "min(f16x4,f16x4)"_h, &min_Float16x4 } /* 3230 */,
    std::pair{ "textureFetchSample(uniform *texture1DArray,i32x2,u32,u32)"_h, &TextureFetchSample_Texture1DArray } /* 3231 */,
    std::pair{ "textureAtomicAnd(uniform *textureCube,i32x3,i32)"_h, &TextureAtomicAnd_TextureCube_Int32 } /* 3232 */,
    std::pair{ "pixelGetCoordinates"_h, &PixelGetCoordinates_Float32x4 } /* 3233 */,
    std::pair{ "pixelGetCoordinates"_h, &PixelGetCoordinates_Float16x4 } /* 3234 */,
    std::pair{ "step(f32x3,f32x3)"_h, &step_Float32x3 } /* 3235 */,
    std::pair{ "i32x4(i16x4)"_h, &Int32x4_from_Int16x4 } /* 3236 */,
    std::pair{ "textureSample(uniform *textureCubeArray,uniform *sampler,f32x4)"_h, &TextureSample_TextureCubeArray } /* 3237 */,
    std::pair{ "computeGetLocalThreadIndices"_h, &ComputeGetLocalThreadIndices } /* 3238 */,
    std::pair{ "textureSampleGradProjOffset(uniform *textureSampled1D,f32,f32,f32,f32,f32)"_h, &SampledTextureSampleGradProjOffset_Texture1D } /* 3239 */,
    std::pair{ "textureSampleLodCompare(uniform *textureSampled1D,f32,f32,f32)"_h, &SampledTextureSampleLodCompare_Texture1D } /* 3240 */,
    std::pair{ "f16x2(f32x2)"_h, &Float16x2_from_Float32x2 } /* 3241 */,
    std::pair{ "u16(i16)"_h, &UInt16_from_Int16 } /* 3242 */,
    std::pair{ "textureAtomicStore(uniform *textureCube,i32x3,i32)"_h, &TextureAtomicStore_TextureCube_Int32 } /* 3243 */,
    std::pair{ "f32x3(f32,f32x2)"_h, &Float32x3_ctor2 } /* 3244 */,
    std::pair{ "ddy"_h, &ddy_Float32 } /* 3245 */,
    std::pair{ "ddy"_h, &ddy_Float32x2 } /* 3246 */,
    std::pair{ "ddy"_h, &ddy_Float32x3 } /* 3247 */,
    std::pair{ "ddy"_h, &ddy_Float32x4 } /* 3248 */,
    std::pair{ "ddy"_h, &ddy_Float16 } /* 3249 */,
    std::pair{ "ddy"_h, &ddy_Float16x2 } /* 3250 */,
    std::pair{ "ddy"_h, &ddy_Float16x3 } /* 3251 */,
    std::pair{ "ddy"_h, &ddy_Float16x4 } /* 3252 */,
    std::pair{ "ddx"_h, &ddx_Float32 } /* 3253 */,
    std::pair{ "ddx"_h, &ddx_Float32x2 } /* 3254 */,
    std::pair{ "ddx"_h, &ddx_Float32x3 } /* 3255 */,
    std::pair{ "ddx"_h, &ddx_Float32x4 } /* 3256 */,
    std::pair{ "ddx"_h, &ddx_Float16 } /* 3257 */,
    std::pair{ "ddx"_h, &ddx_Float16x2 } /* 3258 */,
    std::pair{ "ddx"_h, &ddx_Float16x3 } /* 3259 */,
    std::pair{ "ddx"_h, &ddx_Float16x4 } /* 3260 */,
    std::pair{ "dot"_h, &dot_Float32x2 } /* 3261 */,
    std::pair{ "dot"_h, &dot_Float32x3 } /* 3262 */,
    std::pair{ "dot"_h, &dot_Float32x4 } /* 3263 */,
    std::pair{ "dot"_h, &dot_Float16x2 } /* 3264 */,
    std::pair{ "dot"_h, &dot_Float16x3 } /* 3265 */,
    std::pair{ "dot"_h, &dot_Float16x4 } /* 3266 */,
    std::pair{ "min(i16x2,i16x2)"_h, &min_Int16x2 } /* 3267 */,
    std::pair{ "clamp(i16x3,i16x3,i16x3)"_h, &clamp_Int16x3 } /* 3268 */,
    std::pair{ "textureSampleGradCompare(uniform *texture2D,uniform *sampler,f32x2,f32x2,f32x2,f32)"_h, &TextureSampleGradCompare_Texture2D } /* 3269 */,
    std::pair{ "textureAtomicLoad(uniform *texture3D,i32x3,i32)"_h, &TextureAtomicLoad_Texture3D_Int32 } /* 3270 */,
    std::pair{ "pixelGetPrimitiveIndex(u32)"_h, &PixelGetPrimitiveIndex } /* 3271 */,
    std::pair{ "bitExtract(i32,i32,i32)"_h, &BitExtract_Int32 } /* 3272 */,
    std::pair{ "textureAtomicLoad(uniform *textureCube,i32x3,u16)"_h, &TextureAtomicLoad_TextureCube_UInt16 } /* 3273 */,
    std::pair{ "i16x4(f32x4)"_h, &Int16x4_from_Float32x4 } /* 3274 */,
    std::pair{ "atomicAdd(*u16,u16,literal MemorySemantics)"_h, &AtomicAdd_UInt16 } /* 3275 */,
    std::pair{ "textureSampleProjCompare(uniform *textureSampled1D,f32,f32,f32)"_h, &SampledTextureSampleProjCompare_Texture1D } /* 3276 */,
    std::pair{ "textureAtomicMax(uniform *textureCubeArray,i32x4,i32)"_h, &TextureAtomicMax_TextureCubeArray_Int32 } /* 3277 */,
    std::pair{ "textureAtomicOr(uniform *texture1D,i32,u16)"_h, &TextureAtomicOr_Texture1D_UInt16 } /* 3278 */,
    std::pair{ "acos(f32x4)"_h, &acos_Float32x4 } /* 3279 */,
    std::pair{ "textureAtomicMin(uniform *texture3D,i32x3,i32)"_h, &TextureAtomicMin_Texture3D_Int32 } /* 3280 */,
    std::pair{ "acos(f32x2)"_h, &acos_Float32x2 } /* 3281 */,
    std::pair{ "acos(f32x3)"_h, &acos_Float32x3 } /* 3282 */,
    std::pair{ "u32(Winding)"_h, &WindingType.fromUnderlyingType } /* 3283 */,
    std::pair{ "f32x3x3(f32,f32,f32,f32,f32,f32,f32,f32,f32)"_h, &Float32x3x3_raw_list } /* 3284 */,
    std::pair{ "b8x3(i16)"_h, &Bool8x3_splat_Int16 } /* 3285 */,
    std::pair{ "FilterMode(u32)"_h, &FilterModeType.toUnderlyingType } /* 3286 */,
    std::pair{ "textureAtomicMax(uniform *textureCube,i32x3,u16)"_h, &TextureAtomicMax_TextureCube_UInt16 } /* 3287 */,
    std::pair{ "u32x4(u16x4)"_h, &UInt32x4_from_UInt16x4 } /* 3288 */,
    std::pair{ "textureAtomicOr(uniform *texture1DArray,i32x2,u32)"_h, &TextureAtomicOr_Texture1DArray_UInt32 } /* 3289 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(u16x4)"_h, &SubgroupBroadcastFirstActiveThread_UInt16x4 } /* 3290 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(u16x3)"_h, &SubgroupBroadcastFirstActiveThread_UInt16x3 } /* 3291 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(u16x2)"_h, &SubgroupBroadcastFirstActiveThread_UInt16x2 } /* 3292 */,
    std::pair{ "subgroupBallotBitCount(u32x4)"_h, &SubgroupBallotBitCount } /* 3293 */,
    std::pair{ "sinh(f32)"_h, &sinh_Float32 } /* 3294 */,
    std::pair{ "log2"_h, &log2_Float32 } /* 3295 */,
    std::pair{ "log2"_h, &log2_Float32x2 } /* 3296 */,
    std::pair{ "log2"_h, &log2_Float32x3 } /* 3297 */,
    std::pair{ "log2"_h, &log2_Float32x4 } /* 3298 */,
    std::pair{ "log2"_h, &log2_Float16 } /* 3299 */,
    std::pair{ "log2"_h, &log2_Float16x2 } /* 3300 */,
    std::pair{ "log2"_h, &log2_Float16x3 } /* 3301 */,
    std::pair{ "log2"_h, &log2_Float16x4 } /* 3302 */,
    std::pair{ "asin(f32x4)"_h, &asin_Float32x4 } /* 3303 */,
    std::pair{ "b8x4(b8,b8x2,b8)"_h, &Bool8x4_ctor2 } /* 3304 */,
    std::pair{ "asin(f32x3)"_h, &asin_Float32x3 } /* 3305 */,
    std::pair{ "asin(f32x2)"_h, &asin_Float32x2 } /* 3306 */,
    std::pair{ "textureAtomicCompareExchange(uniform *textureCubeArray,i32x4,u16)"_h, &TextureAtomicCompareExchange_TextureCubeArray_UInt16 } /* 3307 */,
    std::pair{ "atomicMax(*f16,f16,literal MemorySemantics)"_h, &AtomicMax_UInt32 } /* 3308 */,
    std::pair{ "atomicMax(*f16,f16,literal MemorySemantics)"_h, &AtomicMax_Int32 } /* 3309 */,
    std::pair{ "atomicMax(*f16,f16,literal MemorySemantics)"_h, &AtomicMax_UInt16 } /* 3310 */,
    std::pair{ "atomicMax(*f16,f16,literal MemorySemantics)"_h, &AtomicMax_Int16 } /* 3311 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(u32)"_h, &SubgroupBroadcastFirstActiveThread_UInt32 } /* 3312 */,
    std::pair{ "textureSampleGradProjOffset"_h, &TextureSampleGradProjOffset_Texture1D } /* 3313 */,
    std::pair{ "textureSampleGradProjOffset"_h, &SampledTextureSampleGradProjOffset_Texture1D } /* 3314 */,
    std::pair{ "textureSampleGradProjOffset"_h, &TextureSampleGradProjOffset_Texture2D } /* 3315 */,
    std::pair{ "textureSampleGradProjOffset"_h, &SampledTextureSampleGradProjOffset_Texture2D } /* 3316 */,
    std::pair{ "textureSampleGradProjOffset"_h, &TextureSampleGradProjOffset_Texture3D } /* 3317 */,
    std::pair{ "textureSampleGradProjOffset"_h, &SampledTextureSampleGradProjOffset_Texture3D } /* 3318 */,
    std::pair{ "clamp(i32x2,i32x2,i32x2)"_h, &clamp_Int32x2 } /* 3319 */,
    std::pair{ "asin(f32)"_h, &asin_Float32 } /* 3320 */,
    std::pair{ "transpose(f32x3x2)"_h, &transpose_Float32x3x2 } /* 3321 */,
    std::pair{ "accelerationStructure"_h, &AccelerationStructureType } /* 3322 */,
    std::pair{ "transpose(f32x3x3)"_h, &transpose_Float32x3x3 } /* 3323 */,
    std::pair{ "pixelExportColor(u32,literal u32)"_h, &PixelExportColor_UInt32_UInt32 } /* 3324 */,
    std::pair{ "transpose(f32x3x4)"_h, &transpose_Float32x3x4 } /* 3325 */,
    std::pair{ "textureAtomicLoad(uniform *texture2DArray,i32x3,f16)"_h, &TextureAtomicLoad_Texture2DArray_Float16 } /* 3326 */,
    std::pair{ "i16(i32)"_h, &Int16_from_Int32 } /* 3327 */,
    std::pair{ "subgroupSwapHorizontal(f16x4)"_h, &SubgroupSwapHorizontal_Float16x4 } /* 3328 */,
    std::pair{ "subgroupSwapHorizontal(f16x2)"_h, &SubgroupSwapHorizontal_Float16x2 } /* 3329 */,
    std::pair{ "subgroupSwapHorizontal(f16x3)"_h, &SubgroupSwapHorizontal_Float16x3 } /* 3330 */,
    std::pair{ "textureSampleGradCompareOffset(uniform *textureSampled2DArray,f32x3,f32x3,f32x3,f32,f32x3)"_h, &SampledTextureSampleGradCompareOffset_Texture2DArray } /* 3331 */,
    std::pair{ "i32x4(i32,i32x2,i32)"_h, &Int32x4_ctor2 } /* 3332 */,
    std::pair{ "geometryGetPoint()"_h, &GeometryGetPoint } /* 3333 */,
    std::pair{ "u32x2(f32)"_h, &UInt32x2_splat_Float32 } /* 3334 */,
    std::pair{ "textureSampleBiasProjCompare(uniform *textureSampled3D,f32x3,f32,f32,f32)"_h, &SampledTextureSampleBiasProjCompare_Texture3D } /* 3335 */,
    std::pair{ "textureAtomicOr(uniform *textureCubeArray,i32x4,u32)"_h, &TextureAtomicOr_TextureCubeArray_UInt32 } /* 3336 */,
    std::pair{ "textureSampleCompare(uniform *textureSampled1D,f32,f32)"_h, &SampledTextureSampleCompare_Texture1D } /* 3337 */,
    std::pair{ "ddy(f16x3)"_h, &ddy_Float16x3 } /* 3338 */,
    std::pair{ "ddy(f16x2)"_h, &ddy_Float16x2 } /* 3339 */,
    std::pair{ "sign(f32)"_h, &sign_Float32 } /* 3340 */,
    std::pair{ "textureSampleBiasProjCompare(uniform *textureSampled1D,f32,f32,f32,f32)"_h, &SampledTextureSampleBiasProjCompare_Texture1D } /* 3341 */,
    std::pair{ "ddy(f16x4)"_h, &ddy_Float16x4 } /* 3342 */,
    std::pair{ "max(i16,i16)"_h, &max_Int16 } /* 3343 */,
    std::pair{ "textureGetSampledMip(uniform *textureSampledCubeArray,f32x4)"_h, &SampledTextureGetSampledMip_TextureCubeArray } /* 3344 */,
    std::pair{ "u32(OutputTopology)"_h, &OutputTopologyType.fromUnderlyingType } /* 3345 */,
    std::pair{ "dot(f16x3,f16x3)"_h, &dot_Float16x3 } /* 3346 */,
    std::pair{ "atomicIncrement"_h, &AtomicIncrement_UInt32 } /* 3347 */,
    std::pair{ "atomicIncrement"_h, &AtomicIncrement_Int32 } /* 3348 */,
    std::pair{ "atomicIncrement"_h, &AtomicIncrement_UInt16 } /* 3349 */,
    std::pair{ "atomicIncrement"_h, &AtomicIncrement_Int16 } /* 3350 */,
    std::pair{ "clamp"_h, &clamp_Float32 } /* 3351 */,
    std::pair{ "clamp"_h, &clamp_Float32x2 } /* 3352 */,
    std::pair{ "clamp"_h, &clamp_Float32x3 } /* 3353 */,
    std::pair{ "clamp"_h, &clamp_Float32x4 } /* 3354 */,
    std::pair{ "clamp"_h, &clamp_Float16 } /* 3355 */,
    std::pair{ "clamp"_h, &clamp_Float16x2 } /* 3356 */,
    std::pair{ "clamp"_h, &clamp_Float16x3 } /* 3357 */,
    std::pair{ "clamp"_h, &clamp_Float16x4 } /* 3358 */,
    std::pair{ "clamp"_h, &clamp_Int32 } /* 3359 */,
    std::pair{ "clamp"_h, &clamp_Int32x2 } /* 3360 */,
    std::pair{ "clamp"_h, &clamp_Int32x3 } /* 3361 */,
    std::pair{ "clamp"_h, &clamp_Int32x4 } /* 3362 */,
    std::pair{ "clamp"_h, &clamp_Int16 } /* 3363 */,
    std::pair{ "clamp"_h, &clamp_Int16x2 } /* 3364 */,
    std::pair{ "clamp"_h, &clamp_Int16x3 } /* 3365 */,
    std::pair{ "clamp"_h, &clamp_Int16x4 } /* 3366 */,
    std::pair{ "clamp"_h, &clamp_UInt32 } /* 3367 */,
    std::pair{ "clamp"_h, &clamp_UInt32x2 } /* 3368 */,
    std::pair{ "clamp"_h, &clamp_UInt32x3 } /* 3369 */,
    std::pair{ "clamp"_h, &clamp_UInt32x4 } /* 3370 */,
    std::pair{ "clamp"_h, &clamp_UInt16 } /* 3371 */,
    std::pair{ "clamp"_h, &clamp_UInt16x2 } /* 3372 */,
    std::pair{ "clamp"_h, &clamp_UInt16x3 } /* 3373 */,
    std::pair{ "clamp"_h, &clamp_UInt16x4 } /* 3374 */,
    std::pair{ "textureSampleGradProjCompareOffset(uniform *textureSampled3D,f32x3,f32x3,f32x3,f32,f32,f32x3)"_h, &SampledTextureSampleGradProjCompareOffset_Texture3D } /* 3375 */,
    std::pair{ "b8x3(b8x2,b8)"_h, &Bool8x3_ctor1 } /* 3376 */,
    std::pair{ "atan2(f32x3,f32x3)"_h, &atan2_Float32x3 } /* 3377 */,
    std::pair{ "textureGather(uniform *textureCube,uniform *sampler,i32x3,i32)"_h, &TextureGather_TextureCube } /* 3378 */,
    std::pair{ "u32x3(b8x3)"_h, &UInt32x3_from_Bool8x3 } /* 3379 */,
    std::pair{ "step(f32x2,f32x2)"_h, &step_Float32x2 } /* 3380 */,
    std::pair{ "smoothstep(f16x2,f16x2,f16x2)"_h, &smoothstep_Float16x2 } /* 3381 */,
    std::pair{ "memoryBarrierWorkgroup"_h, &MemoryBarrierWorkgroup } /* 3382 */,
    std::pair{ "textureSampleBiasCompareOffset(uniform *textureSampled3D,f32x3,f32,f32,f32x3)"_h, &SampledTextureSampleBiasCompareOffset_Texture3D } /* 3383 */,
    std::pair{ "textureSampleGradProjOffset(uniform *texture3D,uniform *sampler,f32x3,f32x3,f32x3,f32,f32x3)"_h, &TextureSampleGradProjOffset_Texture3D } /* 3384 */,
    std::pair{ "pixelGetDepth"_h, &PixelGetDepth } /* 3385 */,
    std::pair{ "textureSampleGradOffset(uniform *textureSampled3D,f32x3,f32x3,f32x3,f32x3)"_h, &SampledTextureSampleGradOffset_Texture3D } /* 3386 */,
    std::pair{ "max(f16,f16)"_h, &max_Float16 } /* 3387 */,
    std::pair{ "textureAtomicSubtract(uniform *textureCubeArray,i32x4,i16)"_h, &TextureAtomicSubtract_TextureCubeArray_Int16 } /* 3388 */,
    std::pair{ "abs(i32x3)"_h, &abs_Int32x3 } /* 3389 */,
    std::pair{ "abs(i32x2)"_h, &abs_Int32x2 } /* 3390 */,
    std::pair{ "abs(i32x4)"_h, &abs_Int32x4 } /* 3391 */,
    std::pair{ "f16x3(b8)"_h, &Float16x3_splat_Bool8 } /* 3392 */,
    std::pair{ "textureAtomicStore(uniform *texture1DArray,i32x2,u32)"_h, &TextureAtomicStore_Texture1DArray_UInt32 } /* 3393 */,
    std::pair{ "b8x3(u32x3)"_h, &Bool8x3_from_UInt32x3 } /* 3394 */,
    std::pair{ "textureSampleOffset(uniform *textureSampled2D,f32x2,f32x2)"_h, &SampledTextureSampleOffset_Texture2D } /* 3395 */,
    std::pair{ "textureSampleLodCompare(uniform *texture1DArray,uniform *sampler,f32x2,f32,f32)"_h, &TextureSampleLodCompare_Texture1DArray } /* 3396 */,
    std::pair{ "geometryGetInvocationIndex()"_h, &GeometryGetInvocationIndex } /* 3397 */,
    std::pair{ "u32x3(b8)"_h, &UInt32x3_splat_Bool8 } /* 3398 */,
    std::pair{ "atanh(f32)"_h, &atanh_Float32 } /* 3399 */,
    std::pair{ "reflect(f32x2,f32x2)"_h, &reflect_Float32x2 } /* 3400 */,
    std::pair{ "trunc(f32x2)"_h, &trunc_Float32x2 } /* 3401 */,
    std::pair{ "trunc(f32x3)"_h, &trunc_Float32x3 } /* 3402 */,
    std::pair{ "trunc(f32x4)"_h, &trunc_Float32x4 } /* 3403 */,
    std::pair{ "cosh(f16x3)"_h, &cosh_Float16x3 } /* 3404 */,
    std::pair{ "cosh(f16x2)"_h, &cosh_Float16x2 } /* 3405 */,
    std::pair{ "computeGetWorkgroupIndices"_h, &ComputeGetWorkgroupIndices } /* 3406 */,
    std::pair{ "textureLoad(uniform *mutable textureCube,i32x3)"_h, &TextureLoad_TextureCube } /* 3407 */,
    std::pair{ "textureAtomicLoad(uniform *texture1D,i32,f16)"_h, &TextureAtomicLoad_Texture1D_Float16 } /* 3408 */,
    std::pair{ "cosh(f16x4)"_h, &cosh_Float16x4 } /* 3409 */,
    std::pair{ "ddy(f32x4)"_h, &ddy_Float32x4 } /* 3410 */,
    std::pair{ "ddy(f32x3)"_h, &ddy_Float32x3 } /* 3411 */,
    std::pair{ "ddy(f32x2)"_h, &ddy_Float32x2 } /* 3412 */,
    std::pair{ "i16(b8)"_h, &Int16_from_Bool8 } /* 3413 */,
    std::pair{ "u16x2(f32x2)"_h, &UInt16x2_from_Float32x2 } /* 3414 */,
    std::pair{ "max(u16x3,u16x3)"_h, &max_UInt16x3 } /* 3415 */,
    std::pair{ "textureSampleBias"_h, &TextureSampleBias_Texture1D } /* 3416 */,
    std::pair{ "textureSampleBias"_h, &SampledTextureSampleBias_Texture1D } /* 3417 */,
    std::pair{ "textureSampleBias"_h, &TextureSampleBias_Texture2D } /* 3418 */,
    std::pair{ "textureSampleBias"_h, &SampledTextureSampleBias_Texture2D } /* 3419 */,
    std::pair{ "textureSampleBias"_h, &TextureSampleBias_Texture3D } /* 3420 */,
    std::pair{ "textureSampleBias"_h, &SampledTextureSampleBias_Texture3D } /* 3421 */,
    std::pair{ "textureSampleBias"_h, &TextureSampleBias_TextureCube } /* 3422 */,
    std::pair{ "textureSampleBias"_h, &SampledTextureSampleBias_TextureCube } /* 3423 */,
    std::pair{ "textureSampleBias"_h, &TextureSampleBias_Texture1DArray } /* 3424 */,
    std::pair{ "textureSampleBias"_h, &SampledTextureSampleBias_Texture1DArray } /* 3425 */,
    std::pair{ "textureSampleBias"_h, &TextureSampleBias_Texture2DArray } /* 3426 */,
    std::pair{ "textureSampleBias"_h, &SampledTextureSampleBias_Texture2DArray } /* 3427 */,
    std::pair{ "textureSampleBias"_h, &TextureSampleBias_TextureCubeArray } /* 3428 */,
    std::pair{ "textureSampleBias"_h, &SampledTextureSampleBias_TextureCubeArray } /* 3429 */,
    std::pair{ "f32(f16)"_h, &Float32_from_Float16 } /* 3430 */,
    std::pair{ "textureSampleBiasProjOffset(uniform *texture2D,uniform *sampler,f32x2,f32,f32,f32x2)"_h, &TextureSampleBiasProjOffset_Texture2D } /* 3431 */,
    std::pair{ "textureAtomicXor(uniform *textureCube,i32x3,i32)"_h, &TextureAtomicXor_TextureCube_Int32 } /* 3432 */,
    std::pair{ "pixelExportColor(i32,literal i32)"_h, &PixelExportColor_Int32_Int32 } /* 3433 */,
    std::pair{ "u32x2(u32)"_h, &UInt32x2_splat_UInt32 } /* 3434 */,
    std::pair{ "refract(f32x3,f32x3,f32x3)"_h, &refract_Float32x3 } /* 3435 */,
    std::pair{ "textureSampleBiasCompareOffset(uniform *textureSampled1DArray,f32x2,f32,f32,f32x2)"_h, &SampledTextureSampleBiasCompareOffset_Texture1DArray } /* 3436 */,
    std::pair{ "textureAtomicOr(uniform *textureCube,i32x3,u16)"_h, &TextureAtomicOr_TextureCube_UInt16 } /* 3437 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Float32 } /* 3438 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Float32x2 } /* 3439 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Float32x3 } /* 3440 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Float32x4 } /* 3441 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Float16 } /* 3442 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Float16x2 } /* 3443 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Float16x3 } /* 3444 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Float16x4 } /* 3445 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Int32 } /* 3446 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Int32x2 } /* 3447 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Int32x3 } /* 3448 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Int32x4 } /* 3449 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Int16 } /* 3450 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Int16x2 } /* 3451 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Int16x3 } /* 3452 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_Int16x4 } /* 3453 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_UInt32 } /* 3454 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_UInt32x2 } /* 3455 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_UInt32x3 } /* 3456 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_UInt32x4 } /* 3457 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_UInt16 } /* 3458 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_UInt16x2 } /* 3459 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_UInt16x3 } /* 3460 */,
    std::pair{ "subgroupSwapDiagonal"_h, &SubgroupSwapDiagonal_UInt16x4 } /* 3461 */,
    std::pair{ "max(u32x2,u32x2)"_h, &max_UInt32x2 } /* 3462 */,
    std::pair{ "textureAtomicMax(uniform *texture1DArray,i32x2,u32)"_h, &TextureAtomicMax_Texture1DArray_UInt32 } /* 3463 */,
    std::pair{ "textureAtomicSubtract(uniform *texture3D,i32x3,i16)"_h, &TextureAtomicSubtract_Texture3D_Int16 } /* 3464 */,
    std::pair{ "textureFetch(uniform *texture2DArray,i32x3,u32)"_h, &TextureFetch_Texture2DArray } /* 3465 */,
    std::pair{ "textureSampleGradProj(uniform *texture2D,uniform *sampler,f32x2,f32x2,f32x2,f32)"_h, &TextureSampleGradProj_Texture2D } /* 3466 */,
    std::pair{ "castToU16(i16)"_h, &castToU16_Int16 } /* 3467 */,
    std::pair{ "f32x4(i16)"_h, &Float32x4_splat_Int16 } /* 3468 */,
    std::pair{ "textureSampleGrad(uniform *textureSampledCubeArray,f32x4,f32x4,f32x4)"_h, &SampledTextureSampleGrad_TextureCubeArray } /* 3469 */,
    std::pair{ "smoothstep(f16x4,f16x4,f16x4)"_h, &smoothstep_Float16x4 } /* 3470 */,
    std::pair{ "textureGetSampledMip(uniform *textureSampled3D,f32x3)"_h, &SampledTextureGetSampledMip_Texture3D } /* 3471 */,
    std::pair{ "textureSampleGradCompare(uniform *texture1D,uniform *sampler,f32,f32,f32,f32)"_h, &TextureSampleGradCompare_Texture1D } /* 3472 */,
    std::pair{ "textureAtomicAdd(uniform *texture1D,i32,i16)"_h, &TextureAtomicAdd_Texture1D_Int16 } /* 3473 */,
    std::pair{ "geometryGetPoint"_h, &GeometryGetPoint } /* 3474 */,
    std::pair{ "acosh(f16x2)"_h, &acosh_Float16x2 } /* 3475 */,
    std::pair{ "acosh(f16x3)"_h, &acosh_Float16x3 } /* 3476 */,
    std::pair{ "acosh(f16x4)"_h, &acosh_Float16x4 } /* 3477 */,
    std::pair{ "textureSampleGradCompareOffset(uniform *textureSampled3D,f32x3,f32x3,f32x3,f32,f32x3)"_h, &SampledTextureSampleGradCompareOffset_Texture3D } /* 3478 */,
    std::pair{ "pixelExportColor(u16x2,literal u16)"_h, &PixelExportColor_UInt16x2_UInt16 } /* 3479 */,
    std::pair{ "u32x2(f16x2)"_h, &UInt32x2_from_Float16x2 } /* 3480 */,
    std::pair{ "vertexSetOutputLayer(u16)"_h, &VertexSetOutputLayer_UInt16 } /* 3481 */,
    std::pair{ "i32x3(i32,i32,i32)"_h, &Int32x3_ctor0 } /* 3482 */,
    std::pair{ "f16x2x4(f16x4,f16x4)"_h, &Float16x2x4_Float16_4_ctor } /* 3483 */,
    std::pair{ "fract"_h, &fract_Float32 } /* 3484 */,
    std::pair{ "fract"_h, &fract_Float32x2 } /* 3485 */,
    std::pair{ "fract"_h, &fract_Float32x3 } /* 3486 */,
    std::pair{ "fract"_h, &fract_Float32x4 } /* 3487 */,
    std::pair{ "fract"_h, &fract_Float16 } /* 3488 */,
    std::pair{ "fract"_h, &fract_Float16x2 } /* 3489 */,
    std::pair{ "fract"_h, &fract_Float16x3 } /* 3490 */,
    std::pair{ "fract"_h, &fract_Float16x4 } /* 3491 */,
    std::pair{ "textureAtomicSubtract(uniform *texture1DArray,i32x2,u16)"_h, &TextureAtomicSubtract_Texture1DArray_UInt16 } /* 3492 */,
    std::pair{ "f32x4(u32x4)"_h, &Float32x4_from_UInt32x4 } /* 3493 */,
    std::pair{ "textureSampleOffset(uniform *texture2DArray,uniform *sampler,f32x3,f32x3)"_h, &TextureSampleOffset_Texture2DArray } /* 3494 */,
    std::pair{ "vertexGetOutputViewport()"_h, &VertexGetOutputViewport } /* 3495 */,
    std::pair{ "f32x2(i16)"_h, &Float32x2_splat_Int16 } /* 3496 */,
    std::pair{ "tanh"_h, &tanh_Float32 } /* 3497 */,
    std::pair{ "tanh"_h, &tanh_Float32x2 } /* 3498 */,
    std::pair{ "tanh"_h, &tanh_Float32x3 } /* 3499 */,
    std::pair{ "tanh"_h, &tanh_Float32x4 } /* 3500 */,
    std::pair{ "tanh"_h, &tanh_Float16 } /* 3501 */,
    std::pair{ "tanh"_h, &tanh_Float16x2 } /* 3502 */,
    std::pair{ "tanh"_h, &tanh_Float16x3 } /* 3503 */,
    std::pair{ "tanh"_h, &tanh_Float16x4 } /* 3504 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture2D,i32x2,i32)"_h, &TextureAtomicCompareExchange_Texture2D_Int32 } /* 3505 */,
    std::pair{ "ceil"_h, &ceil_Float32 } /* 3506 */,
    std::pair{ "ceil"_h, &ceil_Float32x2 } /* 3507 */,
    std::pair{ "ceil"_h, &ceil_Float32x3 } /* 3508 */,
    std::pair{ "ceil"_h, &ceil_Float32x4 } /* 3509 */,
    std::pair{ "ceil"_h, &ceil_Float16 } /* 3510 */,
    std::pair{ "ceil"_h, &ceil_Float16x2 } /* 3511 */,
    std::pair{ "ceil"_h, &ceil_Float16x3 } /* 3512 */,
    std::pair{ "ceil"_h, &ceil_Float16x4 } /* 3513 */,
    std::pair{ "textureAtomicMax(uniform *texture2DArray,i32x3,u16)"_h, &TextureAtomicMax_Texture2DArray_UInt16 } /* 3514 */,
    std::pair{ "textureSampleProjCompareOffset(uniform *textureSampled2D,f32x2,f32,f32,f32x2)"_h, &SampledTextureSampleProjCompareOffset_Texture2D } /* 3515 */,
    std::pair{ "textureSample(uniform *textureSampled2DArray,f32x3)"_h, &SampledTextureSample_Texture2DArray } /* 3516 */,
    std::pair{ "textureSampleGradCompareOffset(uniform *textureSampled1DArray,f32x2,f32x2,f32x2,f32,f32x2)"_h, &SampledTextureSampleGradCompareOffset_Texture1DArray } /* 3517 */,
    std::pair{ "textureSampleLodOffset"_h, &TextureSampleLodOffset_Texture1D } /* 3518 */,
    std::pair{ "textureSampleLodOffset"_h, &SampledTextureSampleLodOffset_Texture1D } /* 3519 */,
    std::pair{ "textureSampleLodOffset"_h, &TextureSampleLodOffset_Texture2D } /* 3520 */,
    std::pair{ "textureSampleLodOffset"_h, &SampledTextureSampleLodOffset_Texture2D } /* 3521 */,
    std::pair{ "textureSampleLodOffset"_h, &TextureSampleLodOffset_Texture3D } /* 3522 */,
    std::pair{ "textureSampleLodOffset"_h, &SampledTextureSampleLodOffset_Texture3D } /* 3523 */,
    std::pair{ "textureSampleLodOffset"_h, &TextureSampleLodOffset_Texture1DArray } /* 3524 */,
    std::pair{ "textureSampleLodOffset"_h, &SampledTextureSampleLodOffset_Texture1DArray } /* 3525 */,
    std::pair{ "textureSampleLodOffset"_h, &TextureSampleLodOffset_Texture2DArray } /* 3526 */,
    std::pair{ "textureSampleLodOffset"_h, &SampledTextureSampleLodOffset_Texture2DArray } /* 3527 */,
    std::pair{ "f32x2(u16x2)"_h, &Float32x2_from_UInt16x2 } /* 3528 */,
    std::pair{ "textureSampleBiasOffset(uniform *textureSampled3D,f32x3,f32,f32x3)"_h, &SampledTextureSampleBiasOffset_Texture3D } /* 3529 */,
    std::pair{ "max(i32x2,i32x2)"_h, &max_Int32x2 } /* 3530 */,
    std::pair{ "i16x3(f16x3)"_h, &Int16x3_from_Float16x3 } /* 3531 */,
    std::pair{ "textureSampleLod(uniform *texture1DArray,uniform *sampler,f32x2,f32)"_h, &TextureSampleLod_Texture1DArray } /* 3532 */,
    std::pair{ "textureAtomicAnd(uniform *textureCube,i32x3,i16)"_h, &TextureAtomicAnd_TextureCube_Int16 } /* 3533 */,
    std::pair{ "textureAtomicStore(uniform *textureCube,i32x3,i16)"_h, &TextureAtomicStore_TextureCube_Int16 } /* 3534 */,
    std::pair{ "saturate"_h, &saturate_Float32 } /* 3535 */,
    std::pair{ "saturate"_h, &saturate_Float32x2 } /* 3536 */,
    std::pair{ "saturate"_h, &saturate_Float32x3 } /* 3537 */,
    std::pair{ "saturate"_h, &saturate_Float32x4 } /* 3538 */,
    std::pair{ "saturate"_h, &saturate_Float16 } /* 3539 */,
    std::pair{ "saturate"_h, &saturate_Float16x2 } /* 3540 */,
    std::pair{ "saturate"_h, &saturate_Float16x3 } /* 3541 */,
    std::pair{ "saturate"_h, &saturate_Float16x4 } /* 3542 */,
    std::pair{ "smoothstep"_h, &smoothstep_Float32 } /* 3543 */,
    std::pair{ "smoothstep"_h, &smoothstep_Float32x2 } /* 3544 */,
    std::pair{ "smoothstep"_h, &smoothstep_Float32x3 } /* 3545 */,
    std::pair{ "smoothstep"_h, &smoothstep_Float32x4 } /* 3546 */,
    std::pair{ "smoothstep"_h, &smoothstep_Float16 } /* 3547 */,
    std::pair{ "smoothstep"_h, &smoothstep_Float16x2 } /* 3548 */,
    std::pair{ "smoothstep"_h, &smoothstep_Float16x3 } /* 3549 */,
    std::pair{ "smoothstep"_h, &smoothstep_Float16x4 } /* 3550 */,
    std::pair{ "textureStoreMip(uniform *mutable textureCube,i32x3,i32,f32x4)"_h, &TextureStoreMip_TextureCube } /* 3551 */,
    std::pair{ "textureAtomicXor(uniform *texture1DArray,i32x2,i16)"_h, &TextureAtomicXor_Texture1DArray_Int16 } /* 3552 */,
    std::pair{ "f16x2(u32)"_h, &Float16x2_splat_UInt32 } /* 3553 */,
    std::pair{ "textureSample(uniform *textureSampled2D,f32x2)"_h, &SampledTextureSample_Texture2D } /* 3554 */,
    std::pair{ "textureSampleProjCompare(uniform *texture2D,uniform *sampler,f32x2,f32,f32)"_h, &TextureSampleProjCompare_Texture2D } /* 3555 */,
    std::pair{ "inverse(f32x4x4)"_h, &inverse_Float32x4x4 } /* 3556 */,
    std::pair{ "textureAtomicMax(uniform *texture1D,i32,i32)"_h, &TextureAtomicMax_Texture1D_Int32 } /* 3557 */,
    std::pair{ "textureSampleBiasCompareOffset(uniform *textureSampled2DArray,f32x3,f32,f32,f32x3)"_h, &SampledTextureSampleBiasCompareOffset_Texture2DArray } /* 3558 */,
    std::pair{ "inverse(f32x4x2)"_h, &inverse_Float32x4x2 } /* 3559 */,
    std::pair{ "u16(i32)"_h, &UInt16_from_Int32 } /* 3560 */,
    std::pair{ "inverse(f32x4x3)"_h, &inverse_Float32x4x3 } /* 3561 */,
    std::pair{ "atan2(f32x2,f32x2)"_h, &atan2_Float32x2 } /* 3562 */,
    std::pair{ "textureAtomicOr(uniform *texture1D,i32,u32)"_h, &TextureAtomicOr_Texture1D_UInt32 } /* 3563 */,
    std::pair{ "i32x4(i32x2,i32,i32)"_h, &Int32x4_ctor1 } /* 3564 */,
    std::pair{ "textureSampleGradProjCompare"_h, &TextureSampleGradProjCompare_Texture1D } /* 3565 */,
    std::pair{ "textureSampleGradProjCompare"_h, &SampledTextureSampleGradProjCompare_Texture1D } /* 3566 */,
    std::pair{ "textureSampleGradProjCompare"_h, &TextureSampleGradProjCompare_Texture2D } /* 3567 */,
    std::pair{ "textureSampleGradProjCompare"_h, &SampledTextureSampleGradProjCompare_Texture2D } /* 3568 */,
    std::pair{ "textureSampleGradProjCompare"_h, &TextureSampleGradProjCompare_Texture3D } /* 3569 */,
    std::pair{ "textureSampleGradProjCompare"_h, &SampledTextureSampleGradProjCompare_Texture3D } /* 3570 */,
    std::pair{ "f32x3(f32x3)"_h, &Float32x3_from_Float32x3 } /* 3571 */,
    std::pair{ "textureGetSampledMip(uniform *textureSampled2DArray,f32x3)"_h, &SampledTextureGetSampledMip_Texture2DArray } /* 3572 */,
    std::pair{ "BlendOperation(u32)"_h, &BlendOperationType.toUnderlyingType } /* 3573 */,
    std::pair{ "f16"_h, &Float16Type } /* 3574 */,
    std::pair{ "f16"_h, &Float16_from_Float32 } /* 3575 */,
    std::pair{ "f16"_h, &Float16_from_UInt32 } /* 3576 */,
    std::pair{ "f16"_h, &Float16_from_Int32 } /* 3577 */,
    std::pair{ "f16"_h, &Float16_from_Bool8 } /* 3578 */,
    std::pair{ "f16"_h, &Float16_from_UInt16 } /* 3579 */,
    std::pair{ "f16"_h, &Float16_from_Int16 } /* 3580 */,
    std::pair{ "f16"_h, &Float16_ctor0 } /* 3581 */,
    std::pair{ "f32"_h, &Float32Type } /* 3582 */,
    std::pair{ "f32"_h, &Float32_from_UInt32 } /* 3583 */,
    std::pair{ "f32"_h, &Float32_from_Int32 } /* 3584 */,
    std::pair{ "f32"_h, &Float32_from_Bool8 } /* 3585 */,
    std::pair{ "f32"_h, &Float32_from_Float16 } /* 3586 */,
    std::pair{ "f32"_h, &Float32_from_UInt16 } /* 3587 */,
    std::pair{ "f32"_h, &Float32_from_Int16 } /* 3588 */,
    std::pair{ "f32"_h, &Float32_ctor0 } /* 3589 */,
    std::pair{ "distance"_h, &distance_Float32x2 } /* 3590 */,
    std::pair{ "distance"_h, &distance_Float32x3 } /* 3591 */,
    std::pair{ "distance"_h, &distance_Float32x4 } /* 3592 */,
    std::pair{ "distance"_h, &distance_Float16x2 } /* 3593 */,
    std::pair{ "distance"_h, &distance_Float16x3 } /* 3594 */,
    std::pair{ "distance"_h, &distance_Float16x4 } /* 3595 */,
    std::pair{ "textureStoreMip(uniform *mutable texture2DMS,i32x2,i32,f32x4)"_h, &TextureStoreMip_Texture2DMS } /* 3596 */,
    std::pair{ "b8x3(i32)"_h, &Bool8x3_splat_Int32 } /* 3597 */,
    std::pair{ "smoothstep(f16,f16,f16)"_h, &smoothstep_Float16 } /* 3598 */,
    std::pair{ "ddx(f16)"_h, &ddx_Float16 } /* 3599 */,
    std::pair{ "pixelExportColor(i16x2,literal u32)"_h, &PixelExportColor_Int16x2_UInt32 } /* 3600 */,
    std::pair{ "atomicStore(*i16,i16,literal MemorySemantics)"_h, &AtomicStore_Int16 } /* 3601 */,
    std::pair{ "textureAtomicAdd(uniform *texture3D,i32x3,u32)"_h, &TextureAtomicAdd_Texture3D_UInt32 } /* 3602 */,
    std::pair{ "clamp(f32x3,f32x3,f32x3)"_h, &clamp_Float32x3 } /* 3603 */,
    std::pair{ "textureAtomicStore(uniform *texture2DArray,i32x3,i32)"_h, &TextureAtomicStore_Texture2DArray_Int32 } /* 3604 */,
    std::pair{ "f16x4x4()"_h, &Float16x4x4_identity } /* 3605 */,
    std::pair{ "textureAtomicMin(uniform *texture3D,i32x3,i16)"_h, &TextureAtomicMin_Texture3D_Int16 } /* 3606 */,
    std::pair{ "refract"_h, &refract_Float32x2 } /* 3607 */,
    std::pair{ "refract"_h, &refract_Float32x3 } /* 3608 */,
    std::pair{ "refract"_h, &refract_Float32x4 } /* 3609 */,
    std::pair{ "refract"_h, &refract_Float16x2 } /* 3610 */,
    std::pair{ "refract"_h, &refract_Float16x3 } /* 3611 */,
    std::pair{ "refract"_h, &refract_Float16x4 } /* 3612 */,
    std::pair{ "pixelExportColor(u32x3,literal u32)"_h, &PixelExportColor_UInt32x3_UInt32 } /* 3613 */,
    std::pair{ "textureAtomicCompareExchange(uniform *textureCubeArray,i32x4,u32)"_h, &TextureAtomicCompareExchange_TextureCubeArray_UInt32 } /* 3614 */,
    std::pair{ "subgroupGetThreadMask"_h, &SubgroupGetThreadMask } /* 3615 */,
    std::pair{ "abs(f32x2)"_h, &abs_Float32x2 } /* 3616 */,
    std::pair{ "abs(f32x3)"_h, &abs_Float32x3 } /* 3617 */,
    std::pair{ "abs(f32x4)"_h, &abs_Float32x4 } /* 3618 */,
    std::pair{ "dot(f32x3,f32x3)"_h, &dot_Float32x3 } /* 3619 */,
    std::pair{ "f32x4x2(f32,f32,f32,f32,f32,f32,f32,f32)"_h, &Float32x4x2_raw_list } /* 3620 */,
    std::pair{ "computeGetIndexInWorkgroup()"_h, &ComputeGetIndexInWorkgroup } /* 3621 */,
    std::pair{ "pixelExportColor(u32,literal u16)"_h, &PixelExportColor_UInt32_UInt16 } /* 3622 */,
    std::pair{ "pixelCache"_h, &PixelCacheType } /* 3623 */,
    std::pair{ "textureAtomicOr(uniform *texture1DArray,i32x2,u16)"_h, &TextureAtomicOr_Texture1DArray_UInt16 } /* 3624 */,
    std::pair{ "atomicCompareExchange(*f16,f16,f16,literal MemorySemantics)"_h, &AtomicCompareExchange_UInt32 } /* 3625 */,
    std::pair{ "atomicCompareExchange(*f16,f16,f16,literal MemorySemantics)"_h, &AtomicCompareExchange_Int32 } /* 3626 */,
    std::pair{ "atomicCompareExchange(*f16,f16,f16,literal MemorySemantics)"_h, &AtomicCompareExchange_UInt16 } /* 3627 */,
    std::pair{ "atomicCompareExchange(*f16,f16,f16,literal MemorySemantics)"_h, &AtomicCompareExchange_Int16 } /* 3628 */,
    std::pair{ "subgroupSwapHorizontal(u16x4)"_h, &SubgroupSwapHorizontal_UInt16x4 } /* 3629 */,
    std::pair{ "subgroupSwapHorizontal(u16x3)"_h, &SubgroupSwapHorizontal_UInt16x3 } /* 3630 */,
    std::pair{ "subgroupSwapHorizontal(u16x2)"_h, &SubgroupSwapHorizontal_UInt16x2 } /* 3631 */,
    std::pair{ "pixelExportColor(i32x4,literal u32)"_h, &PixelExportColor_Int32x4_UInt32 } /* 3632 */,
    std::pair{ "textureAtomicLoad(uniform *texture2DArray,i32x3,f32)"_h, &TextureAtomicLoad_Texture2DArray_Float32 } /* 3633 */,
    std::pair{ "atomicExchange(*i32,i32,literal MemorySemantics)"_h, &AtomicExchange_Int32 } /* 3634 */,
    std::pair{ "lerp(f16x2,f16x2,f16x2)"_h, &lerp_Float16x2 } /* 3635 */,
    std::pair{ "textureSampleBiasOffset(uniform *textureSampled2D,f32x2,f32,f32x2)"_h, &SampledTextureSampleBiasOffset_Texture2D } /* 3636 */,
    std::pair{ "bitCount(i16)"_h, &BitCount_Int16 } /* 3637 */,
    std::pair{ "textureAtomicMin(uniform *texture1DArray,i32x2,i16)"_h, &TextureAtomicMin_Texture1DArray_Int16 } /* 3638 */,
    std::pair{ "subgroupBroadcastFirstActiveThread(u16)"_h, &SubgroupBroadcastFirstActiveThread_UInt16 } /* 3639 */,
    std::pair{ "GeometryTriangle"_h, &GeometryTriangleType } /* 3640 */,
    std::pair{ "textureFetch(uniform *texture3D,i32x3,u32)"_h, &TextureFetch_Texture3D } /* 3641 */,
    std::pair{ "u16x4(u16x3,u16)"_h, &UInt16x4_ctor5 } /* 3642 */,
    std::pair{ "textureAtomicLoad(uniform *texture2D,i32x2,u32)"_h, &TextureAtomicLoad_Texture2D_UInt32 } /* 3643 */,
    std::pair{ "pow(f16x2,f16x2)"_h, &pow_Float16x2 } /* 3644 */,
    std::pair{ "log2(f32)"_h, &log2_Float32 } /* 3645 */,
    std::pair{ "textureAtomicMax(uniform *texture3D,i32x3,i16)"_h, &TextureAtomicMax_Texture3D_Int16 } /* 3646 */,
    std::pair{ "atomicLoad(*f16,literal MemorySemantics)"_h, &AtomicLoad_Float16 } /* 3647 */,
    std::pair{ "u16x3(f16)"_h, &UInt16x3_splat_Float16 } /* 3648 */,
    std::pair{ "textureSampleCompareOffset(uniform *textureSampled2D,f32x2,f32,f32x2)"_h, &SampledTextureSampleCompareOffset_Texture2D } /* 3649 */,
    std::pair{ "textureSample(uniform *textureSampledCubeArray,f32x4)"_h, &SampledTextureSample_TextureCubeArray } /* 3650 */,
    std::pair{ "u16x4(u32x4)"_h, &UInt16x4_from_UInt32x4 } /* 3651 */,
    std::pair{ "textureSampleCompareOffset(uniform *textureSampled2DArray,f32x3,f32,f32x3)"_h, &SampledTextureSampleCompareOffset_Texture2DArray } /* 3652 */,
    std::pair{ "f32x2(b8x2)"_h, &Float32x2_from_Bool8x2 } /* 3653 */,
    std::pair{ "textureSampleGradOffset(uniform *texture3D,uniform *sampler,f32x3,f32x3,f32x3,f32x3)"_h, &TextureSampleGradOffset_Texture3D } /* 3654 */,
    std::pair{ "sign(f16)"_h, &sign_Float16 } /* 3655 */,
    std::pair{ "i16x4(i16x2,i16,i16)"_h, &Int16x4_ctor1 } /* 3656 */,
    std::pair{ "textureAtomicOr(uniform *texture2D,i32x2,u16)"_h, &TextureAtomicOr_Texture2D_UInt16 } /* 3657 */,
    std::pair{ "memoryBarrierBuffer()"_h, &MemoryBarrierBuffer } /* 3658 */,
    std::pair{ "textureSampleGradCompare(uniform *textureSampled1DArray,f32x2,f32x2,f32x2,f32)"_h, &SampledTextureSampleGradCompare_Texture1DArray } /* 3659 */,
    std::pair{ "f32x4(f32)"_h, &Float32x4_splat_Float32 } /* 3660 */,
    std::pair{ "OutputTopology"_h, &OutputTopologyType } /* 3661 */,
    std::pair{ "textureAtomicSubtract(uniform *textureCubeArray,i32x4,i32)"_h, &TextureAtomicSubtract_TextureCubeArray_Int32 } /* 3662 */,
    std::pair{ "clamp(u16x2,u16x2,u16x2)"_h, &clamp_UInt16x2 } /* 3663 */,
    std::pair{ "f16x2x3(f16x3,f16x3)"_h, &Float16x2x3_Float16_3_ctor } /* 3664 */,
    std::pair{ "pixelExportColor(i32x2,literal u16)"_h, &PixelExportColor_Int32x2_UInt16 } /* 3665 */,
    std::pair{ "textureAtomicStore(uniform *texture2D,i32x2,u32)"_h, &TextureAtomicStore_Texture2D_UInt32 } /* 3666 */,
    std::pair{ "textureSampleBiasProj(uniform *textureSampled3D,f32x3,f32,f32)"_h, &SampledTextureSampleBiasProj_Texture3D } /* 3667 */,
    std::pair{ "textureGatherOffset(uniform *textureSampledCubeArray,i32x4,i32,u32)"_h, &SampledTextureGatherOffset_TextureCubeArray } /* 3668 */,
    std::pair{ "u16x2(u16x2)"_h, &UInt16x2_from_UInt16x2 } /* 3669 */,
    std::pair{ "sampler"_h, &SamplerType } /* 3670 */,
    std::pair{ "subgroupGetThreadAndLowerMask"_h, &SubgroupGetThreadAndLowerMask } /* 3671 */,
    std::pair{ "u32x3(f32)"_h, &UInt32x3_splat_Float32 } /* 3672 */,
    std::pair{ "u32x4(u32)"_h, &UInt32x4_splat_UInt32 } /* 3673 */,
    std::pair{ "atomicExchange(*u16,u16,literal MemorySemantics)"_h, &AtomicExchange_UInt16 } /* 3674 */,
    std::pair{ "textureSampleOffset(uniform *textureSampled1D,f32,f32)"_h, &SampledTextureSampleOffset_Texture1D } /* 3675 */,
    std::pair{ "BlendColorMask"_h, &BlendColorMaskType } /* 3676 */,
    std::pair{ "textureSampleGradProjCompare(uniform *textureSampled2D,f32x2,f32x2,f32x2,f32,f32)"_h, &SampledTextureSampleGradProjCompare_Texture2D } /* 3677 */,
    std::pair{ "mad(u32x2,u32x2,u32x2)"_h, &mad_UInt32x2 } /* 3678 */,
    std::pair{ "textureAtomicMin(uniform *textureCubeArray,i32x4,u32)"_h, &TextureAtomicMin_TextureCubeArray_UInt32 } /* 3679 */,
    std::pair{ "min(f32,f32)"_h, &min_Float32 } /* 3680 */,
    std::pair{ "textureSampleCompare(uniform *textureSampled2D,f32x2,f32)"_h, &SampledTextureSampleCompare_Texture2D } /* 3681 */,
    std::pair{ "textureGatherOffset(uniform *textureSampled2D,i32x2,i32,u32)"_h, &SampledTextureGatherOffset_Texture2D } /* 3682 */,
    std::pair{ "castToU16(f16)"_h, &castToU16_Float16 } /* 3683 */,
    std::pair{ "textureSampleLodOffset(uniform *texture1D,uniform *sampler,f32,f32,f32)"_h, &TextureSampleLodOffset_Texture1D } /* 3684 */,
    std::pair{ "floor(f32)"_h, &floor_Float32 } /* 3685 */,
    std::pair{ "atanh(f16)"_h, &atanh_Float16 } /* 3686 */,
    std::pair{ "pow(f32x4,f32x4)"_h, &pow_Float32x4 } /* 3687 */,
    std::pair{ "textureSampleBiasOffset(uniform *textureSampled1DArray,f32x2,f32,f32x2)"_h, &SampledTextureSampleBiasOffset_Texture1DArray } /* 3688 */,
    std::pair{ "textureGetSampledMip(uniform *textureCube,uniform *sampler,f32x3)"_h, &TextureGetSampledMip_TextureCube } /* 3689 */,
    std::pair{ "textureSampleProj(uniform *texture1D,uniform *sampler,f32,f32)"_h, &TextureSampleProj_Texture1D } /* 3690 */,
    std::pair{ "all"_h, &all_Bool8 } /* 3691 */,
    std::pair{ "all"_h, &all_Bool8x2 } /* 3692 */,
    std::pair{ "all"_h, &all_Bool8x3 } /* 3693 */,
    std::pair{ "all"_h, &all_Bool8x4 } /* 3694 */,
    std::pair{ "b8x4(u16)"_h, &Bool8x4_splat_UInt16 } /* 3695 */,
    std::pair{ "any"_h, &any_Bool8 } /* 3696 */,
    std::pair{ "any"_h, &any_Bool8x2 } /* 3697 */,
    std::pair{ "any"_h, &any_Bool8x3 } /* 3698 */,
    std::pair{ "any"_h, &any_Bool8x4 } /* 3699 */,
    std::pair{ "abs"_h, &abs_Int32 } /* 3700 */,
    std::pair{ "abs"_h, &abs_Int32x2 } /* 3701 */,
    std::pair{ "abs"_h, &abs_Int32x3 } /* 3702 */,
    std::pair{ "abs"_h, &abs_Int32x4 } /* 3703 */,
    std::pair{ "abs"_h, &abs_Int16 } /* 3704 */,
    std::pair{ "abs"_h, &abs_Int16x2 } /* 3705 */,
    std::pair{ "abs"_h, &abs_Int16x3 } /* 3706 */,
    std::pair{ "abs"_h, &abs_Int16x4 } /* 3707 */,
    std::pair{ "abs"_h, &abs_Float32 } /* 3708 */,
    std::pair{ "abs"_h, &abs_Float32x2 } /* 3709 */,
    std::pair{ "abs"_h, &abs_Float32x3 } /* 3710 */,
    std::pair{ "abs"_h, &abs_Float32x4 } /* 3711 */,
    std::pair{ "abs"_h, &abs_Float16 } /* 3712 */,
    std::pair{ "abs"_h, &abs_Float16x2 } /* 3713 */,
    std::pair{ "abs"_h, &abs_Float16x3 } /* 3714 */,
    std::pair{ "abs"_h, &abs_Float16x4 } /* 3715 */,
    std::pair{ "PolygonMode"_h, &PolygonModeType } /* 3716 */,
    std::pair{ "textureAtomicAdd(uniform *textureCube,i32x3,u16)"_h, &TextureAtomicAdd_TextureCube_UInt16 } /* 3717 */,
    std::pair{ "i16x2(i16,i16)"_h, &Int16x2_ctor0 } /* 3718 */,
    std::pair{ "textureSampleCompare(uniform *textureSampled2DArray,f32x3,f32)"_h, &SampledTextureSampleCompare_Texture2DArray } /* 3719 */,
    std::pair{ "textureSampleGradProj(uniform *texture1D,uniform *sampler,f32,f32,f32,f32)"_h, &TextureSampleGradProj_Texture1D } /* 3720 */,
    std::pair{ "textureAtomicExchange(uniform *texture3D,i32x3,i32)"_h, &TextureAtomicExchange_Texture3D_Int32 } /* 3721 */,
    std::pair{ "u32(b8)"_h, &UInt32_from_Bool8 } /* 3722 */,
    std::pair{ "i32x2(f16x2)"_h, &Int32x2_from_Float16x2 } /* 3723 */,
    std::pair{ "b8x2(i32x2)"_h, &Bool8x2_from_Int32x2 } /* 3724 */,
    std::pair{ "exp2"_h, &exp2_Float32 } /* 3725 */,
    std::pair{ "exp2"_h, &exp2_Float32x2 } /* 3726 */,
    std::pair{ "exp2"_h, &exp2_Float32x3 } /* 3727 */,
    std::pair{ "exp2"_h, &exp2_Float32x4 } /* 3728 */,
    std::pair{ "exp2"_h, &exp2_Float16 } /* 3729 */,
    std::pair{ "exp2"_h, &exp2_Float16x2 } /* 3730 */,
    std::pair{ "exp2"_h, &exp2_Float16x3 } /* 3731 */,
    std::pair{ "exp2"_h, &exp2_Float16x4 } /* 3732 */,
    std::pair{ "pixelExportColor(f16x3,literal u16)"_h, &PixelExportColor_Float16x3_UInt16 } /* 3733 */,
    std::pair{ "pixelExportColor(i32,literal i16)"_h, &PixelExportColor_Int32_Int16 } /* 3734 */,
    std::pair{ "textureLoad(uniform *mutable texture2D,i32x2)"_h, &TextureLoad_Texture2D } /* 3735 */,
    std::pair{ "u32(InputTopology)"_h, &InputTopologyType.fromUnderlyingType } /* 3736 */,
    std::pair{ "textureAtomicXor(uniform *textureCube,i32x3,i16)"_h, &TextureAtomicXor_TextureCube_Int16 } /* 3737 */,
    std::pair{ "asinh"_h, &asinh_Float32 } /* 3738 */,
    std::pair{ "asinh"_h, &asinh_Float32x2 } /* 3739 */,
    std::pair{ "asinh"_h, &asinh_Float32x3 } /* 3740 */,
    std::pair{ "asinh"_h, &asinh_Float32x4 } /* 3741 */,
    std::pair{ "asinh"_h, &asinh_Float16 } /* 3742 */,
    std::pair{ "asinh"_h, &asinh_Float16x2 } /* 3743 */,
    std::pair{ "asinh"_h, &asinh_Float16x3 } /* 3744 */,
    std::pair{ "asinh"_h, &asinh_Float16x4 } /* 3745 */,
    std::pair{ "textureFetchSample"_h, &TextureFetchSample_Texture1D } /* 3746 */,
    std::pair{ "textureFetchSample"_h, &TextureFetchSample_Texture2D } /* 3747 */,
    std::pair{ "textureFetchSample"_h, &TextureFetchSample_Texture3D } /* 3748 */,
    std::pair{ "textureFetchSample"_h, &TextureFetchSample_Texture1DArray } /* 3749 */,
    std::pair{ "textureFetchSample"_h, &TextureFetchSample_Texture2DArray } /* 3750 */,
    std::pair{ "textureFetchSample"_h, &TextureFetchSample_Texture2DMS } /* 3751 */,
    std::pair{ "textureFetchSample"_h, &TextureFetchSample_Texture2DMSArray } /* 3752 */,
    std::pair{ "reflect(f32x4,f32x4)"_h, &reflect_Float32x4 } /* 3753 */,
    std::pair{ "textureAtomicMax(uniform *texture1DArray,i32x2,u16)"_h, &TextureAtomicMax_Texture1DArray_UInt16 } /* 3754 */,
    std::pair{ "textureAtomicSubtract(uniform *texture3D,i32x3,i32)"_h, &TextureAtomicSubtract_Texture3D_Int32 } /* 3755 */,
    std::pair{ "tan(f16x4)"_h, &tan_Float16x4 } /* 3756 */,
    std::pair{ "tan(f16x3)"_h, &tan_Float16x3 } /* 3757 */,
    std::pair{ "tan(f16x2)"_h, &tan_Float16x2 } /* 3758 */,
    std::pair{ "subgroupGetId"_h, &SubgroupGetId } /* 3759 */,
    std::pair{ "min(f32x3,f32x3)"_h, &min_Float32x3 } /* 3760 */,
    std::pair{ "textureAtomicOr(uniform *textureCube,i32x3,u32)"_h, &TextureAtomicOr_TextureCube_UInt32 } /* 3761 */,
    std::pair{ "clamp(i32x4,i32x4,i32x4)"_h, &clamp_Int32x4 } /* 3762 */,
    std::pair{ "textureSampleBias(uniform *textureCube,uniform *sampler,f32x3,f32)"_h, &TextureSampleBias_TextureCube } /* 3763 */,
    std::pair{ "AddressMode"_h, &AddressModeType } /* 3764 */,
    std::pair{ "lerp(f32x4,f32x4,f32x4)"_h, &lerp_Float32x4 } /* 3765 */,
    std::pair{ "textureAtomicCompareExchange(uniform *texture2D,i32x2,i16)"_h, &TextureAtomicCompareExchange_Texture2D_Int16 } /* 3766 */,
    std::pair{ "length"_h, &length_Float32x2 } /* 3767 */,
    std::pair{ "length"_h, &length_Float32x3 } /* 3768 */,
    std::pair{ "length"_h, &length_Float32x4 } /* 3769 */,
    std::pair{ "length"_h, &length_Float16x2 } /* 3770 */,
    std::pair{ "length"_h, &length_Float16x3 } /* 3771 */,
    std::pair{ "length"_h, &length_Float16x4 } /* 3772 */,
    std::pair{ "executionBarrierSubgroup"_h, &ExecutionBarrierSubgroup } /* 3773 */,
    std::pair{ "textureAtomicAdd(uniform *texture1D,i32,i32)"_h, &TextureAtomicAdd_Texture1D_Int32 } /* 3774 */,
    std::pair{ "i16x2(i16x2)"_h, &Int16x2_from_Int16x2 } /* 3775 */,
    std::pair{ "textureSampleProj(uniform *texture2D,uniform *sampler,f32x2,f32)"_h, &TextureSampleProj_Texture2D } /* 3776 */,
    std::pair{ "textureSampleGradOffset"_h, &TextureSampleGradOffset_Texture1D } /* 3777 */,
    std::pair{ "textureSampleGradOffset"_h, &SampledTextureSampleGradOffset_Texture1D } /* 3778 */,
    std::pair{ "textureSampleGradOffset"_h, &TextureSampleGradOffset_Texture2D } /* 3779 */,
    std::pair{ "textureSampleGradOffset"_h, &SampledTextureSampleGradOffset_Texture2D } /* 3780 */,
    std::pair{ "textureSampleGradOffset"_h, &TextureSampleGradOffset_Texture3D } /* 3781 */,
    std::pair{ "textureSampleGradOffset"_h, &SampledTextureSampleGradOffset_Texture3D } /* 3782 */,
    std::pair{ "textureSampleGradOffset"_h, &TextureSampleGradOffset_Texture1DArray } /* 3783 */,
    std::pair{ "textureSampleGradOffset"_h, &SampledTextureSampleGradOffset_Texture1DArray } /* 3784 */,
    std::pair{ "textureSampleGradOffset"_h, &TextureSampleGradOffset_Texture2DArray } /* 3785 */,
    std::pair{ "textureSampleGradOffset"_h, &SampledTextureSampleGradOffset_Texture2DArray } /* 3786 */,
    std::pair{ "normalize"_h, &normalize_Float32x2 } /* 3787 */,
    std::pair{ "normalize"_h, &normalize_Float32x3 } /* 3788 */,
    std::pair{ "normalize"_h, &normalize_Float32x4 } /* 3789 */,
    std::pair{ "normalize"_h, &normalize_Float16x2 } /* 3790 */,
    std::pair{ "normalize"_h, &normalize_Float16x3 } /* 3791 */,
    std::pair{ "normalize"_h, &normalize_Float16x4 } /* 3792 */,
    std::pair{ "f32x2(f16x2)"_h, &Float32x2_from_Float16x2 } /* 3793 */,
    std::pair{ "f32x2(i32)"_h, &Float32x2_splat_Int32 } /* 3794 */,
    std::pair{ "sinh(f16x4)"_h, &sinh_Float16x4 } /* 3795 */,
    std::pair{ "sinh(f16x2)"_h, &sinh_Float16x2 } /* 3796 */,
    std::pair{ "textureSampleGradOffset(uniform *textureSampled1DArray,f32x2,f32x2,f32x2,f32x2)"_h, &SampledTextureSampleGradOffset_Texture1DArray } /* 3797 */,
    std::pair{ "sinh(f16x3)"_h, &sinh_Float16x3 } /* 3798 */,
    std::pair{ "pixelExportColor(f32x4,literal u32)"_h, &PixelExportColor_Float32x4_UInt32 } /* 3799 */,
    std::pair{ "atomicExchange(*f32,f32,literal MemorySemantics)"_h, &AtomicExchange_Float32 } /* 3800 */,
    std::pair{ "u16x2(u32x2)"_h, &UInt16x2_from_UInt32x2 } /* 3801 */,
    std::pair{ "textureAtomicMax(uniform *texture2DArray,i32x3,u32)"_h, &TextureAtomicMax_Texture2DArray_UInt32 } /* 3802 */,
    std::pair{ "GeometryLineAdjacency"_h, &GeometryLineAdjacencyType } /* 3803 */,
    std::pair{ "textureSampleLodProjCompareOffset"_h, &TextureSampleLodProjCompareOffset_Texture1D } /* 3804 */,
    std::pair{ "textureSampleLodProjCompareOffset"_h, &SampledTextureSampleLodProjCompareOffset_Texture1D } /* 3805 */,
    std::pair{ "textureSampleLodProjCompareOffset"_h, &TextureSampleLodProjCompareOffset_Texture2D } /* 3806 */,
    std::pair{ "textureSampleLodProjCompareOffset"_h, &SampledTextureSampleLodProjCompareOffset_Texture2D } /* 3807 */,
    std::pair{ "textureSampleLodProjCompareOffset"_h, &TextureSampleLodProjCompareOffset_Texture3D } /* 3808 */,
    std::pair{ "textureSampleLodProjCompareOffset"_h, &SampledTextureSampleLodProjCompareOffset_Texture3D } /* 3809 */,
    std::pair{ "subgroupGetNum()"_h, &SubgroupGetNum } /* 3810 */,
    std::pair{ "i16x2(b8)"_h, &Int16x2_splat_Bool8 } /* 3811 */,
    std::pair{ "textureSampleCompareOffset(uniform *texture2D,uniform *sampler,f32x2,f32,f32x2)"_h, &TextureSampleCompareOffset_Texture2D } /* 3812 */,
    std::pair{ "texture1D"_h, &Texture1DType } /* 3813 */,
    std::pair{ "texture2D"_h, &Texture2DType } /* 3814 */,
    std::pair{ "texture3D"_h, &Texture3DType } /* 3815 */,
    std::pair{ "textureSampleCompare"_h, &TextureSampleCompare_Texture1D } /* 3816 */,
    std::pair{ "textureSampleCompare"_h, &SampledTextureSampleCompare_Texture1D } /* 3817 */,
    std::pair{ "textureSampleCompare"_h, &TextureSampleCompare_Texture2D } /* 3818 */,
    std::pair{ "textureSampleCompare"_h, &SampledTextureSampleCompare_Texture2D } /* 3819 */,
    std::pair{ "textureSampleCompare"_h, &TextureSampleCompare_Texture3D } /* 3820 */,
    std::pair{ "textureSampleCompare"_h, &SampledTextureSampleCompare_Texture3D } /* 3821 */,
    std::pair{ "textureSampleCompare"_h, &TextureSampleCompare_Texture1DArray } /* 3822 */,
    std::pair{ "textureSampleCompare"_h, &SampledTextureSampleCompare_Texture1DArray } /* 3823 */,
    std::pair{ "textureSampleCompare"_h, &TextureSampleCompare_Texture2DArray } /* 3824 */,
    std::pair{ "textureSampleCompare"_h, &SampledTextureSampleCompare_Texture2DArray } /* 3825 */,
    std::pair{ "refract(f16x3,f16x3,f16x3)"_h, &refract_Float16x3 } /* 3826 */,
    std::pair{ "f16x2(u16)"_h, &Float16x2_splat_UInt16 } /* 3827 */,
    std::pair{ "smoothstep(f16x3,f16x3,f16x3)"_h, &smoothstep_Float16x3 } /* 3828 */,
    std::pair{ "vertexGetBaseInstanceIndex"_h, &VertexGetBaseInstanceIndex } /* 3829 */,
    std::pair{ "textureSampleCompareOffset(uniform *texture1D,uniform *sampler,f32,f32,f32)"_h, &TextureSampleCompareOffset_Texture1D } /* 3830 */,
    std::pair{ "textureAtomicXor(uniform *texture1DArray,i32x2,i32)"_h, &TextureAtomicXor_Texture1DArray_Int32 } /* 3831 */,
    std::pair{ "u32(Color)"_h, &ColorType.fromUnderlyingType } /* 3832 */,
    std::pair{ "textureAtomicMax(uniform *texture1D,i32,i16)"_h, &TextureAtomicMax_Texture1D_Int16 } /* 3833 */,
    std::pair{ "i16x4(b8x4)"_h, &Int16x4_from_Bool8x4 } /* 3834 */,
    std::pair{ "castToF32(i32)"_h, &castToF32_Int32 } /* 3835 */,
    std::pair{ "atomicLoad(*i32,literal MemorySemantics)"_h, &AtomicLoad_Int32 } /* 3836 */,
    std::pair{ "max(f32x4,f32x4)"_h, &max_Float32x4 } /* 3837 */,
    std::pair{ "textureSampleLodProjCompareOffset(uniform *textureSampled3D,f32x3,f32,f32,f32,f32x3)"_h, &SampledTextureSampleLodProjCompareOffset_Texture3D } /* 3838 */,
    std::pair{ "textureStoreMip(uniform *mutable texture2D,i32x2,i32,f32x4)"_h, &TextureStoreMip_Texture2D } /* 3839 */,
    std::pair{ "BlendColorMask(u32)"_h, &BlendColorMaskType.toUnderlyingType } /* 3840 */,
    std::pair{ "textureSampleLodCompareOffset(uniform *textureSampled2D,f32x2,f32,f32,f32x2)"_h, &SampledTextureSampleLodCompareOffset_Texture2D } /* 3841 */,
    std::pair{ "f16x3(i16)"_h, &Float16x3_splat_Int16 } /* 3842 */,
    std::pair{ "textureSampleGradCompareOffset(uniform *texture1D,uniform *sampler,f32,f32,f32,f32,f32)"_h, &TextureSampleGradCompareOffset_Texture1D } /* 3843 */,
    std::pair{ "f16x4x3(f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16,f16)"_h, &Float16x4x3_raw_list } /* 3844 */,
    std::pair{ "lerp(f16x4,f16x4,f16x4)"_h, &lerp_Float16x4 } /* 3845 */,
    std::pair{ "ddx(f32)"_h, &ddx_Float32 } /* 3846 */,
    std::pair{ "u16x4(f16)"_h, &UInt16x4_splat_Float16 } /* 3847 */,
    std::pair{ "pixelExportColor(i16x2,literal u16)"_h, &PixelExportColor_Int16x2_UInt16 } /* 3848 */,
    std::pair{ "textureAtomicAdd(uniform *texture3D,i32x3,u16)"_h, &TextureAtomicAdd_Texture3D_UInt16 } /* 3849 */,
    std::pair{ "atomicAnd(*u16,u16,literal MemorySemantics)"_h, &AtomicAnd_UInt16 } /* 3850 */,
    std::pair{ "textureSampleProj"_h, &TextureSampleProj_Texture1D } /* 3851 */,
    std::pair{ "textureSampleProj"_h, &SampledTextureSampleProj_Texture1D } /* 3852 */,
    std::pair{ "textureSampleProj"_h, &TextureSampleProj_Texture2D } /* 3853 */,
    std::pair{ "textureSampleProj"_h, &SampledTextureSampleProj_Texture2D } /* 3854 */,
    std::pair{ "textureSampleProj"_h, &TextureSampleProj_Texture3D } /* 3855 */,
    std::pair{ "textureSampleProj"_h, &SampledTextureSampleProj_Texture3D } /* 3856 */,
    std::pair{ "trunc(f16x2)"_h, &trunc_Float16x2 } /* 3857 */,
    std::pair{ "trunc(f16x3)"_h, &trunc_Float16x3 } /* 3858 */,
    std::pair{ "trunc(f16x4)"_h, &trunc_Float16x4 } /* 3859 */,
    std::pair{ "Partition(u32)"_h, &PartitionType.toUnderlyingType } /* 3860 */,
    std::pair{ "textureAtomicStore(uniform *texture1D,i32,u32)"_h, &TextureAtomicStore_Texture1D_UInt32 } /* 3861 */,
    std::pair{ "pow(f16x3,f16x3)"_h, &pow_Float16x3 } /* 3862 */,
    std::pair{ "textureAtomicAdd(uniform *texture2D,i32x2,u16)"_h, &TextureAtomicAdd_Texture2D_UInt16 } /* 3863 */,
    std::pair{ "min(u16x3,u16x3)"_h, &min_UInt16x3 } /* 3864 */,
    std::pair{ "bitInsert"_h, &BitInsert_UInt16 } /* 3865 */,
    std::pair{ "bitInsert"_h, &BitInsert_UInt32 } /* 3866 */,
    std::pair{ "u16x2(f16x2)"_h, &UInt16x2_from_Float16x2 } /* 3867 */,
    std::pair{ "atomicStore(*f16,f16,literal MemorySemantics)"_h, &AtomicStore_Float16 } /* 3868 */,
    std::pair{ "memoryBarrierTexture"_h, &MemoryBarrierTexture } /* 3869 */,
    std::pair{ "u32x4(u32x2,u32,u32)"_h, &UInt32x4_ctor1 } /* 3870 */,
    std::pair{ "pixelExportColor(u32x3,literal u16)"_h, &PixelExportColor_UInt32x3_UInt16 } /* 3871 */,
    std::pair{ "textureAtomicStore(uniform *texture2DArray,i32x3,i16)"_h, &TextureAtomicStore_Texture2DArray_Int16 } /* 3872 */,
    std::pair{ "PixelOrigin(u32)"_h, &PixelOriginType.toUnderlyingType } /* 3873 */,
    std::pair{ "textureAtomicAnd(uniform *texture3D,i32x3,u16)"_h, &TextureAtomicAnd_Texture3D_UInt16 } /* 3874 */,
    std::pair{ "f32x3x4(f32x4,f32x4,f32x4)"_h, &Float32x3x4_Float32_4_ctor } /* 3875 */,
    std::pair{ "textureSampleBiasCompare"_h, &TextureSampleBiasCompare_Texture1D } /* 3876 */,
    std::pair{ "textureSampleBiasCompare"_h, &SampledTextureSampleBiasCompare_Texture1D } /* 3877 */,
    std::pair{ "textureSampleBiasCompare"_h, &TextureSampleBiasCompare_Texture2D } /* 3878 */,
    std::pair{ "textureSampleBiasCompare"_h, &SampledTextureSampleBiasCompare_Texture2D } /* 3879 */,
    std::pair{ "textureSampleBiasCompare"_h, &TextureSampleBiasCompare_Texture3D } /* 3880 */,
    std::pair{ "textureSampleBiasCompare"_h, &SampledTextureSampleBiasCompare_Texture3D } /* 3881 */,
    std::pair{ "textureSampleBiasCompare"_h, &TextureSampleBiasCompare_Texture1DArray } /* 3882 */,
    std::pair{ "textureSampleBiasCompare"_h, &SampledTextureSampleBiasCompare_Texture1DArray } /* 3883 */,
    std::pair{ "textureSampleBiasCompare"_h, &TextureSampleBiasCompare_Texture2DArray } /* 3884 */,
    std::pair{ "textureSampleBiasCompare"_h, &SampledTextureSampleBiasCompare_Texture2DArray } /* 3885 */,
    std::pair{ "textureSampleLodProjCompareOffset(uniform *textureSampled2D,f32x2,f32,f32,f32,f32x2)"_h, &SampledTextureSampleLodProjCompareOffset_Texture2D } /* 3886 */,
    std::pair{ "refract(f16x4,f16x4,f16x4)"_h, &refract_Float16x4 } /* 3887 */,
    std::pair{ "pixelExportColor(f32x2,literal u16)"_h, &PixelExportColor_Float32x2_UInt16 } /* 3888 */,
    std::pair{ "textureAtomicExchange(uniform *texture1DArray,i32x2,f32)"_h, &TextureAtomicExchange_Texture1DArray_Float32 } /* 3889 */,
    std::pair{ "f32x2x3(f32x3,f32x3)"_h, &Float32x2x3_Float32_3_ctor } /* 3890 */,
    std::pair{ "cos(f32x4)"_h, &cos_Float32x4 } /* 3891 */,
    std::pair{ "pixelExportColor(i32x4,literal u16)"_h, &PixelExportColor_Int32x4_UInt16 } /* 3892 */,
    std::pair{ "cos(f32x3)"_h, &cos_Float32x3 } /* 3893 */,
    std::pair{ "cos(f32x2)"_h, &cos_Float32x2 } /* 3894 */,
    std::pair{ "log2(f16)"_h, &log2_Float16 } /* 3895 */,
    std::pair{ "geometryExportPrimitiveIndex(u32)"_h, &GeometryExportPrimitiveIndex } /* 3896 */,
    std::pair{ "bitCount(i32)"_h, &BitCount_Int32 } /* 3897 */,
    std::pair{ "i16x3(f16)"_h, &Int16x3_splat_Float16 } /* 3898 */,
    std::pair{ "textureAtomicMin(uniform *texture1DArray,i32x2,i32)"_h, &TextureAtomicMin_Texture1DArray_Int32 } /* 3899 */,
    std::pair{ "u32x3(i32)"_h, &UInt32x3_splat_Int32 } /* 3900 */,
    std::pair{ "f32x4(f16)"_h, &Float32x4_splat_Float16 } /* 3901 */,
    std::pair{ "textureAtomicLoad(uniform *texture2D,i32x2,u16)"_h, &TextureAtomicLoad_Texture2D_UInt16 } /* 3902 */,
    std::pair{ "memoryBarrierSubgroup()"_h, &MemoryBarrierSubgroup } /* 3903 */,
    std::pair{ "vertexGetInstanceIndex()"_h, &VertexGetInstanceIndex } /* 3904 */,
    std::pair{ "u32(ExecutionScope)"_h, &ExecutionScopeType.fromUnderlyingType } /* 3905 */,
    std::pair{ "u16x3(f32)"_h, &UInt16x3_splat_Float32 } /* 3906 */,
    std::pair{ "textureAtomicMax(uniform *texture3D,i32x3,i32)"_h, &TextureAtomicMax_Texture3D_Int32 } /* 3907 */,
    std::pair{ "clamp(f16x3,f16x3,f16x3)"_h, &clamp_Float16x3 } /* 3908 */,
    std::pair{ "atomicLoad(*u16,literal MemorySemantics)"_h, &AtomicLoad_UInt16 } /* 3909 */,
    std::pair{ "textureAtomicLoad(uniform *texture1D,i32,i32)"_h, &TextureAtomicLoad_Texture1D_Int32 } /* 3910 */,
    std::pair{ "u32(BlendColorMask)"_h, &BlendColorMaskType.fromUnderlyingType } /* 3911 */,
    std::pair{ "textureAtomicOr(uniform *texture2D,i32x2,u32)"_h, &TextureAtomicOr_Texture2D_UInt32 } /* 3912 */,
    std::pair{ "f32x4(f32x2,f32,f32)"_h, &Float32x4_ctor1 } /* 3913 */,
    std::pair{ "textureSampleBias(uniform *textureCubeArray,uniform *sampler,f32x4,f32)"_h, &TextureSampleBias_TextureCubeArray } /* 3914 */,
    std::pair{ "texture2DArray"_h, &Texture2DArrayType } /* 3915 */,
    std::pair{ "smoothstep(f32,f32,f32)"_h, &smoothstep_Float32 } /* 3916 */,
    std::pair{ "textureSampleBiasOffset(uniform *texture1DArray,uniform *sampler,f32x2,f32,f32x2)"_h, &TextureSampleBiasOffset_Texture1DArray } /* 3917 */,
    std::pair{ "textureSampled2D"_h, &SampledTexture2DType } /* 3918 */,
    std::pair{ "textureSampled3D"_h, &SampledTexture3DType } /* 3919 */,
    std::pair{ "textureSampled1D"_h, &SampledTexture1DType } /* 3920 */,
    std::pair{ "f16x3(f32x3)"_h, &Float16x3_from_Float32x3 } /* 3921 */,
    std::pair{ "textureGetSamples(uniform *texture2DMSArray)"_h, &TextureGetSamples_Texture2DMSArray } /* 3922 */,
    std::pair{ "u32x4(u16)"_h, &UInt32x4_splat_UInt16 } /* 3923 */,
    std::pair{ "subgroupSwapHorizontal(i16x3)"_h, &SubgroupSwapHorizontal_Int16x3 } /* 3924 */,
    std::pair{ "subgroupSwapHorizontal(i16x2)"_h, &SubgroupSwapHorizontal_Int16x2 } /* 3925 */,
    std::pair{ "subgroupSwapHorizontal(i16x4)"_h, &SubgroupSwapHorizontal_Int16x4 } /* 3926 */,
    std::pair{ "textureGetSize(uniform *textureCube)"_h, &TextureGetSize_TextureCube } /* 3927 */,
    std::pair{ "textureAtomicStore(uniform *texture2D,i32x2,u16)"_h, &TextureAtomicStore_Texture2D_UInt16 } /* 3928 */,
    std::pair{ "i32x2(u16x2)"_h, &Int32x2_from_UInt16x2 } /* 3929 */,
    std::pair{ "i16x4(u16)"_h, &Int16x4_splat_UInt16 } /* 3930 */,
    std::pair{ "pixelExportColor(i32x2,literal u32)"_h, &PixelExportColor_Int32x2_UInt32 } /* 3931 */,
    std::pair{ "u16x2(u16,u16)"_h, &UInt16x2_ctor0 } /* 3932 */,
    std::pair{ "u32(u32)"_h, &UInt32_ctor0 } /* 3933 */,
    std::pair{ "textureSampleCompareOffset(uniform *textureSampled1DArray,f32x2,f32,f32x2)"_h, &SampledTextureSampleCompareOffset_Texture1DArray } /* 3934 */,
    std::pair{ "textureSampleBiasProjOffset(uniform *texture1D,uniform *sampler,f32,f32,f32,f32)"_h, &TextureSampleBiasProjOffset_Texture1D } /* 3935 */,
    std::pair{ "textureAtomicMin(uniform *texture2D,i32x2,u16)"_h, &TextureAtomicMin_Texture2D_UInt16 } /* 3936 */,
    std::pair{ "fract(f32x4)"_h, &fract_Float32x4 } /* 3937 */,
    std::pair{ "textureCube"_h, &TextureCubeType } /* 3938 */,
    std::pair{ "fract(f32x2)"_h, &fract_Float32x2 } /* 3939 */,
    std::pair{ "fract(f32x3)"_h, &fract_Float32x3 } /* 3940 */,
    std::pair{ "cos"_h, &cos_Float32 } /* 3941 */,
    std::pair{ "cos"_h, &cos_Float32x2 } /* 3942 */,
    std::pair{ "cos"_h, &cos_Float32x3 } /* 3943 */,
    std::pair{ "cos"_h, &cos_Float32x4 } /* 3944 */,
    std::pair{ "cos"_h, &cos_Float16 } /* 3945 */,
    std::pair{ "cos"_h, &cos_Float16x2 } /* 3946 */,
    std::pair{ "cos"_h, &cos_Float16x3 } /* 3947 */,
    std::pair{ "cos"_h, &cos_Float16x4 } /* 3948 */,
    std::pair{ "textureAtomicSubtract(uniform *texture2DArray,i32x3,i16)"_h, &TextureAtomicSubtract_Texture2DArray_Int16 } /* 3949 */,
    std::pair{ "u32x3(f16)"_h, &UInt32x3_splat_Float16 } /* 3950 */,
    std::pair{ "subgroupBallot(b8)"_h, &SubgroupBallot } /* 3951 */,
    std::pair{ "atomicCompareExchange"_h, &AtomicCompareExchange_UInt32 } /* 3952 */,
    std::pair{ "atomicCompareExchange"_h, &AtomicCompareExchange_Int32 } /* 3953 */,
    std::pair{ "atomicCompareExchange"_h, &AtomicCompareExchange_UInt16 } /* 3954 */,
    std::pair{ "atomicCompareExchange"_h, &AtomicCompareExchange_Int16 } /* 3955 */,
    std::pair{ "textureAtomicMin(uniform *textureCubeArray,i32x4,u16)"_h, &TextureAtomicMin_TextureCubeArray_UInt16 } /* 3956 */,
    std::pair{ "pixelExportColor(f32,literal u32)"_h, &PixelExportColor_Float32_UInt32 } /* 3957 */,
    std::pair{ "mad(u32x3,u32x3,u32x3)"_h, &mad_UInt32x3 } /* 3958 */,
    std::pair{ "textureAtomicAnd(uniform *texture2DArray,i32x3,i32)"_h, &TextureAtomicAnd_Texture2DArray_Int32 } /* 3959 */,
    std::pair{ "u16x4(u16x2,u16x2)"_h, &UInt16x4_ctor4 } /* 3960 */,
    std::pair{ "f32x3(f16x3)"_h, &Float32x3_from_Float16x3 } /* 3961 */,
    std::pair{ "i32x3(f16x3)"_h, &Int32x3_from_Float16x3 } /* 3962 */,
    std::pair{ "textureAtomicXor(uniform *texture2DArray,i32x3,i32)"_h, &TextureAtomicXor_Texture2DArray_Int32 } /* 3963 */,
    std::pair{ "mad(f32,f32,f32)"_h, &mad_Float32 } /* 3964 */,
    std::pair{ "textureAtomicXor(uniform *texture1D,i32,u32)"_h, &TextureAtomicXor_Texture1D_UInt32 } /* 3965 */,
    std::pair{ "floor(f16)"_h, &floor_Float16 } /* 3966 */,
    std::pair{ "u16x2(i32)"_h, &UInt16x2_splat_Int32 } /* 3967 */,
    std::pair{ "textureSampleBiasOffset(uniform *textureSampled1D,f32,f32,f32)"_h, &SampledTextureSampleBiasOffset_Texture1D } /* 3968 */,
    std::pair{ "pixelExportColor(f16x3,literal u32)"_h, &PixelExportColor_Float16x3_UInt32 } /* 3969 */,
    std::pair{ "clamp(f16x4,f16x4,f16x4)"_h, &clamp_Float16x4 } /* 3970 */,
    std::pair{ "b8x4(u32)"_h, &Bool8x4_splat_UInt32 } /* 3971 */,
    std::pair{ "textureSampleGradCompareOffset(uniform *textureSampled1D,f32,f32,f32,f32,f32)"_h, &SampledTextureSampleGradCompareOffset_Texture1D } /* 3972 */,
    std::pair{ "textureAtomicStore(uniform *textureCubeArray,i32x4,f32)"_h, &TextureAtomicStore_TextureCubeArray_Float32 } /* 3973 */,
    std::pair{ "f16x4x3(f16x3,f16x3,f16x3,f16x3)"_h, &Float16x4x3_Float16_3_ctor } /* 3974 */,
    std::pair{ "i16x4(i16,i16,i16,i16)"_h, &Int16x4_ctor0 } /* 3975 */,
    std::pair{ "i32x3(b8)"_h, &Int32x3_splat_Bool8 } /* 3976 */,
    std::pair{ "transpose"_h, &transpose_Float32x2x2 } /* 3977 */,
    std::pair{ "transpose"_h, &transpose_Float16x2x2 } /* 3978 */,
    std::pair{ "transpose"_h, &transpose_Float32x2x3 } /* 3979 */,
    std::pair{ "transpose"_h, &transpose_Float16x2x3 } /* 3980 */,
    std::pair{ "transpose"_h, &transpose_Float32x2x4 } /* 3981 */,
    std::pair{ "transpose"_h, &transpose_Float16x2x4 } /* 3982 */,
    std::pair{ "transpose"_h, &transpose_Float32x3x2 } /* 3983 */,
    std::pair{ "transpose"_h, &transpose_Float16x3x2 } /* 3984 */,
    std::pair{ "transpose"_h, &transpose_Float32x3x3 } /* 3985 */,
    std::pair{ "transpose"_h, &transpose_Float16x3x3 } /* 3986 */,
    std::pair{ "transpose"_h, &transpose_Float32x3x4 } /* 3987 */,
    std::pair{ "transpose"_h, &transpose_Float16x3x4 } /* 3988 */,
    std::pair{ "transpose"_h, &transpose_Float32x4x2 } /* 3989 */,
    std::pair{ "transpose"_h, &transpose_Float16x4x2 } /* 3990 */,
    std::pair{ "transpose"_h, &transpose_Float32x4x3 } /* 3991 */,
    std::pair{ "transpose"_h, &transpose_Float16x4x3 } /* 3992 */,
    std::pair{ "transpose"_h, &transpose_Float32x4x4 } /* 3993 */,
    std::pair{ "transpose"_h, &transpose_Float16x4x4 } /* 3994 */,
    std::pair{ "textureAtomicExchange(uniform *texture3D,i32x3,i16)"_h, &TextureAtomicExchange_Texture3D_Int16 } /* 3995 */,
    std::pair{ "textureSampleProj(uniform *textureSampled1D,f32,f32)"_h, &SampledTextureSampleProj_Texture1D } /* 3996 */,
    std::pair{ "textureAtomicAdd(uniform *textureCube,i32x3,u32)"_h, &TextureAtomicAdd_TextureCube_UInt32 } /* 3997 */,
    std::pair{ "textureSampleOffset(uniform *textureSampled3D,f32x3,f32x3)"_h, &SampledTextureSampleOffset_Texture3D } /* 3998 */,
    std::pair{ "textureSampleLodCompareOffset(uniform *textureSampled2DArray,f32x3,f32,f32,f32x3)"_h, &SampledTextureSampleLodCompareOffset_Texture2DArray } /* 3999 */,
    std::pair{ "f16(i16)"_h, &Float16_from_Int16 } /* 4000 */,
    std::pair{ "textureSampleGradProjCompare(uniform *texture1D,uniform *sampler,f32,f32,f32,f32,f32)"_h, &TextureSampleGradProjCompare_Texture1D } /* 4001 */,
    std::pair{ "min(u16x2,u16x2)"_h, &min_UInt16x2 } /* 4002 */,
    std::pair{ "textureSampleGradProj"_h, &TextureSampleGradProj_Texture1D } /* 4003 */,
    std::pair{ "textureSampleGradProj"_h, &SampledTextureSampleGradProj_Texture1D } /* 4004 */,
    std::pair{ "textureSampleGradProj"_h, &TextureSampleGradProj_Texture2D } /* 4005 */,
    std::pair{ "textureSampleGradProj"_h, &SampledTextureSampleGradProj_Texture2D } /* 4006 */,
    std::pair{ "textureSampleGradProj"_h, &TextureSampleGradProj_Texture3D } /* 4007 */,
    std::pair{ "textureSampleGradProj"_h, &SampledTextureSampleGradProj_Texture3D } /* 4008 */,
    std::pair{ "atomicLoad(*i16,literal MemorySemantics)"_h, &AtomicLoad_Int16 } /* 4009 */,
    std::pair{ "textureSampleCompare(uniform *texture1DArray,uniform *sampler,f32x2,f32)"_h, &TextureSampleCompare_Texture1DArray } /* 4010 */,
    std::pair{ "textureSampleLodCompare"_h, &TextureSampleLodCompare_Texture1D } /* 4011 */,
    std::pair{ "textureSampleLodCompare"_h, &SampledTextureSampleLodCompare_Texture1D } /* 4012 */,
    std::pair{ "textureSampleLodCompare"_h, &TextureSampleLodCompare_Texture2D } /* 4013 */,
    std::pair{ "textureSampleLodCompare"_h, &SampledTextureSampleLodCompare_Texture2D } /* 4014 */,
    std::pair{ "textureSampleLodCompare"_h, &TextureSampleLodCompare_Texture3D } /* 4015 */,
    std::pair{ "textureSampleLodCompare"_h, &SampledTextureSampleLodCompare_Texture3D } /* 4016 */,
    std::pair{ "textureSampleLodCompare"_h, &TextureSampleLodCompare_Texture1DArray } /* 4017 */,
    std::pair{ "textureSampleLodCompare"_h, &SampledTextureSampleLodCompare_Texture1DArray } /* 4018 */,
    std::pair{ "textureSampleLodCompare"_h, &TextureSampleLodCompare_Texture2DArray } /* 4019 */,
    std::pair{ "textureSampleLodCompare"_h, &SampledTextureSampleLodCompare_Texture2DArray } /* 4020 */,
    std::pair{ "textureSampleGradCompare(uniform *texture1DArray,uniform *sampler,f32x2,f32x2,f32x2,f32)"_h, &TextureSampleGradCompare_Texture1DArray } /* 4021 */,
    std::pair{ "pixelExportColor(f32x4,literal u16)"_h, &PixelExportColor_Float32x4_UInt16 } /* 4022 */,
    std::pair{ "inverse(f32x2x2)"_h, &inverse_Float32x2x2 } /* 4023 */,
    std::pair{ "inverse(f32x2x3)"_h, &inverse_Float32x2x3 } /* 4024 */,
    std::pair{ "subgroupGetGreaterMask"_h, &SubgroupGetGreaterMask } /* 4025 */,
    std::pair{ "inverse(f32x2x4)"_h, &inverse_Float32x2x4 } /* 4026 */,
    std::pair{ "textureAtomicExchange(uniform *texture1D,i32,u16)"_h, &TextureAtomicExchange_Texture1D_UInt16 } /* 4027 */,
    std::pair{ "textureSampled2DArray"_h, &SampledTexture2DArrayType } /* 4028 */,
    std::pair{ "clamp(u32x2,u32x2,u32x2)"_h, &clamp_UInt32x2 } /* 4029 */,
    std::pair{ "textureSampleGrad(uniform *texture2DArray,uniform *sampler,f32x3,f32x3,f32x3)"_h, &TextureSampleGrad_Texture2DArray } /* 4030 */,
    std::pair{ "textureAtomicSubtract(uniform *texture2D,i32x2,i32)"_h, &TextureAtomicSubtract_Texture2D_Int32 } /* 4031 */,
    std::pair{ "i32x3(u32)"_h, &Int32x3_splat_UInt32 } /* 4032 */,
    std::pair{ "normalize(f16x3)"_h, &normalize_Float16x3 } /* 4033 */,
    std::pair{ "f16x4(f16,f16,f16,f16)"_h, &Float16x4_ctor0 } /* 4034 */,
    std::pair{ "normalize(f16x2)"_h, &normalize_Float16x2 } /* 4035 */,
    std::pair{ "PixelOrigin"_h, &PixelOriginType } /* 4036 */,
    std::pair{ "normalize(f16x4)"_h, &normalize_Float16x4 } /* 4037 */,
    std::pair{ "textureAtomicMax(uniform *textureCube,i32x3,i32)"_h, &TextureAtomicMax_TextureCube_Int32 } /* 4038 */,
    std::pair{ "i32x4(b8x4)"_h, &Int32x4_from_Bool8x4 } /* 4039 */,
    std::pair{ "u32x4(u32,u32,u32x2)"_h, &UInt32x4_ctor3 } /* 4040 */,
    std::pair{ "textureGather(uniform *textureCubeArray,uniform *sampler,i32x4,i32)"_h, &TextureGather_TextureCubeArray } /* 4041 */,
    std::pair{ "textureSampleLodCompare(uniform *textureSampled3D,f32x3,f32,f32)"_h, &SampledTextureSampleLodCompare_Texture3D } /* 4042 */,
    std::pair{ "i16x4(b8)"_h, &Int16x4_splat_Bool8 } /* 4043 */,
    std::pair{ "f32x3(f32x2,f32)"_h, &Float32x3_ctor1 } /* 4044 */,
    std::pair{ "Patch"_h, &PatchType } /* 4045 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture1D_UInt32 } /* 4046 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture1D_Int32 } /* 4047 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture1D_UInt16 } /* 4048 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture1D_Int16 } /* 4049 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture2D_UInt32 } /* 4050 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture2D_Int32 } /* 4051 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture2D_UInt16 } /* 4052 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture2D_Int16 } /* 4053 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture3D_UInt32 } /* 4054 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture3D_Int32 } /* 4055 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture3D_UInt16 } /* 4056 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture3D_Int16 } /* 4057 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_TextureCube_UInt32 } /* 4058 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_TextureCube_Int32 } /* 4059 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_TextureCube_UInt16 } /* 4060 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_TextureCube_Int16 } /* 4061 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture1DArray_UInt32 } /* 4062 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture1DArray_Int32 } /* 4063 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture1DArray_UInt16 } /* 4064 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture1DArray_Int16 } /* 4065 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture2DArray_UInt32 } /* 4066 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture2DArray_Int32 } /* 4067 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture2DArray_UInt16 } /* 4068 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_Texture2DArray_Int16 } /* 4069 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_TextureCubeArray_UInt32 } /* 4070 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_TextureCubeArray_Int32 } /* 4071 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_TextureCubeArray_UInt16 } /* 4072 */,
    std::pair{ "textureAtomicSubtract"_h, &TextureAtomicSubtract_TextureCubeArray_Int16 } /* 4073 */,
    std::pair{ "f16x3(i32)"_h, &Float16x3_splat_Int32 } /* 4074 */,
    std::pair{ "u16x3(u16,u16x2)"_h, &UInt16x3_ctor2 } /* 4075 */,
    std::pair{ "textureSampleBiasCompareOffset(uniform *texture1D,uniform *sampler,f32,f32,f32,f32)"_h, &TextureSampleBiasCompareOffset_Texture1D } /* 4076 */,
    std::pair{ "f16x3x3()"_h, &Float16x3x3_identity } /* 4077 */,
    std::pair{ "u16x4(f32)"_h, &UInt16x4_splat_Float32 } /* 4078 */,
    std::pair{ "b8x2(u32)"_h, &Bool8x2_splat_UInt32 } /* 4079 */,
    std::pair{ "b8x2(b8x2)"_h, &Bool8x2_from_Bool8x2 } /* 4080 */
};

} // namespace GPULang

